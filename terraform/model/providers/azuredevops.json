{
  ".schema_version": "2",
  ".sdk_type": "terraform-plugin-sdk-v1",
  "name": "azuredevops",
  "type": "provider",
  "version": "v0.1.7",
  "provider": {
    "org_service_url": {
      "Type": "String",
      "Optional": true,
      "Description": "The url of the Azure DevOps instance which should be used.",
      "DefaultFunc": "ENV(AZDO_ORG_SERVICE_URL)"
    },
    "personal_access_token": {
      "Type": "String",
      "Optional": true,
      "Description": "The personal access token which should be used.",
      "DefaultFunc": "ENV(AZDO_PERSONAL_ACCESS_TOKEN)"
    }
  },
  "resources": {
    "azuredevops_agent_pool": {
      "auto_provision": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "pool_type": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "taskagent.TaskAgentPoolType",
          "Value": "automation"
        }
      }
    },
    "azuredevops_agent_queue": {
      "agent_pool_id": {
        "Type": "Int",
        "Required": true
      },
      "project_id": {
        "Type": "String",
        "Required": true
      }
    },
    "azuredevops_area_permissions": {
      "path": {
        "Type": "String",
        "Optional": true
      },
      "permissions": {
        "Type": "Map",
        "Required": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "principal": {
        "Type": "String",
        "Required": true
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "replace": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      }
    },
    "azuredevops_branch_policy_auto_reviewers": {
      "blocking": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "settings": {
        "Type": "List",
        "Required": true,
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "auto_reviewer_ids": {
              "Type": "List",
              "Required": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "message": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string"
              }
            },
            "path_filters": {
              "Type": "List",
              "Optional": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "scope": {
              "Type": "List",
              "Required": true,
              "MinItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "match_type": {
                    "Type": "String",
                    "Optional": true,
                    "Default": {
                      "Type": "string",
                      "Value": "Exact"
                    }
                  },
                  "repository_id": {
                    "Type": "String",
                    "Optional": true
                  },
                  "repository_ref": {
                    "Type": "String",
                    "Optional": true
                  }
                }
              }
            },
            "submitter_can_vote": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            }
          }
        }
      }
    },
    "azuredevops_branch_policy_build_validation": {
      "blocking": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "settings": {
        "Type": "List",
        "Required": true,
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "build_definition_id": {
              "Type": "Int",
              "Required": true
            },
            "display_name": {
              "Type": "String",
              "Required": true
            },
            "filename_patterns": {
              "Type": "Set",
              "Optional": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "manual_queue_only": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "queue_on_source_update_only": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "scope": {
              "Type": "List",
              "Required": true,
              "MinItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "match_type": {
                    "Type": "String",
                    "Optional": true,
                    "Default": {
                      "Type": "string",
                      "Value": "Exact"
                    }
                  },
                  "repository_id": {
                    "Type": "String",
                    "Optional": true
                  },
                  "repository_ref": {
                    "Type": "String",
                    "Optional": true
                  }
                }
              }
            },
            "valid_duration": {
              "Type": "Int",
              "Optional": true,
              "Default": {
                "Type": "int",
                "Value": "720"
              }
            }
          }
        }
      }
    },
    "azuredevops_branch_policy_comment_resolution": {
      "blocking": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "settings": {
        "Type": "List",
        "Required": true,
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "scope": {
              "Type": "List",
              "Required": true,
              "MinItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "match_type": {
                    "Type": "String",
                    "Optional": true,
                    "Default": {
                      "Type": "string",
                      "Value": "Exact"
                    }
                  },
                  "repository_id": {
                    "Type": "String",
                    "Optional": true
                  },
                  "repository_ref": {
                    "Type": "String",
                    "Optional": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "azuredevops_branch_policy_merge_types": {
      "blocking": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "settings": {
        "Type": "List",
        "Required": true,
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "allow_basic_no_fast_forward": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "allow_rebase_and_fast_forward": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "allow_rebase_with_merge": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "allow_squash": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "scope": {
              "Type": "List",
              "Required": true,
              "MinItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "match_type": {
                    "Type": "String",
                    "Optional": true,
                    "Default": {
                      "Type": "string",
                      "Value": "Exact"
                    }
                  },
                  "repository_id": {
                    "Type": "String",
                    "Optional": true
                  },
                  "repository_ref": {
                    "Type": "String",
                    "Optional": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "azuredevops_branch_policy_min_reviewers": {
      "blocking": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "settings": {
        "Type": "List",
        "Required": true,
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "allow_completion_with_rejects_or_waits": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "last_pusher_cannot_approve": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "on_last_iteration_require_vote": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "on_push_reset_all_votes": {
              "Type": "Bool",
              "Optional": true,
              "ConflictsWith": [
                "settings.0.on_push_reset_approved_votes"
              ],
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "on_push_reset_approved_votes": {
              "Type": "Bool",
              "Optional": true,
              "ConflictsWith": [
                "settings.0.on_push_reset_all_votes"
              ],
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "reviewer_count": {
              "Type": "Int",
              "Optional": true
            },
            "scope": {
              "Type": "List",
              "Required": true,
              "MinItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "match_type": {
                    "Type": "String",
                    "Optional": true,
                    "Default": {
                      "Type": "string",
                      "Value": "Exact"
                    }
                  },
                  "repository_id": {
                    "Type": "String",
                    "Optional": true
                  },
                  "repository_ref": {
                    "Type": "String",
                    "Optional": true
                  }
                }
              }
            },
            "submitter_can_vote": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            }
          }
        }
      }
    },
    "azuredevops_branch_policy_status_check": {
      "blocking": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "settings": {
        "Type": "List",
        "Required": true,
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "applicability": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "default"
              }
            },
            "author_id": {
              "Type": "String",
              "Optional": true
            },
            "display_name": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string"
              }
            },
            "filename_patterns": {
              "Type": "Set",
              "Optional": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "invalidate_on_update": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "name": {
              "Type": "String",
              "Required": true
            },
            "scope": {
              "Type": "List",
              "Required": true,
              "MinItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "match_type": {
                    "Type": "String",
                    "Optional": true,
                    "Default": {
                      "Type": "string",
                      "Value": "Exact"
                    }
                  },
                  "repository_id": {
                    "Type": "String",
                    "Optional": true
                  },
                  "repository_ref": {
                    "Type": "String",
                    "Optional": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "azuredevops_branch_policy_work_item_linking": {
      "blocking": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "settings": {
        "Type": "List",
        "Required": true,
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "scope": {
              "Type": "List",
              "Required": true,
              "MinItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "match_type": {
                    "Type": "String",
                    "Optional": true,
                    "Default": {
                      "Type": "string",
                      "Value": "Exact"
                    }
                  },
                  "repository_id": {
                    "Type": "String",
                    "Optional": true
                  },
                  "repository_ref": {
                    "Type": "String",
                    "Optional": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "azuredevops_build_definition": {
      "agent_pool_name": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Hosted Ubuntu 1604"
        }
      },
      "ci_trigger": {
        "Type": "List",
        "Optional": true,
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "override": {
              "Type": "List",
              "Optional": true,
              "MaxItems": 1,
              "MinItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "batch": {
                    "Type": "Bool",
                    "Optional": true,
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "branch_filter": {
                    "Type": "Set",
                    "Optional": true,
                    "MinItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "exclude": {
                          "Type": "Set",
                          "Optional": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "include": {
                          "Type": "Set",
                          "Optional": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        }
                      }
                    }
                  },
                  "max_concurrent_builds_per_branch": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "1"
                    }
                  },
                  "path_filter": {
                    "Type": "Set",
                    "Optional": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "exclude": {
                          "Type": "Set",
                          "Optional": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "include": {
                          "Type": "Set",
                          "Optional": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        }
                      }
                    }
                  },
                  "polling_interval": {
                    "Type": "Int",
                    "Optional": true
                  },
                  "polling_job_id": {
                    "Type": "String",
                    "Computed": true
                  }
                }
              }
            },
            "use_yaml": {
              "Type": "Bool",
              "Optional": true,
              "ConflictsWith": [
                "ci_trigger.0.override"
              ],
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string"
        }
      },
      "path": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "\\"
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "pull_request_trigger": {
        "Type": "List",
        "Optional": true,
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "comment_required": {
              "Type": "String",
              "Optional": true
            },
            "forks": {
              "Type": "List",
              "Required": true,
              "MaxItems": 1,
              "MinItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "enabled": {
                    "Type": "Bool",
                    "Required": true
                  },
                  "share_secrets": {
                    "Type": "Bool",
                    "Required": true
                  }
                }
              }
            },
            "initial_branch": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "Managed by Terraform"
              }
            },
            "override": {
              "Type": "List",
              "Optional": true,
              "MaxItems": 1,
              "MinItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "auto_cancel": {
                    "Type": "Bool",
                    "Optional": true,
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "branch_filter": {
                    "Type": "Set",
                    "Optional": true,
                    "MinItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "exclude": {
                          "Type": "Set",
                          "Optional": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "include": {
                          "Type": "Set",
                          "Optional": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        }
                      }
                    }
                  },
                  "path_filter": {
                    "Type": "Set",
                    "Optional": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "exclude": {
                          "Type": "Set",
                          "Optional": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "include": {
                          "Type": "Set",
                          "Optional": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "use_yaml": {
              "Type": "Bool",
              "Optional": true,
              "ConflictsWith": [
                "pull_request_trigger.0.override"
              ],
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            }
          }
        }
      },
      "repository": {
        "Type": "List",
        "Required": true,
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "branch_name": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "master"
              }
            },
            "github_enterprise_url": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string"
              }
            },
            "repo_id": {
              "Type": "String",
              "Required": true
            },
            "repo_type": {
              "Type": "String",
              "Required": true
            },
            "report_build_status": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "service_connection_id": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string"
              }
            },
            "yml_path": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "revision": {
        "Type": "Int",
        "Computed": true
      },
      "variable": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "allow_override": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "is_secret": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "name": {
              "Type": "String",
              "Required": true
            },
            "secret_value": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string"
              }
            },
            "value": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "variable_groups": {
        "Type": "Set",
        "Optional": true,
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      }
    },
    "azuredevops_build_definition_permissions": {
      "build_definition_id": {
        "Type": "String",
        "Required": true
      },
      "permissions": {
        "Type": "Map",
        "Required": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "principal": {
        "Type": "String",
        "Required": true
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "replace": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      }
    },
    "azuredevops_git_permissions": {
      "branch_name": {
        "Type": "String",
        "Optional": true
      },
      "permissions": {
        "Type": "Map",
        "Required": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "principal": {
        "Type": "String",
        "Required": true
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "replace": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "repository_id": {
        "Type": "String",
        "Optional": true
      }
    },
    "azuredevops_git_repository": {
      "default_branch": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "initialization": {
        "Type": "List",
        "Required": true,
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "init_type": {
              "Type": "String",
              "Required": true
            },
            "service_connection_id": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string"
              }
            },
            "source_type": {
              "Type": "String",
              "Optional": true
            },
            "source_url": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "is_fork": {
        "Type": "Bool",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "parent_repository_id": {
        "Type": "String",
        "Optional": true
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "remote_url": {
        "Type": "String",
        "Computed": true
      },
      "size": {
        "Type": "Int",
        "Computed": true
      },
      "ssh_url": {
        "Type": "String",
        "Computed": true
      },
      "url": {
        "Type": "String",
        "Computed": true
      },
      "web_url": {
        "Type": "String",
        "Computed": true
      }
    },
    "azuredevops_group": {
      "description": {
        "Type": "String",
        "Optional": true
      },
      "descriptor": {
        "Type": "String",
        "Computed": true
      },
      "display_name": {
        "Type": "String",
        "Optional": true,
        "Computed": true,
        "ConflictsWith": [
          "origin_id",
          "mail"
        ]
      },
      "domain": {
        "Type": "String",
        "Computed": true
      },
      "mail": {
        "Type": "String",
        "Optional": true,
        "Computed": true,
        "ConflictsWith": [
          "origin_id",
          "display_name",
          "scope"
        ]
      },
      "members": {
        "Type": "Set",
        "Optional": true,
        "Computed": true,
        "ConfigExplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "origin": {
        "Type": "String",
        "Computed": true
      },
      "origin_id": {
        "Type": "String",
        "Optional": true,
        "Computed": true,
        "ConflictsWith": [
          "mail",
          "display_name",
          "scope"
        ]
      },
      "principal_name": {
        "Type": "String",
        "Computed": true
      },
      "scope": {
        "Type": "String",
        "Optional": true
      },
      "subject_kind": {
        "Type": "String",
        "Computed": true
      },
      "url": {
        "Type": "String",
        "Computed": true
      }
    },
    "azuredevops_group_membership": {
      "group": {
        "Type": "String",
        "Required": true
      },
      "members": {
        "Type": "Set",
        "Required": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "mode": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "add"
        }
      }
    },
    "azuredevops_iteration_permissions": {
      "path": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string"
        }
      },
      "permissions": {
        "Type": "Map",
        "Required": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "principal": {
        "Type": "String",
        "Required": true
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "replace": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      }
    },
    "azuredevops_project": {
      "__timeouts__": [
        "create",
        "read",
        "update",
        "delete"
      ],
      "description": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string"
        }
      },
      "features": {
        "Type": "Map",
        "Optional": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "process_template_id": {
        "Type": "String",
        "Computed": true
      },
      "version_control": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "core.SourceControlTypes",
          "Value": "git"
        }
      },
      "visibility": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "core.ProjectVisibility",
          "Value": "private"
        }
      },
      "work_item_template": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Agile"
        }
      }
    },
    "azuredevops_project_features": {
      "features": {
        "Type": "Map",
        "Required": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      }
    },
    "azuredevops_project_permissions": {
      "permissions": {
        "Type": "Map",
        "Required": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "principal": {
        "Type": "String",
        "Required": true
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "replace": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      }
    },
    "azuredevops_repository_policy_author_email_pattern": {
      "author_email_patterns": {
        "Type": "List",
        "Required": true,
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "blocking": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "repository_ids": {
        "Type": "List",
        "Optional": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "azuredevops_repository_policy_case_enforcement": {
      "blocking": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "enforce_consistent_case": {
        "Type": "Bool",
        "Required": true
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "repository_ids": {
        "Type": "List",
        "Optional": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "azuredevops_repository_policy_check_credentials": {
      "blocking": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "repository_ids": {
        "Type": "List",
        "Optional": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "azuredevops_repository_policy_file_path_pattern": {
      "blocking": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "filepath_patterns": {
        "Type": "List",
        "Required": true,
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "repository_ids": {
        "Type": "List",
        "Optional": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "azuredevops_repository_policy_max_file_size": {
      "blocking": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "max_file_size": {
        "Type": "Int",
        "Required": true
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "repository_ids": {
        "Type": "List",
        "Optional": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "azuredevops_repository_policy_max_path_length": {
      "blocking": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "max_path_length": {
        "Type": "Int",
        "Required": true
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "repository_ids": {
        "Type": "List",
        "Optional": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "azuredevops_repository_policy_reserved_names": {
      "blocking": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "repository_ids": {
        "Type": "List",
        "Optional": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "azuredevops_resource_authorization": {
      "authorized": {
        "Type": "Bool",
        "Required": true,
        "Description": "indicates whether the resource is authorized for use"
      },
      "definition_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "id of the build definition"
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "resource_id": {
        "Type": "String",
        "Required": true,
        "Description": "id of the resource"
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "type of the resource",
        "Default": {
          "Type": "string",
          "Value": "endpoint"
        }
      }
    },
    "azuredevops_serviceendpoint_artifactory": {
      "__timeouts__": [
        "create",
        "read",
        "update",
        "delete"
      ],
      "authentication_basic": {
        "Type": "List",
        "Optional": true,
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "password": {
              "Type": "String",
              "Required": true,
              "Description": "The Artifactory password."
            },
            "password_hash": {
              "Type": "String",
              "Description": "A bcrypted hash of the attribute 'password'",
              "Computed": true
            },
            "username": {
              "Type": "String",
              "Required": true,
              "Description": "The Artifactory user name."
            },
            "username_hash": {
              "Type": "String",
              "Description": "A bcrypted hash of the attribute 'username'",
              "Computed": true
            }
          }
        }
      },
      "authentication_token": {
        "Type": "List",
        "Optional": true,
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "token": {
              "Type": "String",
              "Required": true,
              "Description": "The Artifactory access token."
            },
            "token_hash": {
              "Type": "String",
              "Description": "A bcrypted hash of the attribute 'token'",
              "Computed": true
            }
          }
        }
      },
      "authorization": {
        "Type": "Map",
        "Optional": true,
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Managed by Terraform"
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "service_endpoint_name": {
        "Type": "String",
        "Required": true
      },
      "url": {
        "Type": "String",
        "Required": true,
        "Description": "Url for the Artifactory Server"
      }
    },
    "azuredevops_serviceendpoint_aws": {
      "__timeouts__": [
        "create",
        "read",
        "update",
        "delete"
      ],
      "access_key_id": {
        "Type": "String",
        "Required": true,
        "Description": "The AWS access key ID for signing programmatic requests.",
        "DefaultFunc": "ENV(AZDO_AWS_SERVICE_CONNECTION_ACCESS_KEY_ID)"
      },
      "authorization": {
        "Type": "Map",
        "Optional": true,
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Managed by Terraform"
        }
      },
      "external_id": {
        "Type": "String",
        "Optional": true,
        "Description": "A unique identifier that is used by third parties when assuming roles in their customers' accounts, aka cross-account role access.",
        "DefaultFunc": "ENV(AZDO_AWS_SERVICE_CONNECTION_EXTERNAL_ID)"
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "role_session_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Optional identifier for the assumed role session.",
        "DefaultFunc": "ENV(AZDO_AWS_SERVICE_CONNECTION_RSN)"
      },
      "role_to_assume": {
        "Type": "String",
        "Optional": true,
        "Description": "The Amazon Resource Name (ARN) of the role to assume.",
        "DefaultFunc": "ENV(AZDO_AWS_SERVICE_CONNECTION_RTA)"
      },
      "secret_access_key": {
        "Type": "String",
        "Required": true,
        "Description": "The AWS secret access key for signing programmatic requests.",
        "DefaultFunc": "ENV(AZDO_AWS_SERVICE_CONNECTION_SECRET_ACCESS_KEY)"
      },
      "secret_access_key_hash": {
        "Type": "String",
        "Description": "A bcrypted hash of the attribute 'secret_access_key'",
        "Computed": true
      },
      "service_endpoint_name": {
        "Type": "String",
        "Required": true
      },
      "session_token": {
        "Type": "String",
        "Optional": true,
        "Description": "The AWS session token for signing programmatic requests.",
        "DefaultFunc": "ENV(AZDO_AWS_SERVICE_CONNECTION_SESSION_TOKEN)"
      },
      "session_token_hash": {
        "Type": "String",
        "Description": "A bcrypted hash of the attribute 'session_token'",
        "Computed": true
      }
    },
    "azuredevops_serviceendpoint_azurecr": {
      "__timeouts__": [
        "create",
        "read",
        "update",
        "delete"
      ],
      "app_object_id": {
        "Type": "String",
        "Computed": true
      },
      "authorization": {
        "Type": "Map",
        "Optional": true,
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "az_spn_role_assignment_id": {
        "Type": "String",
        "Computed": true
      },
      "az_spn_role_permissions": {
        "Type": "String",
        "Computed": true
      },
      "azurecr_name": {
        "Type": "String",
        "Required": true,
        "Description": "The AzureContainerRegistry registry which should be used.",
        "DefaultFunc": "ENV(AZDO_AZURECR_SERVICE_CONNECTION_REGISTRY)"
      },
      "azurecr_spn_tenantid": {
        "Type": "String",
        "Required": true,
        "Description": "The service principal tenant id which should be used.",
        "DefaultFunc": "ENV(ACR_TENANT_ID)"
      },
      "azurecr_subscription_id": {
        "Type": "String",
        "Required": true,
        "Description": "The Azure subscription Id which should be used.",
        "DefaultFunc": "ENV(ACR_SUBSCRIPTION_ID)"
      },
      "azurecr_subscription_name": {
        "Type": "String",
        "Required": true,
        "Description": "The Azure subscription name which should be used.",
        "DefaultFunc": "ENV(ACR_SUBSCRIPTION_NAME)"
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Managed by Terraform"
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "resource_group": {
        "Type": "String",
        "Required": true,
        "Description": "Scope Resource Group"
      },
      "service_endpoint_name": {
        "Type": "String",
        "Required": true
      },
      "service_principal_id": {
        "Type": "String",
        "Computed": true
      },
      "spn_object_id": {
        "Type": "String",
        "Computed": true
      }
    },
    "azuredevops_serviceendpoint_azuredevops": {
      "__timeouts__": [
        "create",
        "read",
        "update",
        "delete"
      ],
      "authorization": {
        "Type": "Map",
        "Optional": true,
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Managed by Terraform"
        }
      },
      "org_url": {
        "Type": "String",
        "Required": true,
        "Description": "The Organization Url.",
        "DefaultFunc": "ENV(AZDO_DEVOPS_ORG_URL)"
      },
      "personal_access_token": {
        "Type": "String",
        "Required": true,
        "Description": "The Azure DevOps personal access token.",
        "DefaultFunc": "ENV(AZDO_DEVOPS_PAT)"
      },
      "personal_access_token_hash": {
        "Type": "String",
        "Description": "A bcrypted hash of the attribute 'personal_access_token'",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "release_api_url": {
        "Type": "String",
        "Required": true,
        "DefaultFunc": "ENV(AZDO_DEVOPS_RELEASE_API_URL)"
      },
      "service_endpoint_name": {
        "Type": "String",
        "Required": true
      }
    },
    "azuredevops_serviceendpoint_azurerm": {
      "__timeouts__": [
        "create",
        "read",
        "update",
        "delete"
      ],
      "authorization": {
        "Type": "Map",
        "Optional": true,
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "azurerm_spn_tenantid": {
        "Type": "String",
        "Required": true,
        "Description": "The service principal tenant id which should be used.",
        "DefaultFunc": "ENV(ARM_TENANT_ID)"
      },
      "azurerm_subscription_id": {
        "Type": "String",
        "Required": true,
        "Description": "The Azure subscription Id which should be used.",
        "DefaultFunc": "ENV(ARM_SUBSCRIPTION_ID)"
      },
      "azurerm_subscription_name": {
        "Type": "String",
        "Required": true,
        "Description": "The Azure subscription name which should be used.",
        "DefaultFunc": "ENV(ARM_SUBSCRIPTION_NAME)"
      },
      "credentials": {
        "Type": "List",
        "Optional": true,
        "MaxItems": 1,
        "ConflictsWith": [
          "resource_group"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "serviceprincipalid": {
              "Type": "String",
              "Required": true,
              "Description": "The service principal id which should be used."
            },
            "serviceprincipalkey": {
              "Type": "String",
              "Required": true,
              "Description": "The service principal secret which should be used."
            },
            "serviceprincipalkey_hash": {
              "Type": "String",
              "Description": "A bcrypted hash of the attribute 'serviceprincipalkey'",
              "Computed": true
            }
          }
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Managed by Terraform"
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "resource_group": {
        "Type": "String",
        "Optional": true,
        "Description": "Scope Resource Group",
        "ConflictsWith": [
          "credentials"
        ]
      },
      "service_endpoint_name": {
        "Type": "String",
        "Required": true
      }
    },
    "azuredevops_serviceendpoint_bitbucket": {
      "__timeouts__": [
        "create",
        "read",
        "update",
        "delete"
      ],
      "authorization": {
        "Type": "Map",
        "Optional": true,
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Managed by Terraform"
        }
      },
      "password": {
        "Type": "String",
        "Required": true,
        "Description": "The bitbucket password which should be used.",
        "DefaultFunc": "ENV(AZDO_BITBUCKET_SERVICE_CONNECTION_PASSWORD)"
      },
      "password_hash": {
        "Type": "String",
        "Description": "A bcrypted hash of the attribute 'password'",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "service_endpoint_name": {
        "Type": "String",
        "Required": true
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "The bitbucket username which should be used.",
        "DefaultFunc": "ENV(AZDO_BITBUCKET_SERVICE_CONNECTION_USERNAME)"
      }
    },
    "azuredevops_serviceendpoint_dockerregistry": {
      "__timeouts__": [
        "create",
        "read",
        "update",
        "delete"
      ],
      "authorization": {
        "Type": "Map",
        "Optional": true,
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Managed by Terraform"
        }
      },
      "docker_email": {
        "Type": "String",
        "Optional": true,
        "Description": "The DockerRegistry email address which should be used.",
        "DefaultFunc": "ENV(AZDO_DOCKERREGISTRY_SERVICE_CONNECTION_EMAIL)"
      },
      "docker_password": {
        "Type": "String",
        "Optional": true,
        "Description": "The DockerRegistry password which should be used.",
        "DefaultFunc": "ENV(AZDO_DOCKERREGISTRY_SERVICE_CONNECTION_PASSWORD)"
      },
      "docker_password_hash": {
        "Type": "String",
        "Description": "A bcrypted hash of the attribute 'docker_password'",
        "Computed": true
      },
      "docker_registry": {
        "Type": "String",
        "Required": true,
        "Description": "The DockerRegistry registry which should be used.",
        "DefaultFunc": "ENV(AZDO_DOCKERREGISTRY_SERVICE_CONNECTION_REGISTRY)"
      },
      "docker_username": {
        "Type": "String",
        "Optional": true,
        "Description": "The DockerRegistry username which should be used.",
        "DefaultFunc": "ENV(AZDO_DOCKERREGISTRY_SERVICE_CONNECTION_USERNAME)"
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "registry_type": {
        "Type": "String",
        "Required": true,
        "DefaultFunc": "ENV(AZDO_DOCKERREGISTRY_SERVICE_CONNECTION_REGISTRY_TYPE)"
      },
      "service_endpoint_name": {
        "Type": "String",
        "Required": true
      }
    },
    "azuredevops_serviceendpoint_generic": {
      "__timeouts__": [
        "create",
        "read",
        "update",
        "delete"
      ],
      "authorization": {
        "Type": "Map",
        "Optional": true,
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Managed by Terraform"
        }
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "The password or token key to use for the generic service connection.",
        "DefaultFunc": "ENV(AZDO_GENERIC_SERVICE_CONNECTION_PASSWORD)"
      },
      "password_hash": {
        "Type": "String",
        "Description": "A bcrypted hash of the attribute 'password'",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "server_url": {
        "Type": "String",
        "Required": true,
        "Description": "The server URL of the generic service connection."
      },
      "service_endpoint_name": {
        "Type": "String",
        "Required": true
      },
      "username": {
        "Type": "String",
        "Optional": true,
        "Description": "The username to use for the generic service connection.",
        "DefaultFunc": "ENV(AZDO_GENERIC_SERVICE_CONNECTION_USERNAME)"
      }
    },
    "azuredevops_serviceendpoint_generic_git": {
      "__timeouts__": [
        "create",
        "read",
        "update",
        "delete"
      ],
      "authorization": {
        "Type": "Map",
        "Optional": true,
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Managed by Terraform"
        }
      },
      "enable_pipelines_access": {
        "Type": "Bool",
        "Optional": true,
        "Description": "A value indicating whether or not to attempt accessing this git server from Azure Pipelines.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "The password or token key to use for the generic git service connection.",
        "DefaultFunc": "ENV(AZDO_GENERIC_GIT_SERVICE_CONNECTION_PASSWORD)"
      },
      "password_hash": {
        "Type": "String",
        "Description": "A bcrypted hash of the attribute 'password'",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "repository_url": {
        "Type": "String",
        "Required": true,
        "Description": "The server URL of the generic git service connection."
      },
      "service_endpoint_name": {
        "Type": "String",
        "Required": true
      },
      "username": {
        "Type": "String",
        "Optional": true,
        "Description": "The username to use for the generic service git connection.",
        "DefaultFunc": "ENV(AZDO_GENERIC_GIT_SERVICE_CONNECTION_USERNAME)"
      }
    },
    "azuredevops_serviceendpoint_github": {
      "__timeouts__": [
        "create",
        "read",
        "update",
        "delete"
      ],
      "auth_oauth": {
        "Type": "Set",
        "Optional": true,
        "MaxItems": 1,
        "MinItems": 1,
        "ConflictsWith": [
          "auth_personal"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "oauth_configuration_id": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "auth_personal": {
        "Type": "Set",
        "Optional": true,
        "MaxItems": 1,
        "MinItems": 1,
        "ConflictsWith": [
          "auth_oauth"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "personal_access_token": {
              "Type": "String",
              "Required": true,
              "Description": "The GitHub personal access token which should be used.",
              "DefaultFunc": "ENV(AZDO_GITHUB_SERVICE_CONNECTION_PAT)"
            },
            "personal_access_token_hash": {
              "Type": "String",
              "Description": "A bcrypted hash of the attribute 'personal_access_token'",
              "Computed": true
            }
          }
        }
      },
      "authorization": {
        "Type": "Map",
        "Optional": true,
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Managed by Terraform"
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "service_endpoint_name": {
        "Type": "String",
        "Required": true
      }
    },
    "azuredevops_serviceendpoint_github_enterprise": {
      "__timeouts__": [
        "create",
        "read",
        "update",
        "delete"
      ],
      "auth_personal": {
        "Type": "Set",
        "Required": true,
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "personal_access_token": {
              "Type": "String",
              "Required": true,
              "Description": "The GitHub personal access token which should be used.",
              "DefaultFunc": "ENV(AZDO_GITHUB_ENTERPRISE_SERVICE_CONNECTION_PAT)"
            },
            "personal_access_token_hash": {
              "Type": "String",
              "Description": "A bcrypted hash of the attribute 'personal_access_token'",
              "Computed": true
            }
          }
        }
      },
      "authorization": {
        "Type": "Map",
        "Optional": true,
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Managed by Terraform"
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "service_endpoint_name": {
        "Type": "String",
        "Required": true
      },
      "url": {
        "Type": "String",
        "Required": true
      }
    },
    "azuredevops_serviceendpoint_kubernetes": {
      "__timeouts__": [
        "create",
        "read",
        "update",
        "delete"
      ],
      "apiserver_url": {
        "Type": "String",
        "Required": true,
        "Description": "URL to Kubernete's API-Server"
      },
      "authorization": {
        "Type": "Map",
        "Optional": true,
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "authorization_type": {
        "Type": "String",
        "Required": true,
        "Description": "Type of credentials to use"
      },
      "azure_subscription": {
        "Type": "Set",
        "Optional": true,
        "Description": "'AzureSubscription'-type of configuration",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "azure_environment": {
              "Type": "String",
              "Optional": true,
              "Description": "type of azure cloud: AzureCloud",
              "Default": {
                "Type": "string",
                "Value": "AzureCloud"
              }
            },
            "cluster_admin": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Enable Cluster Admin",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "cluster_name": {
              "Type": "String",
              "Required": true,
              "Description": "name of aks-resource"
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "accessed namespace",
              "Default": {
                "Type": "string",
                "Value": "default"
              }
            },
            "resourcegroup_id": {
              "Type": "String",
              "Required": true,
              "Description": "id of resourcegroup"
            },
            "subscription_id": {
              "Type": "String",
              "Required": true,
              "Description": "id of azure subscription"
            },
            "subscription_name": {
              "Type": "String",
              "Required": true,
              "Description": "name of azure subscription"
            },
            "tenant_id": {
              "Type": "String",
              "Required": true,
              "Description": "id of aad-tenant"
            }
          }
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Managed by Terraform"
        }
      },
      "kubeconfig": {
        "Type": "Set",
        "Optional": true,
        "Description": "'Kubeconfig'-type of configuration",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "accept_untrusted_certs": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Enable this if your authentication uses untrusted certificates",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "cluster_context": {
              "Type": "String",
              "Optional": true,
              "Description": "Context of your cluster"
            },
            "kube_config": {
              "Type": "String",
              "Required": true,
              "Description": "Content of the kubeconfig file. The configuration information in your kubeconfig file allows Kubernetes clients to talk to your Kubernetes API servers. This file is used by kubectl and all supported Kubernetes clients.",
              "DefaultFunc": "ENV(AZDO_KUBERNETES_SERVICE_CONNECTION_KUBECONFIG)"
            },
            "kube_config_hash": {
              "Type": "String",
              "Description": "A bcrypted hash of the attribute 'kube_config'",
              "Computed": true
            }
          }
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "service_account": {
        "Type": "Set",
        "Optional": true,
        "Description": "'ServiceAccount'-type of configuration",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ca_cert": {
              "Type": "String",
              "Required": true,
              "Description": "Secret cert",
              "DefaultFunc": "ENV(AZDO_KUBERNETES_SERVICE_CONNECTION_SERVICE_ACCOUNT_CERT)"
            },
            "ca_cert_hash": {
              "Type": "String",
              "Description": "A bcrypted hash of the attribute 'ca_cert'",
              "Computed": true
            },
            "token": {
              "Type": "String",
              "Required": true,
              "Description": "Secret token",
              "DefaultFunc": "ENV(AZDO_KUBERNETES_SERVICE_CONNECTION_SERVICE_ACCOUNT_TOKEN)"
            },
            "token_hash": {
              "Type": "String",
              "Description": "A bcrypted hash of the attribute 'token'",
              "Computed": true
            }
          }
        }
      },
      "service_endpoint_name": {
        "Type": "String",
        "Required": true
      }
    },
    "azuredevops_serviceendpoint_npm": {
      "__timeouts__": [
        "create",
        "read",
        "update",
        "delete"
      ],
      "access_token": {
        "Type": "String",
        "Required": true,
        "Description": "The access token for npm registry"
      },
      "access_token_hash": {
        "Type": "String",
        "Description": "A bcrypted hash of the attribute 'access_token'",
        "Computed": true
      },
      "authorization": {
        "Type": "Map",
        "Optional": true,
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Managed by Terraform"
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "service_endpoint_name": {
        "Type": "String",
        "Required": true
      },
      "url": {
        "Type": "String",
        "Required": true,
        "Description": "Url for the npm registry"
      }
    },
    "azuredevops_serviceendpoint_runpipeline": {
      "__timeouts__": [
        "create",
        "read",
        "update",
        "delete"
      ],
      "auth_personal": {
        "Type": "Set",
        "Required": true,
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "personal_access_token": {
              "Type": "String",
              "Required": true,
              "Description": "The Azure DevOps personal access token which should be used.",
              "DefaultFunc": "ENV(AZDO_PERSONAL_ACCESS_TOKEN)"
            },
            "personal_access_token_hash": {
              "Type": "String",
              "Description": "A bcrypted hash of the attribute 'personal_access_token'",
              "Computed": true
            }
          }
        }
      },
      "authorization": {
        "Type": "Map",
        "Optional": true,
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Managed by Terraform"
        }
      },
      "organization_name": {
        "Type": "String",
        "Required": true,
        "Description": "Azure DevOps organization name"
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "service_endpoint_name": {
        "Type": "String",
        "Required": true
      }
    },
    "azuredevops_serviceendpoint_servicefabric": {
      "__timeouts__": [
        "create",
        "read",
        "update",
        "delete"
      ],
      "authorization": {
        "Type": "Map",
        "Optional": true,
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "azure_active_directory": {
        "Type": "List",
        "Optional": true,
        "MaxItems": 1,
        "ConflictsWith": [
          "certificate",
          "none"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "password": {
              "Type": "String",
              "Required": true,
              "Description": "Password for the Azure Active Directory account."
            },
            "password_hash": {
              "Type": "String",
              "Description": "A bcrypted hash of the attribute 'password'",
              "Computed": true
            },
            "server_certificate_common_name": {
              "Type": "String",
              "Optional": true,
              "Description": "The common name(s) of the cluster's certificate(s). This is used to verify the identity of the cluster. This value overrides the publish profile. Separate multiple common names with a comma (',')",
              "ConflictsWith": [
                "azure_active_directory.0.server_certificate_thumbprint"
              ]
            },
            "server_certificate_lookup": {
              "Type": "String",
              "Required": true
            },
            "server_certificate_thumbprint": {
              "Type": "String",
              "Optional": true,
              "Description": "The thumbprint(s) of the cluster's certificate(s). This is used to verify the identity of the cluster. This value overrides the publish profile. Separate multiple thumbprints with a comma (',')",
              "ConflictsWith": [
                "azure_active_directory.0.server_certificate_common_name"
              ]
            },
            "username": {
              "Type": "String",
              "Required": true,
              "Description": "Specify an Azure Active Directory account."
            }
          }
        }
      },
      "certificate": {
        "Type": "List",
        "Optional": true,
        "MaxItems": 1,
        "ConflictsWith": [
          "azure_active_directory",
          "none"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "client_certificate": {
              "Type": "String",
              "Required": true,
              "Description": "Base64 encoding of the cluster's client certificate file."
            },
            "client_certificate_hash": {
              "Type": "String",
              "Description": "A bcrypted hash of the attribute 'client_certificate'",
              "Computed": true
            },
            "client_certificate_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for the certificate."
            },
            "client_certificate_password_hash": {
              "Type": "String",
              "Description": "A bcrypted hash of the attribute 'client_certificate_password'",
              "Computed": true
            },
            "server_certificate_common_name": {
              "Type": "String",
              "Optional": true,
              "Description": "The common name(s) of the cluster's certificate(s). This is used to verify the identity of the cluster. This value overrides the publish profile. Separate multiple common names with a comma (',')",
              "ConflictsWith": [
                "certificate.0.server_certificate_thumbprint"
              ]
            },
            "server_certificate_lookup": {
              "Type": "String",
              "Required": true
            },
            "server_certificate_thumbprint": {
              "Type": "String",
              "Optional": true,
              "Description": "The thumbprint(s) of the cluster's certificate(s). This is used to verify the identity of the cluster. This value overrides the publish profile. Separate multiple thumbprints with a comma (',')",
              "ConflictsWith": [
                "certificate.0.server_certificate_common_name"
              ]
            }
          }
        }
      },
      "cluster_endpoint": {
        "Type": "String",
        "Required": true,
        "Description": "Client connection endpoint for the cluster. Prefix the value with 'tcp://';. This value overrides the publish profile."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Managed by Terraform"
        }
      },
      "none": {
        "Type": "List",
        "Optional": true,
        "MaxItems": 1,
        "ConflictsWith": [
          "certificate",
          "azure_active_directory"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cluster_spn": {
              "Type": "String",
              "Optional": true,
              "Description": "Fully qualified domain SPN for gMSA account. This is applicable only if `unsecured` option is disabled."
            },
            "unsecured": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Skip using windows security for authentication.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            }
          }
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "service_endpoint_name": {
        "Type": "String",
        "Required": true
      }
    },
    "azuredevops_serviceendpoint_sonarqube": {
      "__timeouts__": [
        "create",
        "read",
        "update",
        "delete"
      ],
      "authorization": {
        "Type": "Map",
        "Optional": true,
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Managed by Terraform"
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "service_endpoint_name": {
        "Type": "String",
        "Required": true
      },
      "token": {
        "Type": "String",
        "Required": true,
        "Description": "Authentication Token generated through SonarQube (go to My Account \u003e Security \u003e Generate Tokens)"
      },
      "token_hash": {
        "Type": "String",
        "Description": "A bcrypted hash of the attribute 'token'",
        "Computed": true
      },
      "url": {
        "Type": "String",
        "Required": true,
        "Description": "Url for the SonarQube Server"
      }
    },
    "azuredevops_serviceendpoint_ssh": {
      "__timeouts__": [
        "create",
        "read",
        "update",
        "delete"
      ],
      "authorization": {
        "Type": "Map",
        "Optional": true,
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Managed by Terraform"
        }
      },
      "host": {
        "Type": "String",
        "Required": true,
        "Description": "The Organization Url."
      },
      "password": {
        "Type": "String",
        "Optional": true
      },
      "password_hash": {
        "Type": "String",
        "Description": "A bcrypted hash of the attribute 'password'",
        "Computed": true
      },
      "port": {
        "Type": "Int",
        "Optional": true,
        "Default": {
          "Type": "int",
          "Value": "22"
        }
      },
      "private_key": {
        "Type": "String",
        "Optional": true
      },
      "private_key_hash": {
        "Type": "String",
        "Description": "A bcrypted hash of the attribute 'private_key'",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "service_endpoint_name": {
        "Type": "String",
        "Required": true
      },
      "username": {
        "Type": "String",
        "Required": true
      }
    },
    "azuredevops_team": {
      "administrators": {
        "Type": "Set",
        "Optional": true,
        "Computed": true,
        "ConfigExplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string"
        }
      },
      "members": {
        "Type": "Set",
        "Optional": true,
        "Computed": true,
        "ConfigExplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "project_id": {
        "Type": "String",
        "Required": true
      }
    },
    "azuredevops_team_administrators": {
      "administrators": {
        "Type": "Set",
        "Required": true,
        "MinItems": 1,
        "ConfigExplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "mode": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "add"
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "team_id": {
        "Type": "String",
        "Required": true
      }
    },
    "azuredevops_team_members": {
      "members": {
        "Type": "Set",
        "Required": true,
        "MinItems": 1,
        "ConfigExplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "mode": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "add"
        }
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "team_id": {
        "Type": "String",
        "Required": true
      }
    },
    "azuredevops_user_entitlement": {
      "account_license_type": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "licensing.AccountLicenseType",
          "Value": "express"
        }
      },
      "descriptor": {
        "Type": "String",
        "Computed": true
      },
      "licensing_source": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "account"
        }
      },
      "origin": {
        "Type": "String",
        "Optional": true,
        "Computed": true,
        "ConflictsWith": [
          "principal_name"
        ]
      },
      "origin_id": {
        "Type": "String",
        "Optional": true,
        "Computed": true,
        "ConflictsWith": [
          "principal_name"
        ]
      },
      "principal_name": {
        "Type": "String",
        "Optional": true,
        "Computed": true,
        "ConflictsWith": [
          "origin_id",
          "origin"
        ]
      }
    },
    "azuredevops_variable_group": {
      "allow_access": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string"
        }
      },
      "key_vault": {
        "Type": "List",
        "Optional": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true
            },
            "service_endpoint_id": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "variable": {
        "Type": "Set",
        "Required": true,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "content_type": {
              "Type": "String",
              "Computed": true
            },
            "enabled": {
              "Type": "Bool",
              "Computed": true
            },
            "expires": {
              "Type": "String",
              "Computed": true
            },
            "is_secret": {
              "Type": "Bool",
              "Optional": true,
              "ConflictsWith": [
                "key_vault"
              ],
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "name": {
              "Type": "String",
              "Required": true
            },
            "secret_value": {
              "Type": "String",
              "Optional": true,
              "ConflictsWith": [
                "key_vault"
              ],
              "Default": {
                "Type": "string"
              }
            },
            "value": {
              "Type": "String",
              "Optional": true,
              "ConflictsWith": [
                "key_vault"
              ],
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      }
    },
    "azuredevops_workitemquery_permissions": {
      "path": {
        "Type": "String",
        "Optional": true
      },
      "permissions": {
        "Type": "Map",
        "Required": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "principal": {
        "Type": "String",
        "Required": true
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "replace": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      }
    }
  },
  "data-sources": {
    "azuredevops_agent_pool": {
      "auto_provision": {
        "Type": "Bool",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "pool_type": {
        "Type": "String",
        "Computed": true
      }
    },
    "azuredevops_agent_pools": {
      "agent_pools": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "auto_provision": {
              "Type": "Bool",
              "Computed": true
            },
            "id": {
              "Type": "Int",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Computed": true
            },
            "pool_type": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      }
    },
    "azuredevops_agent_queue": {
      "agent_pool_id": {
        "Type": "Int",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "project_id": {
        "Type": "String",
        "Required": true
      }
    },
    "azuredevops_area": {
      "children": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "has_children": {
              "Type": "Bool",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Computed": true
            },
            "path": {
              "Type": "String",
              "Computed": true
            },
            "project_id": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      },
      "fetch_children": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "has_children": {
        "Type": "Bool",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Computed": true
      },
      "path": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Required": true
      }
    },
    "azuredevops_client_config": {
      "organization_url": {
        "Type": "String",
        "Computed": true
      }
    },
    "azuredevops_git_repositories": {
      "include_hidden": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true
      },
      "project_id": {
        "Type": "String",
        "Optional": true
      },
      "repositories": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "default_branch": {
              "Type": "String",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Computed": true
            },
            "project_id": {
              "Type": "String",
              "Computed": true
            },
            "remote_url": {
              "Type": "String",
              "Computed": true
            },
            "size": {
              "Type": "Int",
              "Computed": true
            },
            "ssh_url": {
              "Type": "String",
              "Computed": true
            },
            "url": {
              "Type": "String",
              "Computed": true
            },
            "web_url": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      }
    },
    "azuredevops_git_repository": {
      "default_branch": {
        "Type": "String",
        "Computed": true
      },
      "is_fork": {
        "Type": "Bool",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "project_id": {
        "Type": "String",
        "Required": true
      },
      "remote_url": {
        "Type": "String",
        "Computed": true
      },
      "size": {
        "Type": "Int",
        "Computed": true
      },
      "ssh_url": {
        "Type": "String",
        "Computed": true
      },
      "url": {
        "Type": "String",
        "Computed": true
      },
      "web_url": {
        "Type": "String",
        "Computed": true
      }
    },
    "azuredevops_group": {
      "descriptor": {
        "Type": "String",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "origin": {
        "Type": "String",
        "Computed": true
      },
      "origin_id": {
        "Type": "String",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Optional": true
      }
    },
    "azuredevops_iteration": {
      "children": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "has_children": {
              "Type": "Bool",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Computed": true
            },
            "path": {
              "Type": "String",
              "Computed": true
            },
            "project_id": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      },
      "fetch_children": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "has_children": {
        "Type": "Bool",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Computed": true
      },
      "path": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Required": true
      }
    },
    "azuredevops_project": {
      "description": {
        "Type": "String",
        "Computed": true
      },
      "features": {
        "Type": "Map",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true
      },
      "process_template_id": {
        "Type": "String",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "ConflictsWith": [
          "name"
        ]
      },
      "version_control": {
        "Type": "String",
        "Computed": true
      },
      "visibility": {
        "Type": "String",
        "Computed": true
      },
      "work_item_template": {
        "Type": "String",
        "Computed": true
      }
    },
    "azuredevops_projects": {
      "name": {
        "Type": "String",
        "Optional": true
      },
      "projects": {
        "Type": "Set",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Computed": true
            },
            "project_id": {
              "Type": "String",
              "Computed": true
            },
            "project_url": {
              "Type": "String",
              "Computed": true
            },
            "state": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "core.ProjectState",
          "Value": "all"
        }
      }
    },
    "azuredevops_team": {
      "administrators": {
        "Type": "Set",
        "Computed": true,
        "ConfigExplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "description": {
        "Type": "String",
        "Computed": true
      },
      "members": {
        "Type": "Set",
        "Computed": true,
        "ConfigExplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "project_id": {
        "Type": "String",
        "Required": true
      }
    },
    "azuredevops_teams": {
      "project_id": {
        "Type": "String",
        "Optional": true
      },
      "teams": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "administrators": {
              "Type": "Set",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "description": {
              "Type": "String",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Computed": true
            },
            "members": {
              "Type": "Set",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Computed": true
            },
            "project_id": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      }
    },
    "azuredevops_users": {
      "origin": {
        "Type": "String",
        "Optional": true,
        "ConflictsWith": [
          "principal_name"
        ]
      },
      "origin_id": {
        "Type": "String",
        "Optional": true,
        "ConflictsWith": [
          "principal_name"
        ]
      },
      "principal_name": {
        "Type": "String",
        "Optional": true,
        "ConflictsWith": [
          "origin",
          "origin_id"
        ]
      },
      "subject_types": {
        "Type": "Set",
        "Optional": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "users": {
        "Type": "Set",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "descriptor": {
              "Type": "String",
              "Computed": true
            },
            "display_name": {
              "Type": "String",
              "Computed": true
            },
            "mail_address": {
              "Type": "String",
              "Computed": true
            },
            "origin": {
              "Type": "String",
              "Computed": true
            },
            "origin_id": {
              "Type": "String",
              "Optional": true
            },
            "principal_name": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      }
    }
  }
}