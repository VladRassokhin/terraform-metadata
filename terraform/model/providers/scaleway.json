{
  ".schema_version": "1",
  "name": "scaleway",
  "type": "provider",
  "version": "v1.14.0",
  "provider": {
    "access_key": {
      "Type": "String",
      "Optional": true,
      "Description": "The Scaleway access key.",
      "DefaultFunc": "UNKNOWN"
    },
    "organization": {
      "Type": "String",
      "Optional": true,
      "Deprecated": "Use `organization_id` instead."
    },
    "organization_id": {
      "Type": "String",
      "Optional": true,
      "Description": "The Scaleway organization ID.",
      "DefaultFunc": "UNKNOWN"
    },
    "region": {
      "Type": "String",
      "Optional": true,
      "Description": "The Scaleway default region to use for your resources.",
      "DefaultFunc": "UNKNOWN"
    },
    "secret_key": {
      "Type": "String",
      "Optional": true,
      "Description": "The Scaleway secret Key.",
      "DefaultFunc": "UNKNOWN"
    },
    "token": {
      "Type": "String",
      "Optional": true,
      "Deprecated": "Use `secret_key` instead."
    },
    "zone": {
      "Type": "String",
      "Optional": true,
      "Description": "The Scaleway default zone to use for your resources.",
      "DefaultFunc": "UNKNOWN"
    }
  },
  "resources": {
    "scaleway_account_ssh_key": {
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the SSH key"
      },
      "organization_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "public_key": {
        "Type": "String",
        "Required": true,
        "Description": "The public SSH key"
      }
    },
    "scaleway_baremetal_server_beta": {
      "__timeouts__": [
        "create",
        "delete"
      ],
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Some description to associate to the server, max 255 characters"
      },
      "domain": {
        "Type": "String",
        "Computed": true
      },
      "ips": {
        "Type": "List",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "String",
              "Description": "The IP address of the IP",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Description": "The ID of the IP",
              "Computed": true
            },
            "reverse": {
              "Type": "String",
              "Description": "The Reverse of the IP",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the server",
        "Computed": true
      },
      "offer": {
        "Type": "String",
        "Required": true,
        "Description": "ID of the server type"
      },
      "offer_id": {
        "Type": "String",
        "Optional": true,
        "Removed": "Please use offer instead"
      },
      "organization_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "os_id": {
        "Type": "String",
        "Required": true,
        "Description": "The base image of the server"
      },
      "ssh_key_ids": {
        "Type": "List",
        "Required": true,
        "Description": "Array of SSH key IDs allowed to SSH to the server",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags": {
        "Type": "List",
        "Optional": true,
        "Description": "Array of tags to associate with the server",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_bucket": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the bucket"
      }
    },
    "scaleway_instance_ip": {
      "address": {
        "Type": "String",
        "Description": "The IP address",
        "Computed": true
      },
      "organization_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "reverse": {
        "Type": "String",
        "Description": "The reverse DNS for this IP",
        "Computed": true
      },
      "server_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The server associated with this IP",
        "Removed": "server_id has been removed in favor of scaleway_instance_server.ip_id"
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_instance_ip_reverse_dns": {
      "ip_id": {
        "Type": "String",
        "Required": true,
        "Description": "The IP ID or IP address"
      },
      "reverse": {
        "Type": "String",
        "Required": true,
        "Description": "The reverse DNS for this IP"
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_instance_placement_group": {
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the placement group",
        "Computed": true
      },
      "organization_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "policy_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "One of the two policy_mode may be selected: enforced or optional.",
        "Default": {
          "Type": "instance.PlacementGroupPolicyMode",
          "Value": "optional"
        }
      },
      "policy_respected": {
        "Type": "Bool",
        "Description": "Is true when the policy is respected.",
        "Computed": true
      },
      "policy_type": {
        "Type": "String",
        "Optional": true,
        "Description": "The operating mode is selected by a policy_type",
        "Default": {
          "Type": "string",
          "Value": "max_availability"
        }
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_instance_security_group": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The description of the security group"
      },
      "external_rules": {
        "Type": "Bool",
        "Optional": true,
        "ConflictsWith": [
          "inbound_rule",
          "outbound_rule"
        ],
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "inbound_default_policy": {
        "Type": "String",
        "Optional": true,
        "Description": "Default inbound traffic policy for this security group",
        "Default": {
          "Type": "string",
          "Value": "accept"
        }
      },
      "inbound_rule": {
        "Type": "List",
        "Optional": true,
        "Description": "Inbound rules for this security group",
        "ConflictsWith": [
          "external_rules"
        ],
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Required": true,
              "Description": "Action when rule match request (drop or accept)"
            },
            "ip": {
              "Type": "String",
              "Optional": true,
              "Description": "Ip address for this rule (e.g: 1.1.1.1). Only one of ip or ip_range should be provided"
            },
            "ip_range": {
              "Type": "String",
              "Optional": true,
              "Description": "Ip range for this rule (e.g: 192.168.1.0/24). Only one of ip or ip_range should be provided"
            },
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "Network port for this rule"
            },
            "port_range": {
              "Type": "String",
              "Optional": true,
              "Description": "Computed port range for this rule (e.g: 1-1024, 22-22)"
            },
            "protocol": {
              "Type": "String",
              "Optional": true,
              "Description": "Protocol for this rule (TCP, UDP, ICMP or ANY)",
              "Default": {
                "Type": "string",
                "Value": "TCP"
              }
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the security group",
        "Computed": true
      },
      "organization_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "outbound_default_policy": {
        "Type": "String",
        "Optional": true,
        "Description": "Default outbound traffic policy for this security group",
        "Default": {
          "Type": "string",
          "Value": "accept"
        }
      },
      "outbound_rule": {
        "Type": "List",
        "Optional": true,
        "Description": "Outbound rules for this security group",
        "ConflictsWith": [
          "external_rules"
        ],
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Required": true,
              "Description": "Action when rule match request (drop or accept)"
            },
            "ip": {
              "Type": "String",
              "Optional": true,
              "Description": "Ip address for this rule (e.g: 1.1.1.1). Only one of ip or ip_range should be provided"
            },
            "ip_range": {
              "Type": "String",
              "Optional": true,
              "Description": "Ip range for this rule (e.g: 192.168.1.0/24). Only one of ip or ip_range should be provided"
            },
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "Network port for this rule"
            },
            "port_range": {
              "Type": "String",
              "Optional": true,
              "Description": "Computed port range for this rule (e.g: 1-1024, 22-22)"
            },
            "protocol": {
              "Type": "String",
              "Optional": true,
              "Description": "Protocol for this rule (TCP, UDP, ICMP or ANY)",
              "Default": {
                "Type": "string",
                "Value": "TCP"
              }
            }
          }
        }
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_instance_security_group_rules": {
      "inbound_rule": {
        "Type": "List",
        "Optional": true,
        "Description": "Inbound rules for this set of security group rules",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Required": true,
              "Description": "Action when rule match request (drop or accept)"
            },
            "ip": {
              "Type": "String",
              "Optional": true,
              "Description": "Ip address for this rule (e.g: 1.1.1.1). Only one of ip or ip_range should be provided"
            },
            "ip_range": {
              "Type": "String",
              "Optional": true,
              "Description": "Ip range for this rule (e.g: 192.168.1.0/24). Only one of ip or ip_range should be provided"
            },
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "Network port for this rule"
            },
            "port_range": {
              "Type": "String",
              "Optional": true,
              "Description": "Computed port range for this rule (e.g: 1-1024, 22-22)"
            },
            "protocol": {
              "Type": "String",
              "Optional": true,
              "Description": "Protocol for this rule (TCP, UDP, ICMP or ANY)",
              "Default": {
                "Type": "string",
                "Value": "TCP"
              }
            }
          }
        }
      },
      "outbound_rule": {
        "Type": "List",
        "Optional": true,
        "Description": "Outbound rules for this set of security group rules",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Required": true,
              "Description": "Action when rule match request (drop or accept)"
            },
            "ip": {
              "Type": "String",
              "Optional": true,
              "Description": "Ip address for this rule (e.g: 1.1.1.1). Only one of ip or ip_range should be provided"
            },
            "ip_range": {
              "Type": "String",
              "Optional": true,
              "Description": "Ip range for this rule (e.g: 192.168.1.0/24). Only one of ip or ip_range should be provided"
            },
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "Network port for this rule"
            },
            "port_range": {
              "Type": "String",
              "Optional": true,
              "Description": "Computed port range for this rule (e.g: 1-1024, 22-22)"
            },
            "protocol": {
              "Type": "String",
              "Optional": true,
              "Description": "Protocol for this rule (TCP, UDP, ICMP or ANY)",
              "Default": {
                "Type": "string",
                "Value": "TCP"
              }
            }
          }
        }
      },
      "security_group_id": {
        "Type": "String",
        "Required": true,
        "Description": "The security group associated with this volume"
      }
    },
    "scaleway_instance_server": {
      "additional_volume_ids": {
        "Type": "List",
        "Optional": true,
        "Description": "The additional volumes attached to the server",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "boot_type": {
        "Type": "String",
        "Description": "The boot type of the server",
        "Computed": true
      },
      "cloud_init": {
        "Type": "String",
        "Optional": true,
        "Description": "The cloud init script associated with this server"
      },
      "disable_dynamic_ip": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Disable dynamic IP on the server",
        "Removed": "Removed in favor of enable_dynamic_ip",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "disable_public_ip": {
        "Type": "Bool",
        "Optional": true,
        "Removed": "Please use enable_dynamic_ip instead",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "enable_dynamic_ip": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable dynamic IP on the server",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "enable_ipv6": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Determines if IPv6 is enabled for the server",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "image": {
        "Type": "String",
        "Required": true,
        "Description": "The UUID or the label of the base image used by the server"
      },
      "ip_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the reserved IP for the server"
      },
      "ipv6_address": {
        "Type": "String",
        "Description": "The default public IPv6 address routed to the server.",
        "Computed": true
      },
      "ipv6_gateway": {
        "Type": "String",
        "Description": "The IPv6 gateway address",
        "Computed": true
      },
      "ipv6_prefix_length": {
        "Type": "Int",
        "Description": "The IPv6 prefix length routed to the server.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the server",
        "Computed": true
      },
      "organization_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "placement_group_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The placement group the server is attached to"
      },
      "placement_group_policy_respected": {
        "Type": "Bool",
        "Description": "True when the placement group policy is respected",
        "Computed": true
      },
      "private_ip": {
        "Type": "String",
        "Description": "The Scaleway internal IP address of the server",
        "Computed": true
      },
      "public_ip": {
        "Type": "String",
        "Description": "The public IPv4 address of the server",
        "Computed": true
      },
      "root_volume": {
        "Type": "List",
        "Optional": true,
        "Description": "Root volume attached to the server on creation",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "delete_on_termination": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Force deletion of the root volume on instance termination",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "size_in_gb": {
              "Type": "Int",
              "Optional": true,
              "Description": "Size of the root volume in gigabytes",
              "Computed": true
            },
            "volume_id": {
              "Type": "String",
              "Description": "Volume ID of the root volume",
              "Computed": true
            }
          }
        }
      },
      "security_group_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The security group the server is attached to",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "The state of the server should be: started, stopped, standby",
        "Default": {
          "Type": "string",
          "Value": "started"
        }
      },
      "tags": {
        "Type": "List",
        "Optional": true,
        "Description": "The tags associated with the server",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The instance type of the server"
      },
      "user_data": {
        "Type": "Set",
        "Optional": true,
        "Description": "The user data associated with the server",
        "MaxItems": 98,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "A user data key, the value \"cloud-init\" is not allowed"
            },
            "value": {
              "Type": "String",
              "Required": true,
              "Description": "A user value"
            }
          }
        }
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_instance_volume": {
      "from_snapshot_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Create a volume based on a image",
        "ConflictsWith": [
          "from_volume_id",
          "size_in_gb"
        ]
      },
      "from_volume_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Create a copy of an existing volume",
        "ConflictsWith": [
          "from_snapshot_id",
          "size_in_gb"
        ]
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the volume",
        "Computed": true
      },
      "organization_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "server_id": {
        "Type": "String",
        "Description": "The server associated with this volume",
        "Computed": true
      },
      "size_in_gb": {
        "Type": "Int",
        "Optional": true,
        "Description": "The size of the volume in gigabyte",
        "Computed": true,
        "ConflictsWith": [
          "from_snapshot_id",
          "from_volume_id"
        ]
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The volume type"
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_ip": {
      "ip": {
        "Type": "String",
        "Description": "The ipv4 address of the ip",
        "Computed": true
      },
      "reverse": {
        "Type": "String",
        "Optional": true,
        "Description": "The ipv4 reverse dns",
        "Computed": true,
        "Deprecated": "use scaleway_ip_reverse_dns resource instead"
      },
      "server": {
        "Type": "String",
        "Optional": true,
        "Description": "The server associated with the ip",
        "Computed": true
      }
    },
    "scaleway_ip_reverse_dns": {
      "ip": {
        "Type": "String",
        "Required": true,
        "Description": "The ipv4 address of the ip, or IP ID"
      },
      "reverse": {
        "Type": "String",
        "Required": true,
        "Description": "The ipv4 reverse dns"
      }
    },
    "scaleway_k8s_cluster_beta": {
      "admission_plugins": {
        "Type": "List",
        "Optional": true,
        "Description": "The list of admission plugins to enable on the cluster",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "apiserver_url": {
        "Type": "String",
        "Description": "Kubernetes API server URL",
        "Computed": true
      },
      "auto_upgrade": {
        "Type": "List",
        "Optional": true,
        "Description": "The auto upgrade configuration for the cluster",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "enable": {
              "Type": "Bool",
              "Required": true,
              "Description": "Enables the Kubernetes patch version auto upgrade"
            },
            "maintenance_window_day": {
              "Type": "String",
              "Required": true,
              "Description": "Day of the maintenance window"
            },
            "maintenance_window_start_hour": {
              "Type": "Int",
              "Required": true,
              "Description": "Start hour of the 2-hour maintenance window"
            }
          }
        }
      },
      "autoscaler_config": {
        "Type": "List",
        "Optional": true,
        "Description": "The autoscaler configuration for the cluster",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "balance_similar_node_groups": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Detect similar node groups and balance the number of nodes between them",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "disable_scale_down": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Disable the scale down feature of the autoscaler",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "estimator": {
              "Type": "String",
              "Optional": true,
              "Description": "Type of resource estimator to be used in scale up",
              "Default": {
                "Type": "string",
                "Value": "binpacking"
              }
            },
            "expander": {
              "Type": "String",
              "Optional": true,
              "Description": "Type of node group expander to be used in scale up",
              "Default": {
                "Type": "string",
                "Value": "random"
              }
            },
            "expendable_pods_priority_cutoff": {
              "Type": "Int",
              "Optional": true,
              "Description": "Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable",
              "Default": {
                "Type": "int",
                "Value": "-10"
              }
            },
            "ignore_daemonsets_utilization": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Ignore DaemonSet pods when calculating resource utilization for scaling down",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "scale_down_delay_after_add": {
              "Type": "String",
              "Optional": true,
              "Description": "How long after scale up that scale down evaluation resumes",
              "Default": {
                "Type": "string",
                "Value": "10m"
              }
            }
          }
        }
      },
      "cni": {
        "Type": "String",
        "Required": true,
        "Description": "The CNI plugin of the cluster"
      },
      "created_at": {
        "Type": "String",
        "Description": "The date and time of the creation of the Kubernetes cluster",
        "Computed": true
      },
      "default_pool": {
        "Type": "List",
        "Required": true,
        "Description": "Default pool created for the cluster on creation",
        "MaxItems": 1,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "autohealing": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Enable the autohealing on the default pool",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "autoscaling": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Enable the autoscaling on the default pool",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "container_runtime": {
              "Type": "String",
              "Optional": true,
              "Description": "Container runtime for the default pool",
              "Default": {
                "Type": "string",
                "Value": "docker"
              }
            },
            "created_at": {
              "Type": "String",
              "Description": "The date and time of the creation of the default pool",
              "Computed": true
            },
            "max_size": {
              "Type": "Int",
              "Optional": true,
              "Description": "Maximum size of the default pool",
              "Computed": true
            },
            "min_size": {
              "Type": "Int",
              "Optional": true,
              "Description": "Minimun size of the default pool",
              "Default": {
                "Type": "int",
                "Value": "1"
              }
            },
            "node_type": {
              "Type": "String",
              "Required": true,
              "Description": "Server type of the default pool servers"
            },
            "nodes": {
              "Type": "List",
              "Computed": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Description": "The name of the node",
                    "Computed": true
                  },
                  "public_ip": {
                    "Type": "String",
                    "Description": "The public IPv4 address of the node",
                    "Computed": true
                  },
                  "public_ip_v6": {
                    "Type": "String",
                    "Description": "The public IPv6 address of the node",
                    "Computed": true
                  },
                  "status": {
                    "Type": "String",
                    "Description": "The status of the node",
                    "Computed": true
                  }
                }
              }
            },
            "placement_group_id": {
              "Type": "String",
              "Optional": true,
              "Description": "ID of the placement group for the default pool"
            },
            "pool_id": {
              "Type": "String",
              "Description": "ID of default pool",
              "Computed": true
            },
            "size": {
              "Type": "Int",
              "Required": true,
              "Description": "Size of the default pool"
            },
            "status": {
              "Type": "String",
              "Description": "The status of the default pool",
              "Computed": true
            },
            "tags": {
              "Type": "List",
              "Optional": true,
              "Description": "The tags associated with the default pool",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "updated_at": {
              "Type": "String",
              "Description": "The date and time of the last update of the default pool",
              "Computed": true
            },
            "wait_for_pool_ready": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether to wait for the pool to be ready",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            }
          }
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The description of the cluster",
        "Default": {
          "Type": "string"
        }
      },
      "enable_dashboard": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable the dashboard on the cluster",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "feature_gates": {
        "Type": "List",
        "Optional": true,
        "Description": "The list of feature gates to enable on the cluster",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ingress": {
        "Type": "String",
        "Optional": true,
        "Description": "The ingress to be deployed on the cluster",
        "Default": {
          "Type": "string",
          "Value": "none"
        }
      },
      "kubeconfig": {
        "Type": "List",
        "Description": "The kubeconfig configuration file of the Kubernetes cluster",
        "Computed": true,
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cluster_ca_certificate": {
              "Type": "String",
              "Description": "The kubernetes cluster CA certificate",
              "Computed": true
            },
            "config_file": {
              "Type": "String",
              "Description": "The whole kubeconfig file",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "The kubernetes master URL",
              "Computed": true
            },
            "token": {
              "Type": "String",
              "Description": "The kubernetes cluster admin token",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the cluster"
      },
      "organization_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region you want to attach the resource to",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "The status of the cluster",
        "Computed": true
      },
      "tags": {
        "Type": "List",
        "Optional": true,
        "Description": "The tags associated with the cluster",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "updated_at": {
        "Type": "String",
        "Description": "The date and time of the last update of the Kubernetes cluster",
        "Computed": true
      },
      "upgrade_available": {
        "Type": "Bool",
        "Description": "True if an upgrade is available",
        "Computed": true
      },
      "version": {
        "Type": "String",
        "Required": true,
        "Description": "The version of the cluster"
      },
      "wildcard_dns": {
        "Type": "String",
        "Description": "Wildcard DNS pointing to all the ready nodes",
        "Computed": true
      }
    },
    "scaleway_k8s_pool_beta": {
      "autohealing": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable the autohealing on the pool",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "autoscaling": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable the autoscaling on the pool",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "cluster_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the cluster on which this pool will be created"
      },
      "container_runtime": {
        "Type": "String",
        "Optional": true,
        "Description": "Container runtime for the pool",
        "Default": {
          "Type": "string",
          "Value": "docker"
        }
      },
      "created_at": {
        "Type": "String",
        "Description": "The date and time of the creation of the pool",
        "Computed": true
      },
      "max_size": {
        "Type": "Int",
        "Optional": true,
        "Description": "Maximum size of the pool",
        "Computed": true
      },
      "min_size": {
        "Type": "Int",
        "Optional": true,
        "Description": "Minimun size of the pool",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the cluster"
      },
      "node_type": {
        "Type": "String",
        "Required": true,
        "Description": "Server type of the pool servers"
      },
      "nodes": {
        "Type": "List",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Description": "The name of the node",
              "Computed": true
            },
            "public_ip": {
              "Type": "String",
              "Description": "The public IPv4 address of the node",
              "Computed": true
            },
            "public_ip_v6": {
              "Type": "String",
              "Description": "The public IPv6 address of the node",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "The status of the node",
              "Computed": true
            }
          }
        }
      },
      "placement_group_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the placement group"
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region you want to attach the resource to",
        "Computed": true
      },
      "size": {
        "Type": "Int",
        "Required": true,
        "Description": "Size of the pool"
      },
      "status": {
        "Type": "String",
        "Description": "The status of the pool",
        "Computed": true
      },
      "tags": {
        "Type": "List",
        "Optional": true,
        "Description": "The tags associated with the pool",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "updated_at": {
        "Type": "String",
        "Description": "The date and time of the last update of the pool",
        "Computed": true
      },
      "version": {
        "Type": "String",
        "Description": "The Kubernetes version of the pool",
        "Computed": true
      },
      "wait_for_pool_ready": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to wait for the pool to be ready",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      }
    },
    "scaleway_lb_backend_beta": {
      "forward_port": {
        "Type": "Int",
        "Required": true,
        "Description": "User sessions will be forwarded to this port of backend servers"
      },
      "forward_port_algorithm": {
        "Type": "String",
        "Optional": true,
        "Description": "Load balancing algorithm",
        "Default": {
          "Type": "string",
          "Value": "roundrobin"
        }
      },
      "forward_protocol": {
        "Type": "String",
        "Required": true,
        "Description": "Backend protocol"
      },
      "health_check_delay": {
        "Type": "String",
        "Optional": true,
        "Description": "Interval between two HC requests",
        "Default": {
          "Type": "string",
          "Value": "60s"
        }
      },
      "health_check_http": {
        "Type": "List",
        "Optional": true,
        "MaxItems": 1,
        "ConflictsWith": [
          "health_check_tcp",
          "health_check_https"
        ],
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "code": {
              "Type": "Int",
              "Optional": true,
              "Description": "The expected HTTP status code",
              "Default": {
                "Type": "int",
                "Value": "200"
              }
            },
            "method": {
              "Type": "String",
              "Optional": true,
              "Description": "The HTTP method to use for HC requests",
              "Default": {
                "Type": "string",
                "Value": "GET"
              }
            },
            "uri": {
              "Type": "String",
              "Required": true,
              "Description": "The HTTP endpoint URL to call for HC requests"
            }
          }
        }
      },
      "health_check_https": {
        "Type": "List",
        "Optional": true,
        "MaxItems": 1,
        "ConflictsWith": [
          "health_check_tcp",
          "health_check_http"
        ],
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "code": {
              "Type": "Int",
              "Optional": true,
              "Description": "The expected HTTP status code",
              "Default": {
                "Type": "int",
                "Value": "200"
              }
            },
            "method": {
              "Type": "String",
              "Optional": true,
              "Description": "The HTTP method to use for HC requests",
              "Default": {
                "Type": "string",
                "Value": "GET"
              }
            },
            "uri": {
              "Type": "String",
              "Required": true,
              "Description": "The HTTPS endpoint URL to call for HC requests"
            }
          }
        }
      },
      "health_check_max_retries": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of allowed failed HC requests before the backend server is marked down",
        "Default": {
          "Type": "int",
          "Value": "2"
        }
      },
      "health_check_port": {
        "Type": "Int",
        "Optional": true,
        "Description": "Port the HC requests will be send to. Default to `forward_port`",
        "Computed": true
      },
      "health_check_tcp": {
        "Type": "List",
        "Optional": true,
        "Computed": true,
        "MaxItems": 1,
        "ConflictsWith": [
          "health_check_http",
          "health_check_https"
        ],
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "health_check_timeout": {
        "Type": "String",
        "Optional": true,
        "Description": "Timeout before we consider a HC request failed",
        "Default": {
          "Type": "string",
          "Value": "30s"
        }
      },
      "lb_id": {
        "Type": "String",
        "Required": true,
        "Description": "The load-balancer ID"
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the backend",
        "Computed": true
      },
      "on_marked_down_action": {
        "Type": "String",
        "Optional": true,
        "Description": "Modify what occurs when a backend server is marked down",
        "Default": {
          "Type": "string",
          "Value": "none"
        }
      },
      "send_proxy_v2": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enables PROXY protocol version 2",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "server_ips": {
        "Type": "List",
        "Optional": true,
        "Description": "Backend server IP addresses list (IPv4 or IPv6)",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "sticky_sessions": {
        "Type": "String",
        "Optional": true,
        "Description": "Load balancing algorithm",
        "Default": {
          "Type": "string",
          "Value": "none"
        }
      },
      "sticky_sessions_cookie_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cookie name for for sticky sessions"
      },
      "timeout_connect": {
        "Type": "String",
        "Optional": true,
        "Description": "Maximum initial server connection establishment time"
      },
      "timeout_server": {
        "Type": "String",
        "Optional": true,
        "Description": "Maximum server connection inactivity time"
      },
      "timeout_tunnel": {
        "Type": "String",
        "Optional": true,
        "Description": "Maximum tunnel inactivity time"
      }
    },
    "scaleway_lb_beta": {
      "ip_address": {
        "Type": "String",
        "Description": "The load-balance public IP address",
        "Computed": true
      },
      "ip_id": {
        "Type": "String",
        "Description": "The load-balance public IP ID",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the lb",
        "Computed": true
      },
      "organization_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region you want to attach the resource to",
        "Computed": true
      },
      "tags": {
        "Type": "List",
        "Optional": true,
        "Description": "Array of tags to associate with the load-balancer",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The type of load-balancer you want to create"
      }
    },
    "scaleway_lb_certificate_beta": {
      "common_name": {
        "Type": "String",
        "Description": "The main domain name of the certificate",
        "Computed": true
      },
      "custom_certificate": {
        "Type": "List",
        "Optional": true,
        "Description": "The custom type certificate type configuration",
        "MaxItems": 1,
        "ConflictsWith": [
          "letsencrypt"
        ],
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "certificate_chain": {
              "Type": "String",
              "Required": true,
              "Description": "The full PEM-formatted certificate chain"
            }
          }
        }
      },
      "fingerprint": {
        "Type": "String",
        "Description": "The identifier (SHA-1) of the certificate",
        "Computed": true
      },
      "lb_id": {
        "Type": "String",
        "Required": true,
        "Description": "The load-balancer ID"
      },
      "letsencrypt": {
        "Type": "List",
        "Optional": true,
        "Description": "The Let's Encrypt type certificate configuration",
        "MaxItems": 1,
        "ConflictsWith": [
          "custom_certificate"
        ],
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "common_name": {
              "Type": "String",
              "Required": true,
              "Description": "The main domain name of the certificate"
            },
            "subject_alternative_name": {
              "Type": "List",
              "Optional": true,
              "Description": "The alternative domain names of the certificate",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the load-balancer certificate",
        "Computed": true
      },
      "not_valid_after": {
        "Type": "String",
        "Description": "The not valid after validity bound timestamp",
        "Computed": true
      },
      "not_valid_before": {
        "Type": "String",
        "Description": "The not valid before validity bound timestamp",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "The status of certificate",
        "Computed": true
      },
      "subject_alternative_name": {
        "Type": "String",
        "Description": "The alternative domain names of the certificate",
        "Computed": true
      }
    },
    "scaleway_lb_frontend_beta": {
      "acl": {
        "Type": "List",
        "Optional": true,
        "Description": "ACL rules",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "List",
              "Required": true,
              "Description": "Action to undertake when an ACL filter matches",
              "MaxItems": 1,
              "MinItems": 1,
              "IsBlock": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "type": {
                    "Type": "String",
                    "Required": true,
                    "Description": "The action type"
                  }
                }
              }
            },
            "match": {
              "Type": "List",
              "Required": true,
              "Description": "The ACL match rule",
              "MaxItems": 1,
              "MinItems": 1,
              "IsBlock": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "http_filter": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The HTTP filter to match",
                    "Default": {
                      "Type": "string",
                      "Value": "acl_http_filter_none"
                    }
                  },
                  "http_filter_value": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "A list of possible values to match for the given HTTP filter",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "invert": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "If set to true, the condition will be of type \"unless\""
                  },
                  "ip_subnet": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "A list of IPs or CIDR v4/v6 addresses of the client of the session to match",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "The ACL name",
              "Computed": true
            },
            "organization_id": {
              "Type": "String",
              "Optional": true,
              "Description": "The organization_id you want to attach the resource to",
              "Computed": true
            },
            "region": {
              "Type": "String",
              "Optional": true,
              "Description": "The region you want to attach the resource to",
              "Computed": true
            }
          }
        }
      },
      "backend_id": {
        "Type": "String",
        "Required": true,
        "Description": "The load-balancer backend ID"
      },
      "certificate_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Certificate ID"
      },
      "inbound_port": {
        "Type": "Int",
        "Required": true,
        "Description": "TCP port to listen on the front side"
      },
      "lb_id": {
        "Type": "String",
        "Required": true,
        "Description": "The load-balancer ID"
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the frontend",
        "Computed": true
      },
      "timeout_client": {
        "Type": "String",
        "Optional": true,
        "Description": "Set the maximum inactivity time on the client side"
      }
    },
    "scaleway_object_bucket": {
      "acl": {
        "Type": "String",
        "Optional": true,
        "Description": "ACL of the bucket: either 'public-read' or 'private'.",
        "Default": {
          "Type": "string",
          "Value": "private"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the bucket"
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_rdb_instance_beta": {
      "certificate": {
        "Type": "String",
        "Description": "Certificate of the database instance",
        "Computed": true
      },
      "disable_backup": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Disable automated backup for the database instance",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "endpoint_ip": {
        "Type": "String",
        "Description": "Endpoint IP of the database instance",
        "Computed": true
      },
      "endpoint_port": {
        "Type": "Int",
        "Description": "Endpoint port of the database instance",
        "Computed": true
      },
      "engine": {
        "Type": "String",
        "Required": true,
        "Description": "Database's engine version id"
      },
      "is_ha_cluster": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable or disable high availability for the database instance",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the database instance",
        "Computed": true
      },
      "node_type": {
        "Type": "String",
        "Required": true,
        "Description": "The type of database instance you want to create"
      },
      "organization_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "password": {
        "Type": "String",
        "Required": true,
        "Description": "Password for the first user of the database instance"
      },
      "read_replicas": {
        "Type": "List",
        "Description": "Read replicas of the database instance",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip": {
              "Type": "String",
              "Description": "IP of the replica",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Name of the replica",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port of the replica",
              "Computed": true
            }
          }
        }
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region you want to attach the resource to",
        "Computed": true
      },
      "tags": {
        "Type": "List",
        "Optional": true,
        "Description": "List of tags [\"tag1\", \"tag2\", ...] attached to a database instance",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "user_name": {
        "Type": "String",
        "Required": true,
        "Description": "Identifier for the first user of the database instance"
      }
    },
    "scaleway_registry_namespace_beta": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The description of the container registry namespace"
      },
      "endpoint": {
        "Type": "String",
        "Description": "The endpoint reachable by docker",
        "Computed": true
      },
      "is_public": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Define the default visibity policy"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the container registry namespace"
      },
      "organization_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_security_group": {
      "description": {
        "Type": "String",
        "Required": true,
        "Description": "The description of the security group"
      },
      "enable_default_security": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Add default security group rules",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "inbound_default_policy": {
        "Type": "String",
        "Optional": true,
        "Description": "Default inbound traffic policy for this security group",
        "Default": {
          "Type": "string",
          "Value": "accept"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the security group"
      },
      "outbound_default_policy": {
        "Type": "String",
        "Optional": true,
        "Description": "Default outbound traffic policy for this security group",
        "Default": {
          "Type": "string",
          "Value": "accept"
        }
      },
      "stateful": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Mark security group as stateful"
      }
    },
    "scaleway_security_group_rule": {
      "action": {
        "Type": "String",
        "Required": true,
        "Description": "The action to take when the security group rule is triggered (accept or drop)"
      },
      "direction": {
        "Type": "String",
        "Required": true,
        "Description": "The direction the traffic is affected (inbound or outbound)"
      },
      "ip_range": {
        "Type": "String",
        "Required": true,
        "Description": "The ip range affected by the security group rule"
      },
      "port": {
        "Type": "Int",
        "Optional": true,
        "Description": "The port affected by the security group rule"
      },
      "protocol": {
        "Type": "String",
        "Required": true,
        "Description": "The protocol of the security group rule (ICMP, TCP or UDP)"
      },
      "security_group": {
        "Type": "String",
        "Required": true,
        "Description": "The security group this rule is attached to"
      }
    },
    "scaleway_server": {
      "boot_type": {
        "Type": "String",
        "Optional": true,
        "Description": "The boot_type of the server",
        "Computed": true
      },
      "bootscript": {
        "Type": "String",
        "Optional": true,
        "Description": "The boot configuration of the server"
      },
      "cloudinit": {
        "Type": "String",
        "Optional": true,
        "Description": "the cloudinit script associated with this server",
        "Computed": true
      },
      "dynamic_ip_required": {
        "Type": "Bool",
        "Optional": true,
        "Description": "determines if a public IP address should be allocated for the server"
      },
      "enable_ipv6": {
        "Type": "Bool",
        "Optional": true,
        "Description": "determines if IPv6 is enabled for the server",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "image": {
        "Type": "String",
        "Required": true,
        "Description": "The base image of the server"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the server"
      },
      "private_ip": {
        "Type": "String",
        "Description": "the Scaleway internal IP address of the server",
        "Computed": true
      },
      "public_ip": {
        "Type": "String",
        "Optional": true,
        "Description": "the public IPv4 address of the server",
        "Computed": true
      },
      "public_ipv6": {
        "Type": "String",
        "Description": "the public IPv6 address of the server, if enabled",
        "Computed": true
      },
      "security_group": {
        "Type": "String",
        "Optional": true,
        "Description": "The security group the server is attached to"
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "the server state (running, stopped)",
        "Computed": true
      },
      "state_detail": {
        "Type": "String",
        "Description": "scaleway description of the server state",
        "Computed": true
      },
      "tags": {
        "Type": "List",
        "Optional": true,
        "Description": "The tags associated with the server",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The instance type of the server"
      },
      "volume": {
        "Type": "List",
        "Optional": true,
        "Description": "Volumes attached to the server on creation",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "size_in_gb": {
              "Type": "Int",
              "Required": true
            },
            "type": {
              "Type": "String",
              "Required": true
            },
            "volume_id": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      }
    },
    "scaleway_ssh_key": {
      "key": {
        "Type": "String",
        "Required": true,
        "Description": "The ssh key"
      }
    },
    "scaleway_token": {
      "access_key": {
        "Type": "String",
        "Description": "The access_key.",
        "Computed": true
      },
      "creation_ip": {
        "Type": "String",
        "Description": "The ip used to create the key.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The token description.",
        "Default": {
          "Type": "string"
        }
      },
      "email": {
        "Type": "String",
        "Optional": true,
        "Description": "The account email. Defaults to registered user.",
        "Computed": true
      },
      "expiration_date": {
        "Type": "String",
        "Description": "The tokens expiration date",
        "Computed": true
      },
      "expires": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Defines if the token is set to expire",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "User password, in case a login is require"
      },
      "secret_key": {
        "Type": "String",
        "Description": "The secret_key.",
        "Computed": true
      },
      "user_id": {
        "Type": "String",
        "Description": "The userid of the associated user.",
        "Computed": true
      }
    },
    "scaleway_user_data": {
      "key": {
        "Type": "String",
        "Required": true,
        "Description": "The key of the user data to manage"
      },
      "server": {
        "Type": "String",
        "Required": true,
        "Description": "The server the meta data is associated with"
      },
      "value": {
        "Type": "String",
        "Required": true,
        "Description": "The value of the user"
      }
    },
    "scaleway_volume": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "the name of the volume"
      },
      "server": {
        "Type": "String",
        "Description": "the server the volume is attached to",
        "Computed": true
      },
      "size_in_gb": {
        "Type": "Int",
        "Required": true,
        "Description": "the size of the volume in GB"
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "the type of backing storage"
      }
    },
    "scaleway_volume_attachment": {
      "server": {
        "Type": "String",
        "Required": true,
        "Description": "the server a volume should be attached to"
      },
      "volume": {
        "Type": "String",
        "Required": true,
        "Description": "the volume to attach"
      }
    }
  },
  "data-sources": {
    "scaleway_account_ssh_key": {
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the SSH key",
        "Computed": true
      },
      "organization_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "public_key": {
        "Type": "String",
        "Description": "The public SSH key",
        "Computed": true
      },
      "ssh_key_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the SSH key",
        "Computed": true
      }
    },
    "scaleway_baremetal_offer_beta": {
      "bandwidth": {
        "Type": "Int",
        "Description": "Available Bandwidth with the offer",
        "Computed": true
      },
      "commercial_range": {
        "Type": "String",
        "Description": "Commercial range of the offer",
        "Computed": true
      },
      "cpu": {
        "Type": "List",
        "Description": "CPU specifications of the offer",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "core_count": {
              "Type": "Int",
              "Description": "Number of cores",
              "Computed": true
            },
            "frequency": {
              "Type": "Int",
              "Description": "Frequency of the CPU",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "CPU name",
              "Computed": true
            },
            "thread_count": {
              "Type": "Int",
              "Description": "Number of threads",
              "Computed": true
            }
          }
        }
      },
      "disk": {
        "Type": "List",
        "Description": "Disk specifications of the offer",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "capacity": {
              "Type": "Int",
              "Description": "Capacity of the disk in byte",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Type of disk",
              "Computed": true
            }
          }
        }
      },
      "include_disabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Include disabled offers",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "memory": {
        "Type": "List",
        "Description": "Memory specifications of the offer",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "capacity": {
              "Type": "Int",
              "Description": "Capacity of the memory in byte",
              "Computed": true
            },
            "ecc": {
              "Type": "Bool",
              "Description": "True if error-correcting code is available on this memory",
              "Computed": true
            },
            "frequency": {
              "Type": "Int",
              "Description": "Frequency of the memory",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Type of memory",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Exact name of the desired offer",
        "ConflictsWith": [
          "offer_id"
        ]
      },
      "offer_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the desired offer",
        "ConflictsWith": [
          "name"
        ]
      },
      "stock": {
        "Type": "String",
        "Description": "Stock status for this offer",
        "Computed": true
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_bootscript": {
      "architecture": {
        "Type": "String",
        "Optional": true,
        "Description": "architecture of the desired bootscript",
        "Computed": true
      },
      "boot_cmd_args": {
        "Type": "String",
        "Description": "commandline boot options used",
        "Computed": true
      },
      "dtb": {
        "Type": "String",
        "Description": "path to Device Tree Blob detailing hardware information",
        "Computed": true
      },
      "initrd": {
        "Type": "String",
        "Description": "URL to initial ramdisk content",
        "Computed": true
      },
      "kernel": {
        "Type": "String",
        "Description": "URL to used kernel",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "exact name of the desired bootscript"
      },
      "name_filter": {
        "Type": "String",
        "Optional": true,
        "Description": "partial name of the desired bootscript to filter with"
      },
      "organization": {
        "Type": "String",
        "Description": "organization owning the bootscript",
        "Computed": true
      },
      "public": {
        "Type": "Bool",
        "Description": "indication if the bootscript is public",
        "Computed": true
      }
    },
    "scaleway_image": {
      "architecture": {
        "Type": "String",
        "Required": true,
        "Description": "architecture of the desired image"
      },
      "creation_date": {
        "Type": "String",
        "Description": "date when the image was created",
        "Computed": true
      },
      "most_recent": {
        "Type": "Bool",
        "Optional": true,
        "Description": "select most recent image if multiple match",
        "ConflictsWith": [
          "name_filter"
        ]
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "exact name of the desired image",
        "Computed": true
      },
      "name_filter": {
        "Type": "String",
        "Optional": true,
        "Description": "partial name of the desired image to filter with",
        "ConflictsWith": [
          "most_recent"
        ]
      },
      "organization": {
        "Type": "String",
        "Description": "organization owning the bootscript",
        "Computed": true
      },
      "public": {
        "Type": "Bool",
        "Description": "indication if the bootscript is public",
        "Computed": true
      }
    },
    "scaleway_instance_image": {
      "additional_volume_ids": {
        "Type": "List",
        "Description": "The additional volume IDs attached to the image",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "architecture": {
        "Type": "String",
        "Optional": true,
        "Description": "Architecture of the desired image",
        "ConflictsWith": [
          "image_id"
        ],
        "Default": {
          "Type": "string",
          "Value": "x86_64"
        }
      },
      "creation_date": {
        "Type": "String",
        "Description": "Date when the image was created",
        "Computed": true
      },
      "default_bootscript_id": {
        "Type": "String",
        "Description": "ID of the bootscript associated with this image",
        "Computed": true
      },
      "from_server_id": {
        "Type": "String",
        "Description": "ID of the server the image is originated from",
        "Computed": true
      },
      "image_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the desired image",
        "ConflictsWith": [
          "name",
          "architecture"
        ]
      },
      "latest": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Select most recent image if multiple match",
        "ConflictsWith": [
          "image_id"
        ],
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "modification_date": {
        "Type": "String",
        "Description": "Date when the image was updated",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Exact name of the desired image",
        "ConflictsWith": [
          "image_id"
        ]
      },
      "organization_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "public": {
        "Type": "Bool",
        "Description": "Indication if the image is public",
        "Computed": true
      },
      "root_volume_id": {
        "Type": "String",
        "Description": "ID of the root volume associated with this image",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "State of the image",
        "Computed": true
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_instance_security_group": {
      "description": {
        "Type": "String",
        "Description": "The description of the security group",
        "Computed": true
      },
      "external_rules": {
        "Type": "Bool",
        "Computed": true
      },
      "inbound_default_policy": {
        "Type": "String",
        "Description": "Default inbound traffic policy for this security group",
        "Computed": true
      },
      "inbound_rule": {
        "Type": "List",
        "Description": "Inbound rules for this security group",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Description": "Action when rule match request (drop or accept)",
              "Computed": true
            },
            "ip": {
              "Type": "String",
              "Description": "Ip address for this rule (e.g: 1.1.1.1). Only one of ip or ip_range should be provided",
              "Computed": true
            },
            "ip_range": {
              "Type": "String",
              "Description": "Ip range for this rule (e.g: 192.168.1.0/24). Only one of ip or ip_range should be provided",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Network port for this rule",
              "Computed": true
            },
            "port_range": {
              "Type": "String",
              "Description": "Computed port range for this rule (e.g: 1-1024, 22-22)",
              "Computed": true
            },
            "protocol": {
              "Type": "String",
              "Description": "Protocol for this rule (TCP, UDP, ICMP or ANY)",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the security group",
        "ConflictsWith": [
          "security_group_id"
        ]
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "outbound_default_policy": {
        "Type": "String",
        "Description": "Default outbound traffic policy for this security group",
        "Computed": true
      },
      "outbound_rule": {
        "Type": "List",
        "Description": "Outbound rules for this security group",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Description": "Action when rule match request (drop or accept)",
              "Computed": true
            },
            "ip": {
              "Type": "String",
              "Description": "Ip address for this rule (e.g: 1.1.1.1). Only one of ip or ip_range should be provided",
              "Computed": true
            },
            "ip_range": {
              "Type": "String",
              "Description": "Ip range for this rule (e.g: 192.168.1.0/24). Only one of ip or ip_range should be provided",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Network port for this rule",
              "Computed": true
            },
            "port_range": {
              "Type": "String",
              "Description": "Computed port range for this rule (e.g: 1-1024, 22-22)",
              "Computed": true
            },
            "protocol": {
              "Type": "String",
              "Description": "Protocol for this rule (TCP, UDP, ICMP or ANY)",
              "Computed": true
            }
          }
        }
      },
      "security_group_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the security group",
        "ConflictsWith": [
          "name"
        ]
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to"
      }
    },
    "scaleway_instance_server": {
      "additional_volume_ids": {
        "Type": "List",
        "Description": "The additional volumes attached to the server",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "boot_type": {
        "Type": "String",
        "Description": "The boot type of the server",
        "Computed": true
      },
      "cloud_init": {
        "Type": "String",
        "Description": "The cloud init script associated with this server",
        "Computed": true
      },
      "disable_dynamic_ip": {
        "Type": "Bool",
        "Description": "Disable dynamic IP on the server",
        "Computed": true
      },
      "disable_public_ip": {
        "Type": "Bool",
        "Computed": true
      },
      "enable_dynamic_ip": {
        "Type": "Bool",
        "Description": "Enable dynamic IP on the server",
        "Computed": true
      },
      "enable_ipv6": {
        "Type": "Bool",
        "Description": "Determines if IPv6 is enabled for the server",
        "Computed": true
      },
      "image": {
        "Type": "String",
        "Description": "The UUID or the label of the base image used by the server",
        "Computed": true
      },
      "ip_id": {
        "Type": "String",
        "Description": "The ID of the reserved IP for the server",
        "Computed": true
      },
      "ipv6_address": {
        "Type": "String",
        "Description": "The default public IPv6 address routed to the server.",
        "Computed": true
      },
      "ipv6_gateway": {
        "Type": "String",
        "Description": "The IPv6 gateway address",
        "Computed": true
      },
      "ipv6_prefix_length": {
        "Type": "Int",
        "Description": "The IPv6 prefix length routed to the server.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the server",
        "ConflictsWith": [
          "server_id"
        ]
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "placement_group_id": {
        "Type": "String",
        "Description": "The placement group the server is attached to",
        "Computed": true
      },
      "placement_group_policy_respected": {
        "Type": "Bool",
        "Description": "True when the placement group policy is respected",
        "Computed": true
      },
      "private_ip": {
        "Type": "String",
        "Description": "The Scaleway internal IP address of the server",
        "Computed": true
      },
      "public_ip": {
        "Type": "String",
        "Description": "The public IPv4 address of the server",
        "Computed": true
      },
      "root_volume": {
        "Type": "List",
        "Description": "Root volume attached to the server on creation",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "delete_on_termination": {
              "Type": "Bool",
              "Description": "Force deletion of the root volume on instance termination",
              "Computed": true
            },
            "size_in_gb": {
              "Type": "Int",
              "Description": "Size of the root volume in gigabytes",
              "Computed": true
            },
            "volume_id": {
              "Type": "String",
              "Description": "Volume ID of the root volume",
              "Computed": true
            }
          }
        }
      },
      "security_group_id": {
        "Type": "String",
        "Description": "The security group the server is attached to",
        "Computed": true
      },
      "server_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the server",
        "ConflictsWith": [
          "name"
        ]
      },
      "state": {
        "Type": "String",
        "Description": "The state of the server should be: started, stopped, standby",
        "Computed": true
      },
      "tags": {
        "Type": "List",
        "Description": "The tags associated with the server",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "type": {
        "Type": "String",
        "Description": "The instance type of the server",
        "Computed": true
      },
      "user_data": {
        "Type": "Set",
        "Description": "The user data associated with the server",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "key": {
              "Type": "String",
              "Description": "A user data key, the value \"cloud-init\" is not allowed",
              "Computed": true
            },
            "value": {
              "Type": "String",
              "Description": "A user value",
              "Computed": true
            }
          }
        }
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to"
      }
    },
    "scaleway_instance_volume": {
      "from_snapshot_id": {
        "Type": "String",
        "Description": "Create a volume based on a image",
        "Computed": true
      },
      "from_volume_id": {
        "Type": "String",
        "Description": "Create a copy of an existing volume",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the volume",
        "ConflictsWith": [
          "volume_id"
        ]
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "server_id": {
        "Type": "String",
        "Description": "The server associated with this volume",
        "Computed": true
      },
      "size_in_gb": {
        "Type": "Int",
        "Description": "The size of the volume in gigabyte",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Description": "The volume type",
        "Computed": true
      },
      "volume_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the volume",
        "ConflictsWith": [
          "name"
        ]
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to"
      }
    },
    "scaleway_marketplace_image_beta": {
      "instance_type": {
        "Type": "String",
        "Optional": true,
        "Description": "The instance commercial type of the desired image",
        "Default": {
          "Type": "string",
          "Value": "DEV1-S"
        }
      },
      "label": {
        "Type": "String",
        "Required": true,
        "Description": "Exact label of the desired image"
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_registry_image_beta": {
      "image_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the registry image",
        "ConflictsWith": [
          "name"
        ]
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the registry image",
        "ConflictsWith": [
          "image_id"
        ]
      },
      "namespace_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The namespace ID of the registry image",
        "Computed": true
      },
      "organization_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region you want to attach the resource to",
        "Computed": true
      },
      "size": {
        "Type": "Int",
        "Description": "The size of the registry image",
        "Computed": true
      },
      "tags": {
        "Type": "List",
        "Optional": true,
        "Description": "The tags associated with the registry image",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "visibility": {
        "Type": "String",
        "Description": "The visibility policy of the registry image",
        "Computed": true
      }
    },
    "scaleway_registry_namespace_beta": {
      "description": {
        "Type": "String",
        "Description": "The description of the container registry namespace",
        "Computed": true
      },
      "endpoint": {
        "Type": "String",
        "Description": "The endpoint reachable by docker",
        "Computed": true
      },
      "is_public": {
        "Type": "Bool",
        "Description": "Define the default visibity policy",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the container registry namespace",
        "ConflictsWith": [
          "namespace_id"
        ]
      },
      "namespace_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the registry namespace",
        "ConflictsWith": [
          "name"
        ]
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region you want to attach the resource to"
      }
    },
    "scaleway_security_group": {
      "description": {
        "Type": "String",
        "Computed": true
      },
      "enable_default_security": {
        "Type": "Bool",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the security group"
      }
    },
    "scaleway_volume": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "the name of the volume"
      },
      "server": {
        "Type": "String",
        "Computed": true
      },
      "size_in_gb": {
        "Type": "Int",
        "Description": "the size of the volume in GB",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Description": "the type of backing storage",
        "Computed": true
      }
    }
  }
}