{
  ".schema_version": "2",
  ".sdk_type": "terraform-plugin-sdk-v2",
  "name": "scaleway",
  "type": "provider",
  "version": "v2.1.0",
  "provider": {
    "access_key": {
      "Type": "String",
      "Optional": true,
      "Description": "The Scaleway access key."
    },
    "api_url": {
      "Type": "String",
      "Optional": true,
      "Description": "The Scaleway API URL to use."
    },
    "project_id": {
      "Type": "String",
      "Optional": true,
      "Description": "The Scaleway project ID."
    },
    "region": {
      "Type": "String",
      "Optional": true,
      "Description": "The region you want to attach the resource to",
      "Computed": true
    },
    "secret_key": {
      "Type": "String",
      "Optional": true,
      "Description": "The Scaleway secret Key."
    },
    "zone": {
      "Type": "String",
      "Optional": true,
      "Description": "The zone you want to attach the resource to",
      "Computed": true
    }
  },
  "resources": {
    "scaleway_account_ssh_key": {
      "__timeouts__": [
        "default"
      ],
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the SSH key"
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "public_key": {
        "Type": "String",
        "Required": true,
        "Description": "The public SSH key"
      }
    },
    "scaleway_apple_silicon_server": {
      "__timeouts__": [
        "default"
      ],
      "created_at": {
        "Type": "String",
        "Description": "The date and time of the creation of the server",
        "Computed": true
      },
      "deletable_at": {
        "Type": "String",
        "Description": "The minimal date and time on which you can delete this server due to Apple licence",
        "Computed": true
      },
      "ip": {
        "Type": "String",
        "Description": "IPv4 address of the server",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the server",
        "Computed": true
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "Type of the server"
      },
      "updated_at": {
        "Type": "String",
        "Description": "The date and time of the last update of the server",
        "Computed": true
      },
      "vnc_url": {
        "Type": "String",
        "Description": "VNC url use to connect remotely to the desktop GUI",
        "Computed": true
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_baremetal_server": {
      "__timeouts__": [
        "default"
      ],
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Some description to associate to the server, max 255 characters"
      },
      "domain": {
        "Type": "String",
        "Computed": true
      },
      "hostname": {
        "Type": "String",
        "Optional": true,
        "Description": "Hostname of the server"
      },
      "ips": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "String",
              "Description": "The IP address of the IP",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Description": "The ID of the IP",
              "Computed": true
            },
            "reverse": {
              "Type": "String",
              "Description": "The Reverse of the IP",
              "Computed": true
            },
            "version": {
              "Type": "String",
              "Description": "The version of the IP",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the server",
        "Computed": true
      },
      "offer": {
        "Type": "String",
        "Required": true,
        "Description": "ID or name of the server offer"
      },
      "offer_id": {
        "Type": "String",
        "Description": "ID of the server offer",
        "Computed": true
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "os": {
        "Type": "String",
        "Required": true,
        "Description": "The base image of the server"
      },
      "os_id": {
        "Type": "String",
        "Description": "The base image ID of the server",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "ssh_key_ids": {
        "Type": "List",
        "Required": true,
        "Description": "Array of SSH key IDs allowed to SSH to the server",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags": {
        "Type": "List",
        "Optional": true,
        "Description": "Array of tags to associate with the server",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_instance_ip": {
      "__timeouts__": [
        "default"
      ],
      "address": {
        "Type": "String",
        "Description": "The IP address",
        "Computed": true
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "reverse": {
        "Type": "String",
        "Description": "The reverse DNS for this IP",
        "Computed": true
      },
      "server_id": {
        "Type": "String",
        "Description": "The server associated with this IP",
        "Computed": true
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_instance_ip_reverse_dns": {
      "__timeouts__": [
        "default"
      ],
      "ip_id": {
        "Type": "String",
        "Required": true,
        "Description": "The IP ID or IP address"
      },
      "reverse": {
        "Type": "String",
        "Required": true,
        "Description": "The reverse DNS for this IP"
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_instance_placement_group": {
      "__timeouts__": [
        "default"
      ],
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the placement group",
        "Computed": true
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "policy_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "One of the two policy_mode may be selected: enforced or optional.",
        "Default": {
          "Type": "instance.PlacementGroupPolicyMode",
          "Value": "optional"
        }
      },
      "policy_respected": {
        "Type": "Bool",
        "Description": "Is true when the policy is respected.",
        "Computed": true
      },
      "policy_type": {
        "Type": "String",
        "Optional": true,
        "Description": "The operating mode is selected by a policy_type",
        "Default": {
          "Type": "string",
          "Value": "max_availability"
        }
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_instance_private_nic": {
      "mac_address": {
        "Type": "String",
        "Description": "MAC address of the NIC",
        "Computed": true
      },
      "private_network_id": {
        "Type": "String",
        "Required": true,
        "Description": "The private network ID"
      },
      "server_id": {
        "Type": "String",
        "Required": true,
        "Description": "The server ID"
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_instance_security_group": {
      "__timeouts__": [
        "default"
      ],
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The description of the security group"
      },
      "enable_default_security": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable blocking of SMTP on IPv4 and IPv6",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "external_rules": {
        "Type": "Bool",
        "Optional": true,
        "ConflictsWith": [
          "inbound_rule",
          "outbound_rule"
        ],
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "inbound_default_policy": {
        "Type": "String",
        "Optional": true,
        "Description": "Default inbound traffic policy for this security group",
        "Default": {
          "Type": "string",
          "Value": "accept"
        }
      },
      "inbound_rule": {
        "Type": "List",
        "Optional": true,
        "Description": "Inbound rules for this security group",
        "ConflictsWith": [
          "external_rules"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Required": true,
              "Description": "Action when rule match request (drop or accept)"
            },
            "ip": {
              "Type": "String",
              "Optional": true,
              "Description": "Ip address for this rule (e.g: 1.1.1.1). Only one of ip or ip_range should be provided"
            },
            "ip_range": {
              "Type": "String",
              "Optional": true,
              "Description": "Ip range for this rule (e.g: 192.168.1.0/24). Only one of ip or ip_range should be provided"
            },
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "Network port for this rule"
            },
            "port_range": {
              "Type": "String",
              "Optional": true,
              "Description": "Computed port range for this rule (e.g: 1-1024, 22-22)"
            },
            "protocol": {
              "Type": "String",
              "Optional": true,
              "Description": "Protocol for this rule (TCP, UDP, ICMP or ANY)",
              "Default": {
                "Type": "string",
                "Value": "TCP"
              }
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the security group",
        "Computed": true
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "outbound_default_policy": {
        "Type": "String",
        "Optional": true,
        "Description": "Default outbound traffic policy for this security group",
        "Default": {
          "Type": "string",
          "Value": "accept"
        }
      },
      "outbound_rule": {
        "Type": "List",
        "Optional": true,
        "Description": "Outbound rules for this security group",
        "ConflictsWith": [
          "external_rules"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Required": true,
              "Description": "Action when rule match request (drop or accept)"
            },
            "ip": {
              "Type": "String",
              "Optional": true,
              "Description": "Ip address for this rule (e.g: 1.1.1.1). Only one of ip or ip_range should be provided"
            },
            "ip_range": {
              "Type": "String",
              "Optional": true,
              "Description": "Ip range for this rule (e.g: 192.168.1.0/24). Only one of ip or ip_range should be provided"
            },
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "Network port for this rule"
            },
            "port_range": {
              "Type": "String",
              "Optional": true,
              "Description": "Computed port range for this rule (e.g: 1-1024, 22-22)"
            },
            "protocol": {
              "Type": "String",
              "Optional": true,
              "Description": "Protocol for this rule (TCP, UDP, ICMP or ANY)",
              "Default": {
                "Type": "string",
                "Value": "TCP"
              }
            }
          }
        }
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "stateful": {
        "Type": "Bool",
        "Optional": true,
        "Description": "The stateful value of the security group",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_instance_security_group_rules": {
      "__timeouts__": [
        "default"
      ],
      "inbound_rule": {
        "Type": "List",
        "Optional": true,
        "Description": "Inbound rules for this set of security group rules",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Required": true,
              "Description": "Action when rule match request (drop or accept)"
            },
            "ip": {
              "Type": "String",
              "Optional": true,
              "Description": "Ip address for this rule (e.g: 1.1.1.1). Only one of ip or ip_range should be provided"
            },
            "ip_range": {
              "Type": "String",
              "Optional": true,
              "Description": "Ip range for this rule (e.g: 192.168.1.0/24). Only one of ip or ip_range should be provided"
            },
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "Network port for this rule"
            },
            "port_range": {
              "Type": "String",
              "Optional": true,
              "Description": "Computed port range for this rule (e.g: 1-1024, 22-22)"
            },
            "protocol": {
              "Type": "String",
              "Optional": true,
              "Description": "Protocol for this rule (TCP, UDP, ICMP or ANY)",
              "Default": {
                "Type": "string",
                "Value": "TCP"
              }
            }
          }
        }
      },
      "outbound_rule": {
        "Type": "List",
        "Optional": true,
        "Description": "Outbound rules for this set of security group rules",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Required": true,
              "Description": "Action when rule match request (drop or accept)"
            },
            "ip": {
              "Type": "String",
              "Optional": true,
              "Description": "Ip address for this rule (e.g: 1.1.1.1). Only one of ip or ip_range should be provided"
            },
            "ip_range": {
              "Type": "String",
              "Optional": true,
              "Description": "Ip range for this rule (e.g: 192.168.1.0/24). Only one of ip or ip_range should be provided"
            },
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "Network port for this rule"
            },
            "port_range": {
              "Type": "String",
              "Optional": true,
              "Description": "Computed port range for this rule (e.g: 1-1024, 22-22)"
            },
            "protocol": {
              "Type": "String",
              "Optional": true,
              "Description": "Protocol for this rule (TCP, UDP, ICMP or ANY)",
              "Default": {
                "Type": "string",
                "Value": "TCP"
              }
            }
          }
        }
      },
      "security_group_id": {
        "Type": "String",
        "Required": true,
        "Description": "The security group associated with this volume"
      }
    },
    "scaleway_instance_server": {
      "__timeouts__": [
        "default"
      ],
      "additional_volume_ids": {
        "Type": "List",
        "Optional": true,
        "Description": "The additional volumes attached to the server",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "boot_type": {
        "Type": "String",
        "Optional": true,
        "Description": "The boot type of the server",
        "Default": {
          "Type": "instance.BootType",
          "Value": "local"
        }
      },
      "bootscript_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the target bootscript (set boot_type to bootscript)",
        "Computed": true
      },
      "cloud_init": {
        "Type": "String",
        "Optional": true,
        "Description": "The cloud init script associated with this server"
      },
      "enable_dynamic_ip": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable dynamic IP on the server",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "enable_ipv6": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Determines if IPv6 is enabled for the server",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "image": {
        "Type": "String",
        "Required": true,
        "Description": "The UUID or the label of the base image used by the server"
      },
      "ip_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the reserved IP for the server"
      },
      "ipv6_address": {
        "Type": "String",
        "Description": "The default public IPv6 address routed to the server.",
        "Computed": true
      },
      "ipv6_gateway": {
        "Type": "String",
        "Description": "The IPv6 gateway address",
        "Computed": true
      },
      "ipv6_prefix_length": {
        "Type": "Int",
        "Description": "The IPv6 prefix length routed to the server.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the server",
        "Computed": true
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "placement_group_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The placement group the server is attached to"
      },
      "placement_group_policy_respected": {
        "Type": "Bool",
        "Description": "True when the placement group policy is respected",
        "Computed": true
      },
      "private_ip": {
        "Type": "String",
        "Description": "The Scaleway internal IP address of the server",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "public_ip": {
        "Type": "String",
        "Description": "The public IPv4 address of the server",
        "Computed": true
      },
      "root_volume": {
        "Type": "List",
        "Optional": true,
        "Description": "Root volume attached to the server on creation",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "delete_on_termination": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Force deletion of the root volume on instance termination",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "size_in_gb": {
              "Type": "Int",
              "Optional": true,
              "Description": "Size of the root volume in gigabytes",
              "Computed": true
            },
            "volume_id": {
              "Type": "String",
              "Description": "Volume ID of the root volume",
              "Computed": true
            }
          }
        }
      },
      "security_group_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The security group the server is attached to",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "The state of the server should be: started, stopped, standby",
        "Default": {
          "Type": "string",
          "Value": "started"
        }
      },
      "tags": {
        "Type": "List",
        "Optional": true,
        "Description": "The tags associated with the server",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The instance type of the server"
      },
      "user_data": {
        "Type": "Map",
        "Optional": true,
        "Description": "The user data associated with the server",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_instance_snapshot": {
      "__timeouts__": [
        "default"
      ],
      "created_at": {
        "Type": "String",
        "Description": "The date and time of the creation of the snapshot",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the snapshot",
        "Computed": true
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "size_in_gb": {
        "Type": "Int",
        "Description": "The size of the snapshot in gigabyte",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Description": "The volume type of the snapshot",
        "Computed": true
      },
      "volume_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of the volume to take a snapshot from"
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_instance_volume": {
      "__timeouts__": [
        "default"
      ],
      "from_snapshot_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Create a volume based on a image",
        "ConflictsWith": [
          "from_volume_id",
          "size_in_gb"
        ]
      },
      "from_volume_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Create a copy of an existing volume",
        "ConflictsWith": [
          "from_snapshot_id",
          "size_in_gb"
        ]
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the volume",
        "Computed": true
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "server_id": {
        "Type": "String",
        "Description": "The server associated with this volume",
        "Computed": true
      },
      "size_in_gb": {
        "Type": "Int",
        "Optional": true,
        "Description": "The size of the volume in gigabyte",
        "ConflictsWith": [
          "from_snapshot_id",
          "from_volume_id"
        ]
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The volume type"
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_iot_device": {
      "allow_insecure": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Allow plain and server-authenticated SSL connections in addition to mutually-authenticated ones"
      },
      "allow_multiple_connections": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Allow multiple connections"
      },
      "certificate": {
        "Type": "List",
        "Optional": true,
        "Description": "Certificate section of the device",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "crt": {
              "Type": "String",
              "Description": "X509 PEM encoded certificate of the device",
              "Computed": true
            },
            "key": {
              "Type": "String",
              "Description": "X509 PEM encoded key of the device",
              "Computed": true
            }
          }
        }
      },
      "created_at": {
        "Type": "String",
        "Description": "The date and time of the creation of the device",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The description of the device"
      },
      "hub_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the hub on which this device will be created"
      },
      "is_connected": {
        "Type": "Bool",
        "Description": "The MQTT connection status of the device",
        "Computed": true
      },
      "last_activity_at": {
        "Type": "String",
        "Description": "The date and time of last MQTT activity of the device",
        "Computed": true
      },
      "message_filters": {
        "Type": "List",
        "Optional": true,
        "Description": "Rules to authorize or deny the device to publish/subscribe to specific topics",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "publish": {
              "Type": "List",
              "Optional": true,
              "Description": "Rule to restrict topics the device can publish to",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Publish message filter policy",
                    "Default": {
                      "Type": "string",
                      "Value": "reject"
                    }
                  },
                  "topics": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of topics in the set",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "subscribe": {
              "Type": "List",
              "Optional": true,
              "Description": "Rule to restrict topics the device can subscribe to",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Subscribe message filter policy",
                    "Default": {
                      "Type": "string",
                      "Value": "reject"
                    }
                  },
                  "topics": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of topics in the set",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the device"
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region you want to attach the resource to",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "The status of the device",
        "Computed": true
      },
      "updated_at": {
        "Type": "String",
        "Description": "The date and time of the last update of the device",
        "Computed": true
      }
    },
    "scaleway_iot_hub": {
      "connected_device_count": {
        "Type": "Int",
        "Description": "The current number of connected devices in the Hub",
        "Computed": true
      },
      "created_at": {
        "Type": "String",
        "Description": "The date and time of the creation of the IoT Hub",
        "Computed": true
      },
      "device_auto_provisioning": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Wether to enable the device auto provisioning or not"
      },
      "device_count": {
        "Type": "Int",
        "Description": "The number of registered devices in the Hub",
        "Computed": true
      },
      "disable_events": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to enable the hub events or not"
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to enable the hub or not",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "endpoint": {
        "Type": "String",
        "Description": "The endpoint to connect the devices to",
        "Computed": true
      },
      "events_topic_prefix": {
        "Type": "String",
        "Optional": true,
        "Description": "Topic prefix for the hub events",
        "Default": {
          "Type": "string",
          "Value": "$SCW/events"
        }
      },
      "hub_ca": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom user provided certificate authority"
      },
      "hub_ca_challenge": {
        "Type": "String",
        "Optional": true,
        "Description": "Challenge certificate for the user provided hub CA"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the hub"
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "product_plan": {
        "Type": "String",
        "Required": true,
        "Description": "The product plan of the hub"
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region you want to attach the resource to",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "The status of the hub",
        "Computed": true
      },
      "updated_at": {
        "Type": "String",
        "Description": "The date and time of the last update of the IoT Hub",
        "Computed": true
      }
    },
    "scaleway_iot_network": {
      "created_at": {
        "Type": "String",
        "Description": "The date and time of the creation of the network",
        "Computed": true
      },
      "endpoint": {
        "Type": "String",
        "Description": "The endpoint to use when interacting with the network",
        "Computed": true
      },
      "hub_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the hub on which this network will be created"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the network"
      },
      "secret": {
        "Type": "String",
        "Description": "The endpoint key to keep secret",
        "Computed": true
      },
      "topic_prefix": {
        "Type": "String",
        "Optional": true,
        "Description": "The prefix that will be prepended to all topics for this Network"
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The type of the network"
      }
    },
    "scaleway_iot_route": {
      "created_at": {
        "Type": "String",
        "Description": "The date and time of the creation of the IoT Route",
        "Computed": true
      },
      "database": {
        "Type": "List",
        "Optional": true,
        "Description": "Database Route parameters",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dbname": {
              "Type": "String",
              "Required": true,
              "Description": "The database name"
            },
            "host": {
              "Type": "String",
              "Required": true,
              "Description": "The database hostname"
            },
            "password": {
              "Type": "String",
              "Required": true,
              "Description": "The database password"
            },
            "port": {
              "Type": "Int",
              "Required": true,
              "Description": "The database port"
            },
            "query": {
              "Type": "String",
              "Required": true,
              "Description": "SQL query to be executed ($TOPIC and $PAYLOAD variables are available, see documentation)"
            },
            "username": {
              "Type": "String",
              "Required": true,
              "Description": "The database username"
            }
          }
        }
      },
      "hub_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the route's hub"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the route"
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region you want to attach the resource to",
        "Computed": true
      },
      "rest": {
        "Type": "List",
        "Optional": true,
        "Description": "Rest Route parameters",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "headers": {
              "Type": "Map",
              "Required": true,
              "Description": "The HTTP call extra headers",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "uri": {
              "Type": "String",
              "Required": true,
              "Description": "The URI of the REST endpoint"
            },
            "verb": {
              "Type": "String",
              "Required": true,
              "Description": "The HTTP Verb used to call REST URI"
            }
          }
        }
      },
      "s3": {
        "Type": "List",
        "Optional": true,
        "Description": "S3 Route parameters",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bucket_name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the S3 route's destination bucket"
            },
            "bucket_region": {
              "Type": "String",
              "Required": true,
              "Description": "The region of the S3 route's destination bucket"
            },
            "object_prefix": {
              "Type": "String",
              "Optional": true,
              "Description": "The string to prefix object names with"
            },
            "strategy": {
              "Type": "String",
              "Required": true,
              "Description": "How the S3 route's objects will be created: one per topic or one per message"
            }
          }
        }
      },
      "topic": {
        "Type": "String",
        "Required": true,
        "Description": "The Topic the route subscribes to (wildcards allowed)"
      }
    },
    "scaleway_k8s_cluster": {
      "__timeouts__": [
        "default"
      ],
      "admission_plugins": {
        "Type": "List",
        "Optional": true,
        "Description": "The list of admission plugins to enable on the cluster",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "apiserver_cert_sans": {
        "Type": "List",
        "Optional": true,
        "Description": "Additional Subject Alternative Names for the Kubernetes API server certificate",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "apiserver_url": {
        "Type": "String",
        "Description": "Kubernetes API server URL",
        "Computed": true
      },
      "auto_upgrade": {
        "Type": "List",
        "Optional": true,
        "Description": "The auto upgrade configuration for the cluster",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "enable": {
              "Type": "Bool",
              "Required": true,
              "Description": "Enables the Kubernetes patch version auto upgrade"
            },
            "maintenance_window_day": {
              "Type": "String",
              "Required": true,
              "Description": "Day of the maintenance window"
            },
            "maintenance_window_start_hour": {
              "Type": "Int",
              "Required": true,
              "Description": "Start hour of the 2-hour maintenance window"
            }
          }
        }
      },
      "autoscaler_config": {
        "Type": "List",
        "Optional": true,
        "Description": "The autoscaler configuration for the cluster",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "balance_similar_node_groups": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Detect similar node groups and balance the number of nodes between them",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "disable_scale_down": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Disable the scale down feature of the autoscaler",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "estimator": {
              "Type": "String",
              "Optional": true,
              "Description": "Type of resource estimator to be used in scale up",
              "Default": {
                "Type": "string",
                "Value": "binpacking"
              }
            },
            "expander": {
              "Type": "String",
              "Optional": true,
              "Description": "Type of node group expander to be used in scale up",
              "Default": {
                "Type": "string",
                "Value": "random"
              }
            },
            "expendable_pods_priority_cutoff": {
              "Type": "Int",
              "Optional": true,
              "Description": "Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable",
              "Default": {
                "Type": "int",
                "Value": "-10"
              }
            },
            "ignore_daemonsets_utilization": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Ignore DaemonSet pods when calculating resource utilization for scaling down",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "max_graceful_termination_sec": {
              "Type": "Int",
              "Optional": true,
              "Description": "Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node",
              "Default": {
                "Type": "int",
                "Value": "600"
              }
            },
            "scale_down_delay_after_add": {
              "Type": "String",
              "Optional": true,
              "Description": "How long after scale up that scale down evaluation resumes",
              "Default": {
                "Type": "string",
                "Value": "10m"
              }
            },
            "scale_down_unneeded_time": {
              "Type": "String",
              "Optional": true,
              "Description": "How long a node should be unneeded before it is eligible for scale down",
              "Default": {
                "Type": "string",
                "Value": "10m"
              }
            },
            "scale_down_utilization_threshold": {
              "Type": "Float",
              "Optional": true,
              "Description": "Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down",
              "Default": {
                "Type": "float64",
                "Value": "0.5"
              }
            }
          }
        }
      },
      "cni": {
        "Type": "String",
        "Required": true,
        "Description": "The CNI plugin of the cluster"
      },
      "created_at": {
        "Type": "String",
        "Description": "The date and time of the creation of the Kubernetes cluster",
        "Computed": true
      },
      "delete_additional_resources": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Delete additional resources like block volumes and loadbalancers on cluster deletion",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The description of the cluster",
        "Default": {
          "Type": "string"
        }
      },
      "feature_gates": {
        "Type": "List",
        "Optional": true,
        "Description": "The list of feature gates to enable on the cluster",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "kubeconfig": {
        "Type": "List",
        "Description": "The kubeconfig configuration file of the Kubernetes cluster",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cluster_ca_certificate": {
              "Type": "String",
              "Description": "The kubernetes cluster CA certificate",
              "Computed": true
            },
            "config_file": {
              "Type": "String",
              "Description": "The whole kubeconfig file",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "The kubernetes master URL",
              "Computed": true
            },
            "token": {
              "Type": "String",
              "Description": "The kubernetes cluster admin token",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the cluster"
      },
      "open_id_connect_config": {
        "Type": "List",
        "Optional": true,
        "Description": "The OpenID Connect configuration of the cluster",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "client_id": {
              "Type": "String",
              "Required": true,
              "Description": "A client id that all tokens must be issued for"
            },
            "groups_claim": {
              "Type": "List",
              "Optional": true,
              "Description": "JWT claim to use as the user's group",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "groups_prefix": {
              "Type": "String",
              "Optional": true,
              "Description": "Prefix prepended to group claims"
            },
            "issuer_url": {
              "Type": "String",
              "Required": true,
              "Description": "URL of the provider which allows the API server to discover public signing keys"
            },
            "required_claim": {
              "Type": "List",
              "Optional": true,
              "Description": "Multiple key=value pairs that describes a required claim in the ID Token",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "username_claim": {
              "Type": "String",
              "Optional": true,
              "Description": "JWT claim to use as the user name"
            },
            "username_prefix": {
              "Type": "String",
              "Optional": true,
              "Description": "Prefix prepended to username"
            }
          }
        }
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region you want to attach the resource to",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "The status of the cluster",
        "Computed": true
      },
      "tags": {
        "Type": "List",
        "Optional": true,
        "Description": "The tags associated with the cluster",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "updated_at": {
        "Type": "String",
        "Description": "The date and time of the last update of the Kubernetes cluster",
        "Computed": true
      },
      "upgrade_available": {
        "Type": "Bool",
        "Description": "True if an upgrade is available",
        "Computed": true
      },
      "version": {
        "Type": "String",
        "Required": true,
        "Description": "The version of the cluster"
      },
      "wildcard_dns": {
        "Type": "String",
        "Description": "Wildcard DNS pointing to all the ready nodes",
        "Computed": true
      }
    },
    "scaleway_k8s_pool": {
      "__timeouts__": [
        "default"
      ],
      "autohealing": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable the autohealing on the pool",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "autoscaling": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable the autoscaling on the pool",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "cluster_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the cluster on which this pool will be created"
      },
      "container_runtime": {
        "Type": "String",
        "Optional": true,
        "Description": "Container runtime for the pool",
        "Default": {
          "Type": "string",
          "Value": "containerd"
        }
      },
      "created_at": {
        "Type": "String",
        "Description": "The date and time of the creation of the pool",
        "Computed": true
      },
      "current_size": {
        "Type": "Int",
        "Description": "The actual size of the pool",
        "Computed": true
      },
      "kubelet_args": {
        "Type": "Map",
        "Optional": true,
        "Description": "The Kubelet arguments to be used by this pool",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "max_size": {
        "Type": "Int",
        "Optional": true,
        "Description": "Maximum size of the pool",
        "Computed": true
      },
      "min_size": {
        "Type": "Int",
        "Optional": true,
        "Description": "Minimun size of the pool",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the cluster"
      },
      "node_type": {
        "Type": "String",
        "Required": true,
        "Description": "Server type of the pool servers"
      },
      "nodes": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Description": "The name of the node",
              "Computed": true
            },
            "public_ip": {
              "Type": "String",
              "Description": "The public IPv4 address of the node",
              "Computed": true
            },
            "public_ip_v6": {
              "Type": "String",
              "Description": "The public IPv6 address of the node",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "The status of the node",
              "Computed": true
            }
          }
        }
      },
      "placement_group_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the placement group"
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region you want to attach the resource to",
        "Computed": true
      },
      "size": {
        "Type": "Int",
        "Required": true,
        "Description": "Size of the pool"
      },
      "status": {
        "Type": "String",
        "Description": "The status of the pool",
        "Computed": true
      },
      "tags": {
        "Type": "List",
        "Optional": true,
        "Description": "The tags associated with the pool",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "updated_at": {
        "Type": "String",
        "Description": "The date and time of the last update of the pool",
        "Computed": true
      },
      "upgrade_policy": {
        "Type": "List",
        "Optional": true,
        "Description": "The Pool upgrade policy",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "max_surge": {
              "Type": "Int",
              "Optional": true,
              "Description": "The maximum number of nodes to be created during the upgrade",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "max_unavailable": {
              "Type": "Int",
              "Optional": true,
              "Description": "The maximum number of nodes that can be not ready at the same time",
              "Default": {
                "Type": "int",
                "Value": "1"
              }
            }
          }
        }
      },
      "version": {
        "Type": "String",
        "Description": "The Kubernetes version of the pool",
        "Computed": true
      },
      "wait_for_pool_ready": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to wait for the pool to be ready",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_lb": {
      "__timeouts__": [
        "default"
      ],
      "ip_address": {
        "Type": "String",
        "Description": "The load-balance public IP address",
        "Computed": true
      },
      "ip_id": {
        "Type": "String",
        "Required": true,
        "Description": "The load-balance public IP ID"
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the lb",
        "Computed": true
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Description": "The region of the resource",
        "Computed": true
      },
      "tags": {
        "Type": "List",
        "Optional": true,
        "Description": "Array of tags to associate with the load-balancer",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The type of load-balancer you want to create"
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_lb_backend": {
      "__timeouts__": [
        "default"
      ],
      "forward_port": {
        "Type": "Int",
        "Required": true,
        "Description": "User sessions will be forwarded to this port of backend servers"
      },
      "forward_port_algorithm": {
        "Type": "String",
        "Optional": true,
        "Description": "Load balancing algorithm",
        "Default": {
          "Type": "string",
          "Value": "roundrobin"
        }
      },
      "forward_protocol": {
        "Type": "String",
        "Required": true,
        "Description": "Backend protocol"
      },
      "health_check_delay": {
        "Type": "String",
        "Optional": true,
        "Description": "Interval between two HC requests",
        "Default": {
          "Type": "string",
          "Value": "60s"
        }
      },
      "health_check_http": {
        "Type": "List",
        "Optional": true,
        "MaxItems": 1,
        "ConflictsWith": [
          "health_check_tcp",
          "health_check_https"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "code": {
              "Type": "Int",
              "Optional": true,
              "Description": "The expected HTTP status code",
              "Default": {
                "Type": "int",
                "Value": "200"
              }
            },
            "method": {
              "Type": "String",
              "Optional": true,
              "Description": "The HTTP method to use for HC requests",
              "Default": {
                "Type": "string",
                "Value": "GET"
              }
            },
            "uri": {
              "Type": "String",
              "Required": true,
              "Description": "The HTTP endpoint URL to call for HC requests"
            }
          }
        }
      },
      "health_check_https": {
        "Type": "List",
        "Optional": true,
        "MaxItems": 1,
        "ConflictsWith": [
          "health_check_tcp",
          "health_check_http"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "code": {
              "Type": "Int",
              "Optional": true,
              "Description": "The expected HTTP status code",
              "Default": {
                "Type": "int",
                "Value": "200"
              }
            },
            "method": {
              "Type": "String",
              "Optional": true,
              "Description": "The HTTP method to use for HC requests",
              "Default": {
                "Type": "string",
                "Value": "GET"
              }
            },
            "uri": {
              "Type": "String",
              "Required": true,
              "Description": "The HTTPS endpoint URL to call for HC requests"
            }
          }
        }
      },
      "health_check_max_retries": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of allowed failed HC requests before the backend server is marked down",
        "Default": {
          "Type": "int",
          "Value": "2"
        }
      },
      "health_check_port": {
        "Type": "Int",
        "Optional": true,
        "Description": "Port the HC requests will be send to. Default to `forward_port`",
        "Computed": true
      },
      "health_check_tcp": {
        "Type": "List",
        "Optional": true,
        "Computed": true,
        "MaxItems": 1,
        "ConflictsWith": [
          "health_check_http",
          "health_check_https"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "health_check_timeout": {
        "Type": "String",
        "Optional": true,
        "Description": "Timeout before we consider a HC request failed",
        "Default": {
          "Type": "string",
          "Value": "30s"
        }
      },
      "lb_id": {
        "Type": "String",
        "Required": true,
        "Description": "The load-balancer ID"
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the backend",
        "Computed": true
      },
      "on_marked_down_action": {
        "Type": "String",
        "Optional": true,
        "Description": "Modify what occurs when a backend server is marked down",
        "Default": {
          "Type": "string",
          "Value": "none"
        }
      },
      "proxy_protocol": {
        "Type": "String",
        "Optional": true,
        "Description": "Type of PROXY protocol to enable",
        "Default": {
          "Type": "string",
          "Value": "none"
        }
      },
      "send_proxy_v2": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enables PROXY protocol version 2",
        "Deprecated": "Please use proxy_protocol instead",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "server_ips": {
        "Type": "List",
        "Optional": true,
        "Description": "Backend server IP addresses list (IPv4 or IPv6)",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "sticky_sessions": {
        "Type": "String",
        "Optional": true,
        "Description": "Load balancing algorithm",
        "Default": {
          "Type": "string",
          "Value": "none"
        }
      },
      "sticky_sessions_cookie_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cookie name for for sticky sessions"
      },
      "timeout_connect": {
        "Type": "String",
        "Optional": true,
        "Description": "Maximum initial server connection establishment time"
      },
      "timeout_server": {
        "Type": "String",
        "Optional": true,
        "Description": "Maximum server connection inactivity time"
      },
      "timeout_tunnel": {
        "Type": "String",
        "Optional": true,
        "Description": "Maximum tunnel inactivity time"
      }
    },
    "scaleway_lb_certificate": {
      "__timeouts__": [
        "default"
      ],
      "common_name": {
        "Type": "String",
        "Description": "The main domain name of the certificate",
        "Computed": true
      },
      "custom_certificate": {
        "Type": "List",
        "Optional": true,
        "Description": "The custom type certificate type configuration",
        "MaxItems": 1,
        "ConflictsWith": [
          "letsencrypt"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "certificate_chain": {
              "Type": "String",
              "Required": true,
              "Description": "The full PEM-formatted certificate chain"
            }
          }
        }
      },
      "fingerprint": {
        "Type": "String",
        "Description": "The identifier (SHA-1) of the certificate",
        "Computed": true
      },
      "lb_id": {
        "Type": "String",
        "Required": true,
        "Description": "The load-balancer ID"
      },
      "letsencrypt": {
        "Type": "List",
        "Optional": true,
        "Description": "The Let's Encrypt type certificate configuration",
        "MaxItems": 1,
        "ConflictsWith": [
          "custom_certificate"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "common_name": {
              "Type": "String",
              "Required": true,
              "Description": "The main domain name of the certificate"
            },
            "subject_alternative_name": {
              "Type": "List",
              "Optional": true,
              "Description": "The alternative domain names of the certificate",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the load-balancer certificate",
        "Computed": true
      },
      "not_valid_after": {
        "Type": "String",
        "Description": "The not valid after validity bound timestamp",
        "Computed": true
      },
      "not_valid_before": {
        "Type": "String",
        "Description": "The not valid before validity bound timestamp",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "The status of certificate",
        "Computed": true
      },
      "subject_alternative_name": {
        "Type": "List",
        "Description": "The alternative domain names of the certificate",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "scaleway_lb_frontend": {
      "__timeouts__": [
        "default"
      ],
      "acl": {
        "Type": "List",
        "Optional": true,
        "Description": "ACL rules",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "List",
              "Required": true,
              "Description": "Action to undertake when an ACL filter matches",
              "MaxItems": 1,
              "MinItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "type": {
                    "Type": "String",
                    "Required": true,
                    "Description": "The action type"
                  }
                }
              }
            },
            "match": {
              "Type": "List",
              "Required": true,
              "Description": "The ACL match rule",
              "MaxItems": 1,
              "MinItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "http_filter": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The HTTP filter to match",
                    "Default": {
                      "Type": "string",
                      "Value": "acl_http_filter_none"
                    }
                  },
                  "http_filter_value": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "A list of possible values to match for the given HTTP filter",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "invert": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "If set to true, the condition will be of type \"unless\""
                  },
                  "ip_subnet": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "A list of IPs or CIDR v4/v6 addresses of the client of the session to match",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "The ACL name",
              "Computed": true
            }
          }
        }
      },
      "backend_id": {
        "Type": "String",
        "Required": true,
        "Description": "The load-balancer backend ID"
      },
      "certificate_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Certificate ID"
      },
      "inbound_port": {
        "Type": "Int",
        "Required": true,
        "Description": "TCP port to listen on the front side"
      },
      "lb_id": {
        "Type": "String",
        "Required": true,
        "Description": "The load-balancer ID"
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the frontend",
        "Computed": true
      },
      "timeout_client": {
        "Type": "String",
        "Optional": true,
        "Description": "Set the maximum inactivity time on the client side"
      }
    },
    "scaleway_lb_ip": {
      "__timeouts__": [
        "default"
      ],
      "ip_address": {
        "Type": "String",
        "Description": "The load-balancer public IP address",
        "Computed": true
      },
      "lb_id": {
        "Type": "String",
        "Description": "The ID of the loadbalancer attached to this IP, if any",
        "Computed": true
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Description": "The region of the resource",
        "Computed": true
      },
      "reverse": {
        "Type": "String",
        "Optional": true,
        "Description": "The reverse domain name for this IP",
        "Computed": true
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_object_bucket": {
      "__timeouts__": [
        "default"
      ],
      "acl": {
        "Type": "String",
        "Optional": true,
        "Description": "ACL of the bucket: either 'public-read' or 'private'.",
        "Default": {
          "Type": "string",
          "Value": "private"
        }
      },
      "cors_rule": {
        "Type": "List",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "allowed_headers": {
              "Type": "List",
              "Optional": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "allowed_methods": {
              "Type": "List",
              "Required": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "allowed_origins": {
              "Type": "List",
              "Required": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "expose_headers": {
              "Type": "List",
              "Optional": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "max_age_seconds": {
              "Type": "Int",
              "Optional": true
            }
          }
        }
      },
      "endpoint": {
        "Type": "String",
        "Description": "Endpoint of the bucket",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the bucket"
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region you want to attach the resource to",
        "Computed": true
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "The tags associated with this bucket",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "versioning": {
        "Type": "List",
        "Optional": true,
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "enabled": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            }
          }
        }
      }
    },
    "scaleway_rdb_acl": {
      "__timeouts__": [
        "default"
      ],
      "acl_rules": {
        "Type": "List",
        "Required": true,
        "Description": "List of ACL rules to apply",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "description": {
              "Type": "String",
              "Optional": true,
              "Description": "Description of the rule"
            },
            "ip": {
              "Type": "String",
              "Required": true,
              "Description": "Target IP of the rules"
            }
          }
        }
      },
      "instance_id": {
        "Type": "String",
        "Required": true,
        "Description": "Instance on which the ACL is applied"
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_rdb_database": {
      "__timeouts__": [
        "default"
      ],
      "instance_id": {
        "Type": "String",
        "Required": true,
        "Description": "Instance on which the database is created"
      },
      "managed": {
        "Type": "Bool",
        "Description": "Whether or not the database is managed",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Database name"
      },
      "owner": {
        "Type": "String",
        "Description": "User that own the database",
        "Computed": true
      },
      "size": {
        "Type": "String",
        "Description": "Size of the database",
        "Computed": true
      }
    },
    "scaleway_rdb_instance": {
      "__timeouts__": [
        "default"
      ],
      "certificate": {
        "Type": "String",
        "Description": "Certificate of the database instance",
        "Computed": true
      },
      "disable_backup": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Disable automated backup for the database instance",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "endpoint_ip": {
        "Type": "String",
        "Description": "Endpoint IP of the database instance",
        "Computed": true
      },
      "endpoint_port": {
        "Type": "Int",
        "Description": "Endpoint port of the database instance",
        "Computed": true
      },
      "engine": {
        "Type": "String",
        "Required": true,
        "Description": "Database's engine version id"
      },
      "is_ha_cluster": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable or disable high availability for the database instance",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the database instance",
        "Computed": true
      },
      "node_type": {
        "Type": "String",
        "Required": true,
        "Description": "The type of database instance you want to create"
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password for the first user of the database instance"
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "read_replicas": {
        "Type": "List",
        "Description": "Read replicas of the database instance",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip": {
              "Type": "String",
              "Description": "IP of the replica",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Name of the replica",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port of the replica",
              "Computed": true
            }
          }
        }
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region you want to attach the resource to",
        "Computed": true
      },
      "settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Map of engine settings to be set.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags": {
        "Type": "List",
        "Optional": true,
        "Description": "List of tags [\"tag1\", \"tag2\", ...] attached to a database instance",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "user_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier for the first user of the database instance"
      },
      "volume_size_in_gb": {
        "Type": "Int",
        "Optional": true,
        "Description": "Volume size (in GB) when volume_type is not lssd",
        "Computed": true
      },
      "volume_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Type of volume where data are stored",
        "Default": {
          "Type": "rdb.VolumeType",
          "Value": "lssd"
        }
      }
    },
    "scaleway_rdb_user": {
      "__timeouts__": [
        "default"
      ],
      "instance_id": {
        "Type": "String",
        "Required": true,
        "Description": "Instance on which the user is created"
      },
      "is_admin": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Grant admin permissions to database user"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Database user name"
      },
      "password": {
        "Type": "String",
        "Required": true,
        "Description": "Database user password"
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_registry_namespace": {
      "__timeouts__": [
        "default"
      ],
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The description of the container registry namespace"
      },
      "endpoint": {
        "Type": "String",
        "Description": "The endpoint reachable by docker",
        "Computed": true
      },
      "is_public": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Define the default visibity policy"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the container registry namespace"
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_vpc_private_network": {
      "created_at": {
        "Type": "String",
        "Description": "The date and time of the creation of the private network",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the private network"
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "tags": {
        "Type": "List",
        "Optional": true,
        "Description": "The tags associated with private network",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "updated_at": {
        "Type": "String",
        "Description": "The date and time of the last update of the private network",
        "Computed": true
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    }
  },
  "data-sources": {
    "scaleway_account_ssh_key": {
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the SSH key",
        "ConflictsWith": [
          "ssh_key_id"
        ]
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "public_key": {
        "Type": "String",
        "Description": "The public SSH key",
        "Computed": true
      },
      "ssh_key_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the SSH key"
      }
    },
    "scaleway_baremetal_offer": {
      "bandwidth": {
        "Type": "Int",
        "Description": "Available Bandwidth with the offer",
        "Computed": true
      },
      "commercial_range": {
        "Type": "String",
        "Description": "Commercial range of the offer",
        "Computed": true
      },
      "cpu": {
        "Type": "List",
        "Description": "CPU specifications of the offer",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "core_count": {
              "Type": "Int",
              "Description": "Number of cores",
              "Computed": true
            },
            "frequency": {
              "Type": "Int",
              "Description": "Frequency of the CPU",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "CPU name",
              "Computed": true
            },
            "thread_count": {
              "Type": "Int",
              "Description": "Number of threads",
              "Computed": true
            }
          }
        }
      },
      "disk": {
        "Type": "List",
        "Description": "Disk specifications of the offer",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "capacity": {
              "Type": "Int",
              "Description": "Capacity of the disk in byte",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Type of disk",
              "Computed": true
            }
          }
        }
      },
      "include_disabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Include disabled offers",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "memory": {
        "Type": "List",
        "Description": "Memory specifications of the offer",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "capacity": {
              "Type": "Int",
              "Description": "Capacity of the memory in byte",
              "Computed": true
            },
            "frequency": {
              "Type": "Int",
              "Description": "Frequency of the memory",
              "Computed": true
            },
            "is_ecc": {
              "Type": "Bool",
              "Description": "True if error-correcting code is available on this memory",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Type of memory",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Exact name of the desired offer",
        "ConflictsWith": [
          "offer_id"
        ]
      },
      "offer_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the desired offer",
        "ConflictsWith": [
          "name"
        ]
      },
      "stock": {
        "Type": "String",
        "Description": "Stock status for this offer",
        "Computed": true
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_instance_image": {
      "additional_volume_ids": {
        "Type": "List",
        "Description": "The additional volume IDs attached to the image",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "architecture": {
        "Type": "String",
        "Optional": true,
        "Description": "Architecture of the desired image",
        "ConflictsWith": [
          "image_id"
        ],
        "Default": {
          "Type": "string",
          "Value": "x86_64"
        }
      },
      "creation_date": {
        "Type": "String",
        "Description": "Date when the image was created",
        "Computed": true
      },
      "default_bootscript_id": {
        "Type": "String",
        "Description": "ID of the bootscript associated with this image",
        "Computed": true
      },
      "from_server_id": {
        "Type": "String",
        "Description": "ID of the server the image is originated from",
        "Computed": true
      },
      "image_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the desired image",
        "ConflictsWith": [
          "name",
          "architecture"
        ]
      },
      "latest": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Select most recent image if multiple match",
        "ConflictsWith": [
          "image_id"
        ],
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "modification_date": {
        "Type": "String",
        "Description": "Date when the image was updated",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Exact name of the desired image",
        "ConflictsWith": [
          "image_id"
        ]
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "public": {
        "Type": "Bool",
        "Description": "Indication if the image is public",
        "Computed": true
      },
      "root_volume_id": {
        "Type": "String",
        "Description": "ID of the root volume associated with this image",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "State of the image",
        "Computed": true
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_instance_security_group": {
      "description": {
        "Type": "String",
        "Description": "The description of the security group",
        "Computed": true
      },
      "enable_default_security": {
        "Type": "Bool",
        "Description": "Enable blocking of SMTP on IPv4 and IPv6",
        "Computed": true
      },
      "external_rules": {
        "Type": "Bool",
        "Computed": true
      },
      "inbound_default_policy": {
        "Type": "String",
        "Description": "Default inbound traffic policy for this security group",
        "Computed": true
      },
      "inbound_rule": {
        "Type": "List",
        "Description": "Inbound rules for this security group",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Description": "Action when rule match request (drop or accept)",
              "Computed": true
            },
            "ip": {
              "Type": "String",
              "Description": "Ip address for this rule (e.g: 1.1.1.1). Only one of ip or ip_range should be provided",
              "Computed": true
            },
            "ip_range": {
              "Type": "String",
              "Description": "Ip range for this rule (e.g: 192.168.1.0/24). Only one of ip or ip_range should be provided",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Network port for this rule",
              "Computed": true
            },
            "port_range": {
              "Type": "String",
              "Description": "Computed port range for this rule (e.g: 1-1024, 22-22)",
              "Computed": true
            },
            "protocol": {
              "Type": "String",
              "Description": "Protocol for this rule (TCP, UDP, ICMP or ANY)",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the security group",
        "ConflictsWith": [
          "security_group_id"
        ]
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "outbound_default_policy": {
        "Type": "String",
        "Description": "Default outbound traffic policy for this security group",
        "Computed": true
      },
      "outbound_rule": {
        "Type": "List",
        "Description": "Outbound rules for this security group",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Description": "Action when rule match request (drop or accept)",
              "Computed": true
            },
            "ip": {
              "Type": "String",
              "Description": "Ip address for this rule (e.g: 1.1.1.1). Only one of ip or ip_range should be provided",
              "Computed": true
            },
            "ip_range": {
              "Type": "String",
              "Description": "Ip range for this rule (e.g: 192.168.1.0/24). Only one of ip or ip_range should be provided",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Network port for this rule",
              "Computed": true
            },
            "port_range": {
              "Type": "String",
              "Description": "Computed port range for this rule (e.g: 1-1024, 22-22)",
              "Computed": true
            },
            "protocol": {
              "Type": "String",
              "Description": "Protocol for this rule (TCP, UDP, ICMP or ANY)",
              "Computed": true
            }
          }
        }
      },
      "project_id": {
        "Type": "String",
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "security_group_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the security group",
        "ConflictsWith": [
          "name"
        ]
      },
      "stateful": {
        "Type": "Bool",
        "Description": "The stateful value of the security group",
        "Computed": true
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to"
      }
    },
    "scaleway_instance_server": {
      "additional_volume_ids": {
        "Type": "List",
        "Description": "The additional volumes attached to the server",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "boot_type": {
        "Type": "String",
        "Description": "The boot type of the server",
        "Computed": true
      },
      "bootscript_id": {
        "Type": "String",
        "Description": "ID of the target bootscript (set boot_type to bootscript)",
        "Computed": true
      },
      "cloud_init": {
        "Type": "String",
        "Description": "The cloud init script associated with this server",
        "Computed": true
      },
      "enable_dynamic_ip": {
        "Type": "Bool",
        "Description": "Enable dynamic IP on the server",
        "Computed": true
      },
      "enable_ipv6": {
        "Type": "Bool",
        "Description": "Determines if IPv6 is enabled for the server",
        "Computed": true
      },
      "image": {
        "Type": "String",
        "Description": "The UUID or the label of the base image used by the server",
        "Computed": true
      },
      "ip_id": {
        "Type": "String",
        "Description": "The ID of the reserved IP for the server",
        "Computed": true
      },
      "ipv6_address": {
        "Type": "String",
        "Description": "The default public IPv6 address routed to the server.",
        "Computed": true
      },
      "ipv6_gateway": {
        "Type": "String",
        "Description": "The IPv6 gateway address",
        "Computed": true
      },
      "ipv6_prefix_length": {
        "Type": "Int",
        "Description": "The IPv6 prefix length routed to the server.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the server",
        "ConflictsWith": [
          "server_id"
        ]
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "placement_group_id": {
        "Type": "String",
        "Description": "The placement group the server is attached to",
        "Computed": true
      },
      "placement_group_policy_respected": {
        "Type": "Bool",
        "Description": "True when the placement group policy is respected",
        "Computed": true
      },
      "private_ip": {
        "Type": "String",
        "Description": "The Scaleway internal IP address of the server",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "public_ip": {
        "Type": "String",
        "Description": "The public IPv4 address of the server",
        "Computed": true
      },
      "root_volume": {
        "Type": "List",
        "Description": "Root volume attached to the server on creation",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "delete_on_termination": {
              "Type": "Bool",
              "Description": "Force deletion of the root volume on instance termination",
              "Computed": true
            },
            "size_in_gb": {
              "Type": "Int",
              "Description": "Size of the root volume in gigabytes",
              "Computed": true
            },
            "volume_id": {
              "Type": "String",
              "Description": "Volume ID of the root volume",
              "Computed": true
            }
          }
        }
      },
      "security_group_id": {
        "Type": "String",
        "Description": "The security group the server is attached to",
        "Computed": true
      },
      "server_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the server",
        "ConflictsWith": [
          "name"
        ]
      },
      "state": {
        "Type": "String",
        "Description": "The state of the server should be: started, stopped, standby",
        "Computed": true
      },
      "tags": {
        "Type": "List",
        "Description": "The tags associated with the server",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "type": {
        "Type": "String",
        "Description": "The instance type of the server",
        "Computed": true
      },
      "user_data": {
        "Type": "Map",
        "Description": "The user data associated with the server",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to"
      }
    },
    "scaleway_instance_volume": {
      "from_snapshot_id": {
        "Type": "String",
        "Description": "Create a volume based on a image",
        "Computed": true
      },
      "from_volume_id": {
        "Type": "String",
        "Description": "Create a copy of an existing volume",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the volume",
        "ConflictsWith": [
          "volume_id"
        ]
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "server_id": {
        "Type": "String",
        "Description": "The server associated with this volume",
        "Computed": true
      },
      "size_in_gb": {
        "Type": "Int",
        "Description": "The size of the volume in gigabyte",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Description": "The volume type",
        "Computed": true
      },
      "volume_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the volume",
        "ConflictsWith": [
          "name"
        ]
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to"
      }
    },
    "scaleway_k8s_cluster": {
      "admission_plugins": {
        "Type": "List",
        "Description": "The list of admission plugins to enable on the cluster",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "apiserver_cert_sans": {
        "Type": "List",
        "Description": "Additional Subject Alternative Names for the Kubernetes API server certificate",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "apiserver_url": {
        "Type": "String",
        "Description": "Kubernetes API server URL",
        "Computed": true
      },
      "auto_upgrade": {
        "Type": "List",
        "Description": "The auto upgrade configuration for the cluster",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "enable": {
              "Type": "Bool",
              "Description": "Enables the Kubernetes patch version auto upgrade",
              "Computed": true
            },
            "maintenance_window_day": {
              "Type": "String",
              "Description": "Day of the maintenance window",
              "Computed": true
            },
            "maintenance_window_start_hour": {
              "Type": "Int",
              "Description": "Start hour of the 2-hour maintenance window",
              "Computed": true
            }
          }
        }
      },
      "autoscaler_config": {
        "Type": "List",
        "Description": "The autoscaler configuration for the cluster",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "balance_similar_node_groups": {
              "Type": "Bool",
              "Description": "Detect similar node groups and balance the number of nodes between them",
              "Computed": true
            },
            "disable_scale_down": {
              "Type": "Bool",
              "Description": "Disable the scale down feature of the autoscaler",
              "Computed": true
            },
            "estimator": {
              "Type": "String",
              "Description": "Type of resource estimator to be used in scale up",
              "Computed": true
            },
            "expander": {
              "Type": "String",
              "Description": "Type of node group expander to be used in scale up",
              "Computed": true
            },
            "expendable_pods_priority_cutoff": {
              "Type": "Int",
              "Description": "Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable",
              "Computed": true
            },
            "ignore_daemonsets_utilization": {
              "Type": "Bool",
              "Description": "Ignore DaemonSet pods when calculating resource utilization for scaling down",
              "Computed": true
            },
            "max_graceful_termination_sec": {
              "Type": "Int",
              "Description": "Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node",
              "Computed": true
            },
            "scale_down_delay_after_add": {
              "Type": "String",
              "Description": "How long after scale up that scale down evaluation resumes",
              "Computed": true
            },
            "scale_down_unneeded_time": {
              "Type": "String",
              "Description": "How long a node should be unneeded before it is eligible for scale down",
              "Computed": true
            },
            "scale_down_utilization_threshold": {
              "Type": "Float",
              "Description": "Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down",
              "Computed": true
            }
          }
        }
      },
      "cluster_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the cluster",
        "ConflictsWith": [
          "name"
        ]
      },
      "cni": {
        "Type": "String",
        "Description": "The CNI plugin of the cluster",
        "Computed": true
      },
      "created_at": {
        "Type": "String",
        "Description": "The date and time of the creation of the Kubernetes cluster",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "The description of the cluster",
        "Computed": true
      },
      "feature_gates": {
        "Type": "List",
        "Description": "The list of feature gates to enable on the cluster",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "kubeconfig": {
        "Type": "List",
        "Description": "The kubeconfig configuration file of the Kubernetes cluster",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cluster_ca_certificate": {
              "Type": "String",
              "Description": "The kubernetes cluster CA certificate",
              "Computed": true
            },
            "config_file": {
              "Type": "String",
              "Description": "The whole kubeconfig file",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "The kubernetes master URL",
              "Computed": true
            },
            "token": {
              "Type": "String",
              "Description": "The kubernetes cluster admin token",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the cluster",
        "ConflictsWith": [
          "cluster_id"
        ]
      },
      "open_id_connect_config": {
        "Type": "List",
        "Description": "The OpenID Connect configuration of the cluster",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "client_id": {
              "Type": "String",
              "Description": "A client id that all tokens must be issued for",
              "Computed": true
            },
            "groups_claim": {
              "Type": "List",
              "Description": "JWT claim to use as the user's group",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "groups_prefix": {
              "Type": "String",
              "Description": "Prefix prepended to group claims",
              "Computed": true
            },
            "issuer_url": {
              "Type": "String",
              "Description": "URL of the provider which allows the API server to discover public signing keys",
              "Computed": true
            },
            "required_claim": {
              "Type": "List",
              "Description": "Multiple key=value pairs that describes a required claim in the ID Token",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "username_claim": {
              "Type": "String",
              "Description": "JWT claim to use as the user name",
              "Computed": true
            },
            "username_prefix": {
              "Type": "String",
              "Description": "Prefix prepended to username",
              "Computed": true
            }
          }
        }
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region you want to attach the resource to"
      },
      "status": {
        "Type": "String",
        "Description": "The status of the cluster",
        "Computed": true
      },
      "tags": {
        "Type": "List",
        "Description": "The tags associated with the cluster",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "updated_at": {
        "Type": "String",
        "Description": "The date and time of the last update of the Kubernetes cluster",
        "Computed": true
      },
      "upgrade_available": {
        "Type": "Bool",
        "Description": "True if an upgrade is available",
        "Computed": true
      },
      "version": {
        "Type": "String",
        "Description": "The version of the cluster",
        "Computed": true
      },
      "wildcard_dns": {
        "Type": "String",
        "Description": "Wildcard DNS pointing to all the ready nodes",
        "Computed": true
      }
    },
    "scaleway_k8s_pool": {
      "autohealing": {
        "Type": "Bool",
        "Description": "Enable the autohealing on the pool",
        "Computed": true
      },
      "autoscaling": {
        "Type": "Bool",
        "Description": "Enable the autoscaling on the pool",
        "Computed": true
      },
      "cluster_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the cluster on which this pool will be created",
        "ConflictsWith": [
          "pool_id"
        ]
      },
      "container_runtime": {
        "Type": "String",
        "Description": "Container runtime for the pool",
        "Computed": true
      },
      "created_at": {
        "Type": "String",
        "Description": "The date and time of the creation of the pool",
        "Computed": true
      },
      "current_size": {
        "Type": "Int",
        "Description": "The actual size of the pool",
        "Computed": true
      },
      "kubelet_args": {
        "Type": "Map",
        "Description": "The Kubelet arguments to be used by this pool",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "max_size": {
        "Type": "Int",
        "Description": "Maximum size of the pool",
        "Computed": true
      },
      "min_size": {
        "Type": "Int",
        "Description": "Minimun size of the pool",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the cluster",
        "ConflictsWith": [
          "pool_id"
        ]
      },
      "node_type": {
        "Type": "String",
        "Description": "Server type of the pool servers",
        "Computed": true
      },
      "nodes": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Description": "The name of the node",
              "Computed": true
            },
            "public_ip": {
              "Type": "String",
              "Description": "The public IPv4 address of the node",
              "Computed": true
            },
            "public_ip_v6": {
              "Type": "String",
              "Description": "The public IPv6 address of the node",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "The status of the node",
              "Computed": true
            }
          }
        }
      },
      "placement_group_id": {
        "Type": "String",
        "Description": "ID of the placement group",
        "Computed": true
      },
      "pool_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the pool",
        "ConflictsWith": [
          "name",
          "cluster_id"
        ]
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region you want to attach the resource to"
      },
      "size": {
        "Type": "Int",
        "Optional": true,
        "Description": "Size of the pool"
      },
      "status": {
        "Type": "String",
        "Description": "The status of the pool",
        "Computed": true
      },
      "tags": {
        "Type": "List",
        "Description": "The tags associated with the pool",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "updated_at": {
        "Type": "String",
        "Description": "The date and time of the last update of the pool",
        "Computed": true
      },
      "upgrade_policy": {
        "Type": "List",
        "Description": "The Pool upgrade policy",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "max_surge": {
              "Type": "Int",
              "Description": "The maximum number of nodes to be created during the upgrade",
              "Computed": true
            },
            "max_unavailable": {
              "Type": "Int",
              "Description": "The maximum number of nodes that can be not ready at the same time",
              "Computed": true
            }
          }
        }
      },
      "version": {
        "Type": "String",
        "Description": "The Kubernetes version of the pool",
        "Computed": true
      },
      "wait_for_pool_ready": {
        "Type": "Bool",
        "Description": "Whether to wait for the pool to be ready",
        "Computed": true
      },
      "zone": {
        "Type": "String",
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_lb_ip": {
      "ip_address": {
        "Type": "String",
        "Optional": true,
        "Description": "The IP address",
        "ConflictsWith": [
          "ip_id"
        ]
      },
      "ip_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the IP address",
        "ConflictsWith": [
          "ip_address"
        ]
      },
      "lb_id": {
        "Type": "String",
        "Description": "The ID of the loadbalancer attached to this IP, if any",
        "Computed": true
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Description": "The region of the resource",
        "Computed": true
      },
      "reverse": {
        "Type": "String",
        "Description": "The reverse domain name for this IP",
        "Computed": true
      },
      "zone": {
        "Type": "String",
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_marketplace_image": {
      "instance_type": {
        "Type": "String",
        "Optional": true,
        "Description": "The instance commercial type of the desired image",
        "Default": {
          "Type": "string",
          "Value": "DEV1-S"
        }
      },
      "label": {
        "Type": "String",
        "Required": true,
        "Description": "Exact label of the desired image"
      },
      "zone": {
        "Type": "String",
        "Optional": true,
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_rdb_acl": {
      "acl_rules": {
        "Type": "List",
        "Description": "List of ACL rules to apply",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "description": {
              "Type": "String",
              "Description": "Description of the rule",
              "Computed": true
            },
            "ip": {
              "Type": "String",
              "Description": "Target IP of the rules",
              "Computed": true
            }
          }
        }
      },
      "instance_id": {
        "Type": "String",
        "Required": true,
        "Description": "Instance on which the ACL is applied"
      },
      "region": {
        "Type": "String",
        "Description": "The region you want to attach the resource to",
        "Computed": true
      }
    },
    "scaleway_rdb_database": {
      "instance_id": {
        "Type": "String",
        "Required": true,
        "Description": "Instance on which the database is created"
      },
      "managed": {
        "Type": "Bool",
        "Description": "Whether or not the database is managed",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Database name"
      },
      "owner": {
        "Type": "String",
        "Description": "User that own the database",
        "Computed": true
      },
      "size": {
        "Type": "String",
        "Description": "Size of the database",
        "Computed": true
      }
    },
    "scaleway_rdb_instance": {
      "certificate": {
        "Type": "String",
        "Description": "Certificate of the database instance",
        "Computed": true
      },
      "disable_backup": {
        "Type": "Bool",
        "Description": "Disable automated backup for the database instance",
        "Computed": true
      },
      "endpoint_ip": {
        "Type": "String",
        "Description": "Endpoint IP of the database instance",
        "Computed": true
      },
      "endpoint_port": {
        "Type": "Int",
        "Description": "Endpoint port of the database instance",
        "Computed": true
      },
      "engine": {
        "Type": "String",
        "Description": "Database's engine version id",
        "Computed": true
      },
      "instance_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the RDB instance",
        "ConflictsWith": [
          "name"
        ]
      },
      "is_ha_cluster": {
        "Type": "Bool",
        "Description": "Enable or disable high availability for the database instance",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the database instance",
        "ConflictsWith": [
          "instance_id"
        ]
      },
      "node_type": {
        "Type": "String",
        "Description": "The type of database instance you want to create",
        "Computed": true
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "password": {
        "Type": "String",
        "Description": "Password for the first user of the database instance",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "read_replicas": {
        "Type": "List",
        "Description": "Read replicas of the database instance",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip": {
              "Type": "String",
              "Description": "IP of the replica",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Name of the replica",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port of the replica",
              "Computed": true
            }
          }
        }
      },
      "region": {
        "Type": "String",
        "Description": "The region you want to attach the resource to",
        "Computed": true
      },
      "settings": {
        "Type": "Map",
        "Description": "Map of engine settings to be set.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags": {
        "Type": "List",
        "Description": "List of tags [\"tag1\", \"tag2\", ...] attached to a database instance",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "user_name": {
        "Type": "String",
        "Description": "Identifier for the first user of the database instance",
        "Computed": true
      },
      "volume_size_in_gb": {
        "Type": "Int",
        "Description": "Volume size (in GB) when volume_type is not lssd",
        "Computed": true
      },
      "volume_type": {
        "Type": "String",
        "Description": "Type of volume where data are stored",
        "Computed": true
      }
    },
    "scaleway_registry_image": {
      "image_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the registry image",
        "ConflictsWith": [
          "name"
        ]
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the registry image",
        "ConflictsWith": [
          "image_id"
        ]
      },
      "namespace_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The namespace ID of the registry image",
        "Computed": true
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region you want to attach the resource to",
        "Computed": true
      },
      "size": {
        "Type": "Int",
        "Description": "The size of the registry image",
        "Computed": true
      },
      "tags": {
        "Type": "List",
        "Optional": true,
        "Description": "The tags associated with the registry image",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "visibility": {
        "Type": "String",
        "Description": "The visibility policy of the registry image",
        "Computed": true
      }
    },
    "scaleway_registry_namespace": {
      "description": {
        "Type": "String",
        "Description": "The description of the container registry namespace",
        "Computed": true
      },
      "endpoint": {
        "Type": "String",
        "Description": "The endpoint reachable by docker",
        "Computed": true
      },
      "is_public": {
        "Type": "Bool",
        "Description": "Define the default visibity policy",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the container registry namespace",
        "ConflictsWith": [
          "namespace_id"
        ]
      },
      "namespace_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the registry namespace",
        "ConflictsWith": [
          "name"
        ]
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "project_id": {
        "Type": "String",
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region you want to attach the resource to"
      }
    },
    "scaleway_vpc_private_network": {
      "created_at": {
        "Type": "String",
        "Description": "The date and time of the creation of the private network",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the private network",
        "ConflictsWith": [
          "private_network_id"
        ]
      },
      "organization_id": {
        "Type": "String",
        "Description": "The organization_id you want to attach the resource to",
        "Computed": true
      },
      "private_network_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the private network",
        "ConflictsWith": [
          "name"
        ]
      },
      "project_id": {
        "Type": "String",
        "Description": "The project_id you want to attach the resource to",
        "Computed": true
      },
      "tags": {
        "Type": "List",
        "Description": "The tags associated with private network",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "updated_at": {
        "Type": "String",
        "Description": "The date and time of the last update of the private network",
        "Computed": true
      },
      "zone": {
        "Type": "String",
        "Description": "The zone you want to attach the resource to",
        "Computed": true
      }
    }
  }
}