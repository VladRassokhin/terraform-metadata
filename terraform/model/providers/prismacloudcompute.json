{
  ".schema_version": "2",
  ".sdk_type": "terraform-plugin-sdk-v2",
  "name": "prismacloudcompute",
  "type": "provider",
  "version": "v0.4.1",
  "provider": {
    "config_file": {
      "Type": "String",
      "Optional": true,
      "Description": "Configuration file in JSON format. See examples/creds.json",
      "DefaultFunc": "ENV(PRISMACLOUDCOMPUTE_CONFIG_FILE)"
    },
    "console_url": {
      "Type": "String",
      "Optional": true,
      "Description": "The Prisma Cloud Compute Console URL",
      "DefaultFunc": "ENV(PRISMACLOUDCOMPUTE_CONSOLE_URL)"
    },
    "password": {
      "Type": "String",
      "Optional": true,
      "Description": "Prisma Cloud Compute password",
      "DefaultFunc": "ENV(PRISMACLOUDCOMPUTE_PASSWORD)"
    },
    "project": {
      "Type": "String",
      "Optional": true,
      "Description": "The Prisma Cloud Compute project",
      "DefaultFunc": "ENV(PRISMACLOUDCOMPUTE_PROJECT)"
    },
    "skip_cert_verification": {
      "Type": "Bool",
      "Optional": true,
      "Description": "Whether or not to skip certificate verification",
      "Default": {
        "Type": "bool",
        "Value": "true"
      }
    },
    "username": {
      "Type": "String",
      "Optional": true,
      "Description": "Prisma Cloud Compute username",
      "DefaultFunc": "ENV(PRISMACLOUDCOMPUTE_USERNAME)"
    }
  },
  "resources": {
    "prismacloudcompute_admission_policy": {
      "id": {
        "Type": "String",
        "Description": "The ID of the policy.",
        "Computed": true
      },
      "rule": {
        "Type": "List",
        "Optional": true,
        "Description": "Rules that make up the policy.",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "description": {
              "Type": "String",
              "Optional": true,
              "Description": "Free-form text field."
            },
            "disabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to disable the rule."
            },
            "effect": {
              "Type": "String",
              "Optional": true,
              "Description": "The effect to be used. Can be set to 'allow', 'block' or 'alert'."
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Unique name of the rule."
            },
            "script": {
              "Type": "String",
              "Optional": true,
              "Description": "Policy script in Rego syntax."
            }
          }
        }
      }
    },
    "prismacloudcompute_ci_image_compliance_policy": {
      "id": {
        "Type": "String",
        "Description": "The ID of the policy.",
        "Computed": true
      },
      "rule": {
        "Type": "List",
        "Optional": true,
        "Description": "Rules that make up the policy.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "collections": {
              "Type": "List",
              "Optional": true,
              "Description": "Collections used to scope the rule.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "compliance_check": {
              "Type": "List",
              "Optional": true,
              "Description": "Compliance checks. Omitted checks are ignored.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "block": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to block if this check is failed. Setting to 'false' will only alert if the check is failed."
                  },
                  "id": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Compliance check number."
                  }
                }
              }
            },
            "disabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to disable the rule."
            },
            "effect": {
              "Type": "String",
              "Optional": true,
              "Description": "The effect of the rule. Can be set to 'ignore', 'alert', 'block', or 'alert, block'."
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Unique name of the rule."
            },
            "notes": {
              "Type": "String",
              "Optional": true,
              "Description": "Free-form text field."
            },
            "verbose": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to provide verbose output for blocked requests."
            }
          }
        }
      }
    },
    "prismacloudcompute_ci_image_vulnerability_policy": {
      "id": {
        "Type": "String",
        "Description": "The ID of the policy.",
        "Computed": true
      },
      "rule": {
        "Type": "List",
        "Optional": true,
        "Description": "Rules that make up the policy.",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "alert_threshold": {
              "Type": "List",
              "Optional": true,
              "Description": "Threshold for generating alerts.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "disabled": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to disable vulnerability alerts."
                  },
                  "value": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Minimum vulnerability severity to generate an alert. Can be set to 0=off, 1=low, 4=medium, 7=high, and 9=critical."
                  }
                }
              }
            },
            "block_message": {
              "Type": "String",
              "Optional": true,
              "Description": "Message to display when an image is blocked."
            },
            "block_threshold": {
              "Type": "List",
              "Optional": true,
              "Description": "Threshold for blocking.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "enabled": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to block when vulnerabilities are found."
                  },
                  "value": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Minimum vulnerability severity to block. Can be set to 0=off, 1=low, 4=medium, 7=high, and 9=critical."
                  }
                }
              }
            },
            "collections": {
              "Type": "List",
              "Optional": true,
              "Description": "Collections used to scope the rule.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "cve_rule": {
              "Type": "List",
              "Optional": true,
              "Description": "List of rules for handling specific CVEs.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "description": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Free-form text field."
                  },
                  "effect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Action to take if the CVE is found. Can be set to 'ignore', 'alert', or 'block'."
                  },
                  "expiration": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "CVE rule expiration.",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "date": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Expiration date."
                        },
                        "enabled": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether or not to enable the CVE rule expiration."
                        }
                      }
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "CVE ID."
                  }
                }
              }
            },
            "disabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to disable the rule."
            },
            "effect": {
              "Type": "String",
              "Optional": true,
              "Description": "The effect of the rule. Can be set to 'ignore', 'alert', 'block', or 'alert, block'."
            },
            "grace_days": {
              "Type": "Int",
              "Optional": true,
              "Description": "Number of days to suppress the rule's block effect. Measured from date the vulnerability was fixed. If there's no fix, measured from the date the vulnerability was published."
            },
            "grace_days_policy": {
              "Type": "List",
              "Optional": true,
              "Description": "Composite alternative to grace_days. Allows to set the effect for different severity level.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "critical": {
                    "Type": "Int",
                    "Optional": true
                  },
                  "high": {
                    "Type": "Int",
                    "Optional": true
                  },
                  "low": {
                    "Type": "Int",
                    "Optional": true
                  },
                  "medium": {
                    "Type": "Int",
                    "Optional": true
                  }
                }
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Unique name of the rule."
            },
            "notes": {
              "Type": "String",
              "Optional": true,
              "Description": "Free-form text field."
            },
            "only_fixed": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to apply the rule only when vendor fixes are available."
            },
            "tag_rule": {
              "Type": "List",
              "Optional": true,
              "Description": "List of rules for handling specific tags.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "description": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Free-form text field."
                  },
                  "effect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Action to take if a tagged CVE is found. Can be set to 'ignore', 'alert', or 'block'."
                  },
                  "expiration": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Tag rule expiration.",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "date": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Expiration date."
                        },
                        "enabled": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether or not to enable the tag rule expiration."
                        }
                      }
                    }
                  },
                  "name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Tag name."
                  }
                }
              }
            },
            "verbose": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to display a detailed message when blocked."
            }
          }
        }
      }
    },
    "prismacloudcompute_collection": {
      "account_ids": {
        "Type": "List",
        "Optional": true,
        "Description": "Targeted cloud account IDs.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "application_ids": {
        "Type": "List",
        "Optional": true,
        "Description": "Targeted application IDs (for app-embedded). Values must end in a wildcard (*).",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "clusters": {
        "Type": "List",
        "Optional": true,
        "Description": "Targeted cluster names.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "code_repositories": {
        "Type": "List",
        "Optional": true,
        "Description": "Targeted code repositories.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "A hex color code for the collection to display in the Console.",
        "Default": {
          "Type": "string",
          "Value": "#A020F0"
        }
      },
      "containers": {
        "Type": "List",
        "Optional": true,
        "Description": "Targeted containers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "A free-form text description of the collection."
      },
      "functions": {
        "Type": "List",
        "Optional": true,
        "Description": "Targeted functions.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hosts": {
        "Type": "List",
        "Optional": true,
        "Description": "Targeted hosts.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the collection.",
        "Computed": true
      },
      "images": {
        "Type": "List",
        "Optional": true,
        "Description": "Targeted images.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "labels": {
        "Type": "List",
        "Optional": true,
        "Description": "Targeted labels.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "A unique collection name."
      },
      "namespaces": {
        "Type": "List",
        "Optional": true,
        "Description": "Targeted cluster namespaces.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "prismacloudcompute_container_compliance_policy": {
      "id": {
        "Type": "String",
        "Description": "The ID of the policy.",
        "Computed": true
      },
      "rule": {
        "Type": "List",
        "Optional": true,
        "Description": "Rules that make up the policy.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "block_message": {
              "Type": "String",
              "Optional": true,
              "Description": "Message to display for blocked requests."
            },
            "collections": {
              "Type": "List",
              "Optional": true,
              "Description": "Collections used to scope the rule.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "compliance_check": {
              "Type": "List",
              "Optional": true,
              "Description": "Compliance checks. Omitted checks are ignored.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "block": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to block if this check is failed. Setting to 'false' will only alert if the check is failed."
                  },
                  "id": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Compliance check number."
                  }
                }
              }
            },
            "disabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to disable the rule."
            },
            "effect": {
              "Type": "String",
              "Optional": true,
              "Description": "The effect of the rule. Can be set to 'ignore', 'alert', 'block', or 'alert, block'."
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Unique name of the rule."
            },
            "notes": {
              "Type": "String",
              "Optional": true,
              "Description": "Free-form text field."
            },
            "show_passed_checks": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to report both failed and passed compliance checks."
            },
            "verbose": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to provide verbose output for blocked requests."
            }
          }
        }
      }
    },
    "prismacloudcompute_container_runtime_policy": {
      "id": {
        "Type": "String",
        "Description": "The ID of the policy.",
        "Computed": true
      },
      "learning_disabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether or not to disable automatic behavioral learning.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "rule": {
        "Type": "List",
        "Optional": true,
        "Description": "Rules that make up the policy.",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "advanced_protection": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to enable advanced protection."
            },
            "cloud_metadata_enforcement": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to enable cloud metadata access monitoring."
            },
            "collections": {
              "Type": "List",
              "Optional": true,
              "Description": "Collections used to scope the rule.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "custom_rule": {
              "Type": "List",
              "Optional": true,
              "Description": "List of custom rules.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The action to perform if the custom rule applies. Can be set to 'audit' or 'incident'."
                  },
                  "effect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The effect to be used. Can be set to 'block', 'prevent', 'alert', or 'allow'."
                  },
                  "id": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Custom rule number."
                  }
                }
              }
            },
            "disabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to disable the rule."
            },
            "dns": {
              "Type": "List",
              "Optional": true,
              "Description": "DNS configuration.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allowed": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Allowed domains. Wildcard prefixes are supported.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "denied": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Denied domains. Wildcard prefixes are supported.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "deny_effect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The effect to be used. Can be set to 'block', 'prevent', 'alert', or 'disable'."
                  }
                }
              }
            },
            "filesystem": {
              "Type": "List",
              "Optional": true,
              "Description": "File system configuration.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allowed": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of allowed file system paths.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "backdoor_files": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to monitor files that can create or persist backdoors (SSH or admin account config files)."
                  },
                  "check_new_files": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to detect changes to binaries and certificates."
                  },
                  "denied": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of denied file system paths.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "deny_effect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The effect to be used. Can be set to 'block', 'prevent', 'alert', or 'disable'."
                  },
                  "skip_encrypted_binaries": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to skip encrypted binaries."
                  },
                  "suspicious_elf_headers": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to detect suspicious ELF headers."
                  }
                }
              }
            },
            "kubernetes_enforcement": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to detect attacks against the cluster."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Unique name of the rule."
            },
            "network": {
              "Type": "List",
              "Optional": true,
              "Description": "Network configuration.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allowed_listening_port": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of allowed listening ports.",
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "deny": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether or not to deny the connection."
                        },
                        "end": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "End of the port range."
                        },
                        "start": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Start of the port range."
                        }
                      }
                    }
                  },
                  "allowed_outbound_ips": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of allowed outbound IP addresses.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "allowed_outbound_port": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of allowed outbound ports.",
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "deny": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether or not to deny the connection."
                        },
                        "end": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "End of the port range."
                        },
                        "start": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Start of the port range."
                        }
                      }
                    }
                  },
                  "denied_listening_port": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of denied listening ports.",
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "deny": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether or not to deny the connection."
                        },
                        "end": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "End of the port range."
                        },
                        "start": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Start of the port range."
                        }
                      }
                    }
                  },
                  "denied_outbound_ips": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of denied outbound IP addresses.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "denied_outbound_port": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of denied outbound ports.",
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "deny": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether or not to deny the connection."
                        },
                        "end": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "End of the port range."
                        },
                        "start": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Start of the port range."
                        }
                      }
                    }
                  },
                  "deny_effect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The effect to be used. Can be set to 'block', 'alert', or 'disable'."
                  },
                  "detect_port_scan": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to detect port scans."
                  },
                  "skip_modified_processes": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to skip network monitoring for modified processes."
                  },
                  "skip_raw_sockets": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to skip raw socket detection."
                  }
                }
              }
            },
            "notes": {
              "Type": "String",
              "Optional": true,
              "Description": "Free-form text field."
            },
            "processes": {
              "Type": "List",
              "Optional": true,
              "Description": "Processes configuration.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allowed": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of allowed processes.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "check_crypto_miners": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to detect crypto miners."
                  },
                  "check_lateral_movement": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to detect processes that can be used for lateral movement exploits."
                  },
                  "check_parent_child": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to check for parent-child relationship when comparing spawned processes in the model."
                  },
                  "check_suid_binaries": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to check for process-elevating privileges (SUID bit)."
                  },
                  "denied": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of denied processes.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "deny_effect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The effect to be used. Can be set to 'block', 'prevent', 'alert', or 'disable'."
                  },
                  "skip_modified": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to skip detection of processes started from modified binaries"
                  },
                  "skip_reverse_shell": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not skip detection of reverse shells."
                  }
                }
              }
            },
            "wildfire_analysis": {
              "Type": "String",
              "Optional": true,
              "Description": "The effect to be used when WildFire analysis is enabled. Can be set to 'block', 'alert', or 'disable'."
            }
          }
        }
      }
    },
    "prismacloudcompute_credential": {
      "account_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Account identifier (username, access key, etc.)."
      },
      "api_token": {
        "Type": "List",
        "Optional": true,
        "Description": "The plain and encrypted version of the API token (the plain version is never stored in the database)",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "encrypted": {
              "Type": "String",
              "Description": "Encrypted value for the secret",
              "Computed": true
            },
            "plain": {
              "Type": "String",
              "Optional": true,
              "Description": "Plain text value for the secret. Note: marshalling to JSON will convert to an encrypted value"
            }
          }
        }
      },
      "ca_cert": {
        "Type": "String",
        "Optional": true,
        "Description": "CA certificate for certificate-based authentication."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description of the credential."
      },
      "ibm_account_guid": {
        "Type": "String",
        "Optional": true,
        "Description": "IBM Cloud account GUID."
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the credential.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique name for the credential.",
        "Computed": true
      },
      "role_arn": {
        "Type": "String",
        "Optional": true,
        "Description": "Amazon Resource Name (ARN) of the role to assume."
      },
      "secret": {
        "Type": "List",
        "Optional": true,
        "Description": "Plain and encrypted version of the credential (the plain version is never stored in the database)",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "encrypted": {
              "Type": "String",
              "Description": "Encrypted value for the secret",
              "Computed": true
            },
            "plain": {
              "Type": "String",
              "Optional": true,
              "Description": "Plain text value for the secret. Note: marshalling to JSON will convert to an encrypted value"
            }
          }
        }
      },
      "skip_cert_verification": {
        "Type": "Bool",
        "Optional": true,
        "Description": "SkipVerify if should skip certificate verification in tls communication."
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "Credential type."
      },
      "url": {
        "Type": "String",
        "Optional": true,
        "Description": "URL is the server base url."
      },
      "use_aws_role": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates if authentication should be done with the instance's attached credentials (EC2 IAM Role)."
      }
    },
    "prismacloudcompute_custom_rule": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Free-form text description of the custom rule."
      },
      "id": {
        "Type": "String",
        "Description": "ID of the custom rule.",
        "Computed": true
      },
      "message": {
        "Type": "String",
        "Optional": true,
        "Description": "Message to display for a custom rule event."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Unique custom rule name."
      },
      "prisma_id": {
        "Type": "Int",
        "Description": "Prisma Cloud Compute ID of the custom rule.",
        "Computed": true
      },
      "script": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom rule expression."
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "Custom rule type. Can be set to 'processes', 'filesystem', 'network-outgoing', 'kubernetes-audit', 'waas-request', or 'waas-response'."
      }
    },
    "prismacloudcompute_group": {
      "group_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Group ID."
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the group.",
        "Computed": true
      },
      "ldap_group": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether or not the group is an LDAP group."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Group name."
      },
      "oauth_group": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether or not the group is an OAuth group."
      },
      "oidc_group": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether or not the group is an OpenID Connect group."
      },
      "permissions": {
        "Type": "List",
        "Optional": true,
        "Description": "List of permissions.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "collections": {
              "Type": "List",
              "Optional": true,
              "Description": "Specifies the set of Defenders in-scope for working on a scan job.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "project": {
              "Type": "String",
              "Optional": true,
              "Description": "Names of projects which the user can access."
            }
          }
        }
      },
      "role": {
        "Type": "String",
        "Optional": true,
        "Description": "Role of the group."
      },
      "saml_group": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether or not the group is a SAML group."
      },
      "users": {
        "Type": "List",
        "Optional": true,
        "Description": "Users in the group.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "prismacloudcompute_host_compliance_policy": {
      "id": {
        "Type": "String",
        "Description": "The ID of the policy.",
        "Computed": true
      },
      "rule": {
        "Type": "List",
        "Optional": true,
        "Description": "Rules that make up the policy.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "block_message": {
              "Type": "String",
              "Optional": true,
              "Description": "Message to display for blocked requests."
            },
            "collections": {
              "Type": "List",
              "Optional": true,
              "Description": "Collections used to scope the rule.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "compliance_check": {
              "Type": "List",
              "Optional": true,
              "Description": "Compliance checks. Omitted checks are ignored.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "block": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to block if this check is failed. Setting to 'false' will only alert if the check is failed."
                  },
                  "id": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Compliance check number."
                  }
                }
              }
            },
            "disabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to disable the rule."
            },
            "effect": {
              "Type": "String",
              "Optional": true,
              "Description": "The effect of the rule. Can be set to 'ignore', 'alert', 'block', or 'alert, block'."
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Unique name of the rule."
            },
            "notes": {
              "Type": "String",
              "Optional": true,
              "Description": "Free-form text field."
            },
            "show_passed_checks": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to report both failed and passed compliance checks."
            },
            "verbose": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to provide verbose output for blocked requests."
            }
          }
        }
      }
    },
    "prismacloudcompute_host_runtime_policy": {
      "id": {
        "Type": "String",
        "Description": "The ID of the policy.",
        "Computed": true
      },
      "rule": {
        "Type": "List",
        "Optional": true,
        "Description": "Rules that make up the policy.",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "activities": {
              "Type": "List",
              "Optional": true,
              "Description": "Activities configuration.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "disabled": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to disable host activity collection."
                  },
                  "docker_enabled": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to collect docker commands."
                  },
                  "readonly_docker_enabled": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to collect read-only docker commands."
                  },
                  "service_activities_enabled": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to collect activity from services."
                  },
                  "sshd_enabled": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to collect new SSH sessions."
                  },
                  "sudo_enabled": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to collect commands ran with sudo or su."
                  }
                }
              }
            },
            "antimalware": {
              "Type": "List",
              "Optional": true,
              "Description": "Anti-malware configuration.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allowed_processes": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of processes and files to allow during anti-malware checks.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "crypto_miners": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The effect to be used when crypto miners are detected. Can be set to 'prevent', 'alert', or 'disable'."
                  },
                  "custom_feed": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The effect to be used when malware from custom feeds is detected. Can be set to 'alert' or 'disable'."
                  },
                  "denied_processes": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Denied processes configuration.",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "effect": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The effect to be used. Can be set to 'prevent' or 'alert'."
                        },
                        "paths": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of processes and files to deny during anti-malware checks.",
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        }
                      }
                    }
                  },
                  "detect_compiler_generated_binary": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to detect compiler-generated binaries."
                  },
                  "encrypted_binaries": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The effect to be used when encrypted or packed binaries are detected. Can be set to 'alert' or 'disable'."
                  },
                  "execution_flow_hijack": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The effect to be used when execution flow hijacking is detected. Can be set to 'alert' or 'disable'."
                  },
                  "intelligence_feed": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The effect to be used when malware according to Prisma Cloud Compute is detected. Can be set to 'alert' or 'disable'."
                  },
                  "reverse_shell": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The effect to be used when reverse shell attacks are detected. Can be set to 'alert' or 'disable'."
                  },
                  "service_unknown_origin_binary": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The effect to be used when non-packaged binaries are created or ran by a service. Can be set to 'prevent', 'alert', or 'disable'."
                  },
                  "skip_ssh_tracking": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to skip tracking of SSH events."
                  },
                  "suspicious_elf_headers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The effect to be used when binaries with suspicious ELF headers are detected. Can be set to 'alert' or 'disable'."
                  },
                  "temp_filesystem_processes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The effect to be used when processes are ran from a temporary file system. Can be set to 'prevent', 'alert', or 'disable'."
                  },
                  "user_unknown_origin_binary": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The effect to be used when non-packaged binaries are created or ran by a user. Can be set to 'prevent', 'alert', or 'disable'."
                  },
                  "webshell": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The effect to be used when webshell attacks are detected. Can be set to 'prevent', 'alert', or 'disable'."
                  },
                  "wildfire_analysis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The effect to be used when WildFire analysis is enabled. Can be set to 'alert' or 'disable'."
                  }
                }
              }
            },
            "collections": {
              "Type": "List",
              "Optional": true,
              "Description": "Collections used to scope the rule.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "custom_rule": {
              "Type": "List",
              "Optional": true,
              "Description": "List of custom rules.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The action to perform if the custom rule applies. Can be set to 'audit' or 'incident'."
                  },
                  "effect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The effect to be used. Can be set to 'prevent', 'alert', or 'allow'."
                  },
                  "id": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Custom rule number."
                  }
                }
              }
            },
            "disabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to disable the rule."
            },
            "dns": {
              "Type": "List",
              "Optional": true,
              "Description": "DNS configuration.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allowed": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Allowed domains. Wildcard prefixes are supported.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "denied": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Denied domains. Wildcard prefixes are supported.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "deny_effect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The effect to be used. Can be set to 'prevent', 'alert', or 'disable'."
                  },
                  "intelligence_feed": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The effect to be used when resolving suspicious domains according to Prisma Cloud Compute. Can be set to 'prevent', 'alert', or 'disable'."
                  }
                }
              }
            },
            "file_integrity_rule": {
              "Type": "List",
              "Optional": true,
              "Description": "List of file integrity rules.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allowed_processes": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of processes allowed to generate file system events on monitored files.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "excluded_files": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of file names to ignore. Pattern matching is supported.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "metadata": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to monitor file metadata changes."
                  },
                  "path": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Path to monitor."
                  },
                  "read": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to monitor file reads."
                  },
                  "recursive": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to recursively monitor files starting at `path`."
                  },
                  "write": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to monitor file writes."
                  }
                }
              }
            },
            "log_inspection_rule": {
              "Type": "List",
              "Optional": true,
              "Description": "List of log inspection rules.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "path": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Path to the log file."
                  },
                  "regex": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of regular expressions to use when inspecting the log file.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Unique name of the rule."
            },
            "network": {
              "Type": "List",
              "Optional": true,
              "Description": "Network configuration.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allowed_outbound_ips": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of allowed outbound IP addresses.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "custom_feed": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The effect to be used when connecting to suspicious IPs according to custom feeds. Can be set to 'alert' or 'disable'."
                  },
                  "denied_listening_port": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of denied listening ports.",
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "deny": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether or not to deny the connection."
                        },
                        "end": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "End of the port range."
                        },
                        "start": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Start of the port range."
                        }
                      }
                    }
                  },
                  "denied_outbound_ips": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of denied outbound IP addresses.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "denied_outbound_port": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of denied outbound ports.",
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "deny": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether or not to deny the connection."
                        },
                        "end": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "End of the port range."
                        },
                        "start": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Start of the port range."
                        }
                      }
                    }
                  },
                  "deny_effect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The effect to be used. Can be set to 'alert' or 'disable'."
                  },
                  "intelligence_feed": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The effect to be used when connecting to suspicious IPs according to Prisma Cloud Compute. Can be set to 'alert' or 'disable'."
                  }
                }
              }
            },
            "notes": {
              "Type": "String",
              "Optional": true,
              "Description": "Free-form text field."
            }
          }
        }
      }
    },
    "prismacloudcompute_host_vulnerability_policy": {
      "id": {
        "Type": "String",
        "Description": "The ID of the policy.",
        "Computed": true
      },
      "rule": {
        "Type": "List",
        "Optional": true,
        "Description": "Rules that make up the policy.",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "alert_threshold": {
              "Type": "List",
              "Optional": true,
              "Description": "Threshold for generating alerts.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "disabled": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to disable vulnerability alerts."
                  },
                  "value": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Minimum vulnerability severity to generate an alert. Can be set to 0=off, 1=low, 4=medium, 7=high, and 9=critical."
                  }
                }
              }
            },
            "collections": {
              "Type": "List",
              "Optional": true,
              "Description": "Collections used to scope the rule.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "cve_rule": {
              "Type": "List",
              "Optional": true,
              "Description": "List of rules for handling specific CVEs.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "description": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Free-form text field."
                  },
                  "effect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Action to take if the CVE is found. Can be set to 'ignore', 'alert', or 'block'."
                  },
                  "expiration": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "CVE rule expiration.",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "date": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Expiration date."
                        },
                        "enabled": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether or not to enable the CVE rule expiration."
                        }
                      }
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "CVE ID."
                  }
                }
              }
            },
            "disabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to disable the rule."
            },
            "effect": {
              "Type": "String",
              "Optional": true,
              "Description": "The effect of the rule. Can be set to 'ignore', 'alert', 'block', or 'alert, block'."
            },
            "grace_days": {
              "Type": "Int",
              "Optional": true,
              "Description": "Number of days to suppress the rule's block effect. Measured from date the vulnerability was fixed. If there's no fix, measured from the date the vulnerability was published."
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Unique name of the rule."
            },
            "notes": {
              "Type": "String",
              "Optional": true,
              "Description": "Free-form text field."
            },
            "only_fixed": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to apply the rule only when vendor fixes are available."
            },
            "tag_rule": {
              "Type": "List",
              "Optional": true,
              "Description": "List of rules for handling specific tags.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "description": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Free-form text field."
                  },
                  "effect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Action to take if a tagged CVE is found. Can be set to 'ignore', 'alert', or 'block'."
                  },
                  "expiration": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Tag rule expiration.",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "date": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Expiration date."
                        },
                        "enabled": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether or not to enable the tag rule expiration."
                        }
                      }
                    }
                  },
                  "name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Tag name."
                  }
                }
              }
            },
            "verbose": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to display a detailed message when blocked."
            }
          }
        }
      }
    },
    "prismacloudcompute_image_vulnerability_policy": {
      "id": {
        "Type": "String",
        "Description": "The ID of the policy.",
        "Computed": true
      },
      "rule": {
        "Type": "List",
        "Optional": true,
        "Description": "Rules that make up the policy.",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "alert_threshold": {
              "Type": "List",
              "Optional": true,
              "Description": "Threshold for generating alerts.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "disabled": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to disable vulnerability alerts."
                  },
                  "value": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Minimum vulnerability severity to generate an alert. Can be set to 0=off, 1=low, 4=medium, 7=high, and 9=critical."
                  }
                }
              }
            },
            "block_message": {
              "Type": "String",
              "Optional": true,
              "Description": "Message to display when an image is blocked."
            },
            "block_threshold": {
              "Type": "List",
              "Optional": true,
              "Description": "Threshold for blocking.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "enabled": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether or not to block when vulnerabilities are found."
                  },
                  "value": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Minimum vulnerability severity to block. Can be set to 0=off, 1=low, 4=medium, 7=high, and 9=critical."
                  }
                }
              }
            },
            "collections": {
              "Type": "List",
              "Optional": true,
              "Description": "Collections used to scope the rule.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "cve_rule": {
              "Type": "List",
              "Optional": true,
              "Description": "List of rules for handling specific CVEs.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "description": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Free-form text field."
                  },
                  "effect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Action to take if the CVE is found. Can be set to 'ignore', 'alert', or 'block'."
                  },
                  "expiration": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "CVE rule expiration.",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "date": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Expiration date."
                        },
                        "enabled": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether or not to enable the CVE rule expiration."
                        }
                      }
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "CVE ID."
                  }
                }
              }
            },
            "disabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to disable the rule."
            },
            "effect": {
              "Type": "String",
              "Optional": true,
              "Description": "The effect of the rule. Can be set to 'ignore', 'alert', 'block', or 'alert, block'."
            },
            "grace_days": {
              "Type": "Int",
              "Optional": true,
              "Description": "Number of days to suppress the rule's block effect. Measured from date the vulnerability was fixed. If there's no fix, measured from the date the vulnerability was published."
            },
            "grace_days_policy": {
              "Type": "List",
              "Optional": true,
              "Description": "Composite alternative to grace_days. Allows to set the effect for different severity level.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "critical": {
                    "Type": "Int",
                    "Optional": true
                  },
                  "high": {
                    "Type": "Int",
                    "Optional": true
                  },
                  "low": {
                    "Type": "Int",
                    "Optional": true
                  },
                  "medium": {
                    "Type": "Int",
                    "Optional": true
                  }
                }
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Unique name of the rule."
            },
            "notes": {
              "Type": "String",
              "Optional": true,
              "Description": "Free-form text field."
            },
            "only_fixed": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to apply the rule only when vendor fixes are available."
            },
            "tag_rule": {
              "Type": "List",
              "Optional": true,
              "Description": "List of rules for handling specific tags.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "description": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Free-form text field."
                  },
                  "effect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Action to take if a tagged CVE is found. Can be set to 'ignore', 'alert', or 'block'."
                  },
                  "expiration": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Tag rule expiration.",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "date": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Expiration date."
                        },
                        "enabled": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether or not to enable the tag rule expiration."
                        }
                      }
                    }
                  },
                  "name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Tag name."
                  }
                }
              }
            },
            "verbose": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to display a detailed message when blocked."
            }
          }
        }
      }
    },
    "prismacloudcompute_registry_settings": {
      "id": {
        "Type": "String",
        "Description": "The ID of the registry settings.",
        "Computed": true
      },
      "specification": {
        "Type": "List",
        "Optional": true,
        "Description": "Registry scanning specifications.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cap": {
              "Type": "Int",
              "Optional": true,
              "Description": "The maximum number of images to scan from each repository, sorted by most recently modified."
            },
            "collections": {
              "Type": "List",
              "Optional": true,
              "Description": "The set of Defenders available for scanning.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "credential": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of the credential from the credentials store to use for authenticating with the registry."
            },
            "excluded_repositories": {
              "Type": "List",
              "Optional": true,
              "Description": "Repositories to exclude from scanning.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "excluded_tags": {
              "Type": "List",
              "Optional": true,
              "Description": "Tags to exclude from scanning.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "harbor_deployment_security": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Use temporary tokens provided by Harbor to scan images in projects with the deployment security setting enabled."
            },
            "jfrog_repo_types": {
              "Type": "List",
              "Optional": true,
              "Description": "JFrog Artifactory repository types to scan.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "IBM Cloud namespace."
            },
            "os": {
              "Type": "String",
              "Optional": true,
              "Description": "The base OS of the registry images."
            },
            "registry": {
              "Type": "String",
              "Optional": true,
              "Description": "Registry address."
            },
            "repository": {
              "Type": "String",
              "Optional": true,
              "Description": "Repositories to scan. Pattern matching is supported."
            },
            "scanners": {
              "Type": "Int",
              "Optional": true,
              "Description": "Number of Defenders that can be utilized for each scan job."
            },
            "tag": {
              "Type": "String",
              "Optional": true,
              "Description": "Tags to scan. Pattern matching is supported."
            },
            "type": {
              "Type": "String",
              "Optional": true,
              "Description": "Registry type."
            },
            "version_pattern": {
              "Type": "String",
              "Optional": true,
              "Description": "Pattern used by the scanner to identify the latest tags without querying the registry for additional metadata. If a pattern specifies both date and version, date takes precedence over version."
            }
          }
        }
      }
    },
    "prismacloudcompute_role": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Role description."
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the role.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Role name."
      },
      "permission": {
        "Type": "List",
        "Optional": true,
        "Description": "List of permissions.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Names roles for the user."
            },
            "read_write": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Indicates the type of permission."
            }
          }
        }
      }
    },
    "prismacloudcompute_user": {
      "authentication_type": {
        "Type": "String",
        "Required": true,
        "Description": "The user authentication type."
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the user.",
        "Computed": true
      },
      "password": {
        "Type": "String",
        "Required": true,
        "Description": "Password."
      },
      "permissions": {
        "Type": "List",
        "Optional": true,
        "Description": "List of permissions.",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "collections": {
              "Type": "List",
              "Optional": true,
              "Description": "Specifies the set of Defenders in-scope for working on a scan job.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "project": {
              "Type": "String",
              "Optional": true,
              "Description": "Names of projects which the user can access."
            }
          }
        }
      },
      "role": {
        "Type": "String",
        "Required": true,
        "Description": "Role."
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "Username."
      }
    }
  },
  "data-sources": {
    "prismacloudcompute_custom_rule": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Free-form text description of the custom rule."
      },
      "id": {
        "Type": "String",
        "Description": "ID of the custom rule.",
        "Computed": true
      },
      "message": {
        "Type": "String",
        "Description": "Message to display for a custom rule event.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Unique custom rule name."
      },
      "prisma_id": {
        "Type": "Int",
        "Description": "Prisma Cloud Compute ID of the custom rule.",
        "Computed": true
      },
      "script": {
        "Type": "String",
        "Description": "Custom rule expression.",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Description": "Custom rule type. Can be set to 'processes', 'filesystem', 'network-outgoing', 'kubernetes-audit', 'waas-request', or 'waas-response'.",
        "Computed": true
      }
    }
  }
}