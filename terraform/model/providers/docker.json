{
  ".schema_version": "2",
  ".sdk_type": "terraform-plugin-sdk-v2",
  "name": "docker",
  "type": "provider",
  "version": "v2.16.0",
  "provider": {
    "ca_material": {
      "Type": "String",
      "Optional": true,
      "Description": "PEM-encoded content of Docker host CA certificate",
      "DefaultFunc": "ENV(DOCKER_CA_MATERIAL)"
    },
    "cert_material": {
      "Type": "String",
      "Optional": true,
      "Description": "PEM-encoded content of Docker client certificate",
      "DefaultFunc": "ENV(DOCKER_CERT_MATERIAL)"
    },
    "cert_path": {
      "Type": "String",
      "Optional": true,
      "Description": "Path to directory with Docker TLS config",
      "DefaultFunc": "ENV(DOCKER_CERT_PATH)"
    },
    "host": {
      "Type": "String",
      "Required": true,
      "Description": "The Docker daemon address",
      "DefaultFunc": "ENV(DOCKER_HOST)"
    },
    "key_material": {
      "Type": "String",
      "Optional": true,
      "Description": "PEM-encoded content of Docker client private key",
      "DefaultFunc": "ENV(DOCKER_KEY_MATERIAL)"
    },
    "registry_auth": {
      "Type": "List",
      "Optional": true,
      "MaxItems": 1,
      "IsBlock": true,
      "ConfigImplicitMode": "Block",
      "Elem": {
        "Type": "SchemaInfo",
        "Info": {
          "address": {
            "Type": "String",
            "Required": true,
            "Description": "Address of the registry"
          },
          "config_file": {
            "Type": "String",
            "Optional": true,
            "Description": "Path to docker json file for registry auth",
            "DefaultFunc": "ENV(DOCKER_CONFIG)",
            "ConflictsWith": [
              "registry_auth.username",
              "registry_auth.password",
              "registry_auth.config_file_content"
            ]
          },
          "config_file_content": {
            "Type": "String",
            "Optional": true,
            "Description": "Plain content of the docker json file for registry auth",
            "ConflictsWith": [
              "registry_auth.username",
              "registry_auth.password",
              "registry_auth.config_file"
            ]
          },
          "password": {
            "Type": "String",
            "Optional": true,
            "Description": "Password for the registry",
            "DefaultFunc": "ENV(DOCKER_REGISTRY_PASS)",
            "ConflictsWith": [
              "registry_auth.config_file",
              "registry_auth.config_file_content"
            ]
          },
          "username": {
            "Type": "String",
            "Optional": true,
            "Description": "Username for the registry",
            "DefaultFunc": "ENV(DOCKER_REGISTRY_USER)",
            "ConflictsWith": [
              "registry_auth.config_file",
              "registry_auth.config_file_content"
            ]
          }
        }
      }
    },
    "ssh_opts": {
      "Type": "List",
      "Optional": true,
      "Description": "Additional SSH option flags to be appended when using `ssh://` protocol",
      "DefaultFunc": "UNKNOWN",
      "ConfigImplicitMode": "Attr",
      "Elem": {
        "Type": "SchemaElements",
        "ElementsType": "String"
      }
    }
  },
  "resources": {
    "docker_config": {
      "data": {
        "Type": "String",
        "Required": true,
        "Description": "Base64-url-safe-encoded config data"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "User-defined name of the config"
      }
    },
    "docker_container": {
      "attach": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If `true` attach to the container after its creation and waits the end of its execution. Defaults to `false`.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "bridge": {
        "Type": "String",
        "Description": "The network bridge of the container as read from its NetworkSettings.",
        "Computed": true
      },
      "capabilities": {
        "Type": "Set",
        "Optional": true,
        "Description": "Add or drop certrain linux capabilities.",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "add": {
              "Type": "Set",
              "Optional": true,
              "Description": "List of linux capabilities to add.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "drop": {
              "Type": "Set",
              "Optional": true,
              "Description": "List of linux capabilities to drop.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "command": {
        "Type": "List",
        "Optional": true,
        "Description": "The command to use to start the container. For example, to run `/usr/bin/myprogram -f baz.conf` set the command to be `[\"/usr/bin/myprogram\",\"-\",\"baz.con\"]`.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "container_logs": {
        "Type": "String",
        "Description": "The logs of the container if its execution is done (`attach` must be disabled).",
        "Computed": true
      },
      "cpu_set": {
        "Type": "String",
        "Optional": true,
        "Description": "A comma-separated list or hyphen-separated range of CPUs a container can use, e.g. `0-1`."
      },
      "cpu_shares": {
        "Type": "Int",
        "Optional": true,
        "Description": "CPU shares (relative weight) for the container."
      },
      "destroy_grace_seconds": {
        "Type": "Int",
        "Optional": true,
        "Description": "If defined will attempt to stop the container before destroying. Container will be destroyed after `n` seconds or on successful stop."
      },
      "devices": {
        "Type": "Set",
        "Optional": true,
        "Description": "Bind devices to the container.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "container_path": {
              "Type": "String",
              "Optional": true,
              "Description": "The path in the container where the device will be bound."
            },
            "host_path": {
              "Type": "String",
              "Required": true,
              "Description": "The path on the host where the device is located."
            },
            "permissions": {
              "Type": "String",
              "Optional": true,
              "Description": "The cgroup permissions given to the container to access the device. Defaults to `rwm`."
            }
          }
        }
      },
      "dns": {
        "Type": "Set",
        "Optional": true,
        "Description": "DNS servers to use.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "dns_opts": {
        "Type": "Set",
        "Optional": true,
        "Description": "DNS options used by the DNS provider(s), see `resolv.conf` documentation for valid list of options.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "dns_search": {
        "Type": "Set",
        "Optional": true,
        "Description": "DNS search domains that are used when bare unqualified hostnames are used inside of the container.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "domainname": {
        "Type": "String",
        "Optional": true,
        "Description": "Domain name of the container."
      },
      "entrypoint": {
        "Type": "List",
        "Optional": true,
        "Description": "The command to use as the Entrypoint for the container. The Entrypoint allows you to configure a container to run as an executable. For example, to run `/usr/bin/myprogram` when starting a container, set the entrypoint to be `\"/usr/bin/myprogra\"]`.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "env": {
        "Type": "Set",
        "Optional": true,
        "Description": "Environment variables to set in the form of `KEY=VALUE`, e.g. `DEBUG=0`",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "exit_code": {
        "Type": "Int",
        "Description": "The exit code of the container if its execution is done (`must_run` must be disabled).",
        "Computed": true
      },
      "gateway": {
        "Type": "String",
        "Description": "The network gateway of the container.",
        "Computed": true,
        "Deprecated": "Use `network_data` instead. The network gateway of the container as read from its NetworkSettings."
      },
      "group_add": {
        "Type": "Set",
        "Optional": true,
        "Description": "Additional groups for the container user",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "healthcheck": {
        "Type": "List",
        "Optional": true,
        "Description": "A test to perform to check that the container is healthy",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "interval": {
              "Type": "String",
              "Optional": true,
              "Description": "Time between running the check (ms|s|m|h). Defaults to `0s`.",
              "Default": {
                "Type": "string",
                "Value": "0s"
              }
            },
            "retries": {
              "Type": "Int",
              "Optional": true,
              "Description": "Consecutive failures needed to report unhealthy. Defaults to `0`.",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "start_period": {
              "Type": "String",
              "Optional": true,
              "Description": "Start period for the container to initialize before counting retries towards unstable (ms|s|m|h). Defaults to `0s`.",
              "Default": {
                "Type": "string",
                "Value": "0s"
              }
            },
            "test": {
              "Type": "List",
              "Required": true,
              "Description": "Command to run to check health. For example, to run `curl -f localhost/health` set the command to be `[\"CMD\", \"curl\", \"-f\", \"localhost/health\"]`.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum time to allow one check to run (ms|s|m|h). Defaults to `0s`.",
              "Default": {
                "Type": "string",
                "Value": "0s"
              }
            }
          }
        }
      },
      "host": {
        "Type": "Set",
        "Optional": true,
        "Description": "Additional hosts to add to the container.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "host": {
              "Type": "String",
              "Required": true,
              "Description": "Hostname to add"
            },
            "ip": {
              "Type": "String",
              "Required": true,
              "Description": "IP address this hostname should resolve to."
            }
          }
        }
      },
      "hostname": {
        "Type": "String",
        "Optional": true,
        "Description": "Hostname of the container.",
        "Computed": true
      },
      "image": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the image to back this container. The easiest way to get this value is to use the `docker_image` resource as is shown in the example."
      },
      "init": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Configured whether an init process should be injected for this container. If unset this will default to the `dockerd` defaults.",
        "Computed": true
      },
      "ip_address": {
        "Type": "String",
        "Description": "The IP address of the container.",
        "Computed": true,
        "Deprecated": "Use `network_data` instead. The IP address of the container's first network it."
      },
      "ip_prefix_length": {
        "Type": "Int",
        "Description": "The IP prefix length of the container.",
        "Computed": true,
        "Deprecated": "Use `network_data` instead. The IP prefix length of the container as read from its NetworkSettings."
      },
      "ipc_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "IPC sharing mode for the container. Possible values are: `none`, `private`, `shareable`, `container:\u003cname|id\u003e` or `host`.",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Optional": true,
        "Description": "User-defined key/value metadata",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "label": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the label"
            },
            "value": {
              "Type": "String",
              "Required": true,
              "Description": "Value of the label"
            }
          }
        }
      },
      "links": {
        "Type": "Set",
        "Optional": true,
        "Description": "Set of links for link based connectivity between containers that are running on the same host.",
        "Deprecated": "The --link flag is a legacy feature of Docker. It may eventually be removed.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "log_driver": {
        "Type": "String",
        "Optional": true,
        "Description": "The logging driver to use for the container.",
        "Computed": true
      },
      "log_opts": {
        "Type": "Map",
        "Optional": true,
        "Description": "Key/value pairs to use as options for the logging driver."
      },
      "logs": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Save the container logs (`attach` must be enabled). Defaults to `false`.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "max_retry_count": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximum amount of times to an attempt a restart when `restart` is set to 'on-failure'."
      },
      "memory": {
        "Type": "Int",
        "Optional": true,
        "Description": "The memory limit for the container in MBs."
      },
      "memory_swap": {
        "Type": "Int",
        "Optional": true,
        "Description": "The total memory limit (memory + swap) for the container in MBs. This setting may compute to `-1` after `terraform apply` if the target host doesn't support memory swap, when that is the case docker will use a soft limitation."
      },
      "mounts": {
        "Type": "Set",
        "Optional": true,
        "Description": "Specification for mounts to be added to containers created as part of the service.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bind_options": {
              "Type": "List",
              "Optional": true,
              "Description": "Optional configuration for the bind type.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "propagation": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "A propagation mode with the value."
                  }
                }
              }
            },
            "read_only": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether the mount should be read-only."
            },
            "source": {
              "Type": "String",
              "Optional": true,
              "Description": "Mount source (e.g. a volume name, a host path)."
            },
            "target": {
              "Type": "String",
              "Required": true,
              "Description": "Container path"
            },
            "tmpfs_options": {
              "Type": "List",
              "Optional": true,
              "Description": "Optional configuration for the tmpfs type.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mode": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "The permission mode for the tmpfs mount in an integer."
                  },
                  "size_bytes": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "The size for the tmpfs mount in bytes."
                  }
                }
              }
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "The mount type"
            },
            "volume_options": {
              "Type": "List",
              "Optional": true,
              "Description": "Optional configuration for the volume type.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "driver_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Name of the driver to use to create the volume."
                  },
                  "driver_options": {
                    "Type": "Map",
                    "Optional": true,
                    "Description": "key/value map of driver specific options.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "labels": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "User-defined key/value metadata.",
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "label": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Name of the label"
                        },
                        "value": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Value of the label"
                        }
                      }
                    }
                  },
                  "no_copy": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Populate volume with data from the target."
                  }
                }
              }
            }
          }
        }
      },
      "must_run": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If `true`, then the Docker container will be kept running. If `false`, then as long as the container exists, Terraform assumes it is successful. Defaults to `true`.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the container."
      },
      "network_alias": {
        "Type": "Set",
        "Optional": true,
        "Description": "Set an alias for the container in all specified networks",
        "Deprecated": "Use networks_advanced instead. Will be removed in v3.0.0",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "network_data": {
        "Type": "List",
        "Description": "The data of the networks the container is connected to.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "gateway": {
              "Type": "String",
              "Description": "The network gateway of the container.",
              "Computed": true,
              "Deprecated": "Use `network_data` instead. The network gateway of the container as read from its NetworkSettings."
            },
            "global_ipv6_address": {
              "Type": "String",
              "Description": "The IPV6 address of the container.",
              "Computed": true
            },
            "global_ipv6_prefix_length": {
              "Type": "Int",
              "Description": "The IPV6 prefix length address of the container.",
              "Computed": true
            },
            "ip_address": {
              "Type": "String",
              "Description": "The IP address of the container.",
              "Computed": true,
              "Deprecated": "Use `network_data` instead. The IP address of the container's first network it."
            },
            "ip_prefix_length": {
              "Type": "Int",
              "Description": "The IP prefix length of the container.",
              "Computed": true,
              "Deprecated": "Use `network_data` instead. The IP prefix length of the container as read from its NetworkSettings."
            },
            "ipv6_gateway": {
              "Type": "String",
              "Description": "The IPV6 gateway of the container.",
              "Computed": true
            },
            "network_name": {
              "Type": "String",
              "Description": "The name of the network",
              "Computed": true
            }
          }
        }
      },
      "network_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "Network mode of the container."
      },
      "networks": {
        "Type": "Set",
        "Optional": true,
        "Description": "ID of the networks in which the container is.",
        "Deprecated": "Use networks_advanced instead. Will be removed in v3.0.0",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "networks_advanced": {
        "Type": "Set",
        "Optional": true,
        "Description": "The networks the container is attached to",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aliases": {
              "Type": "Set",
              "Optional": true,
              "Description": "The network aliases of the container in the specific network.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "ipv4_address": {
              "Type": "String",
              "Optional": true,
              "Description": "The IPV4 address of the container in the specific network."
            },
            "ipv6_address": {
              "Type": "String",
              "Optional": true,
              "Description": "The IPV6 address of the container in the specific network."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the network."
            }
          }
        }
      },
      "pid_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "he PID (Process) Namespace mode for the container. Either `container:\u003cname|id\u003e` or `host`."
      },
      "ports": {
        "Type": "List",
        "Optional": true,
        "Description": "Publish a container's port(s) to the host.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "external": {
              "Type": "Int",
              "Optional": true,
              "Description": "Port exposed out of the container. If not given a free random port `\u003e= 32768` will be used.",
              "Computed": true
            },
            "internal": {
              "Type": "Int",
              "Required": true,
              "Description": "Port within the container."
            },
            "ip": {
              "Type": "String",
              "Optional": true,
              "Description": "IP address/mask that can access this port. Defaults to `0.0.0.0`.",
              "Default": {
                "Type": "string",
                "Value": "0.0.0.0"
              }
            },
            "protocol": {
              "Type": "String",
              "Optional": true,
              "Description": "Protocol that can be used over this port. Defaults to `tcp`.",
              "Default": {
                "Type": "string",
                "Value": "tcp"
              }
            }
          }
        }
      },
      "privileged": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If `true`, the container runs in privileged mode."
      },
      "publish_all_ports": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Publish all ports of the container."
      },
      "read_only": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If `true`, the container will be started as readonly. Defaults to `false`.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "remove_volumes": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If `true`, it will remove anonymous volumes associated with the container. Defaults to `true`.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "restart": {
        "Type": "String",
        "Optional": true,
        "Description": "The restart policy for the container. Must be one of 'no', 'on-failure', 'always', 'unless-stopped'. Defaults to `no`.",
        "Default": {
          "Type": "string",
          "Value": "no"
        }
      },
      "rm": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If `true`, then the container will be automatically removed when it exits. Defaults to `false`.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "security_opts": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of string values to customize labels for MLS systems, such as SELinux. See https://docs.docker.com/engine/reference/run/#security-configuration.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "shm_size": {
        "Type": "Int",
        "Optional": true,
        "Description": "Size of `/dev/shm` in MBs.",
        "Computed": true
      },
      "start": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If `true`, then the Docker container will be started after creation. If `false`, then the container is only created. Defaults to `true`.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "stdin_open": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If `true`, keep STDIN open even if not attached (`docker run -i`). Defaults to `false`.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "storage_opts": {
        "Type": "Map",
        "Optional": true,
        "Description": "Key/value pairs for the storage driver options, e.g. `size`: `120G`"
      },
      "sysctls": {
        "Type": "Map",
        "Optional": true,
        "Description": "A map of kernel parameters (sysctls) to set in the container."
      },
      "tmpfs": {
        "Type": "Map",
        "Optional": true,
        "Description": "A map of container directories which should be replaced by `tmpfs mounts`, and their corresponding mount options."
      },
      "tty": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If `true`, allocate a pseudo-tty (`docker run -t`). Defaults to `false`.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ulimit": {
        "Type": "Set",
        "Optional": true,
        "Description": "Ulimit options to add.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "hard": {
              "Type": "Int",
              "Required": true,
              "Description": "The hard limit"
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the ulimit"
            },
            "soft": {
              "Type": "Int",
              "Required": true,
              "Description": "The soft limit"
            }
          }
        }
      },
      "upload": {
        "Type": "Set",
        "Optional": true,
        "Description": "Specifies files to upload to the container before starting it. Only one of `content` or `content_base64` can be set and at least one of them has to be set.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "content": {
              "Type": "String",
              "Optional": true,
              "Description": "Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text. Conflicts with `content_base64` \u0026 `source`"
            },
            "content_base64": {
              "Type": "String",
              "Optional": true,
              "Description": "Base64-encoded data that will be decoded and uploaded as raw bytes for the object content. This allows safely uploading non-UTF8 binary data, but is recommended only for larger binary content such as the result of the `base64encode` interpolation function. See [here](https://github.com/terraform-providers/terraform-provider-docker/issues/48#issuecomment-374174588) for the reason. Conflicts with `content` \u0026 `source`"
            },
            "executable": {
              "Type": "Bool",
              "Optional": true,
              "Description": "If `true`, the file will be uploaded with user executable permission. Defaults to `false`.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "file": {
              "Type": "String",
              "Required": true,
              "Description": "Path to the file in the container where is upload goes to"
            },
            "source": {
              "Type": "String",
              "Optional": true,
              "Description": "A filename that references a file which will be uploaded as the object content. This allows for large file uploads that do not get stored in state. Conflicts with `content` \u0026 `content_base64`"
            },
            "source_hash": {
              "Type": "String",
              "Optional": true,
              "Description": "If using `source`, this will force an update if the file content has updated but the filename has not. "
            }
          }
        }
      },
      "user": {
        "Type": "String",
        "Optional": true,
        "Description": "User used for run the first process. Format is `user` or `user:group` which user and group can be passed literraly or by name.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "userns_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "Sets the usernamespace mode for the container when usernamespace remapping option is enabled."
      },
      "volumes": {
        "Type": "Set",
        "Optional": true,
        "Description": "Spec for mounting volumes in the container.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "container_path": {
              "Type": "String",
              "Optional": true,
              "Description": "The path in the container where the volume will be mounted."
            },
            "from_container": {
              "Type": "String",
              "Optional": true,
              "Description": "The container where the volume is coming from."
            },
            "host_path": {
              "Type": "String",
              "Optional": true,
              "Description": "The path on the host where the volume is coming from."
            },
            "read_only": {
              "Type": "Bool",
              "Optional": true,
              "Description": "If `true`, this volume will be readonly. Defaults to `false`."
            },
            "volume_name": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of the docker volume which should be mounted."
            }
          }
        }
      },
      "working_dir": {
        "Type": "String",
        "Optional": true,
        "Description": "The working directory for commands to run in."
      }
    },
    "docker_image": {
      "build": {
        "Type": "Set",
        "Optional": true,
        "Description": "Configuration to build an image. Please see [docker build command reference](https://docs.docker.com/engine/reference/commandline/build/#options) too.",
        "MaxItems": 1,
        "ConflictsWith": [
          "pull_triggers",
          "pull_trigger"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "build_arg": {
              "Type": "Map",
              "Optional": true,
              "Description": "Set build-time variables",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "dockerfile": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the Dockerfile. Defaults to `Dockerfile`.",
              "Default": {
                "Type": "string",
                "Value": "Dockerfile"
              }
            },
            "force_remove": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Always remove intermediate containers"
            },
            "label": {
              "Type": "Map",
              "Optional": true,
              "Description": "Set metadata for an image",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "no_cache": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Do not use cache when building the image"
            },
            "path": {
              "Type": "String",
              "Required": true,
              "Description": "Context path"
            },
            "remove": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Remove intermediate containers after a successful build. Defaults to  `true`.",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "tag": {
              "Type": "List",
              "Optional": true,
              "Description": "Name and optionally a tag in the 'name:tag' format",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "target": {
              "Type": "String",
              "Optional": true,
              "Description": "Set the target build stage to build"
            }
          }
        }
      },
      "force_remove": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If true, then the image is removed forcibly when the resource is destroyed."
      },
      "keep_locally": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If true, then the Docker image won't be deleted on destroy operation. If this is false, it will delete the image from the docker local storage on destroy operation."
      },
      "latest": {
        "Type": "String",
        "Description": "The ID of the image in the form of `sha256:\u003chash\u003e` image digest. Do not confuse it with the default `latest` tag.",
        "Computed": true,
        "Deprecated": "Use repo_digest instead"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the Docker image, including any tags or SHA256 repo digests."
      },
      "output": {
        "Type": "String",
        "Computed": true,
        "Deprecated": "Is unused and will be removed.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "pull_trigger": {
        "Type": "String",
        "Optional": true,
        "Description": "A value which cause an image pull when changed",
        "ConflictsWith": [
          "pull_triggers"
        ],
        "Deprecated": "Use field pull_triggers instead"
      },
      "pull_triggers": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of values which cause an image pull when changed. This is used to store the image digest from the registry when using the [docker_registry_image](../data-sources/registry_image.md).",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "repo_digest": {
        "Type": "String",
        "Description": "The image sha256 digest in the form of `repo[:tag]@sha256:\u003chash\u003e`.",
        "Computed": true
      }
    },
    "docker_network": {
      "attachable": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable manual container attachment to the network."
      },
      "check_duplicate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Requests daemon to check for networks with same name."
      },
      "driver": {
        "Type": "String",
        "Optional": true,
        "Description": "The driver of the Docker network. Possible values are `bridge`, `host`, `overlay`, `macvlan`. See [network docs](https://docs.docker.com/network/#network-drivers) for more details.",
        "Computed": true
      },
      "ingress": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Create swarm routing-mesh network. Defaults to `false`."
      },
      "internal": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether the network is internal.",
        "Computed": true
      },
      "ipam_config": {
        "Type": "Set",
        "Optional": true,
        "Description": "The IPAM configuration options",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aux_address": {
              "Type": "Map",
              "Optional": true,
              "Description": "Auxiliary IPv4 or IPv6 addresses used by Network driver"
            },
            "gateway": {
              "Type": "String",
              "Optional": true,
              "Description": "The IP address of the gateway"
            },
            "ip_range": {
              "Type": "String",
              "Optional": true,
              "Description": "The ip range in CIDR form"
            },
            "subnet": {
              "Type": "String",
              "Optional": true,
              "Description": "The subnet in CIDR form"
            }
          }
        }
      },
      "ipam_driver": {
        "Type": "String",
        "Optional": true,
        "Description": "Driver used by the custom IP scheme of the network. Defaults to `default`",
        "Default": {
          "Type": "string",
          "Value": "default"
        }
      },
      "ipv6": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable IPv6 networking. Defaults to `false`."
      },
      "labels": {
        "Type": "Set",
        "Optional": true,
        "Description": "User-defined key/value metadata",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "label": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the label"
            },
            "value": {
              "Type": "String",
              "Required": true,
              "Description": "Value of the label"
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the Docker network."
      },
      "options": {
        "Type": "Map",
        "Optional": true,
        "Description": "Only available with bridge networks. See [bridge options docs](https://docs.docker.com/engine/reference/commandline/network_create/#bridge-driver-options) for more details.",
        "Computed": true
      },
      "scope": {
        "Type": "String",
        "Description": "Scope of the network. One of `swarm`, `global`, or `local`.",
        "Computed": true
      }
    },
    "docker_plugin": {
      "alias": {
        "Type": "String",
        "Optional": true,
        "Description": "Docker Plugin alias",
        "Computed": true
      },
      "enable_timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "HTTP client timeout to enable the plugin"
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If `true` the plugin is enabled. Defaults to `true`",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "env": {
        "Type": "Set",
        "Optional": true,
        "Description": "The environment variables in the form of `KEY=VALUE`, e.g. `DEBUG=0`",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "force_destroy": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If true, then the plugin is destroyed forcibly"
      },
      "force_disable": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If true, then the plugin is disabled forcibly"
      },
      "grant_all_permissions": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If true, grant all permissions necessary to run the plugin",
        "ConflictsWith": [
          "grant_permissions"
        ]
      },
      "grant_permissions": {
        "Type": "Set",
        "Optional": true,
        "Description": "Grant specific permissions only",
        "ConflictsWith": [
          "grant_all_permissions"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the permission"
            },
            "value": {
              "Type": "Set",
              "Required": true,
              "Description": "The value of the permission",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Docker Plugin name"
      },
      "plugin_reference": {
        "Type": "String",
        "Description": "Docker Plugin Reference",
        "Computed": true
      }
    },
    "docker_registry_image": {
      "build": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition for building the image",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "auth_config": {
              "Type": "List",
              "Optional": true,
              "Description": "The configuration for the authentication",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "auth": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "the auth token"
                  },
                  "email": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "the user emal"
                  },
                  "host_name": {
                    "Type": "String",
                    "Required": true,
                    "Description": "hostname of the registry"
                  },
                  "identity_token": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "the identity token"
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "the registry password"
                  },
                  "registry_token": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "the registry token"
                  },
                  "server_address": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "the server address"
                  },
                  "user_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "the registry user name"
                  }
                }
              }
            },
            "build_args": {
              "Type": "Map",
              "Optional": true,
              "Description": "Pairs for build-time variables in the form TODO",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "build_id": {
              "Type": "String",
              "Optional": true,
              "Description": "BuildID is an optional identifier that can be passed together with the build request. The same identifier can be used to gracefully cancel the build with the cancel request."
            },
            "cache_from": {
              "Type": "List",
              "Optional": true,
              "Description": "Images to consider as cache sources",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "cgroup_parent": {
              "Type": "String",
              "Optional": true,
              "Description": "Optional parent cgroup for the container"
            },
            "context": {
              "Type": "String",
              "Required": true,
              "Description": "The absolute path to the context folder. You can use the helper function '${path.cwd}/context-dir'."
            },
            "cpu_period": {
              "Type": "Int",
              "Optional": true,
              "Description": "The length of a CPU period in microseconds"
            },
            "cpu_quota": {
              "Type": "Int",
              "Optional": true,
              "Description": "Microseconds of CPU time that the container can get in a CPU period"
            },
            "cpu_set_cpus": {
              "Type": "String",
              "Optional": true,
              "Description": "CPUs in which to allow execution (e.g., `0-3`, `0`, `1`)"
            },
            "cpu_set_mems": {
              "Type": "String",
              "Optional": true,
              "Description": "MEMs in which to allow execution (`0-3`, `0`, `1`)"
            },
            "cpu_shares": {
              "Type": "Int",
              "Optional": true,
              "Description": "CPU shares (relative weight)"
            },
            "dockerfile": {
              "Type": "String",
              "Optional": true,
              "Description": "Dockerfile file. Defaults to `Dockerfile`",
              "Default": {
                "Type": "string",
                "Value": "Dockerfile"
              }
            },
            "extra_hosts": {
              "Type": "List",
              "Optional": true,
              "Description": "A list of hostnames/IP mappings to add to the container’s /etc/hosts file. Specified in the form [\"hostname:IP\"]",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "force_remove": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Always remove intermediate containers"
            },
            "isolation": {
              "Type": "String",
              "Optional": true,
              "Description": "Isolation represents the isolation technology of a container. The supported values are "
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "User-defined key/value metadata",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "memory": {
              "Type": "Int",
              "Optional": true,
              "Description": "Set memory limit for build"
            },
            "memory_swap": {
              "Type": "Int",
              "Optional": true,
              "Description": "Total memory (memory + swap), -1 to enable unlimited swap"
            },
            "network_mode": {
              "Type": "String",
              "Optional": true,
              "Description": "Set the networking mode for the RUN instructions during build"
            },
            "no_cache": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Do not use the cache when building the image"
            },
            "platform": {
              "Type": "String",
              "Optional": true,
              "Description": "Set platform if server is multi-platform capable"
            },
            "pull_parent": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Attempt to pull the image even if an older image exists locally"
            },
            "remote_context": {
              "Type": "String",
              "Optional": true,
              "Description": "A Git repository URI or HTTP/HTTPS context URI"
            },
            "remove": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Remove intermediate containers after a successful build (default behavior)"
            },
            "security_opt": {
              "Type": "List",
              "Optional": true,
              "Description": "The security options",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "session_id": {
              "Type": "String",
              "Optional": true,
              "Description": "Set an ID for the build session"
            },
            "shm_size": {
              "Type": "Int",
              "Optional": true,
              "Description": "Size of /dev/shm in bytes. The size must be greater than 0"
            },
            "squash": {
              "Type": "Bool",
              "Optional": true,
              "Description": "If true the new layers are squashed into a new image with a single new layer"
            },
            "suppress_output": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Suppress the build output and print image ID on success"
            },
            "target": {
              "Type": "String",
              "Optional": true,
              "Description": "Set the target build stage to build"
            },
            "ulimit": {
              "Type": "List",
              "Optional": true,
              "Description": "Configuration for ulimits",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "hard": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "soft limit"
                  },
                  "name": {
                    "Type": "String",
                    "Required": true,
                    "Description": "type of ulimit, e.g. `nofile`"
                  },
                  "soft": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "hard limit"
                  }
                }
              }
            },
            "version": {
              "Type": "String",
              "Optional": true,
              "Description": "Version of the underlying builder to use"
            }
          }
        }
      },
      "insecure_skip_verify": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If `true`, the verification of TLS certificates of the server/registry is disabled. Defaults to `false`",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "keep_remotely": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If true, then the Docker image won't be deleted on destroy operation. If this is false, it will delete the image from the docker registry on destroy operation. Defaults to `false`",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the Docker image."
      },
      "sha256_digest": {
        "Type": "String",
        "Description": "The sha256 digest of the image.",
        "Computed": true
      }
    },
    "docker_secret": {
      "data": {
        "Type": "String",
        "Required": true,
        "Description": "Base64-url-safe-encoded secret data"
      },
      "labels": {
        "Type": "Set",
        "Optional": true,
        "Description": "User-defined key/value metadata",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "label": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the label"
            },
            "value": {
              "Type": "String",
              "Required": true,
              "Description": "Value of the label"
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "User-defined name of the secret"
      }
    },
    "docker_service": {
      "auth": {
        "Type": "List",
        "Optional": true,
        "Description": "Configuration for the authentication for pulling the images of the service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "The password",
              "DefaultFunc": "ENV(DOCKER_REGISTRY_PASS)"
            },
            "server_address": {
              "Type": "String",
              "Required": true,
              "Description": "The address of the server for the authentication"
            },
            "username": {
              "Type": "String",
              "Optional": true,
              "Description": "The username",
              "DefaultFunc": "ENV(DOCKER_REGISTRY_USER)"
            }
          }
        }
      },
      "converge_config": {
        "Type": "List",
        "Optional": true,
        "Description": "A configuration to ensure that a service converges aka reaches the desired that of all task up and running",
        "MaxItems": 1,
        "ConflictsWith": [
          "mode.0.global"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "delay": {
              "Type": "String",
              "Optional": true,
              "Description": "The interval to check if the desired state is reached `(ms|s)`. Defaults to `7s`.",
              "Default": {
                "Type": "string",
                "Value": "7s"
              }
            },
            "timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "The timeout of the service to reach the desired state `(s|m)`. Defaults to `3m`",
              "Default": {
                "Type": "string",
                "Value": "3m"
              }
            }
          }
        }
      },
      "endpoint_spec": {
        "Type": "List",
        "Optional": true,
        "Description": "Properties that can be configured to access and load balance a service",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "mode": {
              "Type": "String",
              "Optional": true,
              "Description": "The mode of resolution to use for internal load balancing between tasks",
              "Computed": true
            },
            "ports": {
              "Type": "List",
              "Optional": true,
              "Description": "List of exposed ports that this service is accessible on from the outside. Ports can only be provided if 'vip' resolution mode is used",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "A random name for the port"
                  },
                  "protocol": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Rrepresents the protocol of a port: `tcp`, `udp` or `sctp`. Defaults to `tcp`.",
                    "Default": {
                      "Type": "string",
                      "Value": "tcp"
                    }
                  },
                  "publish_mode": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Represents the mode in which the port is to be published: 'ingress' or 'host'. Defaults to `ingress`.",
                    "Default": {
                      "Type": "string",
                      "Value": "ingress"
                    }
                  },
                  "published_port": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "The port on the swarm hosts",
                    "Computed": true
                  },
                  "target_port": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "The port inside the container"
                  }
                }
              }
            }
          }
        }
      },
      "labels": {
        "Type": "Set",
        "Optional": true,
        "Description": "User-defined key/value metadata",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "label": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the label"
            },
            "value": {
              "Type": "String",
              "Required": true,
              "Description": "Value of the label"
            }
          }
        }
      },
      "mode": {
        "Type": "List",
        "Optional": true,
        "Description": "Scheduling mode for the service",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "global": {
              "Type": "Bool",
              "Optional": true,
              "Description": "The global service mode. Defaults to `false`",
              "ConflictsWith": [
                "mode.0.replicated",
                "converge_config"
              ],
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "replicated": {
              "Type": "List",
              "Optional": true,
              "Description": "The replicated service mode",
              "Computed": true,
              "MaxItems": 1,
              "ConflictsWith": [
                "mode.0.global"
              ],
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "replicas": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "The amount of replicas of the service. Defaults to `1`",
                    "Default": {
                      "Type": "int",
                      "Value": "1"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the service"
      },
      "rollback_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Specification for the rollback strategy of the service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "delay": {
              "Type": "String",
              "Optional": true,
              "Description": "Delay between task rollbacks (ns|us|ms|s|m|h). Defaults to `0s`.",
              "Default": {
                "Type": "string",
                "Value": "0s"
              }
            },
            "failure_action": {
              "Type": "String",
              "Optional": true,
              "Description": "Action on rollback failure: pause | continue. Defaults to `pause`.",
              "Default": {
                "Type": "string",
                "Value": "pause"
              }
            },
            "max_failure_ratio": {
              "Type": "String",
              "Optional": true,
              "Description": "Failure rate to tolerate during a rollback. Defaults to `0.0`.",
              "Default": {
                "Type": "string",
                "Value": "0.0"
              }
            },
            "monitor": {
              "Type": "String",
              "Optional": true,
              "Description": "Duration after each task rollback to monitor for failure (ns|us|ms|s|m|h). Defaults to `5s`.",
              "Default": {
                "Type": "string",
                "Value": "5s"
              }
            },
            "order": {
              "Type": "String",
              "Optional": true,
              "Description": "Rollback order: either 'stop-first' or 'start-first'. Defaults to `stop-first`.",
              "Default": {
                "Type": "string",
                "Value": "stop-first"
              }
            },
            "parallelism": {
              "Type": "Int",
              "Optional": true,
              "Description": "Maximum number of tasks to be rollbacked in one iteration. Defaults to `1`",
              "Default": {
                "Type": "int",
                "Value": "1"
              }
            }
          }
        }
      },
      "task_spec": {
        "Type": "List",
        "Required": true,
        "Description": "User modifiable task configuration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "container_spec": {
              "Type": "List",
              "Required": true,
              "Description": "The spec for each container",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "args": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Arguments to the command",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "command": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "The command/entrypoint to be run in the image. According to the [docker cli](https://github.com/docker/cli/blob/v20.10.7/cli/command/service/opts.go#L705) the override of the entrypoint is also passed to the `command` property and there is no `entrypoint` attribute in the `ContainerSpec` of the service.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "configs": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "References to zero or more configs that will be exposed to the service",
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "config_id": {
                          "Type": "String",
                          "Required": true,
                          "Description": "ID of the specific config that we're referencing"
                        },
                        "config_name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Name of the config that this references, but this is just provided for lookup/display purposes. The config in the reference will be identified by its ID"
                        },
                        "file_gid": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Represents the file GID. Defaults to `0`.",
                          "Default": {
                            "Type": "string",
                            "Value": "0"
                          }
                        },
                        "file_mode": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Represents represents the FileMode of the file. Defaults to `0o444`.",
                          "Default": {
                            "Type": "int",
                            "Value": "292"
                          }
                        },
                        "file_name": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Represents the final filename in the filesystem"
                        },
                        "file_uid": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Represents the file UID. Defaults to `0`.",
                          "Default": {
                            "Type": "string",
                            "Value": "0"
                          }
                        }
                      }
                    }
                  },
                  "dir": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The working directory for commands to run in"
                  },
                  "dns_config": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Specification for DNS related configurations in resolver configuration file (`resolv.conf`)",
                    "Computed": true,
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "nameservers": {
                          "Type": "List",
                          "Required": true,
                          "Description": "The IP addresses of the name servers",
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "options": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "A list of internal resolver variables to be modified (e.g., `debug`, `ndots:3`, etc.)",
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "search": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "A search list for host-name lookup",
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        }
                      }
                    }
                  },
                  "env": {
                    "Type": "Map",
                    "Optional": true,
                    "Description": "A list of environment variables in the form VAR=\"value\"",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "groups": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "A list of additional groups that the container process will run as",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "healthcheck": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "A test to perform to check that the container is healthy",
                    "Computed": true,
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "interval": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Time between running the check (ms|s|m|h). Defaults to `0s`.",
                          "Default": {
                            "Type": "string",
                            "Value": "0s"
                          }
                        },
                        "retries": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Consecutive failures needed to report unhealthy. Defaults to `0`",
                          "Default": {
                            "Type": "int",
                            "Value": "0"
                          }
                        },
                        "start_period": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Start period for the container to initialize before counting retries towards unstable (ms|s|m|h). Defaults to `0s`.",
                          "Default": {
                            "Type": "string",
                            "Value": "0s"
                          }
                        },
                        "test": {
                          "Type": "List",
                          "Required": true,
                          "Description": "The test to perform as list",
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "timeout": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Maximum time to allow one check to run (ms|s|m|h). Defaults to `0s`.",
                          "Default": {
                            "Type": "string",
                            "Value": "0s"
                          }
                        }
                      }
                    }
                  },
                  "hostname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The hostname to use for the container, as a valid RFC 1123 hostname"
                  },
                  "hosts": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "A list of hostname/IP mappings to add to the container's hosts file",
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "host": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The name of the host"
                        },
                        "ip": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The ip of the host"
                        }
                      }
                    }
                  },
                  "image": {
                    "Type": "String",
                    "Required": true,
                    "Description": "The image name to use for the containers of the service, like `nginx:1.17.6`. Also use the data-source or resource of `docker_image` with the `repo_digest` or `docker_registry_image` with the `name` attribute for this, as shown in the examples."
                  },
                  "isolation": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Isolation technology of the containers running the service. (Windows only). Defaults to `default`.",
                    "Default": {
                      "Type": "string",
                      "Value": "default"
                    }
                  },
                  "labels": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "User-defined key/value metadata",
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "label": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Name of the label"
                        },
                        "value": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Value of the label"
                        }
                      }
                    }
                  },
                  "mounts": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "Specification for mounts to be added to containers created as part of the service",
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "bind_options": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Optional configuration for the bind type",
                          "MaxItems": 1,
                          "IsBlock": true,
                          "ConfigImplicitMode": "Block",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "propagation": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Bind propagation refers to whether or not mounts created within a given bind-mount or named volume can be propagated to replicas of that mount. See the [docs](https://docs.docker.com/storage/bind-mounts/#configure-bind-propagation) for details. Defaults to `rprivate`",
                                "Default": {
                                  "Type": "string",
                                  "Value": "rprivate"
                                }
                              }
                            }
                          }
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether the mount should be read-only"
                        },
                        "source": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Mount source (e.g. a volume name, a host path)"
                        },
                        "target": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Container path"
                        },
                        "tmpfs_options": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Optional configuration for the tmpfs type",
                          "MaxItems": 1,
                          "IsBlock": true,
                          "ConfigImplicitMode": "Block",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "mode": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "The permission mode for the tmpfs mount in an integer"
                              },
                              "size_bytes": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "The size for the tmpfs mount in bytes"
                              }
                            }
                          }
                        },
                        "type": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The mount type"
                        },
                        "volume_options": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Optional configuration for the volume type",
                          "MaxItems": 1,
                          "IsBlock": true,
                          "ConfigImplicitMode": "Block",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "driver_name": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Name of the driver to use to create the volume"
                              },
                              "driver_options": {
                                "Type": "Map",
                                "Optional": true,
                                "Description": "key/value map of driver specific options",
                                "ConfigImplicitMode": "Attr",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "labels": {
                                "Type": "Set",
                                "Optional": true,
                                "Description": "User-defined key/value metadata",
                                "IsBlock": true,
                                "ConfigImplicitMode": "Block",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "label": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Name of the label"
                                    },
                                    "value": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Value of the label"
                                    }
                                  }
                                }
                              },
                              "no_copy": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Populate volume with data from the target"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "privileges": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Security options for the container",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "credential_spec": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "CredentialSpec for managed service account (Windows only)",
                          "MaxItems": 1,
                          "IsBlock": true,
                          "ConfigImplicitMode": "Block",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "file": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Load credential spec from this file"
                              },
                              "registry": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Load credential spec from this value in the Windows registry"
                              }
                            }
                          }
                        },
                        "se_linux_context": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "SELinux labels of the container",
                          "MaxItems": 1,
                          "IsBlock": true,
                          "ConfigImplicitMode": "Block",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "disable": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Disable SELinux"
                              },
                              "level": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "SELinux level label"
                              },
                              "role": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "SELinux role label"
                              },
                              "type": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "SELinux type label"
                              },
                              "user": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "SELinux user label"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "read_only": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Mount the container's root filesystem as read only"
                  },
                  "secrets": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "References to zero or more secrets that will be exposed to the service",
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "file_gid": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Represents the file GID. Defaults to `0`",
                          "Default": {
                            "Type": "string",
                            "Value": "0"
                          }
                        },
                        "file_mode": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Represents represents the FileMode of the file. Defaults to `0o444`",
                          "Default": {
                            "Type": "int",
                            "Value": "292"
                          }
                        },
                        "file_name": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Represents the final filename in the filesystem"
                        },
                        "file_uid": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Represents the file UID. Defaults to `0`",
                          "Default": {
                            "Type": "string",
                            "Value": "0"
                          }
                        },
                        "secret_id": {
                          "Type": "String",
                          "Required": true,
                          "Description": "ID of the specific secret that we're referencing"
                        },
                        "secret_name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Name of the secret that this references, but this is just provided for lookup/display purposes. The config in the reference will be identified by its ID"
                        }
                      }
                    }
                  },
                  "stop_grace_period": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Amount of time to wait for the container to terminate before forcefully removing it (ms|s|m|h). If not specified or '0s' the destroy will not check if all tasks/containers of the service terminate.",
                    "Computed": true
                  },
                  "stop_signal": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Signal to stop the container"
                  },
                  "user": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The user inside the container"
                  }
                }
              }
            },
            "force_update": {
              "Type": "Int",
              "Optional": true,
              "Description": "A counter that triggers an update even if no relevant parameters have been changed. See the [spec](https://github.com/docker/swarmkit/blob/master/api/specs.proto#L126).",
              "Computed": true
            },
            "log_driver": {
              "Type": "List",
              "Optional": true,
              "Description": "Specifies the log driver to use for tasks created from this spec. If not present, the default one for the swarm will be used, finally falling back to the engine default if not specified",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Required": true,
                    "Description": "The logging driver to use"
                  },
                  "options": {
                    "Type": "Map",
                    "Optional": true,
                    "Description": "The options for the logging driver",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "networks": {
              "Type": "Set",
              "Optional": true,
              "Description": "Ids of the networks in which the  container will be put in",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "placement": {
              "Type": "List",
              "Optional": true,
              "Description": "The placement preferences",
              "Computed": true,
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "constraints": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "An array of constraints. e.g.: `node.role==manager`",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "max_replicas": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum number of replicas for per node (default value is `0`, which is unlimited)"
                  },
                  "platforms": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "Platforms stores all the platforms that the service's image can run on",
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "architecture": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The architecture, e.g. `amd64`"
                        },
                        "os": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The operation system, e.g. `linux`"
                        }
                      }
                    }
                  },
                  "prefs": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "Preferences provide a way to make the scheduler aware of factors such as topology. They are provided in order from highest to lowest precedence, e.g.: `spread=node.role.manager`",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "resources": {
              "Type": "List",
              "Optional": true,
              "Description": "Resource requirements which apply to each individual container created as part of the service",
              "Computed": true,
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "limits": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Describes the resources which can be advertised by a node and requested by a task",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "memory_bytes": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The amounf of memory in bytes the container allocates"
                        },
                        "nano_cpus": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "CPU shares in units of `1/1e9` (or `10^-9`) of the CPU. Should be at least `1000000`"
                        }
                      }
                    }
                  },
                  "reservation": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "An object describing the resources which can be advertised by a node and requested by a task",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "generic_resources": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "User-defined resources can be either Integer resources (e.g, `SSD=3`) or String resources (e.g, GPU=UUID1)",
                          "MaxItems": 1,
                          "IsBlock": true,
                          "ConfigImplicitMode": "Block",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "discrete_resources_spec": {
                                "Type": "Set",
                                "Optional": true,
                                "Description": "The Integer resources",
                                "ConfigImplicitMode": "Attr",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "named_resources_spec": {
                                "Type": "Set",
                                "Optional": true,
                                "Description": "The String resources",
                                "ConfigImplicitMode": "Attr",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              }
                            }
                          }
                        },
                        "memory_bytes": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The amounf of memory in bytes the container allocates"
                        },
                        "nano_cpus": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "CPU shares in units of 1/1e9 (or 10^-9) of the CPU. Should be at least `1000000`"
                        }
                      }
                    }
                  }
                }
              }
            },
            "restart_policy": {
              "Type": "List",
              "Optional": true,
              "Description": "Specification for the restart policy which applies to containers created as part of this service.",
              "Computed": true,
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "condition": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Condition for restart"
                  },
                  "delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Delay between restart attempts (ms|s|m|h)"
                  },
                  "max_attempts": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Maximum attempts to restart a given container before giving up (default value is `0`, which is ignored)"
                  },
                  "window": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The time window used to evaluate the restart policy (default value is `0`, which is unbounded) (ms|s|m|h)"
                  }
                }
              }
            },
            "runtime": {
              "Type": "String",
              "Optional": true,
              "Description": "Runtime is the type of runtime specified for the task executor. See the [types](https://github.com/moby/moby/blob/master/api/types/swarm/runtime.go).",
              "Computed": true
            }
          }
        }
      },
      "update_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Specification for the update strategy of the service",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "delay": {
              "Type": "String",
              "Optional": true,
              "Description": "Delay between task updates `(ns|us|ms|s|m|h)`. Defaults to `0s`.",
              "Default": {
                "Type": "string",
                "Value": "0s"
              }
            },
            "failure_action": {
              "Type": "String",
              "Optional": true,
              "Description": "Action on update failure: `pause`, `continue` or `rollback`. Defaults to `pause`.",
              "Default": {
                "Type": "string",
                "Value": "pause"
              }
            },
            "max_failure_ratio": {
              "Type": "String",
              "Optional": true,
              "Description": "Failure rate to tolerate during an update. Defaults to `0.0`.",
              "Default": {
                "Type": "string",
                "Value": "0.0"
              }
            },
            "monitor": {
              "Type": "String",
              "Optional": true,
              "Description": "Duration after each task update to monitor for failure (ns|us|ms|s|m|h). Defaults to `5s`.",
              "Default": {
                "Type": "string",
                "Value": "5s"
              }
            },
            "order": {
              "Type": "String",
              "Optional": true,
              "Description": "Update order: either 'stop-first' or 'start-first'. Defaults to `stop-first`.",
              "Default": {
                "Type": "string",
                "Value": "stop-first"
              }
            },
            "parallelism": {
              "Type": "Int",
              "Optional": true,
              "Description": "Maximum number of tasks to be updated in one iteration. Defaults to `1`",
              "Default": {
                "Type": "int",
                "Value": "1"
              }
            }
          }
        }
      }
    },
    "docker_volume": {
      "driver": {
        "Type": "String",
        "Optional": true,
        "Description": "Driver type for the volume. Defaults to `local`.",
        "Computed": true
      },
      "driver_opts": {
        "Type": "Map",
        "Optional": true,
        "Description": "Options specific to the driver."
      },
      "labels": {
        "Type": "Set",
        "Optional": true,
        "Description": "User-defined key/value metadata",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "label": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the label"
            },
            "value": {
              "Type": "String",
              "Required": true,
              "Description": "Value of the label"
            }
          }
        }
      },
      "mountpoint": {
        "Type": "String",
        "Description": "The mountpoint of the volume.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the Docker volume (will be generated if not provided).",
        "Computed": true
      }
    }
  },
  "data-sources": {
    "docker_image": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the Docker image, including any tags or SHA256 repo digests."
      },
      "repo_digest": {
        "Type": "String",
        "Description": "The image sha256 digest in the form of `repo[:tag]@sha256:\u003chash\u003e`. It may be empty in the edge case where the local image was pulled from a repo, tagged locally, and then referred to in the data source by that local name/tag.",
        "Computed": true
      }
    },
    "docker_network": {
      "driver": {
        "Type": "String",
        "Description": "The driver of the Docker network. Possible values are `bridge`, `host`, `overlay`, `macvlan`. See [network docs](https://docs.docker.com/network/#network-drivers) for more details.",
        "Computed": true
      },
      "id": {
        "Type": "String",
        "Computed": true
      },
      "internal": {
        "Type": "Bool",
        "Description": "If `true`, the network is internal.",
        "Computed": true
      },
      "ipam_config": {
        "Type": "Set",
        "Description": "The IPAM configuration options",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "aux_address": {
              "Type": "Map",
              "Optional": true,
              "Description": "Auxiliary IPv4 or IPv6 addresses used by Network driver"
            },
            "gateway": {
              "Type": "String",
              "Optional": true,
              "Description": "The IP address of the gateway"
            },
            "ip_range": {
              "Type": "String",
              "Optional": true,
              "Description": "The ip range in CIDR form"
            },
            "subnet": {
              "Type": "String",
              "Optional": true,
              "Description": "The subnet in CIDR form"
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the Docker network."
      },
      "options": {
        "Type": "Map",
        "Description": "Only available with bridge networks. See [bridge options docs](https://docs.docker.com/engine/reference/commandline/network_create/#bridge-driver-options) for more details.",
        "Computed": true
      },
      "scope": {
        "Type": "String",
        "Description": "Scope of the network. One of `swarm`, `global`, or `local`.",
        "Computed": true
      }
    },
    "docker_plugin": {
      "alias": {
        "Type": "String",
        "Optional": true,
        "Description": "The alias of the Docker plugin. If the tag is omitted, `:latest` is complemented to the attribute value."
      },
      "enabled": {
        "Type": "Bool",
        "Description": "If `true` the plugin is enabled",
        "Computed": true
      },
      "env": {
        "Type": "Set",
        "Description": "The environment variables in the form of `KEY=VALUE`, e.g. `DEBUG=0`",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "grant_all_permissions": {
        "Type": "Bool",
        "Description": "If true, grant all permissions necessary to run the plugin",
        "Computed": true
      },
      "id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the plugin, which has precedence over the `alias` of both are given"
      },
      "name": {
        "Type": "String",
        "Description": "The plugin name. If the tag is omitted, `:latest` is complemented to the attribute value.",
        "Computed": true
      },
      "plugin_reference": {
        "Type": "String",
        "Description": "The Docker Plugin Reference",
        "Computed": true
      }
    },
    "docker_registry_image": {
      "insecure_skip_verify": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If `true`, the verification of TLS certificates of the server/registry is disabled. Defaults to `false`",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the Docker image, including any tags. e.g. `alpine:latest`"
      },
      "sha256_digest": {
        "Type": "String",
        "Description": "The content digest of the image, as stored in the registry.",
        "Computed": true
      }
    }
  }
}