{
  ".schema_version": "1",
  "name": "incapsula",
  "type": "provider",
  "version": "v2.1.0",
  "provider": {
    "api_id": {
      "Type": "String",
      "Optional": true,
      "Description": "The API identifier for API operations. You can retrieve this\nfrom the Incapsula management console. Can be set via INCAPSULA_API_ID environment variable.",
      "DefaultFunc": "ENV(INCAPSULA_API_ID)"
    },
    "api_key": {
      "Type": "String",
      "Optional": true,
      "Description": "The API key for API operations. You can retrieve this\nfrom the Incapsula management console. Can be set via INCAPSULA_API_KEY environment variable.",
      "DefaultFunc": "ENV(INCAPSULA_API_KEY)"
    }
  },
  "resources": {
    "incapsula_acl_security_rule": {
      "client_apps": {
        "Type": "String",
        "Optional": true,
        "Description": "The client apps"
      },
      "continents": {
        "Type": "String",
        "Optional": true,
        "Description": "A comma separated list of continent codes."
      },
      "countries": {
        "Type": "String",
        "Optional": true,
        "Description": "A comma separated list of country codes."
      },
      "ips": {
        "Type": "String",
        "Optional": true,
        "Description": "A comma separated list of IPs or IP ranges, e.g: 192.168.1.1, 192.168.1.1-192.168.1.100 or 192.168.1.1/24."
      },
      "rule_id": {
        "Type": "String",
        "Required": true,
        "Description": "The id of the acl, e.g api.acl.blacklisted_ips."
      },
      "site_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Numeric identifier of the site to operate on."
      },
      "url_patterns": {
        "Type": "String",
        "Optional": true,
        "Description": "The patterns should be in accordance with the matching urls sent by the urls parameter. Options: CONTAINS | EQUALS | PREFIX | SUFFIX | NOT_EQUALS | NOT_CONTAIN | NOT_PREFIX | NOT_SUFFIX"
      },
      "urls": {
        "Type": "String",
        "Optional": true,
        "Description": "A comma separated list of resource paths. NOTE: this is a 1:1 list with url_patterns e.q:  urls = \"Test,/Values\" url_patterns = \"CONTAINS,PREFIX\""
      }
    },
    "incapsula_custom_certificate": {
      "certificate": {
        "Type": "String",
        "Required": true,
        "Description": "The certificate file in base64 format."
      },
      "passphrase": {
        "Type": "String",
        "Optional": true,
        "Description": "The passphrase used to protect your SSL certificate. This will be encoded in sha256 in terraform state."
      },
      "private_key": {
        "Type": "String",
        "Optional": true,
        "Description": "The private key of the certificate in base64 format. Optional in case of PFX certificate file format. This will be encoded in sha256 in terraform state."
      },
      "site_id": {
        "Type": "String",
        "Required": true,
        "Description": "Numeric identifier of the site to operate on."
      }
    },
    "incapsula_data_center": {
      "is_content": {
        "Type": "String",
        "Optional": true,
        "Description": "The data center will be available for specific resources (Forward Delivery Rules)."
      },
      "is_enabled": {
        "Type": "String",
        "Optional": true,
        "Description": "Enables the data center.",
        "Default": {
          "Type": "string",
          "Value": "true"
        }
      },
      "is_standby": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines the data center as standby for failover.",
        "Default": {
          "Type": "string",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The new data center's name."
      },
      "server_address": {
        "Type": "String",
        "Required": true,
        "Description": "The server's address. Possible values: IP, CNAME."
      },
      "site_id": {
        "Type": "String",
        "Required": true,
        "Description": "Numeric identifier of the site to operate on."
      }
    },
    "incapsula_data_center_server": {
      "dc_id": {
        "Type": "String",
        "Required": true,
        "Description": "Numeric identifier of the data center server to operate on."
      },
      "is_enabled": {
        "Type": "String",
        "Optional": true,
        "Description": "Enables the data center server.",
        "Default": {
          "Type": "string",
          "Value": "true"
        }
      },
      "is_standby": {
        "Type": "String",
        "Optional": true,
        "Description": "Set the server as Active (P0) or Standby (P1).",
        "Default": {
          "Type": "string",
          "Value": "false"
        }
      },
      "server_address": {
        "Type": "String",
        "Optional": true,
        "Description": "The server's address."
      },
      "site_id": {
        "Type": "String",
        "Required": true,
        "Description": "Numeric identifier of the site to operate on."
      }
    },
    "incapsula_incap_rule": {
      "action": {
        "Type": "String",
        "Required": true,
        "Description": "Rule action. See the detailed descriptions in the API documentation. Possible values: `RULE_ACTION_REDIRECT`, `RULE_ACTION_SIMPLIFIED_REDIRECT`, `RULE_ACTION_REWRITE_URL`, `RULE_ACTION_REWRITE_HEADER`, `RULE_ACTION_REWRITE_COOKIE`, `RULE_ACTION_DELETE_HEADER`, `RULE_ACTION_DELETE_COOKIE`, `RULE_ACTION_RESPONSE_REWRITE_HEADER`, `RULE_ACTION_RESPONSE_DELETE_HEADER`, `RULE_ACTION_RESPONSE_REWRITE_RESPONSE_CODE`, `RULE_ACTION_FORWARD_TO_DC`, `RULE_ACTION_ALERT`, `RULE_ACTION_BLOCK`, `RULE_ACTION_BLOCK_USER`, `RULE_ACTION_BLOCK_IP`, `RULE_ACTION_RETRY`, `RULE_ACTION_INTRUSIVE_HTML`, `RULE_ACTION_CAPTCHA`, `RULE_ACTION_RATE`, `RULE_ACTION_CUSTOM_ERROR_RESPONSE`"
      },
      "add_missing": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Add cookie or header if it doesn't exist (Rewrite cookie rule only)."
      },
      "dc_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "Data center to forward request to. Applies only for `RULE_ACTION_FORWARD_TO_DC`."
      },
      "error_response_data": {
        "Type": "String",
        "Optional": true,
        "Description": "The response returned when the request matches the filter and is blocked. Applies only for `RULE_ACTION_CUSTOM_ERROR_RESPONSE`."
      },
      "error_response_format": {
        "Type": "String",
        "Optional": true,
        "Description": "The format of the given error response in the error_response_data field. Applies only for `RULE_ACTION_CUSTOM_ERROR_RESPONSE`. Possible values: `json`, `xml`."
      },
      "error_type": {
        "Type": "String",
        "Optional": true,
        "Description": "The error that triggers the rule. `error.type.all` triggers the rule regardless of the error type. Applies only for `RULE_ACTION_CUSTOM_ERROR_RESPONSE`. Possible values: `error.type.all`, `error.type.connection_timeout`, `error.type.access_denied`, `error.type.parse_req_error`, `error.type.parse_resp_error`, `error.type.connection_failed`, `error.type.deny_and_retry`, `error.type.ssl_failed`, `error.type.deny_and_captcha`, `error.type.2fa_required`, `error.type.no_ssl_config`, `error.type.no_ipv6_config`."
      },
      "filter": {
        "Type": "String",
        "Required": true,
        "Description": "The filter defines the conditions that trigger the rule action. For action `RULE_ACTION_SIMPLIFIED_REDIRECT` filter is not relevant. For other actions, if left empty, the rule is always run."
      },
      "from": {
        "Type": "String",
        "Optional": true,
        "Description": "Pattern to rewrite. For `RULE_ACTION_REWRITE_URL` - Url to rewrite. For `RULE_ACTION_REWRITE_HEADER` and `RULE_ACTION_RESPONSE_REWRITE_HEADER` - Header value to rewrite. For `RULE_ACTION_REWRITE_COOKIE` - Cookie value to rewrite."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Rule name"
      },
      "rate_context": {
        "Type": "String",
        "Optional": true,
        "Description": "The context of the rate counter. Possible values `IP` or `Session`. Applies only to rules using `RULE_ACTION_RATE`."
      },
      "rate_interval": {
        "Type": "Int",
        "Optional": true,
        "Description": "The interval in seconds of the rate counter. Possible values is a multiple of `10`; minimum `10` and maximum `300`. Applies only to rules using `RULE_ACTION_RATE`."
      },
      "response_code": {
        "Type": "Int",
        "Optional": true,
        "Description": "For `RULE_ACTION_REDIRECT` or `RULE_ACTION_SIMPLIFIED_REDIRECT` rule's response code, valid values are `302`, `301`, `303`, `307`, `308`. For `RULE_ACTION_RESPONSE_REWRITE_RESPONSE_CODE` rule's response code, valid values are all 3-digits numbers. For `RULE_ACTION_CUSTOM_ERROR_RESPONSE`, valid values are `400`, `401`, `402`, `403`, `404`, `405`, `406`, `407`, `408`, `409`, `410`, `411`, `412`, `413`, `414`, `415`, `416`, `417`, `419`, `420`, `422`, `423`, `424`, `500`, `501`, `502`, `503`, `504`, `505`, `507`."
      },
      "rewrite_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of cookie or header to rewrite. Applies only for `RULE_ACTION_REWRITE_COOKIE`, `RULE_ACTION_REWRITE_HEADER` and `RULE_ACTION_RESPONSE_REWRITE_HEADER`."
      },
      "site_id": {
        "Type": "String",
        "Required": true,
        "Description": "Numeric identifier of the site to operate on."
      },
      "to": {
        "Type": "String",
        "Optional": true,
        "Description": "Pattern to change to. `RULE_ACTION_REWRITE_URL` - Url to change to. `RULE_ACTION_REWRITE_HEADER` and `RULE_ACTION_RESPONSE_REWRITE_HEADER` - Header value to change to. `RULE_ACTION_REWRITE_COOKIE` - Cookie value to change to."
      }
    },
    "incapsula_security_rule_exception": {
      "client_app_types": {
        "Type": "String",
        "Optional": true,
        "Description": "A comma separated list of client application types,"
      },
      "client_apps": {
        "Type": "String",
        "Optional": true,
        "Description": "A comma separated list of client application IDs."
      },
      "continents": {
        "Type": "String",
        "Optional": true,
        "Description": "A comma separated list of continent codes."
      },
      "countries": {
        "Type": "String",
        "Optional": true,
        "Description": "A comma separated list of country codes."
      },
      "exception_id_only": {
        "Type": "String",
        "Optional": true,
        "Description": "The id (an integer) of the whitelist to be set. This field is optional - in case no id is supplied, a new whitelist will be created."
      },
      "ips": {
        "Type": "String",
        "Optional": true,
        "Description": "A comma separated list of IPs or IP ranges, e.g: 192.168.1.1, 192.168.1.1-192.168.1.100 or 192.168.1.1/24"
      },
      "parameters": {
        "Type": "String",
        "Optional": true,
        "Description": "A comma separated list of encoded parameters."
      },
      "rule_id": {
        "Type": "String",
        "Required": true,
        "Description": "The identifier of the security rule, e.g api.threats.cross_site_scripting."
      },
      "site_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Numeric identifier of the site to operate on."
      },
      "url_patterns": {
        "Type": "String",
        "Optional": true,
        "Description": "A comma separated list of url patterns. One of: contains | equals | prefix | suffix | not_equals | not_contain | not_prefix | not_suffix. The patterns should be in accordance with the matching urls sent by the urls parameter."
      },
      "urls": {
        "Type": "String",
        "Optional": true,
        "Description": "A comma separated list of resource paths. For example, /home and /admin/index.html are resource paths, while http://www.example.com/home is not. Each URL should be encoded separately using percent encoding as specified by RFC 3986 (http://tools.ietf.org/html/rfc3986#section-2.1). An empty URL list will remove all URLs."
      },
      "user_agents": {
        "Type": "String",
        "Optional": true,
        "Description": "A comma separated list of encoded user agents."
      },
      "whitelist_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The id (an integer) of the whitelist to be set. This field is optional - in case no id is supplied, a new whitelist will be created."
      }
    },
    "incapsula_site": {
      "acceleration_level": {
        "Type": "String",
        "Optional": true,
        "Description": "none | standard | aggressive."
      },
      "account_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Numeric identifier of the account to operate on. If not specified, operation will be performed on the account identified by the authentication parameters."
      },
      "active": {
        "Type": "String",
        "Optional": true,
        "Description": "active or bypass."
      },
      "approver": {
        "Type": "String",
        "Optional": true,
        "Description": "my.approver@email.com (some approver email address)."
      },
      "dns_a_record_name": {
        "Type": "String",
        "Description": "A record name.",
        "Computed": true
      },
      "dns_a_record_value": {
        "Type": "List",
        "Description": "A record value.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "dns_cname_record_name": {
        "Type": "String",
        "Description": "CNAME record name.",
        "Computed": true
      },
      "dns_cname_record_value": {
        "Type": "String",
        "Description": "CNAME record value.",
        "Computed": true
      },
      "domain": {
        "Type": "String",
        "Required": true,
        "Description": "The fully qualified domain name of the site. For example: www.example.com, hello.example.com."
      },
      "domain_redirect_to_full": {
        "Type": "String",
        "Optional": true,
        "Description": "true or empty string."
      },
      "domain_validation": {
        "Type": "String",
        "Optional": true,
        "Description": "email or html or dns."
      },
      "force_ssl": {
        "Type": "String",
        "Optional": true,
        "Description": "If this value is true, manually set the site to support SSL. This option is only available for sites with manually configured IP/CNAME and for specific accounts."
      },
      "ignore_ssl": {
        "Type": "String",
        "Optional": true,
        "Description": "true or empty string."
      },
      "log_level": {
        "Type": "String",
        "Optional": true,
        "Description": "Available only for Enterprise Plan customers that purchased the Logs Integration SKU. Sets the log reporting level for the site. Options are full, security, none, and default."
      },
      "logs_account_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Available only for Enterprise Plan customers that purchased the Logs Integration SKU. Numeric identifier of the account that purchased the logs integration SKU and which collects the logs. If not specified, operation will be performed on the account identified by the authentication parameters."
      },
      "ref_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Customer specific identifier for this operation."
      },
      "remove_ssl": {
        "Type": "String",
        "Optional": true,
        "Description": "true or empty string."
      },
      "seal_location": {
        "Type": "String",
        "Optional": true,
        "Description": "api.seal_location.bottom_left | api.seal_location.none | api.seal_location.right_bottom | api.seal_location.right | api.seal_location.left | api.seal_location.bottom_right | api.seal_location.bottom."
      },
      "send_site_setup_emails": {
        "Type": "String",
        "Optional": true,
        "Description": "If this value is false, end users will not get emails about the add site process such as DNS instructions and SSL setup."
      },
      "site_creation_date": {
        "Type": "Int",
        "Description": "Numeric representation of the site creation date.",
        "Computed": true
      },
      "site_ip": {
        "Type": "String",
        "Optional": true,
        "Description": "Manually set the web server IP/CNAME."
      }
    },
    "incapsula_waf_security_rule": {
      "activation_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "The mode of activation for ddos on a site. Possible values: off, auto, on."
      },
      "block_bad_bots": {
        "Type": "String",
        "Optional": true,
        "Description": "Whether or not to block bad bots. Possible values: true, false."
      },
      "challenge_suspected_bots": {
        "Type": "String",
        "Optional": true,
        "Description": "Whether or not to send a challenge to clients that are suspected to be bad bots (CAPTCHA for example). Possible values: true, false."
      },
      "ddos_traffic_threshold": {
        "Type": "String",
        "Optional": true,
        "Description": "Consider site to be under DDoS if the request rate is above this threshold. The valid values are 10, 20, 50, 100, 200, 500, 750, 1000, 2000, 3000, 4000, 5000."
      },
      "rule_id": {
        "Type": "String",
        "Required": true,
        "Description": "The identifier of the WAF rule, e.g api.threats.cross_site_scripting."
      },
      "security_rule_action": {
        "Type": "String",
        "Optional": true,
        "Description": "The action that should be taken when a threat is detected, for example: api.threats.action.block_ip."
      },
      "site_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Numeric identifier of the site to operate on."
      }
    }
  },
  "data-sources": {}
}