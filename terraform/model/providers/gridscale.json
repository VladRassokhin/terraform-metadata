{
  ".schema_version": "1",
  "name": "gridscale",
  "type": "provider",
  "version": "v1.5.0",
  "provider": {
    "api_url": {
      "Type": "String",
      "Required": true,
      "Description": "the url for the gridscale API.",
      "DefaultFunc": "ENV(GRIDSCALE_URL)"
    },
    "token": {
      "Type": "String",
      "Required": true,
      "Description": "API-token for the gridscale API.",
      "DefaultFunc": "ENV(GRIDSCALE_TOKEN)"
    },
    "uuid": {
      "Type": "String",
      "Required": true,
      "Description": "User-UUID for the gridscale API.",
      "DefaultFunc": "ENV(GRIDSCALE_UUID)"
    }
  },
  "resources": {
    "gridscale_firewall": {
      "change_time": {
        "Type": "String",
        "Description": "The date and time of the last object change.",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "The date and time the object was initially created.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Description of the Firewall.",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of labels.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "location_name": {
        "Type": "String",
        "Description": "The human-readable name of the location. It supports the full UTF-8 charset, with a maximum of 64 characters",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The human-readable name of the object. It supports the full UTF-8 charset, with a maximum of 64 characters"
      },
      "network": {
        "Type": "Set",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "create_time": {
              "Type": "String",
              "Computed": true
            },
            "network_name": {
              "Type": "String",
              "Computed": true
            },
            "network_uuid": {
              "Type": "String",
              "Computed": true
            },
            "object_name": {
              "Type": "String",
              "Computed": true
            },
            "object_uuid": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      },
      "private": {
        "Type": "Bool",
        "Description": "The object is private, the value will be true. Otherwise the value will be false.",
        "Computed": true
      },
      "rules_v4_in": {
        "Type": "List",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Required": true,
              "Description": "This defines what the firewall will do. Either accept or drop."
            },
            "comment": {
              "Type": "String",
              "Optional": true,
              "Description": "Comment."
            },
            "dst_cidr": {
              "Type": "String",
              "Optional": true,
              "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then all IPs have access to this service."
            },
            "dst_port": {
              "Type": "String",
              "Optional": true,
              "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
            },
            "order": {
              "Type": "Int",
              "Required": true,
              "Description": "The order at which the firewall will compare packets against its rules, \na packet will be compared against the first rule, it will either allow it to pass or block it \nand it won t be matched against any other rules. However, if it does no match the rule, \nthen it will proceed onto rule 2. Packets that do not match any rules are blocked by default."
            },
            "protocol": {
              "Type": "String",
              "Required": true,
              "Description": "Either 'udp' or 'tcp'"
            },
            "src_cidr": {
              "Type": "String",
              "Optional": true,
              "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then this service has access to all IPs."
            },
            "src_port": {
              "Type": "String",
              "Optional": true,
              "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
            }
          }
        }
      },
      "rules_v4_out": {
        "Type": "List",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Required": true,
              "Description": "This defines what the firewall will do. Either accept or drop."
            },
            "comment": {
              "Type": "String",
              "Optional": true,
              "Description": "Comment."
            },
            "dst_cidr": {
              "Type": "String",
              "Optional": true,
              "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then all IPs have access to this service."
            },
            "dst_port": {
              "Type": "String",
              "Optional": true,
              "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
            },
            "order": {
              "Type": "Int",
              "Required": true,
              "Description": "The order at which the firewall will compare packets against its rules, \na packet will be compared against the first rule, it will either allow it to pass or block it \nand it won t be matched against any other rules. However, if it does no match the rule, \nthen it will proceed onto rule 2. Packets that do not match any rules are blocked by default."
            },
            "protocol": {
              "Type": "String",
              "Required": true,
              "Description": "Either 'udp' or 'tcp'"
            },
            "src_cidr": {
              "Type": "String",
              "Optional": true,
              "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then this service has access to all IPs."
            },
            "src_port": {
              "Type": "String",
              "Optional": true,
              "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
            }
          }
        }
      },
      "rules_v6_in": {
        "Type": "List",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Required": true,
              "Description": "This defines what the firewall will do. Either accept or drop."
            },
            "comment": {
              "Type": "String",
              "Optional": true,
              "Description": "Comment."
            },
            "dst_cidr": {
              "Type": "String",
              "Optional": true,
              "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then all IPs have access to this service."
            },
            "dst_port": {
              "Type": "String",
              "Optional": true,
              "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
            },
            "order": {
              "Type": "Int",
              "Required": true,
              "Description": "The order at which the firewall will compare packets against its rules, \na packet will be compared against the first rule, it will either allow it to pass or block it \nand it won t be matched against any other rules. However, if it does no match the rule, \nthen it will proceed onto rule 2. Packets that do not match any rules are blocked by default."
            },
            "protocol": {
              "Type": "String",
              "Required": true,
              "Description": "Either 'udp' or 'tcp'"
            },
            "src_cidr": {
              "Type": "String",
              "Optional": true,
              "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then this service has access to all IPs."
            },
            "src_port": {
              "Type": "String",
              "Optional": true,
              "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
            }
          }
        }
      },
      "rules_v6_out": {
        "Type": "List",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Required": true,
              "Description": "This defines what the firewall will do. Either accept or drop."
            },
            "comment": {
              "Type": "String",
              "Optional": true,
              "Description": "Comment."
            },
            "dst_cidr": {
              "Type": "String",
              "Optional": true,
              "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then all IPs have access to this service."
            },
            "dst_port": {
              "Type": "String",
              "Optional": true,
              "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
            },
            "order": {
              "Type": "Int",
              "Required": true,
              "Description": "The order at which the firewall will compare packets against its rules, \na packet will be compared against the first rule, it will either allow it to pass or block it \nand it won t be matched against any other rules. However, if it does no match the rule, \nthen it will proceed onto rule 2. Packets that do not match any rules are blocked by default."
            },
            "protocol": {
              "Type": "String",
              "Required": true,
              "Description": "Either 'udp' or 'tcp'"
            },
            "src_cidr": {
              "Type": "String",
              "Optional": true,
              "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then this service has access to all IPs."
            },
            "src_port": {
              "Type": "String",
              "Optional": true,
              "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
            }
          }
        }
      },
      "status": {
        "Type": "String",
        "Description": "Status indicates the status of the object",
        "Computed": true
      }
    },
    "gridscale_ipv4": {
      "__timeouts__": [
        "delete"
      ],
      "change_time": {
        "Type": "String",
        "Description": "The date and time of the last object change.",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "The date and time the object was initially created.",
        "Computed": true
      },
      "current_price": {
        "Type": "Float",
        "Description": "Defines the price for the current period since the last bill.",
        "Computed": true
      },
      "delete_block": {
        "Type": "Bool",
        "Description": "Defines if the object is administratively blocked. If true, it can not be deleted by the user.",
        "Computed": true
      },
      "failover": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Sets failover mode for this IP. If true, then this IP is no longer available for DHCP and can no longer be related to any server.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ip": {
        "Type": "String",
        "Description": "Defines the IP Address.",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of labels.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "location_country": {
        "Type": "String",
        "Description": "Formatted by the 2 digit country code (ISO 3166-2) of the host country",
        "Computed": true
      },
      "location_iata": {
        "Type": "String",
        "Description": "Uses IATA airport code, which works as a location identifier",
        "Computed": true
      },
      "location_name": {
        "Type": "String",
        "Description": "The human-readable name of the location. It supports the full UTF-8 charset, with a maximum of 64 characters",
        "Computed": true
      },
      "location_uuid": {
        "Type": "String",
        "Description": "Helps to identify which datacenter an object belongs to",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The human-readable name of the object. It supports the full UTF-8 charset, with a maximum of 64 characters."
      },
      "prefix": {
        "Type": "String",
        "Computed": true
      },
      "reverse_dns": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines the reverse DNS entry for the IP Address (PTR Resource Record).",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Computed": true
      },
      "usage_in_minutes": {
        "Type": "Int",
        "Computed": true
      }
    },
    "gridscale_ipv6": {
      "__timeouts__": [
        "delete"
      ],
      "change_time": {
        "Type": "String",
        "Description": "The date and time of the last object change",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "The date and time the object was initially created",
        "Computed": true
      },
      "current_price": {
        "Type": "Float",
        "Description": "Defines the price for the current period since the last bill.",
        "Computed": true
      },
      "delete_block": {
        "Type": "Bool",
        "Description": "Defines if the object is administratively blocked. If true, it can not be deleted by the user.",
        "Computed": true
      },
      "failover": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Sets failover mode for this IP. If true, then this IP is no longer available for DHCP and can no longer be related to any server.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ip": {
        "Type": "String",
        "Description": "Defines the IP Address.",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of labels.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "location_country": {
        "Type": "String",
        "Description": "Formatted by the 2 digit country code (ISO 3166-2) of the host country",
        "Computed": true
      },
      "location_iata": {
        "Type": "String",
        "Description": "Uses IATA airport code, which works as a location identifier",
        "Computed": true
      },
      "location_name": {
        "Type": "String",
        "Description": "The human-readable name of the location. It supports the full UTF-8 charset, with a maximum of 64 characters",
        "Computed": true
      },
      "location_uuid": {
        "Type": "String",
        "Description": "Helps to identify which datacenter an object belongs to",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The human-readable name of the object. It supports the full UTF-8 charset, with a maximum of 64 characters."
      },
      "prefix": {
        "Type": "String",
        "Computed": true
      },
      "reverse_dns": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines the reverse DNS entry for the IP Address (PTR Resource Record).",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Computed": true
      },
      "usage_in_minutes": {
        "Type": "Int",
        "Computed": true
      }
    },
    "gridscale_isoimage": {
      "capacity": {
        "Type": "Int",
        "Description": "The capacity of a storage/ISO Image/template/snapshot in GB.",
        "Computed": true
      },
      "change_time": {
        "Type": "String",
        "Description": "The date and time of the last object change.",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "The date and time the object was initially created.",
        "Computed": true
      },
      "current_price": {
        "Type": "Float",
        "Description": "Defines the price for the current period since the last bill.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Description of the ISO Image.",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of labels.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "location_country": {
        "Type": "String",
        "Description": "Formatted by the 2 digit country code (ISO 3166-2) of the host country",
        "Computed": true
      },
      "location_iata": {
        "Type": "String",
        "Description": "Uses IATA airport code, which works as a location identifier",
        "Computed": true
      },
      "location_name": {
        "Type": "String",
        "Description": "The human-readable name of the location. It supports the full UTF-8 charset, with a maximum of 64 characters",
        "Computed": true
      },
      "location_uuid": {
        "Type": "String",
        "Description": "Helps to identify which datacenter an object belongs to",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The human-readable name of the object. It supports the full UTF-8 charset, with a maximum of 64 characters."
      },
      "private": {
        "Type": "Bool",
        "Description": "The object is private, the value will be true. Otherwise the value will be false.",
        "Computed": true
      },
      "server": {
        "Type": "Set",
        "Description": "The information about servers which are related to this ISO image.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bootdevice": {
              "Type": "Bool",
              "Computed": true
            },
            "create_time": {
              "Type": "String",
              "Computed": true
            },
            "object_name": {
              "Type": "String",
              "Computed": true
            },
            "object_uuid": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      },
      "source_url": {
        "Type": "String",
        "Required": true,
        "Description": "Contains the source URL of the ISO Image that it was originally fetched from."
      },
      "status": {
        "Type": "String",
        "Description": "Status indicates the status of the object",
        "Computed": true
      },
      "usage_in_minutes": {
        "Type": "Int",
        "Description": "Total minutes the object has been running.",
        "Computed": true
      },
      "version": {
        "Type": "String",
        "Description": "Upstream version of the ISO Image release",
        "Computed": true
      }
    },
    "gridscale_loadbalancer": {
      "algorithm": {
        "Type": "String",
        "Required": true,
        "Description": "The algorithm used to process requests. Accepted values: roundrobin/leastconn."
      },
      "backend_server": {
        "Type": "Set",
        "Required": true,
        "Description": "List of backend servers.",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "host": {
              "Type": "String",
              "Required": true
            },
            "weight": {
              "Type": "Int",
              "Optional": true,
              "Default": {
                "Type": "int",
                "Value": "100"
              }
            }
          }
        }
      },
      "forwarding_rule": {
        "Type": "Set",
        "Required": true,
        "Description": "List of forwarding rules for the Load balancer.",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "letsencrypt_ssl": {
              "Type": "String",
              "Optional": true
            },
            "listen_port": {
              "Type": "Int",
              "Required": true
            },
            "mode": {
              "Type": "String",
              "Required": true
            },
            "target_port": {
              "Type": "Int",
              "Required": true
            }
          }
        }
      },
      "labels": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of labels.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "listen_ipv4_uuid": {
        "Type": "String",
        "Required": true,
        "Description": "The UUID of the IPv4 address the Load balancer will listen to for incoming requests."
      },
      "listen_ipv6_uuid": {
        "Type": "String",
        "Required": true,
        "Description": "The UUID of the IPv6 address the Load balancer will listen to for incoming requests."
      },
      "location_uuid": {
        "Type": "String",
        "Description": "Helps to identify which datacenter an object belongs to.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The human-readable name of the object. It supports the full UTF-8 charset, with a maximum of 64 characters"
      },
      "redirect_http_to_https": {
        "Type": "Bool",
        "Required": true,
        "Description": "Whether the Load balancer is forced to redirect requests from HTTP to HTTPS"
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Status indicates the status of the object.",
        "Default": {
          "Type": "string",
          "Value": "active"
        }
      }
    },
    "gridscale_network": {
      "__timeouts__": [
        "delete"
      ],
      "change_time": {
        "Type": "String",
        "Description": "The date and time of the last object change",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "The date and time the object was initially created",
        "Computed": true
      },
      "delete_block": {
        "Type": "Bool",
        "Description": "If deleting this network is allowed",
        "Computed": true
      },
      "l2security": {
        "Type": "Bool",
        "Optional": true,
        "Description": "MAC spoofing protection - filters layer2 and ARP traffic based on source MAC",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "labels": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of labels.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "location_country": {
        "Type": "String",
        "Description": "Formatted by the 2 digit country code (ISO 3166-2) of the host country",
        "Computed": true
      },
      "location_iata": {
        "Type": "String",
        "Description": "Uses IATA airport code, which works as a location identifier",
        "Computed": true
      },
      "location_name": {
        "Type": "String",
        "Description": "The human-readable name of the location. It supports the full UTF-8 charset, with a maximum of 64 characters",
        "Computed": true
      },
      "location_uuid": {
        "Type": "String",
        "Description": "Helps to identify which datacenter an object belongs to",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The human-readable name of the object. It supports the full UTF-8 charset, with a maximum of 64 characters."
      },
      "network_type": {
        "Type": "String",
        "Description": "The type of this network, can be mpls, breakout or network.",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "status indicates the status of the object",
        "Computed": true
      }
    },
    "gridscale_object_storage_accesskey": {
      "access_key": {
        "Type": "String",
        "Description": "The object storage secret_key.",
        "Computed": true
      },
      "secret_key": {
        "Type": "String",
        "Description": "The object storage access_key.",
        "Computed": true
      }
    },
    "gridscale_paas": {
      "change_time": {
        "Type": "String",
        "Description": "Time of the last change",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "Time of the creation",
        "Computed": true
      },
      "current_price": {
        "Type": "Float",
        "Description": "Current price of PaaS service",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of labels.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "listen_port": {
        "Type": "Set",
        "Description": "Ports that PaaS service listens to",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The human-readable name of the object. It supports the full UTF-8 charset, with a maximum of 64 characters"
      },
      "network_uuid": {
        "Type": "String",
        "Description": "Network UUID containing security zone",
        "Computed": true
      },
      "parameter": {
        "Type": "Set",
        "Optional": true,
        "Description": "Parameter for PaaS service",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "param": {
              "Type": "String",
              "Required": true
            },
            "type": {
              "Type": "String",
              "Required": true
            },
            "value": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "password": {
        "Type": "String",
        "Description": "Password for PaaS service",
        "Computed": true
      },
      "resource_limit": {
        "Type": "Set",
        "Optional": true,
        "Description": "Resource for PaaS service",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "limit": {
              "Type": "Int",
              "Required": true
            },
            "resource": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "security_zone_uuid": {
        "Type": "String",
        "Optional": true,
        "Description": "Security zone UUID linked to PaaS service",
        "Computed": true
      },
      "service_template_uuid": {
        "Type": "String",
        "Required": true,
        "Description": "Template that PaaS service uses"
      },
      "status": {
        "Type": "String",
        "Description": "Current status of PaaS service",
        "Computed": true
      },
      "usage_in_minute": {
        "Type": "Int",
        "Description": "Number of minutes that PaaS service is in use",
        "Computed": true
      },
      "username": {
        "Type": "String",
        "Description": "Username for PaaS service",
        "Computed": true
      }
    },
    "gridscale_paas_securityzone": {
      "change_time": {
        "Type": "String",
        "Description": "Defines the date and time of the last object change",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "Defines the date and time the object was initially created",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of labels.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "location_country": {
        "Type": "String",
        "Description": "The human-readable name of the location",
        "Computed": true
      },
      "location_iata": {
        "Type": "String",
        "Description": "Uses IATA airport code, which works as a location identifier",
        "Computed": true
      },
      "location_name": {
        "Type": "String",
        "Description": "The human-readable name of the location",
        "Computed": true
      },
      "location_uuid": {
        "Type": "String",
        "Optional": true,
        "Description": "Helps to identify which datacenter an object belongs to",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The human-readable name of the object"
      },
      "relations": {
        "Type": "Set",
        "Description": "List of PaaS services' UUIDs relating to the security zone",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "status": {
        "Type": "String",
        "Description": "Status indicates the status of the object",
        "Computed": true
      }
    },
    "gridscale_server": {
      "auto_recovery": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If the server should be auto-started in case of a failure (default=true).",
        "Computed": true
      },
      "availability_zone": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines which Availability-Zone the Server is placed.",
        "Computed": true
      },
      "change_time": {
        "Type": "String",
        "Computed": true
      },
      "console_token": {
        "Type": "String",
        "Description": "The token used by the panel to open the websocket VNC connection to the server console.",
        "Computed": true
      },
      "cores": {
        "Type": "Int",
        "Required": true,
        "Description": "The number of server cores."
      },
      "create_time": {
        "Type": "String",
        "Computed": true
      },
      "current_price": {
        "Type": "Float",
        "Computed": true
      },
      "hardware_profile": {
        "Type": "String",
        "Optional": true,
        "Description": "The number of server cores.",
        "Default": {
          "Type": "string",
          "Value": "default"
        }
      },
      "ipv4": {
        "Type": "String",
        "Optional": true
      },
      "ipv6": {
        "Type": "String",
        "Optional": true
      },
      "isoimage": {
        "Type": "String",
        "Optional": true
      },
      "labels": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of labels.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "legacy": {
        "Type": "Bool",
        "Description": "Legacy-Hardware emulation instead of virtio hardware. If enabled, hotplugging cores, memory, storage, network, etc. will not work, but the server will most likely run every x86 compatible operating system. This mode comes with a performance penalty, as emulated hardware does not benefit from the virtio driver infrastructure.",
        "Computed": true
      },
      "location_uuid": {
        "Type": "String",
        "Description": "Helps to identify which datacenter an object belongs to.",
        "Computed": true
      },
      "memory": {
        "Type": "Int",
        "Required": true,
        "Description": "The amount of server memory in GB."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The human-readable name of the object. It supports the full UTF-8 charset, with a maximum of 64 characters"
      },
      "network": {
        "Type": "Set",
        "Optional": true,
        "MaxItems": 7,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bootdevice": {
              "Type": "Bool",
              "Optional": true,
              "Computed": true
            },
            "create_time": {
              "Type": "String",
              "Computed": true
            },
            "firewall_template_uuid": {
              "Type": "String",
              "Optional": true
            },
            "mac": {
              "Type": "String",
              "Computed": true
            },
            "network_type": {
              "Type": "String",
              "Computed": true
            },
            "object_name": {
              "Type": "String",
              "Computed": true
            },
            "object_uuid": {
              "Type": "String",
              "Required": true
            },
            "ordering": {
              "Type": "Int",
              "Computed": true
            },
            "rules_v4_in": {
              "Type": "List",
              "Optional": true,
              "IsBlock": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action": {
                    "Type": "String",
                    "Required": true,
                    "Description": "This defines what the firewall will do. Either accept or drop."
                  },
                  "comment": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comment."
                  },
                  "dst_cidr": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then all IPs have access to this service."
                  },
                  "dst_port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
                  },
                  "order": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "The order at which the firewall will compare packets against its rules, \na packet will be compared against the first rule, it will either allow it to pass or block it \nand it won t be matched against any other rules. However, if it does no match the rule, \nthen it will proceed onto rule 2. Packets that do not match any rules are blocked by default."
                  },
                  "protocol": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Either 'udp' or 'tcp'"
                  },
                  "src_cidr": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then this service has access to all IPs."
                  },
                  "src_port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
                  }
                }
              }
            },
            "rules_v4_out": {
              "Type": "List",
              "Optional": true,
              "IsBlock": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action": {
                    "Type": "String",
                    "Required": true,
                    "Description": "This defines what the firewall will do. Either accept or drop."
                  },
                  "comment": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comment."
                  },
                  "dst_cidr": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then all IPs have access to this service."
                  },
                  "dst_port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
                  },
                  "order": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "The order at which the firewall will compare packets against its rules, \na packet will be compared against the first rule, it will either allow it to pass or block it \nand it won t be matched against any other rules. However, if it does no match the rule, \nthen it will proceed onto rule 2. Packets that do not match any rules are blocked by default."
                  },
                  "protocol": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Either 'udp' or 'tcp'"
                  },
                  "src_cidr": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then this service has access to all IPs."
                  },
                  "src_port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
                  }
                }
              }
            },
            "rules_v6_in": {
              "Type": "List",
              "Optional": true,
              "IsBlock": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action": {
                    "Type": "String",
                    "Required": true,
                    "Description": "This defines what the firewall will do. Either accept or drop."
                  },
                  "comment": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comment."
                  },
                  "dst_cidr": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then all IPs have access to this service."
                  },
                  "dst_port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
                  },
                  "order": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "The order at which the firewall will compare packets against its rules, \na packet will be compared against the first rule, it will either allow it to pass or block it \nand it won t be matched against any other rules. However, if it does no match the rule, \nthen it will proceed onto rule 2. Packets that do not match any rules are blocked by default."
                  },
                  "protocol": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Either 'udp' or 'tcp'"
                  },
                  "src_cidr": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then this service has access to all IPs."
                  },
                  "src_port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
                  }
                }
              }
            },
            "rules_v6_out": {
              "Type": "List",
              "Optional": true,
              "IsBlock": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action": {
                    "Type": "String",
                    "Required": true,
                    "Description": "This defines what the firewall will do. Either accept or drop."
                  },
                  "comment": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comment."
                  },
                  "dst_cidr": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then all IPs have access to this service."
                  },
                  "dst_port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
                  },
                  "order": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "The order at which the firewall will compare packets against its rules, \na packet will be compared against the first rule, it will either allow it to pass or block it \nand it won t be matched against any other rules. However, if it does no match the rule, \nthen it will proceed onto rule 2. Packets that do not match any rules are blocked by default."
                  },
                  "protocol": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Either 'udp' or 'tcp'"
                  },
                  "src_cidr": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then this service has access to all IPs."
                  },
                  "src_port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
                  }
                }
              }
            }
          }
        }
      },
      "power": {
        "Type": "Bool",
        "Optional": true,
        "Description": "The number of server cores.",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Computed": true
      },
      "storage": {
        "Type": "List",
        "Optional": true,
        "Description": "A list of storages attached to the server. The first storage in the list is always set as the boot storage of the server.",
        "MaxItems": 8,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bootdevice": {
              "Type": "Bool",
              "Computed": true
            },
            "bus": {
              "Type": "Int",
              "Computed": true
            },
            "capacity": {
              "Type": "Int",
              "Computed": true
            },
            "controller": {
              "Type": "Int",
              "Computed": true
            },
            "create_time": {
              "Type": "String",
              "Computed": true
            },
            "last_used_template": {
              "Type": "String",
              "Computed": true
            },
            "license_product_no": {
              "Type": "Int",
              "Computed": true
            },
            "lun": {
              "Type": "Int",
              "Computed": true
            },
            "object_name": {
              "Type": "String",
              "Computed": true
            },
            "object_uuid": {
              "Type": "String",
              "Required": true
            },
            "storage_type": {
              "Type": "String",
              "Computed": true
            },
            "target": {
              "Type": "Int",
              "Computed": true
            }
          }
        }
      },
      "usage_in_minutes_cores": {
        "Type": "Int",
        "Computed": true
      },
      "usage_in_minutes_memory": {
        "Type": "Int",
        "Computed": true
      }
    },
    "gridscale_snapshot": {
      "capacity": {
        "Type": "Int",
        "Description": "The capacity of a storage/ISO Image/template/snapshot in GB",
        "Computed": true
      },
      "change_time": {
        "Type": "String",
        "Description": "Defines the date and time of the last object change",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "Defines the date and time the object was initially created",
        "Computed": true
      },
      "current_price": {
        "Type": "Float",
        "Description": "The price for the current period since the last bill",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of labels.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "license_product_no": {
        "Type": "Int",
        "Description": "If a template has been used that requires a license key (e.g. Windows Servers) this shows \nthe product_no of the license (see the /prices endpoint for more details)",
        "Computed": true
      },
      "location_country": {
        "Type": "String",
        "Description": "The human-readable name of the location",
        "Computed": true
      },
      "location_iata": {
        "Type": "String",
        "Description": "Uses IATA airport code, which works as a location identifier",
        "Computed": true
      },
      "location_name": {
        "Type": "String",
        "Description": "The human-readable name of the location",
        "Computed": true
      },
      "location_uuid": {
        "Type": "String",
        "Description": "Helps to identify which datacenter an object belongs to",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The human-readable name of the object"
      },
      "rollback": {
        "Type": "Set",
        "Optional": true,
        "Description": "Returns a storage to the state of the selected Snapshot.",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Required": true,
              "Description": "ID of the rollback request. Each rollback request has to have a unique id. ID can be any string value."
            },
            "rollback_time": {
              "Type": "String",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      },
      "status": {
        "Type": "String",
        "Description": "Status indicates the status of the object",
        "Computed": true
      },
      "storage_uuid": {
        "Type": "String",
        "Required": true,
        "Description": "Uuid of the storage used to create this snapshot"
      },
      "usage_in_minutes": {
        "Type": "Int",
        "Description": "Total minutes the object has been running",
        "Computed": true
      }
    },
    "gridscale_snapshotschedule": {
      "change_time": {
        "Type": "String",
        "Description": "Defines the date and time of the last object change",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "Defines the date and time the object was initially created",
        "Computed": true
      },
      "keep_snapshots": {
        "Type": "Int",
        "Required": true,
        "Description": "The amount of Snapshots to keep before overwriting the last created Snapshot"
      },
      "labels": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of labels.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The human-readable name of the object"
      },
      "next_runtime": {
        "Type": "String",
        "Optional": true,
        "Description": "The date and time that the snapshot schedule will be run",
        "Computed": true
      },
      "run_interval": {
        "Type": "Int",
        "Required": true,
        "Description": "The interval at which the schedule will run (in minutes)"
      },
      "snapshot": {
        "Type": "Set",
        "Description": "Related snashots",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "create_time": {
              "Type": "String",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Computed": true
            },
            "object_uuid": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      },
      "status": {
        "Type": "String",
        "Description": "Status indicates the status of the object",
        "Computed": true
      },
      "storage_uuid": {
        "Type": "String",
        "Required": true,
        "Description": "Uuid of the storage used to create snapshots"
      }
    },
    "gridscale_sshkey": {
      "change_time": {
        "Type": "String",
        "Description": "The date and time of the last object change",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "The date and time the object was initially created",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of labels.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The human-readable name of the object. It supports the full UTF-8 charset, with a maximum of 64 characters."
      },
      "sshkey": {
        "Type": "String",
        "Required": true,
        "Description": "sshkey_string is the OpenSSH public key string (all key types are supported =\u003e ed25519, ecdsa, dsa, rsa, rsa1)"
      },
      "status": {
        "Type": "String",
        "Computed": true
      }
    },
    "gridscale_storage": {
      "capacity": {
        "Type": "Int",
        "Required": true,
        "Description": "The capacity of a storage in GB."
      },
      "change_time": {
        "Type": "String",
        "Description": "Defines the date and time of the last object change.",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "Defines the date and time the object was initially created.",
        "Computed": true
      },
      "current_price": {
        "Type": "Float",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of labels.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "last_used_template": {
        "Type": "String",
        "Computed": true
      },
      "license_product_no": {
        "Type": "Int",
        "Description": "If a template has been used that requires a license key (e.g. Windows Servers) this shows the product_no of the license (see the /prices endpoint for more details).",
        "Computed": true
      },
      "location_country": {
        "Type": "String",
        "Description": "Formatted by the 2 digit country code (ISO 3166-2) of the host country.",
        "Computed": true
      },
      "location_iata": {
        "Type": "String",
        "Description": "Uses IATA airport code, which works as a location identifier.",
        "Computed": true
      },
      "location_name": {
        "Type": "String",
        "Description": "The human-readable name of the location. It supports the full UTF-8 charset, with a maximum of 64 characters.",
        "Computed": true
      },
      "location_uuid": {
        "Type": "String",
        "Description": "Helps to identify which datacenter an object belongs to.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The human-readable name of the object. It supports the full UTF-8 charset, with a maximum of 64 characters."
      },
      "parent_uuid": {
        "Type": "String",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "status indicates the status of the object.",
        "Computed": true
      },
      "storage_type": {
        "Type": "String",
        "Optional": true,
        "Description": "(one of storage, storage_high, storage_insane)",
        "Default": {
          "Type": "string",
          "Value": "storage"
        }
      },
      "template": {
        "Type": "List",
        "Optional": true,
        "MaxItems": 1,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "hostname": {
              "Type": "String",
              "Optional": true
            },
            "password": {
              "Type": "String",
              "Optional": true
            },
            "password_type": {
              "Type": "String",
              "Optional": true
            },
            "sshkeys": {
              "Type": "List",
              "Optional": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "template_uuid": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "usage_in_minutes": {
        "Type": "Int",
        "Computed": true
      }
    },
    "gridscale_template": {
      "capacity": {
        "Type": "Int",
        "Description": "The capacity of a storage/ISO Image/template/snapshot in GB.",
        "Computed": true
      },
      "change_time": {
        "Type": "String",
        "Description": "The date and time of the last object change.",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "The date and time the object was initially created.",
        "Computed": true
      },
      "current_price": {
        "Type": "Float",
        "Description": "Defines the price for the current period since the last bill.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Description of the Template.",
        "Computed": true
      },
      "distro": {
        "Type": "String",
        "Description": "The OS distrobution that the Template contains.",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of labels.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "license_product_no": {
        "Type": "Int",
        "Description": "If a template has been used that requires a license key (e.g. Windows Servers) this shows the product_no of the license (see the /prices endpoint for more details).",
        "Computed": true
      },
      "location_country": {
        "Type": "String",
        "Description": "Formatted by the 2 digit country code (ISO 3166-2) of the host country",
        "Computed": true
      },
      "location_iata": {
        "Type": "String",
        "Description": "Uses IATA airport code, which works as a location identifier",
        "Computed": true
      },
      "location_name": {
        "Type": "String",
        "Description": "The human-readable name of the location. It supports the full UTF-8 charset, with a maximum of 64 characters",
        "Computed": true
      },
      "location_uuid": {
        "Type": "String",
        "Description": "Helps to identify which datacenter an object belongs to",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The human-readable name of the object. It supports the full UTF-8 charset, with a maximum of 64 characters."
      },
      "ostype": {
        "Type": "String",
        "Description": "The operating system installed in the template",
        "Computed": true
      },
      "private": {
        "Type": "Bool",
        "Description": "The object is private, the value will be true. Otherwise the value will be false.",
        "Computed": true
      },
      "snapshot_uuid": {
        "Type": "String",
        "Required": true,
        "Description": "Snapshot uuid for template."
      },
      "status": {
        "Type": "String",
        "Description": "Status indicates the status of the object",
        "Computed": true
      },
      "usage_in_minutes": {
        "Type": "Int",
        "Description": "Total minutes the object has been running.",
        "Computed": true
      },
      "version": {
        "Type": "String",
        "Computed": true
      }
    }
  },
  "data-sources": {
    "gridscale_firewall": {
      "change_time": {
        "Type": "String",
        "Description": "The date and time of the last object change.",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "The date and time the object was initially created.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Description of the Firewall.",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Description": "List of labels.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "location_name": {
        "Type": "String",
        "Description": "The human-readable name of the location. It supports the full UTF-8 charset, with a maximum of 64 characters",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "The human-readable name of the object. It supports the full UTF-8 charset, with a maximum of 64 characters",
        "Computed": true
      },
      "network": {
        "Type": "Set",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "create_time": {
              "Type": "String",
              "Computed": true
            },
            "network_name": {
              "Type": "String",
              "Computed": true
            },
            "network_uuid": {
              "Type": "String",
              "Computed": true
            },
            "object_name": {
              "Type": "String",
              "Computed": true
            },
            "object_uuid": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      },
      "private": {
        "Type": "Bool",
        "Description": "The object is private, the value will be true. Otherwise the value will be false.",
        "Computed": true
      },
      "resource_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of a resource"
      },
      "rules_v4_in": {
        "Type": "List",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Required": true,
              "Description": "This defines what the firewall will do. Either accept or drop."
            },
            "comment": {
              "Type": "String",
              "Optional": true,
              "Description": "Comment."
            },
            "dst_cidr": {
              "Type": "String",
              "Optional": true,
              "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then all IPs have access to this service."
            },
            "dst_port": {
              "Type": "String",
              "Optional": true,
              "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
            },
            "order": {
              "Type": "Int",
              "Required": true,
              "Description": "The order at which the firewall will compare packets against its rules, \na packet will be compared against the first rule, it will either allow it to pass or block it \nand it won t be matched against any other rules. However, if it does no match the rule, \nthen it will proceed onto rule 2. Packets that do not match any rules are blocked by default."
            },
            "protocol": {
              "Type": "String",
              "Required": true,
              "Description": "Either 'udp' or 'tcp'"
            },
            "src_cidr": {
              "Type": "String",
              "Optional": true,
              "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then this service has access to all IPs."
            },
            "src_port": {
              "Type": "String",
              "Optional": true,
              "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
            }
          }
        }
      },
      "rules_v4_out": {
        "Type": "List",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Required": true,
              "Description": "This defines what the firewall will do. Either accept or drop."
            },
            "comment": {
              "Type": "String",
              "Optional": true,
              "Description": "Comment."
            },
            "dst_cidr": {
              "Type": "String",
              "Optional": true,
              "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then all IPs have access to this service."
            },
            "dst_port": {
              "Type": "String",
              "Optional": true,
              "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
            },
            "order": {
              "Type": "Int",
              "Required": true,
              "Description": "The order at which the firewall will compare packets against its rules, \na packet will be compared against the first rule, it will either allow it to pass or block it \nand it won t be matched against any other rules. However, if it does no match the rule, \nthen it will proceed onto rule 2. Packets that do not match any rules are blocked by default."
            },
            "protocol": {
              "Type": "String",
              "Required": true,
              "Description": "Either 'udp' or 'tcp'"
            },
            "src_cidr": {
              "Type": "String",
              "Optional": true,
              "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then this service has access to all IPs."
            },
            "src_port": {
              "Type": "String",
              "Optional": true,
              "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
            }
          }
        }
      },
      "rules_v6_in": {
        "Type": "List",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Required": true,
              "Description": "This defines what the firewall will do. Either accept or drop."
            },
            "comment": {
              "Type": "String",
              "Optional": true,
              "Description": "Comment."
            },
            "dst_cidr": {
              "Type": "String",
              "Optional": true,
              "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then all IPs have access to this service."
            },
            "dst_port": {
              "Type": "String",
              "Optional": true,
              "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
            },
            "order": {
              "Type": "Int",
              "Required": true,
              "Description": "The order at which the firewall will compare packets against its rules, \na packet will be compared against the first rule, it will either allow it to pass or block it \nand it won t be matched against any other rules. However, if it does no match the rule, \nthen it will proceed onto rule 2. Packets that do not match any rules are blocked by default."
            },
            "protocol": {
              "Type": "String",
              "Required": true,
              "Description": "Either 'udp' or 'tcp'"
            },
            "src_cidr": {
              "Type": "String",
              "Optional": true,
              "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then this service has access to all IPs."
            },
            "src_port": {
              "Type": "String",
              "Optional": true,
              "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
            }
          }
        }
      },
      "rules_v6_out": {
        "Type": "List",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Required": true,
              "Description": "This defines what the firewall will do. Either accept or drop."
            },
            "comment": {
              "Type": "String",
              "Optional": true,
              "Description": "Comment."
            },
            "dst_cidr": {
              "Type": "String",
              "Optional": true,
              "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then all IPs have access to this service."
            },
            "dst_port": {
              "Type": "String",
              "Optional": true,
              "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
            },
            "order": {
              "Type": "Int",
              "Required": true,
              "Description": "The order at which the firewall will compare packets against its rules, \na packet will be compared against the first rule, it will either allow it to pass or block it \nand it won t be matched against any other rules. However, if it does no match the rule, \nthen it will proceed onto rule 2. Packets that do not match any rules are blocked by default."
            },
            "protocol": {
              "Type": "String",
              "Required": true,
              "Description": "Either 'udp' or 'tcp'"
            },
            "src_cidr": {
              "Type": "String",
              "Optional": true,
              "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then this service has access to all IPs."
            },
            "src_port": {
              "Type": "String",
              "Optional": true,
              "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
            }
          }
        }
      },
      "status": {
        "Type": "String",
        "Description": "Status indicates the status of the object",
        "Computed": true
      }
    },
    "gridscale_ipv4": {
      "change_time": {
        "Type": "String",
        "Description": "The date and time of the last object change.",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "The date and time the object was initially created.",
        "Computed": true
      },
      "current_price": {
        "Type": "Float",
        "Description": "Defines the price for the current period since the last bill.",
        "Computed": true
      },
      "delete_block": {
        "Type": "Bool",
        "Description": "Defines if the object is administratively blocked. If true, it can not be deleted by the user.",
        "Computed": true
      },
      "failover": {
        "Type": "Bool",
        "Description": "Sets failover mode for this IP. If true, then this IP is no longer available for DHCP and can no longer be related to any server.",
        "Computed": true
      },
      "ip": {
        "Type": "String",
        "Description": "Defines the IP Address.",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of labels.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "location_country": {
        "Type": "String",
        "Description": "Formatted by the 2 digit country code (ISO 3166-2) of the host country",
        "Computed": true
      },
      "location_iata": {
        "Type": "String",
        "Description": "Uses IATA airport code, which works as a location identifier",
        "Computed": true
      },
      "location_name": {
        "Type": "String",
        "Description": "The human-readable name of the location. It supports the full UTF-8 charset, with a maximum of 64 characters",
        "Computed": true
      },
      "location_uuid": {
        "Type": "String",
        "Description": "Helps to identify which datacenter an object belongs to",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "The human-readable name of the object. It supports the full UTF-8 charset, with a maximum of 64 characters.",
        "Computed": true
      },
      "prefix": {
        "Type": "String",
        "Computed": true
      },
      "resource_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of a resource"
      },
      "reverse_dns": {
        "Type": "String",
        "Description": "Defines the reverse DNS entry for the IP Address (PTR Resource Record).",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Computed": true
      },
      "usage_in_minutes": {
        "Type": "Int",
        "Computed": true
      }
    },
    "gridscale_ipv6": {
      "change_time": {
        "Type": "String",
        "Description": "The date and time of the last object change.",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "The date and time the object was initially created.",
        "Computed": true
      },
      "current_price": {
        "Type": "Float",
        "Description": "Defines the price for the current period since the last bill.",
        "Computed": true
      },
      "delete_block": {
        "Type": "Bool",
        "Description": "Defines if the object is administratively blocked. If true, it can not be deleted by the user.",
        "Computed": true
      },
      "failover": {
        "Type": "Bool",
        "Description": "Sets failover mode for this IP. If true, then this IP is no longer available for DHCP and can no longer be related to any server.",
        "Computed": true
      },
      "ip": {
        "Type": "String",
        "Description": "Defines the IP Address.",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of labels.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "location_country": {
        "Type": "String",
        "Description": "Formatted by the 2 digit country code (ISO 3166-2) of the host country",
        "Computed": true
      },
      "location_iata": {
        "Type": "String",
        "Description": "Uses IATA airport code, which works as a location identifier",
        "Computed": true
      },
      "location_name": {
        "Type": "String",
        "Description": "The human-readable name of the location. It supports the full UTF-8 charset, with a maximum of 64 characters",
        "Computed": true
      },
      "location_uuid": {
        "Type": "String",
        "Description": "Helps to identify which datacenter an object belongs to",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "The human-readable name of the object. It supports the full UTF-8 charset, with a maximum of 64 characters.",
        "Computed": true
      },
      "prefix": {
        "Type": "String",
        "Computed": true
      },
      "resource_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of a resource"
      },
      "reverse_dns": {
        "Type": "String",
        "Description": "Defines the reverse DNS entry for the IP Address (PTR Resource Record).",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Computed": true
      },
      "usage_in_minutes": {
        "Type": "Int",
        "Computed": true
      }
    },
    "gridscale_isoimage": {
      "capacity": {
        "Type": "Int",
        "Description": "The capacity of a storage/ISO Image/template/snapshot in GB.",
        "Computed": true
      },
      "change_time": {
        "Type": "String",
        "Description": "The date and time of the last object change.",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "The date and time the object was initially created.",
        "Computed": true
      },
      "current_price": {
        "Type": "Float",
        "Description": "Defines the price for the current period since the last bill.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Description of the ISO Image.",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Description": "List of labels.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "location_country": {
        "Type": "String",
        "Description": "Formatted by the 2 digit country code (ISO 3166-2) of the host country",
        "Computed": true
      },
      "location_iata": {
        "Type": "String",
        "Description": "Uses IATA airport code, which works as a location identifier",
        "Computed": true
      },
      "location_name": {
        "Type": "String",
        "Description": "The human-readable name of the location. It supports the full UTF-8 charset, with a maximum of 64 characters",
        "Computed": true
      },
      "location_uuid": {
        "Type": "String",
        "Description": "Helps to identify which datacenter an object belongs to",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "The human-readable name of the object. It supports the full UTF-8 charset, with a maximum of 64 characters.",
        "Computed": true
      },
      "private": {
        "Type": "Bool",
        "Description": "The object is private, the value will be true. Otherwise the value will be false.",
        "Computed": true
      },
      "resource_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of a resource"
      },
      "server": {
        "Type": "Set",
        "Description": "The information about servers which are related to this ISO image.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bootdevice": {
              "Type": "Bool",
              "Computed": true
            },
            "create_time": {
              "Type": "String",
              "Computed": true
            },
            "object_name": {
              "Type": "String",
              "Computed": true
            },
            "object_uuid": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      },
      "source_url": {
        "Type": "String",
        "Description": "Contains the source URL of the ISO Image that it was originally fetched from.",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "Status indicates the status of the object",
        "Computed": true
      },
      "usage_in_minutes": {
        "Type": "Int",
        "Description": "Total minutes the object has been running.",
        "Computed": true
      },
      "version": {
        "Type": "String",
        "Description": "Upstream version of the ISO Image release",
        "Computed": true
      }
    },
    "gridscale_loadbalancer": {
      "algorithm": {
        "Type": "String",
        "Description": "The algorithm used to process requests. Accepted values: roundrobin/leastconn.",
        "Computed": true
      },
      "backend_server": {
        "Type": "Set",
        "Description": "List of backend servers.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "host": {
              "Type": "String",
              "Computed": true
            },
            "weight": {
              "Type": "Int",
              "Computed": true
            }
          }
        }
      },
      "forwarding_rule": {
        "Type": "Set",
        "Description": "List of forwarding rules for the Load balancer.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "letsencrypt_ssl": {
              "Type": "String",
              "Computed": true
            },
            "listen_port": {
              "Type": "Int",
              "Computed": true
            },
            "mode": {
              "Type": "String",
              "Computed": true
            },
            "target_port": {
              "Type": "Int",
              "Computed": true
            }
          }
        }
      },
      "labels": {
        "Type": "Set",
        "Description": "List of labels.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "listen_ipv4_uuid": {
        "Type": "String",
        "Description": "The UUID of the IPv4 address the Load balancer will listen to for incoming requests.",
        "Computed": true
      },
      "listen_ipv6_uuid": {
        "Type": "String",
        "Description": "The UUID of the IPv6 address the Load balancer will listen to for incoming requests.",
        "Computed": true
      },
      "location_uuid": {
        "Type": "String",
        "Description": "Helps to identify which datacenter an object belongs to.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "The human-readable name of the object. It supports the full UTF-8 charset, with a maximum of 64 characters",
        "Computed": true
      },
      "redirect_http_to_https": {
        "Type": "Bool",
        "Description": "Whether the Load balancer is forced to redirect requests from HTTP to HTTPS",
        "Computed": true
      },
      "resource_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of a resource"
      },
      "status": {
        "Type": "String",
        "Description": "Status indicates the status of the object.",
        "Computed": true
      }
    },
    "gridscale_network": {
      "change_time": {
        "Type": "String",
        "Description": "The date and time of the last object change",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "The date and time the object was initially created",
        "Computed": true
      },
      "delete_block": {
        "Type": "Bool",
        "Description": "If deleting this network is allowed",
        "Computed": true
      },
      "l2security": {
        "Type": "Bool",
        "Description": "MAC spoofing protection - filters layer2 and ARP traffic based on source MAC",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Description": "List of labels.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "location_country": {
        "Type": "String",
        "Description": "Formatted by the 2 digit country code (ISO 3166-2) of the host country",
        "Computed": true
      },
      "location_iata": {
        "Type": "String",
        "Description": "Uses IATA airport code, which works as a location identifier",
        "Computed": true
      },
      "location_name": {
        "Type": "String",
        "Description": "The human-readable name of the location. It supports the full UTF-8 charset, with a maximum of 64 characters",
        "Computed": true
      },
      "location_uuid": {
        "Type": "String",
        "Description": "Helps to identify which datacenter an object belongs to",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "The human-readable name of the object. It supports the full UTF-8 charset, with a maximum of 64 characters.",
        "Computed": true
      },
      "network_type": {
        "Type": "String",
        "Description": "The type of this network, can be mpls, breakout or network.",
        "Computed": true
      },
      "resource_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of a resource"
      },
      "status": {
        "Type": "String",
        "Description": "status indicates the status of the object",
        "Computed": true
      }
    },
    "gridscale_object_storage_accesskey": {
      "access_key": {
        "Type": "String",
        "Description": "The object storage secret_key.",
        "Computed": true
      },
      "resource_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of a resource"
      },
      "secret_key": {
        "Type": "String",
        "Description": "The object storage access_key.",
        "Computed": true
      }
    },
    "gridscale_paas": {
      "change_time": {
        "Type": "String",
        "Description": "Time of the last change",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "Time of the creation",
        "Computed": true
      },
      "current_price": {
        "Type": "Float",
        "Description": "Current price of PaaS service",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Description": "List of labels.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "listen_port": {
        "Type": "Set",
        "Description": "Ports that PaaS service listens to",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Description": "The human-readable name of the object. It supports the full UTF-8 charset, with a maximum of 64 characters",
        "Computed": true
      },
      "network_uuid": {
        "Type": "String",
        "Description": "Network UUID containing security zone",
        "Computed": true
      },
      "parameter": {
        "Type": "Set",
        "Description": "Parameter for PaaS service",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "param": {
              "Type": "String",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Computed": true
            },
            "value": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      },
      "password": {
        "Type": "String",
        "Description": "Password for PaaS service",
        "Computed": true
      },
      "resource_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of a resource"
      },
      "resource_limit": {
        "Type": "Set",
        "Description": "Resource for PaaS service",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "limit": {
              "Type": "Int",
              "Computed": true
            },
            "resource": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      },
      "security_zone_uuid": {
        "Type": "String",
        "Description": "Security zone UUID linked to PaaS service",
        "Computed": true
      },
      "service_template_uuid": {
        "Type": "String",
        "Description": "Template that PaaS service uses",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "Current status of PaaS service",
        "Computed": true
      },
      "usage_in_minute": {
        "Type": "Int",
        "Description": "Number of minutes that PaaS service is in use",
        "Computed": true
      },
      "username": {
        "Type": "String",
        "Description": "Username for PaaS service",
        "Computed": true
      }
    },
    "gridscale_paas_securityzone": {
      "change_time": {
        "Type": "String",
        "Description": "Defines the date and time of the last object change",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "Defines the date and time the object was initially created",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Description": "List of labels.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "location_country": {
        "Type": "String",
        "Description": "The human-readable name of the location",
        "Computed": true
      },
      "location_iata": {
        "Type": "String",
        "Description": "Uses IATA airport code, which works as a location identifier",
        "Computed": true
      },
      "location_name": {
        "Type": "String",
        "Description": "The human-readable name of the location",
        "Computed": true
      },
      "location_uuid": {
        "Type": "String",
        "Description": "Helps to identify which datacenter an object belongs to",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "The human-readable name of the object",
        "Computed": true
      },
      "relations": {
        "Type": "Set",
        "Description": "List of PaaS services' UUIDs relating to the security zone",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "resource_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of a resource"
      },
      "status": {
        "Type": "String",
        "Description": "Status indicates the status of the object",
        "Computed": true
      }
    },
    "gridscale_public_network": {
      "change_time": {
        "Type": "String",
        "Description": "The date and time of the last object change",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "The date and time the object was initially created",
        "Computed": true
      },
      "delete_block": {
        "Type": "Bool",
        "Description": "If deleting this network is allowed",
        "Computed": true
      },
      "l2security": {
        "Type": "Bool",
        "Description": "MAC spoofing protection - filters layer2 and ARP traffic based on source MAC",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Description": "List of labels.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "location_country": {
        "Type": "String",
        "Description": "Formatted by the 2 digit country code (ISO 3166-2) of the host country",
        "Computed": true
      },
      "location_iata": {
        "Type": "String",
        "Description": "Uses IATA airport code, which works as a location identifier",
        "Computed": true
      },
      "location_name": {
        "Type": "String",
        "Description": "The human-readable name of the location. It supports the full UTF-8 charset, with a maximum of 64 characters",
        "Computed": true
      },
      "location_uuid": {
        "Type": "String",
        "Description": "Helps to identify which datacenter an object belongs to",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "The human-readable name of the object. It supports the full UTF-8 charset, with a maximum of 64 characters.",
        "Computed": true
      },
      "network_type": {
        "Type": "String",
        "Description": "The type of this network, can be mpls, breakout or network.",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "status indicates the status of the object",
        "Computed": true
      }
    },
    "gridscale_server": {
      "auto_recovery": {
        "Type": "Bool",
        "Description": "If the server should be auto-started in case of a failure (default=true).",
        "Computed": true
      },
      "availability_zone": {
        "Type": "String",
        "Description": "Defines which Availability-Zone the Server is placed.",
        "Computed": true
      },
      "change_time": {
        "Type": "String",
        "Computed": true
      },
      "console_token": {
        "Type": "String",
        "Description": "The token used by the panel to open the websocket VNC connection to the server console.",
        "Computed": true
      },
      "cores": {
        "Type": "Int",
        "Description": "The number of server cores.",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Computed": true
      },
      "current_price": {
        "Type": "Float",
        "Computed": true
      },
      "hardware_profile": {
        "Type": "String",
        "Description": "The number of server cores.",
        "Computed": true
      },
      "ipv4": {
        "Type": "String",
        "Computed": true
      },
      "ipv6": {
        "Type": "String",
        "Computed": true
      },
      "isoimage": {
        "Type": "String",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Description": "List of labels.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "legacy": {
        "Type": "Bool",
        "Description": "Legacy-Hardware emulation instead of virtio hardware. If enabled, hotplugging cores, memory, storage, network, etc. will not work, but the server will most likely run every x86 compatible operating system. This mode comes with a performance penalty, as emulated hardware does not benefit from the virtio driver infrastructure.",
        "Computed": true
      },
      "location_uuid": {
        "Type": "String",
        "Description": "Helps to identify which datacenter an object belongs to.",
        "Computed": true
      },
      "memory": {
        "Type": "Int",
        "Description": "The amount of server memory in GB.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "The human-readable name of the object. It supports the full UTF-8 charset, with a maximum of 64 characters",
        "Computed": true
      },
      "network": {
        "Type": "Set",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bootdevice": {
              "Type": "Bool",
              "Optional": true,
              "Computed": true
            },
            "create_time": {
              "Type": "String",
              "Computed": true
            },
            "firewall_template_uuid": {
              "Type": "String",
              "Computed": true
            },
            "mac": {
              "Type": "String",
              "Computed": true
            },
            "network_type": {
              "Type": "String",
              "Computed": true
            },
            "object_name": {
              "Type": "String",
              "Computed": true
            },
            "object_uuid": {
              "Type": "String",
              "Computed": true
            },
            "ordering": {
              "Type": "Int",
              "Computed": true
            },
            "rules_v4_in": {
              "Type": "List",
              "Computed": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action": {
                    "Type": "String",
                    "Required": true,
                    "Description": "This defines what the firewall will do. Either accept or drop."
                  },
                  "comment": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comment."
                  },
                  "dst_cidr": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then all IPs have access to this service."
                  },
                  "dst_port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
                  },
                  "order": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "The order at which the firewall will compare packets against its rules, \na packet will be compared against the first rule, it will either allow it to pass or block it \nand it won t be matched against any other rules. However, if it does no match the rule, \nthen it will proceed onto rule 2. Packets that do not match any rules are blocked by default."
                  },
                  "protocol": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Either 'udp' or 'tcp'"
                  },
                  "src_cidr": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then this service has access to all IPs."
                  },
                  "src_port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
                  }
                }
              }
            },
            "rules_v4_out": {
              "Type": "List",
              "Computed": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action": {
                    "Type": "String",
                    "Required": true,
                    "Description": "This defines what the firewall will do. Either accept or drop."
                  },
                  "comment": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comment."
                  },
                  "dst_cidr": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then all IPs have access to this service."
                  },
                  "dst_port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
                  },
                  "order": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "The order at which the firewall will compare packets against its rules, \na packet will be compared against the first rule, it will either allow it to pass or block it \nand it won t be matched against any other rules. However, if it does no match the rule, \nthen it will proceed onto rule 2. Packets that do not match any rules are blocked by default."
                  },
                  "protocol": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Either 'udp' or 'tcp'"
                  },
                  "src_cidr": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then this service has access to all IPs."
                  },
                  "src_port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
                  }
                }
              }
            },
            "rules_v6_in": {
              "Type": "List",
              "Computed": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action": {
                    "Type": "String",
                    "Required": true,
                    "Description": "This defines what the firewall will do. Either accept or drop."
                  },
                  "comment": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comment."
                  },
                  "dst_cidr": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then all IPs have access to this service."
                  },
                  "dst_port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
                  },
                  "order": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "The order at which the firewall will compare packets against its rules, \na packet will be compared against the first rule, it will either allow it to pass or block it \nand it won t be matched against any other rules. However, if it does no match the rule, \nthen it will proceed onto rule 2. Packets that do not match any rules are blocked by default."
                  },
                  "protocol": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Either 'udp' or 'tcp'"
                  },
                  "src_cidr": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then this service has access to all IPs."
                  },
                  "src_port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
                  }
                }
              }
            },
            "rules_v6_out": {
              "Type": "List",
              "Computed": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action": {
                    "Type": "String",
                    "Required": true,
                    "Description": "This defines what the firewall will do. Either accept or drop."
                  },
                  "comment": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comment."
                  },
                  "dst_cidr": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then all IPs have access to this service."
                  },
                  "dst_port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
                  },
                  "order": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "The order at which the firewall will compare packets against its rules, \na packet will be compared against the first rule, it will either allow it to pass or block it \nand it won t be matched against any other rules. However, if it does no match the rule, \nthen it will proceed onto rule 2. Packets that do not match any rules are blocked by default."
                  },
                  "protocol": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Either 'udp' or 'tcp'"
                  },
                  "src_cidr": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either an IPv4/6 address or and IP Network in CIDR format. If this field is empty then this service has access to all IPs."
                  },
                  "src_port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "A Number between 1 and 65535, port ranges are seperated by a colon for FTP"
                  }
                }
              }
            }
          }
        }
      },
      "power": {
        "Type": "Bool",
        "Description": "The number of server cores.",
        "Computed": true
      },
      "resource_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of a resource"
      },
      "status": {
        "Type": "String",
        "Computed": true
      },
      "storage": {
        "Type": "List",
        "Description": "A list of storages attached to the server. The first storage in the list is always set as the boot storage of the server.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bootdevice": {
              "Type": "Bool",
              "Computed": true
            },
            "bus": {
              "Type": "Int",
              "Computed": true
            },
            "capacity": {
              "Type": "Int",
              "Computed": true
            },
            "controller": {
              "Type": "Int",
              "Computed": true
            },
            "create_time": {
              "Type": "String",
              "Computed": true
            },
            "last_used_template": {
              "Type": "String",
              "Computed": true
            },
            "license_product_no": {
              "Type": "Int",
              "Computed": true
            },
            "lun": {
              "Type": "Int",
              "Computed": true
            },
            "object_name": {
              "Type": "String",
              "Computed": true
            },
            "object_uuid": {
              "Type": "String",
              "Computed": true
            },
            "storage_type": {
              "Type": "String",
              "Computed": true
            },
            "target": {
              "Type": "Int",
              "Computed": true
            }
          }
        }
      },
      "usage_in_minutes_cores": {
        "Type": "Int",
        "Computed": true
      },
      "usage_in_minutes_memory": {
        "Type": "Int",
        "Computed": true
      }
    },
    "gridscale_snapshot": {
      "capacity": {
        "Type": "Int",
        "Description": "The capacity of a storage/ISO Image/template/snapshot in GB",
        "Computed": true
      },
      "change_time": {
        "Type": "String",
        "Description": "Defines the date and time of the last object change",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "Defines the date and time the object was initially created",
        "Computed": true
      },
      "current_price": {
        "Type": "Float",
        "Description": "The price for the current period since the last bill",
        "Computed": true
      },
      "labels": {
        "Type": "List",
        "Description": "List of labels.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "license_product_no": {
        "Type": "Int",
        "Description": "If a template has been used that requires a license key (e.g. Windows Servers) this shows \nthe product_no of the license (see the /prices endpoint for more details)",
        "Computed": true
      },
      "location_country": {
        "Type": "String",
        "Description": "The human-readable name of the location",
        "Computed": true
      },
      "location_iata": {
        "Type": "String",
        "Description": "Uses IATA airport code, which works as a location identifier",
        "Computed": true
      },
      "location_name": {
        "Type": "String",
        "Description": "The human-readable name of the location",
        "Computed": true
      },
      "location_uuid": {
        "Type": "String",
        "Description": "Helps to identify which datacenter an object belongs to",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "The human-readable name of the object",
        "Computed": true
      },
      "resource_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of a resource"
      },
      "status": {
        "Type": "String",
        "Description": "Status indicates the status of the object",
        "Computed": true
      },
      "storage_uuid": {
        "Type": "String",
        "Required": true,
        "Description": "Uuid of the storage used to create this snapshot"
      },
      "usage_in_minutes": {
        "Type": "Int",
        "Description": "Total minutes the object has been running",
        "Computed": true
      }
    },
    "gridscale_snapshotschedule": {
      "change_time": {
        "Type": "String",
        "Description": "Defines the date and time of the last object change",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "Defines the date and time the object was initially created",
        "Computed": true
      },
      "keep_snapshots": {
        "Type": "Int",
        "Description": "The amount of Snapshots to keep before overwriting the last created Snapshot",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Description": "List of labels.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Description": "The human-readable name of the object",
        "Computed": true
      },
      "next_runtime": {
        "Type": "String",
        "Description": "The date and time that the snapshot schedule will be run",
        "Computed": true
      },
      "resource_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of a resource"
      },
      "run_interval": {
        "Type": "Int",
        "Description": "The interval at which the schedule will run (in minutes)",
        "Computed": true
      },
      "snapshot": {
        "Type": "Set",
        "Description": "Related snapshots",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "create_time": {
              "Type": "String",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Computed": true
            },
            "object_uuid": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      },
      "status": {
        "Type": "String",
        "Description": "Status indicates the status of the object",
        "Computed": true
      },
      "storage_uuid": {
        "Type": "String",
        "Required": true,
        "Description": "Uuid of the storage used to create snapshots"
      }
    },
    "gridscale_sshkey": {
      "change_time": {
        "Type": "String",
        "Description": "The date and time of the last object change",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "The date and time the object was initially created",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Description": "List of labels.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Description": "The human-readable name of the object. It supports the full UTF-8 charset, with a maximum of 64 characters.",
        "Computed": true
      },
      "resource_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of a resource"
      },
      "sshkey": {
        "Type": "String",
        "Description": "sshkey_string is the OpenSSH public key string (all key types are supported =\u003e ed25519, ecdsa, dsa, rsa, rsa1)",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Computed": true
      }
    },
    "gridscale_storage": {
      "capacity": {
        "Type": "Int",
        "Description": "The capacity of a storage in GB.",
        "Computed": true
      },
      "change_time": {
        "Type": "String",
        "Description": "Defines the date and time of the last object change.",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "Defines the date and time the object was initially created.",
        "Computed": true
      },
      "current_price": {
        "Type": "Float",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Description": "List of labels.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "last_used_template": {
        "Type": "String",
        "Computed": true
      },
      "license_product_no": {
        "Type": "Int",
        "Description": "If a template has been used that requires a license key (e.g. Windows Servers) this shows the product_no of the license (see the /prices endpoint for more details).",
        "Computed": true
      },
      "location_country": {
        "Type": "String",
        "Description": "Formatted by the 2 digit country code (ISO 3166-2) of the host country.",
        "Computed": true
      },
      "location_iata": {
        "Type": "String",
        "Description": "Uses IATA airport code, which works as a location identifier.",
        "Computed": true
      },
      "location_name": {
        "Type": "String",
        "Description": "The human-readable name of the location. It supports the full UTF-8 charset, with a maximum of 64 characters.",
        "Computed": true
      },
      "location_uuid": {
        "Type": "String",
        "Description": "Helps to identify which datacenter an object belongs to.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "The human-readable name of the object. It supports the full UTF-8 charset, with a maximum of 64 characters.",
        "Computed": true
      },
      "parent_uuid": {
        "Type": "String",
        "Computed": true
      },
      "resource_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of a resource"
      },
      "status": {
        "Type": "String",
        "Description": "status indicates the status of the object.",
        "Computed": true
      },
      "storage_type": {
        "Type": "String",
        "Description": "(one of storage, storage_high, storage_insane)",
        "Computed": true
      },
      "usage_in_minutes": {
        "Type": "Int",
        "Computed": true
      }
    },
    "gridscale_template": {
      "capacity": {
        "Type": "Int",
        "Description": "The capacity of a storage/ISO Image/template/snapshot in GB.",
        "Computed": true
      },
      "change_time": {
        "Type": "String",
        "Description": "The date and time of the last object change.",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "The date and time the object was initially created.",
        "Computed": true
      },
      "current_price": {
        "Type": "Float",
        "Description": "Defines the price for the current period since the last bill.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Description of the Template.",
        "Computed": true
      },
      "distro": {
        "Type": "String",
        "Description": "The OS distrobution that the Template contains.",
        "Computed": true
      },
      "labels": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of labels.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "license_product_no": {
        "Type": "Int",
        "Description": "If a template has been used that requires a license key (e.g. Windows Servers) this shows the product_no of the license (see the /prices endpoint for more details).",
        "Computed": true
      },
      "location_country": {
        "Type": "String",
        "Description": "Formatted by the 2 digit country code (ISO 3166-2) of the host country",
        "Computed": true
      },
      "location_iata": {
        "Type": "String",
        "Description": "Uses IATA airport code, which works as a location identifier",
        "Computed": true
      },
      "location_name": {
        "Type": "String",
        "Description": "The human-readable name of the location. It supports the full UTF-8 charset, with a maximum of 64 characters",
        "Computed": true
      },
      "location_uuid": {
        "Type": "String",
        "Description": "Helps to identify which datacenter an object belongs to",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "name of the domain"
      },
      "ostype": {
        "Type": "String",
        "Description": "The operating system installed in the template",
        "Computed": true
      },
      "private": {
        "Type": "Bool",
        "Description": "The object is private, the value will be true. Otherwise the value will be false.",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "Status indicates the status of the object",
        "Computed": true
      },
      "usage_in_minutes": {
        "Type": "Int",
        "Description": "Total minutes the object has been running.",
        "Computed": true
      },
      "version": {
        "Type": "String",
        "Computed": true
      }
    }
  }
}