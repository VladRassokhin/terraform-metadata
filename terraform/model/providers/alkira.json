{
  ".schema_version": "2",
  ".sdk_type": "terraform-plugin-sdk-v2",
  "name": "alkira",
  "type": "provider",
  "version": "v0.8.0",
  "provider": {
    "password": {
      "Type": "String",
      "Required": true,
      "Description": "Your Tenant Password.",
      "DefaultFunc": "UNKNOWN"
    },
    "portal": {
      "Type": "String",
      "Required": true,
      "Description": "The URL for Alkira Custom Portal.",
      "DefaultFunc": "UNKNOWN"
    },
    "username": {
      "Type": "String",
      "Required": true,
      "Description": "Your Tenant Username.",
      "DefaultFunc": "UNKNOWN"
    }
  },
  "resources": {
    "alkira_billing_tag": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Billing Tag Description."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Billing Tag Name."
      }
    },
    "alkira_cloudvisor_account": {
      "auto_sync": {
        "Type": "String",
        "Required": true,
        "Description": "The interval at which the account should be auto synced. The value could be `NONE`, `DAILY`, `WEEKLY` and `MONTHLY`."
      },
      "cloud_provider": {
        "Type": "String",
        "Required": true,
        "Description": "Cloud provider of the account, currently, `AWS` and `AZURE` are supported."
      },
      "credential_id": {
        "Type": "String",
        "Required": true,
        "Description": "Credential Id to be used for the account."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the account."
      },
      "native_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The native cloud provider account Id."
      }
    },
    "alkira_connector_aws_vpc": {
      "aws_account_id": {
        "Type": "String",
        "Required": true,
        "Description": "AWS Account ID."
      },
      "aws_region": {
        "Type": "String",
        "Required": true,
        "Description": "AWS Region where VPC resides."
      },
      "billing_tag_ids": {
        "Type": "List",
        "Optional": true,
        "Description": "Tags for billing.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "credential_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of credential managed by Credential Manager."
      },
      "cxp": {
        "Type": "String",
        "Required": true,
        "Description": "The CXP where the connector should be provisioned."
      },
      "group": {
        "Type": "String",
        "Optional": true,
        "Description": "The group of the connector."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the connector."
      },
      "segment_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The ID of segments associated with the connector. Currently, only `1` segment is allowed."
      },
      "size": {
        "Type": "String",
        "Required": true,
        "Description": "The size of the connector, one of `SMALL`, `MEDIUM`, `LARGE`, `2LARGE`."
      },
      "vpc_cidr": {
        "Type": "List",
        "Optional": true,
        "Description": "The list of CIDR attached to the target VPC for routing purpose. It could be only specified if `vpc_subnet` is not specified.",
        "ConflictsWith": [
          "vpc_subnet"
        ],
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "vpc_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the target VPC."
      },
      "vpc_route_table": {
        "Type": "Set",
        "Optional": true,
        "Description": "VPC route table",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Optional": true,
              "Description": "The Id of the route table"
            },
            "options": {
              "Type": "String",
              "Optional": true,
              "Description": "Routing options, one of `ADVERTISE_DEFAULT_ROUTE`, `OVERRIDE_DEFAULT_ROUTE` and `ADVERTISE_CUSTOM_PREFIX`."
            },
            "prefix_list_ids": {
              "Type": "List",
              "Optional": true,
              "Description": "Prefix List IDs",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            }
          }
        }
      },
      "vpc_subnet": {
        "Type": "Set",
        "Optional": true,
        "Description": "The list of subnets of the target VPC for routing purpose. It could only specified if `vpc_cidr` is not specified.",
        "ConflictsWith": [
          "vpc_cidr"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cidr": {
              "Type": "String",
              "Optional": true,
              "Description": "The CIDR of the subnet."
            },
            "id": {
              "Type": "String",
              "Optional": true,
              "Description": "The Id of the subnet."
            }
          }
        }
      }
    },
    "alkira_connector_azure_vnet": {
      "azure_region": {
        "Type": "String",
        "Required": true,
        "Description": "Azure Region where VNET resides."
      },
      "azure_subscription_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The Azure subscription ID of the VNET. If the`subscirption_id` was provided in the credential, the onein the credential will be always used."
      },
      "azure_vnet_id": {
        "Type": "String",
        "Required": true,
        "Description": "Azure Virtual Network Id."
      },
      "billing_tag_ids": {
        "Type": "List",
        "Optional": true,
        "Description": "Tags for billing.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "credential_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of credential managed by Credential Manager."
      },
      "cxp": {
        "Type": "String",
        "Required": true,
        "Description": "The CXP where the connector should be provisioned."
      },
      "group": {
        "Type": "String",
        "Optional": true,
        "Description": "The group of the connector."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the connector."
      },
      "routing_options": {
        "Type": "String",
        "Optional": true,
        "Description": "Routing options, either `ADVERTISE_DEFAULT_ROUTE` or `ADVERTISE_CUSTOM_PREFIX`.",
        "Default": {
          "Type": "string",
          "Value": "ADVERTISE_DEFAULT_ROUTE"
        }
      },
      "routing_prefix_list_ids": {
        "Type": "List",
        "Optional": true,
        "Description": "Prefix List IDs.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "segment_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The ID of the segment assoicated with the connector."
      },
      "size": {
        "Type": "String",
        "Required": true,
        "Description": "The size of the connector, one of `SMALL`, `MEDIUM` or `LARGE`."
      }
    },
    "alkira_connector_cisco_sdwan": {
      "billing_tag_ids": {
        "Type": "List",
        "Optional": true,
        "Description": "A list of Billing Tag by ID associated with the connector.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "cxp": {
        "Type": "String",
        "Required": true,
        "Description": "The CXP where the connector should be provisioned."
      },
      "group": {
        "Type": "String",
        "Optional": true,
        "Description": "The group of the connector."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the connector."
      },
      "size": {
        "Type": "String",
        "Required": true,
        "Description": "The size of the connector. one of `SMALL`, `MEDIUM` and `LARGE`."
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "The type of Cisco SD-WAN. Default value is `VEDGE`.",
        "Default": {
          "Type": "string",
          "Value": "VEDGE"
        }
      },
      "vedge": {
        "Type": "Set",
        "Required": true,
        "Description": "Cisco vEdge",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cloud_init_file": {
              "Type": "String",
              "Required": true,
              "Description": "The cloud-init file for the vEdge."
            },
            "credential_id": {
              "Type": "String",
              "Required": true,
              "Description": "The ID of the credential for Cisco SD-WAN."
            },
            "hostname": {
              "Type": "String",
              "Required": true,
              "Description": "The hostname of the vEdge."
            }
          }
        }
      },
      "version": {
        "Type": "String",
        "Required": true,
        "Description": "The version of Cisco SD-WAN."
      },
      "vrf_segment_mapping": {
        "Type": "Set",
        "Required": true,
        "Description": "Specify target segment for VRF.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "advertise_on_prem_routes": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Advertise On Prem Routes.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "allow_nat_exit": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Allow NAT exit.",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "segment_id": {
              "Type": "Int",
              "Required": true,
              "Description": "Segment ID."
            },
            "vrf_id": {
              "Type": "Int",
              "Required": true,
              "Description": "VRF ID."
            }
          }
        }
      }
    },
    "alkira_connector_gcp_vpc": {
      "billing_tag_ids": {
        "Type": "List",
        "Optional": true,
        "Description": "Tags for billing.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "credential_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of credential managed by Credential Manager."
      },
      "cxp": {
        "Type": "String",
        "Required": true,
        "Description": "The CXP where the connector should be provisioned."
      },
      "gcp_region": {
        "Type": "String",
        "Required": true,
        "Description": "GCP region where VPC resides."
      },
      "gcp_vpc_id": {
        "Type": "String",
        "Required": true,
        "Description": "GCP VPC ID."
      },
      "gcp_vpc_name": {
        "Type": "String",
        "Required": true,
        "Description": "GCP VPC name."
      },
      "group": {
        "Type": "String",
        "Optional": true,
        "Description": "The group of the connector."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the connector."
      },
      "segment_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The ID of the segment associated with the connector."
      },
      "size": {
        "Type": "String",
        "Required": true,
        "Description": "The size of the connector, one of `SMALL`, `MEDIUM` or `LARGE`."
      }
    },
    "alkira_connector_internet_exit": {
      "billing_tag_ids": {
        "Type": "List",
        "Optional": true,
        "Description": "The list of billing tag IDs.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "cxp": {
        "Type": "String",
        "Required": true,
        "Description": "The CXP where the connector should be provisioned."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The description of the connector."
      },
      "group": {
        "Type": "String",
        "Optional": true,
        "Description": "The group of the connector."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the connector."
      },
      "segment_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of segment associated with the connector."
      },
      "size": {
        "Type": "String",
        "Required": true,
        "Description": "The size of the connector, one of `SMALL`, `MEDIUM`, or `LARGE`."
      }
    },
    "alkira_connector_ipsec": {
      "billing_tag_ids": {
        "Type": "List",
        "Optional": true,
        "Description": "A list of Billing Tag by Id associated with the connector.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "cxp": {
        "Type": "String",
        "Required": true,
        "Description": "The CXP where the connector should be provisioned."
      },
      "endpoint": {
        "Type": "Set",
        "Optional": true,
        "Description": "The endpoint.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "advanced": {
              "Type": "Set",
              "Optional": true,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dpd_delay": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Interval to check the liveness of a peer."
                  },
                  "dpd_timeout": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Timeouts to check the liveness of a peer. IKEv1 only."
                  },
                  "esp_dh_group_numbers": {
                    "Type": "String",
                    "Required": true
                  },
                  "esp_encryption_algorithms": {
                    "Type": "String",
                    "Required": true
                  },
                  "esp_integrity_algorithms": {
                    "Type": "String",
                    "Required": true
                  },
                  "esp_life_time": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "Maximum IPsec ESP lifetime if the IPsec ESP does not rekey."
                  },
                  "esp_random_time": {
                    "Type": "String",
                    "Required": true
                  },
                  "esp_rekey_time": {
                    "Type": "String",
                    "Required": true
                  },
                  "ike_dh_group_numbers": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Diffie Hellman groups to use for IKE SA, one of `MODP1024`, `MODP2048`, `MODP3072`, `MODP4096`, `MODP6144`, `MODP8192`, `ECP256`, `ECP384`, `ECP521`, `CURVE25519`"
                  },
                  "ike_encryption_algorithms": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Encryption algorithms to use for IKE SA, one of `AES256CBC`, `AES192CBC`, `AES128CBC`."
                  },
                  "ike_integrity_algorithms": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Integrity algorithms to use for IKE SA, one of `SHA1`, `SHA256`, `SHA384`, `SHA512`."
                  },
                  "ike_over_time": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "Maximum IKE SA lifetime if the IKE SA does not rekey."
                  },
                  "ike_random_time": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "Time range from which to choose a random value to subtract from rekey times."
                  },
                  "ike_rekey_time": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "IKE tunnel rekey time."
                  },
                  "ike_version": {
                    "Type": "String",
                    "Required": true,
                    "Description": "IKE version, either `IKEv1` or `IKEv2`"
                  },
                  "initiator": {
                    "Type": "String",
                    "Required": true
                  },
                  "local_auth_type": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Local-ID type - IKE identity to use for authentication round, one of `FQDN`, `USER_FQDN`, `KEYID`, `IP_ADDR`."
                  },
                  "local_auth_value": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Local-ID value."
                  },
                  "remote_auth_type": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Remote-ID type - IKE identity to use for authentication round, one of `FQDN`, `USER_FQDN`, `KEYID`, `IP_ADDR`."
                  },
                  "remote_auth_value": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Remote-ID value."
                  },
                  "replay_window_size": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "IPsec replay window for the IPsec SA."
                  }
                }
              }
            },
            "billing_tag_ids": {
              "Type": "List",
              "Optional": true,
              "Description": "A list of IDs of billing tag associated with the endpoint.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            },
            "customer_gateway_ip": {
              "Type": "String",
              "Required": true,
              "Description": "The IP address of the customer gateway."
            },
            "enable_tunnel_redundancy": {
              "Type": "Bool",
              "Optional": true,
              "Description": "indicates to Alkira that health for the site should be reported as good as long as any one of the tunnels is up."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the endpoint."
            },
            "preshared_keys": {
              "Type": "List",
              "Optional": true,
              "Description": "An array of presharedKeys, one per tunnel.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "group": {
        "Type": "String",
        "Optional": true,
        "Description": "The group of the connector."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the connector."
      },
      "policy_options": {
        "Type": "Set",
        "Optional": true,
        "Description": "Policy options, both on-prem and cxp prefixlist ids must be provided if vpnMode is `POLICY_BASED`",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cxp_prefix_list_ids": {
              "Type": "List",
              "Required": true,
              "Description": "CXP Prefix List IDs.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            },
            "on_prem_prefix_list_ids": {
              "Type": "List",
              "Required": true,
              "Description": "On Prem Prefix List IDs.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            }
          }
        }
      },
      "routing_options": {
        "Type": "Set",
        "Optional": true,
        "Description": "Routing options, type is `STATIC`, `DYNAMIC`, or`BOTH` must be provided if `vpn_mode` is `ROUTE_BASED`",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "availability": {
              "Type": "String",
              "Optional": true,
              "Description": "The method to determine the availability of static route. The value could be `IKE_STATUS` or `IPSEC_INTERFACE_PING`."
            },
            "bgp_auth_key": {
              "Type": "String",
              "Optional": true,
              "Description": " BGP MD5 auth key for Alkira to authenticate Alkira CXP (On Premise Gateway)."
            },
            "customer_gateway_asn": {
              "Type": "String",
              "Optional": true,
              "Description": "The customer gateway ASN to use for dynamic route propagation."
            },
            "prefix_list_id": {
              "Type": "Int",
              "Optional": true,
              "Description": "The id of prefix list to use for static route propagation."
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "Routing type, one of `STATIC`, `DYNAMIC`, or `BOTH`."
            }
          }
        }
      },
      "segment_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The Id of the segment associated with the connector."
      },
      "segment_options": {
        "Type": "Set",
        "Optional": true,
        "Description": "Additional options for each segment associated with the connector",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "disable_advertise_on_prem_routes": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Additional options for each segment associated with the connector."
            },
            "disable_internet_exit": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Enable or disable access to the internet when traffic arrives via this connector."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Segment Name."
            }
          }
        }
      },
      "size": {
        "Type": "String",
        "Required": true,
        "Description": "The size of the connector. one of `SMALL`, `MEDIUM` and `LARGE`."
      },
      "vpn_mode": {
        "Type": "String",
        "Required": true,
        "Description": "The connector can be configured either in `ROUTE_BASED` or `POLICY_BASED`."
      }
    },
    "alkira_connector_oci_vcn": {
      "billing_tag_ids": {
        "Type": "List",
        "Optional": true,
        "Description": "IDs of billing tags.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "credential_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of OCI-VCN credential."
      },
      "cxp": {
        "Type": "String",
        "Required": true,
        "Description": "The CXP where the connector should be provisioned."
      },
      "enabled": {
        "Type": "Bool",
        "Required": true,
        "Description": "Whether the connector is enabled or not."
      },
      "group": {
        "Type": "String",
        "Optional": true,
        "Description": "The group of the connector."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the connector."
      },
      "oci_region": {
        "Type": "String",
        "Required": true,
        "Description": "OCI region of the VCN."
      },
      "primary": {
        "Type": "Bool",
        "Required": true,
        "Description": "Wether the connector is primary."
      },
      "segment_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The ID of segments associated with the connector. Currently, only `1` segment is allowed."
      },
      "size": {
        "Type": "String",
        "Required": true,
        "Description": "The size of the connector, one of `SMALL`, `MEDIUM`, `LARGE`, `2LARGE`."
      },
      "vcn_cidr": {
        "Type": "List",
        "Optional": true,
        "Description": "The list of CIDR attached to the target VCN for routing purpose. It could be only specified if `vcn_subnet` is not specified.",
        "ConflictsWith": [
          "vcn_subnet"
        ],
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "vcn_id": {
        "Type": "String",
        "Required": true,
        "Description": "The OCID of the VCN."
      },
      "vcn_route_table": {
        "Type": "Set",
        "Optional": true,
        "Description": "VCN route table.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Optional": true,
              "Description": "The ID of the route table."
            },
            "options": {
              "Type": "String",
              "Optional": true,
              "Description": "Routing options, one of `ADVERTISE_DEFAULT_ROUTE`, `OVERRIDE_DEFAULT_ROUTE` and `ADVERTISE_CUSTOM_PREFIX`."
            },
            "prefix_list_ids": {
              "Type": "List",
              "Optional": true,
              "Description": "Prefix List IDs.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            }
          }
        }
      },
      "vcn_subnet": {
        "Type": "Set",
        "Optional": true,
        "Description": "The list of subnets of the target VCN for routing purpose. It could only specified if `vcn_cidr` is not specified.",
        "ConflictsWith": [
          "vcn_cidr"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cidr": {
              "Type": "String",
              "Optional": true,
              "Description": "The CIDR of the subnet."
            },
            "id": {
              "Type": "String",
              "Optional": true,
              "Description": "The Id of the subnet."
            }
          }
        }
      }
    },
    "alkira_credential_aws_vpc": {
      "aws_access_key": {
        "Type": "String",
        "Optional": true,
        "Description": "AWS access key",
        "DefaultFunc": "ENV(AWS_ACCESS_KEY_ID)"
      },
      "aws_external_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The AWS Role External ID",
        "DefaultFunc": "ENV(AWS_ROLE_EXTERNAL_ID)"
      },
      "aws_role_arn": {
        "Type": "String",
        "Optional": true,
        "Description": "The AWS Role Arn",
        "DefaultFunc": "ENV(AWS_ROLE_ARN)"
      },
      "aws_secret_key": {
        "Type": "String",
        "Optional": true,
        "Description": "AWS secret key",
        "DefaultFunc": "ENV(AWS_SECRET_ACCESS_KEY)"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the credential"
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The Type of AWS-VPC credential"
      }
    },
    "alkira_credential_azure_vnet": {
      "application_id": {
        "Type": "String",
        "Required": true,
        "Description": "The Application ID"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the credential"
      },
      "secret_key": {
        "Type": "String",
        "Required": true,
        "Description": "The Secret Key"
      },
      "subscription_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The subscription ID"
      },
      "tenant_id": {
        "Type": "String",
        "Required": true,
        "Description": "The Tenant ID"
      }
    },
    "alkira_credential_cisco_sdwan": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the credential."
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "Cisco SD-WAN password.",
        "DefaultFunc": "ENV(CISCO_SDWAN_PASSWORD)"
      },
      "username": {
        "Type": "String",
        "Optional": true,
        "Description": "Cisco SD-WAN username.",
        "DefaultFunc": "ENV(CISCO_SDWAN_USERNAME)"
      }
    },
    "alkira_credential_gcp_vpc": {
      "auth_provider": {
        "Type": "String",
        "Required": true,
        "Description": "Authentication Provider"
      },
      "auth_uri": {
        "Type": "String",
        "Required": true,
        "Description": "Authentication URI"
      },
      "client_email": {
        "Type": "String",
        "Required": true,
        "Description": "Client email"
      },
      "client_id": {
        "Type": "String",
        "Required": true,
        "Description": "Client ID"
      },
      "client_x509_cert_url": {
        "Type": "String",
        "Required": true,
        "Description": "Client X509 Cert URL"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the credential"
      },
      "private_key": {
        "Type": "String",
        "Required": true,
        "Description": "Private Key"
      },
      "private_key_id": {
        "Type": "String",
        "Required": true,
        "Description": "Private Key ID"
      },
      "project_id": {
        "Type": "String",
        "Required": true,
        "Description": "Project ID"
      },
      "token_uri": {
        "Type": "String",
        "Required": true,
        "Description": "Token URI"
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "Type"
      }
    },
    "alkira_credential_oci_vcn": {
      "fingerprint": {
        "Type": "String",
        "Required": true,
        "Description": "Fingerprint of the API key of the user."
      },
      "key": {
        "Type": "String",
        "Required": true,
        "Description": "API key of the user."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the credential."
      },
      "tenant_ocid": {
        "Type": "String",
        "Required": true,
        "Description": "OCID of the tenant."
      },
      "user_ocid": {
        "Type": "String",
        "Required": true,
        "Description": "OCID of the user."
      }
    },
    "alkira_credential_pan": {
      "license_key": {
        "Type": "String",
        "Required": true,
        "Description": "PAN license key."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the credential."
      },
      "password": {
        "Type": "String",
        "Required": true,
        "Description": "PAN password."
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "PAN username."
      }
    },
    "alkira_credential_pan_instance": {
      "auth_code": {
        "Type": "String",
        "Required": true,
        "Description": "PAN instance auth code."
      },
      "auth_key": {
        "Type": "String",
        "Required": true,
        "Description": "PAN instance auth key."
      },
      "license_key": {
        "Type": "String",
        "Required": true,
        "Description": "PAN license key."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the credential."
      },
      "password": {
        "Type": "String",
        "Required": true,
        "Description": "PAN password."
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "PAN username."
      }
    },
    "alkira_group": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The description of the group."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the group."
      }
    },
    "alkira_internet_application": {
      "billing_tag_ids": {
        "Type": "List",
        "Optional": true,
        "Description": "IDs of billing tags.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "connector_id": {
        "Type": "String",
        "Required": true,
        "Description": "Connector ID."
      },
      "connector_type": {
        "Type": "String",
        "Required": true,
        "Description": "Connector Type."
      },
      "fqdn_prefix": {
        "Type": "String",
        "Required": true,
        "Description": "User provided FQDN prefix that will be published on route53."
      },
      "group_id": {
        "Type": "Int",
        "Description": "ID of the auto generated system group.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the internet application."
      },
      "private_ip": {
        "Type": "String",
        "Required": true,
        "Description": "The private IP associated with the internet application."
      },
      "private_port": {
        "Type": "String",
        "Required": true,
        "Description": "The private port associated with the internet application."
      },
      "segment_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The ID of segment associated with the internet application."
      },
      "size": {
        "Type": "String",
        "Required": true,
        "Description": "The size of the internet application, one of `SMALL`, `MEDIUM` and `LARGE`."
      }
    },
    "alkira_list_as_path": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description for the list."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the list."
      },
      "values": {
        "Type": "List",
        "Required": true,
        "Description": "Value can be regular expression of AS PATH or space sparated AS numbers. BGP regular expressionsare based on POSIX 1003.2 regular expressions.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "alkira_list_community": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description for the list."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the list."
      },
      "values": {
        "Type": "List",
        "Required": true,
        "Description": "A list of communities to match on routes. Each community in the list is a tag value in the format of `AA:NN` format (where AA and NN are `0-65535`). AA denotes a AS number.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "alkira_list_extended_community": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "description for the list."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "name of the list."
      },
      "values": {
        "Type": "List",
        "Required": true,
        "Description": "extended-community values to match on routes. Each extended-community in this set is a structured tag value in the format of `type:AA:NN` format (where AA is `0-65535` and NN is `0-4294967295`) `AA` denotes a AS number or it could be in the format of `IPaddr:nn` where IPaddr is a `x.x.x.x` IPv4 address and nn is a 2 byte value `0-65535`. Type will only be`soo` for now.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "alkira_list_global_cidr": {
      "cxp": {
        "Type": "String",
        "Required": true,
        "Description": "CXP the list belongs to."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description for the list."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the list."
      },
      "values": {
        "Type": "List",
        "Required": true,
        "Description": "A list of CIDRs, The CIDR must be `/24` and a subnet of the following: `10.0.0.0/18`, `172.16.0.0/12`, `192.168.0.0/16`, `100.64.0.0/10`.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "alkira_policy": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The description of the policy."
      },
      "enabled": {
        "Type": "Bool",
        "Required": true,
        "Description": "Whether the policy is enabled."
      },
      "from_groups": {
        "Type": "List",
        "Required": true,
        "Description": "IDs of groups that will define source in the policy scope",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the policy."
      },
      "rule_list_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The `rulelist` that will be used by the policy."
      },
      "segment_ids": {
        "Type": "List",
        "Required": true,
        "Description": "IDs of segments that will define the policy scope.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "to_groups": {
        "Type": "List",
        "Required": true,
        "Description": "IDs of groups that will define destination in the policy scope.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      }
    },
    "alkira_policy_nat": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The description of the policy."
      },
      "excluded_group_ids": {
        "Type": "List",
        "Optional": true,
        "Description": "Excludes given associated connector from `included_groups`.Implicit group ID of a branch/on-premise connector for which a userdefined group is used in `included_groups` can be used here.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "included_group_ids": {
        "Type": "List",
        "Required": true,
        "Description": "Defines the scope for the policy. Connector associatedwith group IDs metioned here is where this policy would be applied.Group IDs that associated with branch/on-premise connectors can beused here. These group should not contain any cloud connector.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the policy."
      },
      "nat_rule_ids": {
        "Type": "List",
        "Required": true,
        "Description": "The list of NAT rules to be applied by the policy.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "segment_id": {
        "Type": "Int",
        "Required": true,
        "Description": "IDs of segments that will define the policy scope."
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The type of NAT policy, currently only `INTER_SEGMENT`is supported."
      }
    },
    "alkira_policy_nat_rule": {
      "action": {
        "Type": "Set",
        "Required": true,
        "Description": "The action of the rule.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dst_addr_translation_advertise_to_connector": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether the destination address should be advertised to connector."
            },
            "dst_addr_translation_bidirectional": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Is the translation bidirectional."
            },
            "dst_addr_translation_ports": {
              "Type": "List",
              "Optional": true,
              "Description": "The port list to translate the destination prefixes to.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "dst_addr_translation_prefiex_list_ids": {
              "Type": "List",
              "Optional": true,
              "Description": "The list of prefix list IDs.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            },
            "dst_addr_translation_prefixes": {
              "Type": "List",
              "Optional": true,
              "Description": "The list of prefixes.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "dst_addr_translation_type": {
              "Type": "String",
              "Optional": true,
              "Description": "The translation type are: `STATIC_IP`, `DYNAMIC`, `DYNAMIC_IP_AND_PORT` and `NONE`."
            },
            "src_addr_translation_bidirectional": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Is the translation bidirectional."
            },
            "src_addr_translation_match_and_invalidate": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether the translation match and invalidate."
            },
            "src_addr_translation_prefiex_list_ids": {
              "Type": "List",
              "Optional": true,
              "Description": "The list of prefix list IDs.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            },
            "src_addr_translation_prefixes": {
              "Type": "List",
              "Optional": true,
              "Description": "The list of prefixes.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "src_addr_translation_type": {
              "Type": "String",
              "Optional": true,
              "Description": "The translation type are: `STATIC_IP`, `DYNAMIC`, `DYNAMIC_IP_AND_PORT` and `NONE`."
            }
          }
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The description of the policy rule."
      },
      "enabled": {
        "Type": "Bool",
        "Required": true,
        "Description": "Enable the rule or not."
      },
      "match": {
        "Type": "Set",
        "Required": true,
        "Description": "Match condition for the rule.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dst_ports": {
              "Type": "List",
              "Optional": true,
              "Description": "The list of ports for destination.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "dst_prefix_list_ids": {
              "Type": "List",
              "Optional": true,
              "Description": "The list of prefix IDs as destination.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            },
            "dst_prefixes": {
              "Type": "List",
              "Optional": true,
              "Description": "The list of prefixes for destination.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "protocol": {
              "Type": "String",
              "Required": true,
              "Description": "The following protocols are supported, `ICMP`, `TCP`, `UDP` or `ANY`."
            },
            "src_ports": {
              "Type": "List",
              "Optional": true,
              "Description": "The list of ports for source.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "src_prefix_list_ids": {
              "Type": "List",
              "Optional": true,
              "Description": "The list of prefix IDs as source.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            },
            "src_prefixes": {
              "Type": "List",
              "Optional": true,
              "Description": "The list of prefixes for source.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the policy rule."
      }
    },
    "alkira_policy_prefix_list": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The description of the prefix list."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the prefix list."
      },
      "prefixes": {
        "Type": "List",
        "Required": true,
        "Description": "A list of prefixes.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "alkira_policy_rule": {
      "application_family_ids": {
        "Type": "List",
        "Optional": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "application_ids": {
        "Type": "List",
        "Optional": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The description of the policy rule."
      },
      "dscp": {
        "Type": "String",
        "Required": true,
        "Description": "The dscp value can be `any` or between `0` to `63` inclusive."
      },
      "dst_ip": {
        "Type": "String",
        "Optional": true,
        "Description": "A single destination IP as The match condition of the rule.",
        "ConflictsWith": [
          "dst_prefix_list_id"
        ]
      },
      "dst_ports": {
        "Type": "List",
        "Optional": true,
        "Description": "Destination ports that can take values: `any` or `1` to `65535`.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "dst_prefix_list_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The ID of prefix list as destination associated with the rule.",
        "ConflictsWith": [
          "dst_ip"
        ]
      },
      "internet_application_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The ID of the internet application associated with the rule. When an internet applciation is selected, destination ip and port will be the private ip and port of the application."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the policy rule."
      },
      "protocol": {
        "Type": "String",
        "Required": true,
        "Description": "The following protocols are supported, `ICMP`, `TCP`, `UDP` or `ANY`."
      },
      "rule_action": {
        "Type": "String",
        "Optional": true,
        "Description": "The action that is applied on matched traffic, either `ALLOW` or `DROP`. The default value is `ALLOW`.",
        "Default": {
          "Type": "string",
          "Value": "ALLOW"
        }
      },
      "rule_action_service_ids": {
        "Type": "List",
        "Optional": true,
        "Description": "Based on the service IDs, traffic is routed to the specified services.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "rule_action_service_types": {
        "Type": "List",
        "Optional": true,
        "Description": "Based on the service type, traffic is routed to service of the given type.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "src_ip": {
        "Type": "String",
        "Optional": true,
        "Description": "A single source IP as The match condition of the rule.",
        "ConflictsWith": [
          "src_prefix_list_id"
        ]
      },
      "src_ports": {
        "Type": "List",
        "Optional": true,
        "Description": "Source ports that can take values: `any` or `1` to `65535`.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "src_prefix_list_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The ID of prefix list as source associated with the rule.",
        "ConflictsWith": [
          "src_ip"
        ]
      }
    },
    "alkira_policy_rule_list": {
      "description": {
        "Type": "String",
        "Optional": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "rules": {
        "Type": "Set",
        "Required": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "priority": {
              "Type": "Int",
              "Required": true
            },
            "rule_id": {
              "Type": "Int",
              "Required": true
            }
          }
        }
      }
    },
    "alkira_segment": {
      "asn": {
        "Type": "String",
        "Required": true,
        "Description": "The BGP ASN for the segment."
      },
      "cidr": {
        "Type": "String",
        "Required": true,
        "Description": "The CIDR block."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the segment."
      }
    },
    "alkira_service_pan": {
      "billing_tag_ids": {
        "Type": "List",
        "Optional": true,
        "Description": "Billing tag IDs to associate with the service.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "bundle": {
        "Type": "String",
        "Optional": true,
        "Description": "The software image bundle that would be used forPAN instance deployment. This is applicable for licenseType`PAY_AS_YOU_GO` only. If not provided, the default`PAN_VM_300_BUNDLE_2` would be used. However `PAN_VM_300_BUNDLE_2`is legacy bundle and is not supported on AWS. It is recommendedto use `VM_SERIES_BUNDLE_1` and `VM_SERIES_BUNDLE_2` (supports Global Protect)."
      },
      "credential_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of PAN credential managed by credential resource."
      },
      "cxp": {
        "Type": "String",
        "Required": true,
        "Description": "The CXP where the service should be provisioned."
      },
      "instance": {
        "Type": "Set",
        "Required": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "credential_id": {
              "Type": "String",
              "Required": true,
              "Description": "ID of PAN instance credential managed by credential resource."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the PAN instance."
            }
          }
        }
      },
      "license_type": {
        "Type": "String",
        "Required": true,
        "Description": "PAN license type, either `BRING_YOUR_OWN` or `PAY_AS_YOU_GO`."
      },
      "management_segment_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Management Segment ID."
      },
      "max_instance_count": {
        "Type": "Int",
        "Required": true,
        "Description": "Max number of Panorama instances for auto scale."
      },
      "min_instance_count": {
        "Type": "Int",
        "Optional": true,
        "Description": "Minimal number of Panorama instances for auto scale. Default value is `0`.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the PAN service."
      },
      "panorama_device_group": {
        "Type": "String",
        "Optional": true,
        "Description": "Panorama device group."
      },
      "panorama_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable Panorama or not. Default value is `false`."
      },
      "panorama_ip_address": {
        "Type": "String",
        "Optional": true,
        "Description": "Panorama IP address."
      },
      "panorama_template": {
        "Type": "String",
        "Optional": true,
        "Description": "Panorama Template."
      },
      "segment_ids": {
        "Type": "List",
        "Required": true,
        "Description": "IDs of segments associated with the service.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "size": {
        "Type": "String",
        "Required": true,
        "Description": "The size of the service, one of `SMALL`, `MEDIUM`, `LARGE`."
      },
      "tunnel_protocol": {
        "Type": "String",
        "Optional": true,
        "Description": "Tunnel Protocol, default to `IPSEC`, could be either `IPSEC` or `GRE`.",
        "Default": {
          "Type": "string",
          "Value": "IPSEC"
        }
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The type of the PAN firewall."
      },
      "version": {
        "Type": "String",
        "Required": true,
        "Description": "The version of the PAN firewall."
      },
      "zones_to_groups": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "groups": {
              "Type": "List",
              "Optional": true,
              "Description": "The name of the group.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "segment_name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the segment."
            },
            "zone_name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the zone."
            }
          }
        }
      }
    },
    "alkira_tenant_network": {
      "connectors": {
        "Type": "List",
        "Optional": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "segments": {
        "Type": "List",
        "Optional": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "services": {
        "Type": "List",
        "Optional": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    }
  },
  "data-sources": {
    "alkira_billing_tag": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the billing tag."
      }
    },
    "alkira_credential": {
      "credential_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the credentials.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the credentials."
      }
    },
    "alkira_group": {
      "group_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The ID of the group.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the group."
      }
    },
    "alkira_policy_prefix_list": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the policy prefix list."
      },
      "prefixes": {
        "Type": "String",
        "Optional": true,
        "Description": "Prefixes in the prefix list.",
        "Computed": true
      }
    },
    "alkira_segment": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the segment."
      },
      "segment_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The ID of the segment.",
        "Computed": true
      }
    }
  }
}