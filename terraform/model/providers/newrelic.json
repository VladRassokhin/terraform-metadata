{
  ".schema_version": "2",
  ".sdk_type": "terraform-plugin-sdk-v1",
  "name": "newrelic",
  "type": "provider",
  "version": "v2.21.0",
  "provider": {
    "account_id": {
      "Type": "Int",
      "Required": true,
      "DefaultFunc": "ENV(NEW_RELIC_ACCOUNT_ID)"
    },
    "admin_api_key": {
      "Type": "String",
      "Optional": true,
      "DefaultFunc": "ENV(NEW_RELIC_ADMIN_API_KEY)"
    },
    "api_key": {
      "Type": "String",
      "Optional": true,
      "DefaultFunc": "ENV(NEW_RELIC_API_KEY)"
    },
    "api_url": {
      "Type": "String",
      "Optional": true,
      "DefaultFunc": "ENV(NEW_RELIC_API_URL)",
      "Deprecated": "New Relic internal use only. API URLs are now configured based on the configured region."
    },
    "cacert_file": {
      "Type": "String",
      "Optional": true,
      "DefaultFunc": "ENV(NEW_RELIC_API_CACERT)"
    },
    "infrastructure_api_url": {
      "Type": "String",
      "Optional": true,
      "DefaultFunc": "ENV(NEW_RELIC_INFRASTRUCTURE_API_URL)",
      "Deprecated": "New Relic internal use only. API URLs are now configured based on the configured region."
    },
    "insecure_skip_verify": {
      "Type": "Bool",
      "Optional": true,
      "DefaultFunc": "ENV(NEW_RELIC_API_SKIP_VERIFY)"
    },
    "insights_insert_key": {
      "Type": "String",
      "Optional": true,
      "DefaultFunc": "ENV(NEW_RELIC_INSIGHTS_INSERT_KEY)"
    },
    "insights_insert_url": {
      "Type": "String",
      "Optional": true,
      "DefaultFunc": "ENV(NEW_RELIC_INSIGHTS_INSERT_URL)"
    },
    "insights_query_url": {
      "Type": "String",
      "Optional": true,
      "DefaultFunc": "ENV(NEW_RELIC_INSIGHTS_QUERY_URL)"
    },
    "nerdgraph_api_url": {
      "Type": "String",
      "Optional": true,
      "DefaultFunc": "ENV(NEW_RELIC_NERDGRAPH_API_URL)",
      "Deprecated": "New Relic internal use only. API URLs are now configured based on the configured region."
    },
    "region": {
      "Type": "String",
      "Required": true,
      "Description": "The data center for which your New Relic account is configured. Only one region per provider block is permitted.",
      "DefaultFunc": "ENV(NEW_RELIC_REGION)"
    },
    "synthetics_api_url": {
      "Type": "String",
      "Optional": true,
      "DefaultFunc": "ENV(NEW_RELIC_SYNTHETICS_API_URL)",
      "Deprecated": "New Relic internal use only. API URLs are now configured based on the configured region."
    }
  },
  "resources": {
    "newrelic_alert_channel": {
      "config": {
        "Type": "List",
        "Optional": true,
        "Description": "The configuration block for the alert channel.",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "api_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The API key for integrating with OpsGenie."
            },
            "auth_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Specifies an authentication password for use with a channel. Supported by the webhook channel type."
            },
            "auth_type": {
              "Type": "String",
              "Optional": true,
              "Description": "Specifies an authentication method for use with a channel. Supported by the webhook channel type. Only HTTP basic authentication is currently supported via the value BASIC."
            },
            "auth_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Specifies an authentication username for use with a channel. Supported by the webhook channel type."
            },
            "base_url": {
              "Type": "String",
              "Optional": true,
              "Description": "The base URL of the webhook destination."
            },
            "channel": {
              "Type": "String",
              "Optional": true,
              "Description": "The Slack channel to send notifications to."
            },
            "headers": {
              "Type": "Map",
              "Optional": true,
              "Description": "A map of key/value pairs that represents extra HTTP headers to be sent along with the webhook payload.",
              "ConflictsWith": [
                "config.0.headers_string"
              ],
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "headers_string": {
              "Type": "String",
              "Optional": true,
              "Description": "Use instead of headers if the desired payload is more complex than a list of key/value pairs (e.g. a set of headers that makes use of nested objects). The value provided should be a valid JSON string with escaped double quotes. Conflicts with headers.",
              "ConflictsWith": [
                "config.0.headers"
              ]
            },
            "include_json_attachment": {
              "Type": "String",
              "Optional": true,
              "Description": "true or false. Flag for whether or not to attach a JSON document containing information about the associated alert to the email that is sent to recipients."
            },
            "key": {
              "Type": "String",
              "Optional": true,
              "Description": "The key for integrating with VictorOps."
            },
            "payload": {
              "Type": "Map",
              "Optional": true,
              "Description": "A map of key/value pairs that represents the webhook payload. Must provide payload_type if setting this argument.",
              "ConflictsWith": [
                "config.0.payload_string"
              ],
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "payload_string": {
              "Type": "String",
              "Optional": true,
              "Description": "Use instead of payload if the desired payload is more complex than a list of key/value pairs (e.g. a payload that makes use of nested objects). The value provided should be a valid JSON string with escaped double quotes. Conflicts with payload.",
              "ConflictsWith": [
                "config.0.payload"
              ]
            },
            "payload_type": {
              "Type": "String",
              "Optional": true,
              "Description": "Can either be application/json or application/x-www-form-urlencoded. The payload_type argument is required if payload is set."
            },
            "recipients": {
              "Type": "String",
              "Optional": true,
              "Description": "A set of recipients for targeting notifications. Multiple values are comma separated."
            },
            "region": {
              "Type": "String",
              "Optional": true,
              "Description": "The data center region to store your data. Valid values are US and EU. Default is US."
            },
            "route_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The route key for integrating with VictorOps."
            },
            "service_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Specifies the service key for integrating with Pagerduty."
            },
            "tags": {
              "Type": "String",
              "Optional": true,
              "Description": "A set of tags for targeting notifications. Multiple values are comma separated."
            },
            "teams": {
              "Type": "String",
              "Optional": true,
              "Description": "A set of teams for targeting notifications. Multiple values are comma separated."
            },
            "url": {
              "Type": "String",
              "Optional": true,
              "Description": "Your organization's Slack URL."
            },
            "user_id": {
              "Type": "String",
              "Optional": true,
              "Description": "The user ID for use with the user channel type."
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "(Required) The name of the channel."
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "(Required) The type of channel. One of: (webhook, email, opsgenie, pagerduty, slack, user, victorops)."
      }
    },
    "newrelic_alert_condition": {
      "condition_scope": {
        "Type": "String",
        "Optional": true,
        "Description": "One of (application, instance). Choose application for most scenarios. If you are using the JVM plugin in New Relic, the instance setting allows your condition to trigger for specific app instances."
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "The title of the condition. Must be between 1 and 64 characters, inclusive.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "entities": {
        "Type": "Set",
        "Required": true,
        "Description": "The instance IDs associated with this condition.",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "gc_metric": {
        "Type": "String",
        "Optional": true,
        "Description": "A valid Garbage Collection metric e.g. GC/G1 Young Generation. This is required if you are using apm_jvm_metric with gc_cpu_time condition type."
      },
      "metric": {
        "Type": "String",
        "Required": true,
        "Description": "The metric field accepts parameters based on the type set."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The title of the condition. Must be between 1 and 64 characters, inclusive."
      },
      "policy_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The ID of the policy where this condition should be used."
      },
      "runbook_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Runbook URL to display in notifications."
      },
      "term": {
        "Type": "Set",
        "Required": true,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "duration": {
              "Type": "Int",
              "Required": true,
              "Description": "In minutes, must be in the range of 5 to 120, inclusive."
            },
            "operator": {
              "Type": "String",
              "Optional": true,
              "Description": "One of (above, below, equal). Defaults to equal.",
              "Default": {
                "Type": "string",
                "Value": "equal"
              }
            },
            "priority": {
              "Type": "String",
              "Optional": true,
              "Description": "One of (critical, warning). Defaults to critical.",
              "Default": {
                "Type": "string",
                "Value": "critical"
              }
            },
            "threshold": {
              "Type": "Float",
              "Required": true,
              "Description": "Must be 0 or greater."
            },
            "time_function": {
              "Type": "String",
              "Required": true,
              "Description": "One of (all, any)."
            }
          }
        }
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The type of condition. One of: (apm_app_metric, apm_jvm_metric, apm_kt_metric, browser_metric, mobile_metric, servers_metric)."
      },
      "user_defined_metric": {
        "Type": "String",
        "Optional": true,
        "Description": "A custom metric to be evaluated."
      },
      "user_defined_value_function": {
        "Type": "String",
        "Optional": true,
        "Description": "One of: (average, min, max, total, sample_size)."
      },
      "violation_close_timer": {
        "Type": "Int",
        "Optional": true,
        "Description": "Automatically close instance-based violations, including JVM health metric violations, after the number of hours specified. Must be: 1, 2, 4, 8, 12 or 24."
      }
    },
    "newrelic_alert_muting_rule": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The account id of the MutingRule..",
        "Computed": true
      },
      "condition": {
        "Type": "List",
        "Required": true,
        "Description": "The condition that defines which violations to target.",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "conditions": {
              "Type": "List",
              "Required": true,
              "Description": "The individual MutingRuleConditions within the group.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "attribute": {
                    "Type": "String",
                    "Required": true,
                    "Description": "The attribute on a violation."
                  },
                  "operator": {
                    "Type": "String",
                    "Required": true,
                    "Description": "The operator used to compare the attribute's value with the supplied value(s)."
                  },
                  "values": {
                    "Type": "List",
                    "Required": true,
                    "Description": "The value(s) to compare against the attribute's value.",
                    "MinItems": 1,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "operator": {
              "Type": "String",
              "Required": true,
              "Description": "The operator used to combine all the MutingRuleConditions within the group."
            }
          }
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The description of the MutingRule."
      },
      "enabled": {
        "Type": "Bool",
        "Required": true,
        "Description": "Whether the MutingRule is enabled."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the MutingRule."
      },
      "schedule": {
        "Type": "List",
        "Optional": true,
        "Description": "The time window when the MutingRule should actively mute violations.",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "end_repeat": {
              "Type": "String",
              "Optional": true,
              "Description": "The datetime stamp when the MutingRule schedule should stop repeating.",
              "ConflictsWith": [
                "schedule.0.repeat_count"
              ]
            },
            "end_time": {
              "Type": "String",
              "Optional": true,
              "Description": "The datetime stamp representing when the MutingRule should end."
            },
            "repeat": {
              "Type": "String",
              "Optional": true,
              "Description": "The frequency the MutingRule schedule repeats. One of [DAILY, WEEKLY, MONTHLY]"
            },
            "repeat_count": {
              "Type": "Int",
              "Optional": true,
              "Description": "The number of times the MutingRule schedule should repeat.",
              "ConflictsWith": [
                "schedule.0.end_repeat"
              ]
            },
            "start_time": {
              "Type": "String",
              "Optional": true,
              "Description": "The datetime stamp representing when the MutingRule should start."
            },
            "time_zone": {
              "Type": "String",
              "Required": true,
              "Description": "The time zone that applies to the MutingRule schedule."
            },
            "weekly_repeat_days": {
              "Type": "Set",
              "Optional": true,
              "Description": "The day(s) of the week that a MutingRule should repeat when the repeat field is set to WEEKLY.",
              "MaxItems": 7,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      }
    },
    "newrelic_alert_policy": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The New Relic account ID to operate on.",
        "Computed": true
      },
      "channel_ids": {
        "Type": "List",
        "Optional": true,
        "Description": "An array of channel IDs (integers) to assign to the policy. Adding or removing channel IDs from this array will result in a new alert policy resource being created and the old one being destroyed. Also note that channel IDs cannot be imported via terraform import.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "incident_preference": {
        "Type": "String",
        "Optional": true,
        "Description": "The rollup strategy for the policy. Options include: PER_POLICY, PER_CONDITION, or PER_CONDITION_AND_TARGET. The default is PER_POLICY.",
        "Default": {
          "Type": "string",
          "Value": "PER_POLICY"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the policy."
      }
    },
    "newrelic_alert_policy_channel": {
      "channel_ids": {
        "Type": "Set",
        "Required": true,
        "Description": "Array of channel IDs to apply to the specified policy. We recommended sorting channel IDs in ascending order to avoid drift your Terraform state.",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "policy_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The ID of the policy."
      }
    },
    "newrelic_api_access_key": {
      "account_id": {
        "Type": "Int",
        "Required": true
      },
      "ingest_type": {
        "Type": "String",
        "Optional": true,
        "Computed": true,
        "ConflictsWith": [
          "user_id"
        ]
      },
      "key": {
        "Type": "String",
        "Computed": true
      },
      "key_type": {
        "Type": "String",
        "Required": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "notes": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "user_id": {
        "Type": "Int",
        "Optional": true,
        "Computed": true,
        "ConflictsWith": [
          "ingest_type"
        ]
      }
    },
    "newrelic_application_settings": {
      "app_apdex_threshold": {
        "Type": "Float",
        "Required": true
      },
      "enable_real_user_monitoring": {
        "Type": "Bool",
        "Required": true
      },
      "end_user_apdex_threshold": {
        "Type": "Float",
        "Required": true
      },
      "name": {
        "Type": "String",
        "Required": true
      }
    },
    "newrelic_dashboard": {
      "dashboard_url": {
        "Type": "String",
        "Description": "The URL for viewing the dashboard.",
        "Computed": true
      },
      "editable": {
        "Type": "String",
        "Optional": true,
        "Description": "Determines who can edit the dashboard in an account. Valid values are all, editable_by_all, editable_by_owner, or read_only. Defaults to editable_by_all.",
        "Default": {
          "Type": "string",
          "Value": "editable_by_all"
        }
      },
      "filter": {
        "Type": "List",
        "Optional": true,
        "Description": "A nested block that describes a dashboard filter. Exactly one nested filter block is allowed.",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "attributes": {
              "Type": "Set",
              "Optional": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "event_types": {
              "Type": "Set",
              "Required": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "grid_column_count": {
        "Type": "Int",
        "Optional": true,
        "Description": "New Relic One supports a 3 column grid or a 12 column grid. New Relic Insights supports a 3 column grid.",
        "Default": {
          "Type": "int",
          "Value": "3"
        }
      },
      "icon": {
        "Type": "String",
        "Optional": true,
        "Description": "The icon for the dashboard.",
        "Default": {
          "Type": "string",
          "Value": "bar-chart"
        }
      },
      "title": {
        "Type": "String",
        "Required": true,
        "Description": "The title of the dashboard."
      },
      "visibility": {
        "Type": "String",
        "Optional": true,
        "Description": "Determines who can see the dashboard in an account. Valid values are all or owner. Defaults to all.",
        "Default": {
          "Type": "string",
          "Value": "all"
        }
      },
      "widget": {
        "Type": "Set",
        "Optional": true,
        "Description": "A nested block that describes a visualization. Up to 300 widget blocks are allowed in a dashboard definition.",
        "MaxItems": 300,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "account_id": {
              "Type": "Int",
              "Optional": true,
              "Description": "The target account ID to fetch data from, if not the current account."
            },
            "column": {
              "Type": "Int",
              "Required": true,
              "Description": "Column position of widget from top left, starting at 1."
            },
            "compare_with": {
              "Type": "Set",
              "Optional": true,
              "Description": "A block describing a COMPARE WITH clause.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "offset_duration": {
                    "Type": "String",
                    "Required": true,
                    "Description": "The offset duration for the COMPARE WITH clause."
                  },
                  "presentation": {
                    "Type": "List",
                    "Required": true,
                    "Description": "The presentation settings for the rendered data.",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "color": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The color for the rendered data."
                        },
                        "name": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The name for the rendered data."
                        }
                      }
                    }
                  }
                }
              }
            },
            "drilldown_dashboard_id": {
              "Type": "Int",
              "Optional": true,
              "Description": "The ID of a dashboard to link to from the widget's facets."
            },
            "duration": {
              "Type": "Int",
              "Optional": true
            },
            "end_time": {
              "Type": "Int",
              "Optional": true
            },
            "entity_ids": {
              "Type": "Set",
              "Optional": true,
              "Description": "A collection of entity ids to display data for. These are typically application IDs.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            },
            "facet": {
              "Type": "String",
              "Optional": true
            },
            "height": {
              "Type": "Int",
              "Optional": true,
              "Description": "Height of the widget. Valid values are 1 to 3 inclusive. Defaults to 1.",
              "Default": {
                "Type": "int",
                "Value": "1"
              }
            },
            "limit": {
              "Type": "Int",
              "Optional": true,
              "Description": "The limit of distinct data series to display.  Requires `order_by` to be set."
            },
            "metric": {
              "Type": "Set",
              "Optional": true,
              "Description": "A nested block that describes a metric.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Required": true,
                    "Description": "The metric name to display."
                  },
                  "scope": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The metric scope."
                  },
                  "units": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The metric units."
                  },
                  "values": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "The metric values to display.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "notes": {
              "Type": "String",
              "Optional": true,
              "Description": "Description of the widget."
            },
            "nrql": {
              "Type": "String",
              "Optional": true,
              "Description": "Valid NRQL query string."
            },
            "order_by": {
              "Type": "String",
              "Optional": true,
              "Description": "Set the order of result series.  Required when using `limit`."
            },
            "raw_metric_name": {
              "Type": "String",
              "Computed": true
            },
            "row": {
              "Type": "Int",
              "Required": true,
              "Description": "Row position of widget from top left, starting at 1."
            },
            "source": {
              "Type": "String",
              "Optional": true,
              "Description": "The markdown source to be rendered in the widget."
            },
            "threshold_red": {
              "Type": "Float",
              "Optional": true,
              "Description": "Threshold above which the displayed value will be styled with a red color."
            },
            "threshold_yellow": {
              "Type": "Float",
              "Optional": true,
              "Description": "Threshold above which the displayed value will be styled with a yellow color."
            },
            "title": {
              "Type": "String",
              "Required": true,
              "Description": "A title for the widget."
            },
            "visualization": {
              "Type": "String",
              "Required": true,
              "Description": "How the widget visualizes data."
            },
            "widget_id": {
              "Type": "Int",
              "Description": "The ID of the widget.",
              "Computed": true
            },
            "width": {
              "Type": "Int",
              "Optional": true,
              "Description": "Width of the widget. Valid values are 1 to 3 inclusive. Defaults to 1.",
              "Default": {
                "Type": "int",
                "Value": "1"
              }
            }
          }
        }
      }
    },
    "newrelic_entity_tags": {
      "__timeouts__": [
        "create"
      ],
      "guid": {
        "Type": "String",
        "Required": true,
        "Description": "The guid of the entity to tag."
      },
      "tag": {
        "Type": "Set",
        "Required": true,
        "Description": "A set of key-value pairs to represent a tag. For example: Team:TeamName",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "The tag key."
            },
            "values": {
              "Type": "Set",
              "Required": true,
              "Description": "The tag values.",
              "MinItems": 1,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      }
    },
    "newrelic_events_to_metrics_rule": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "Account with the event and where the metrics will be put.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Provides additional information about the rule."
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True means this rule is enabled. False means the rule is currently not creating metrics."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the rule. This must be unique within an account."
      },
      "nrql": {
        "Type": "String",
        "Required": true,
        "Description": "Explains how to create metrics from events."
      },
      "rule_id": {
        "Type": "String",
        "Description": "The id, uniquely identifying the rule.",
        "Computed": true
      }
    },
    "newrelic_infra_alert_condition": {
      "comparison": {
        "Type": "String",
        "Optional": true,
        "Description": "The operator used to evaluate the threshold value. Valid values are above, below, and equal. Supported by the infra_metric and infra_process_running condition types."
      },
      "created_at": {
        "Type": "Int",
        "Description": "The timestamp the alert condition was created.",
        "Computed": true
      },
      "critical": {
        "Type": "List",
        "Optional": true,
        "Description": "Identifies the threshold parameters for opening a critical alert violation.",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "duration": {
              "Type": "Int",
              "Required": true
            },
            "time_function": {
              "Type": "String",
              "Optional": true
            },
            "value": {
              "Type": "Float",
              "Optional": true
            }
          }
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The description of the Infrastructure alert condition."
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether the condition is turned on or off. Valid values are true and false. Defaults to true.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "event": {
        "Type": "String",
        "Optional": true,
        "Description": "The metric event; for example, SystemSample or StorageSample. Supported by the infra_metric condition type.",
        "Computed": true
      },
      "integration_provider": {
        "Type": "String",
        "Optional": true,
        "Description": "For alerts on integrations, use this instead of event. Supported by the infra_metric condition type."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The Infrastructure alert condition's name."
      },
      "policy_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The ID of the alert policy where this condition should be used."
      },
      "process_where": {
        "Type": "String",
        "Optional": true,
        "Description": "Any filters applied to processes; for example: commandName = 'java'. Supported by the infra_process_running condition type."
      },
      "runbook_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Runbook URL to display in notifications."
      },
      "select": {
        "Type": "String",
        "Optional": true,
        "Description": "The attribute name to identify the metric being targeted; for example, cpuPercent, diskFreePercent, or memoryResidentSizeBytes. The underlying API will automatically populate this value for Infrastructure integrations (for example diskFreePercent), so make sure to explicitly include this value to avoid diff issues. Supported by the infra_metric condition type."
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The type of Infrastructure alert condition. Valid values are infra_process_running, infra_metric, and infra_host_not_reporting."
      },
      "updated_at": {
        "Type": "Int",
        "Description": "The timestamp the alert condition was last updated.",
        "Computed": true
      },
      "violation_close_timer": {
        "Type": "Int",
        "Optional": true,
        "Description": "Determines how much time, in minutes, will pass before a violation is automatically closed. Setting the time limit to 0 prevents a violation from being force-closed. Valid values are 0, 1, 2, 4, 8, 12, 24, 48, or 72",
        "Default": {
          "Type": "int",
          "Value": "24"
        }
      },
      "warning": {
        "Type": "List",
        "Optional": true,
        "Description": "Identifies the threshold parameters for opening a warning alert violation.",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "duration": {
              "Type": "Int",
              "Required": true
            },
            "time_function": {
              "Type": "String",
              "Optional": true
            },
            "value": {
              "Type": "Float",
              "Optional": true
            }
          }
        }
      },
      "where": {
        "Type": "String",
        "Optional": true,
        "Description": "If applicable, this identifies any Infrastructure host filters used; for example: hostname LIKE '%cassandra%'."
      }
    },
    "newrelic_insights_event": {
      "event": {
        "Type": "Set",
        "Required": true,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "attribute": {
              "Type": "Set",
              "Required": true,
              "Description": "An attribute to include in your event payload. Multiple attribute blocks can be defined for an event.",
              "MaxItems": 255,
              "MinItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "key": {
                    "Type": "String",
                    "Required": true,
                    "Description": "The name of the attribute."
                  },
                  "type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Specify the type for the attribute value. This is useful when passing integer or float values to Insights. Allowed values are string, int, or float. Defaults to string."
                  },
                  "value": {
                    "Type": "String",
                    "Required": true,
                    "Description": "The value of the attribute."
                  }
                }
              }
            },
            "timestamp": {
              "Type": "Int",
              "Optional": true,
              "Description": "Must be a Unix epoch timestamp. You can define timestamps either in seconds or in milliseconds."
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "The event's name. Can be a combination of alphanumeric characters, underscores, and colons."
            }
          }
        }
      }
    },
    "newrelic_nrql_alert_condition": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The New Relic account ID for managing your NRQL alert conditions.",
        "Computed": true
      },
      "aggregation_window": {
        "Type": "Int",
        "Optional": true,
        "Description": "The duration of the time window used to evaluate the NRQL query, in seconds.",
        "Computed": true
      },
      "baseline_direction": {
        "Type": "String",
        "Optional": true,
        "Description": "The baseline direction of a baseline NRQL alert condition. Valid values are: 'LOWER_ONLY', 'UPPER_AND_LOWER', 'UPPER_ONLY' (case insensitive).",
        "ConflictsWith": [
          "value_function"
        ]
      },
      "close_violations_on_expiration": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to close all open violations when the signal expires."
      },
      "critical": {
        "Type": "List",
        "Optional": true,
        "Description": "A condition term with priority set to critical.",
        "MaxItems": 1,
        "MinItems": 1,
        "ConflictsWith": [
          "term"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "duration": {
              "Type": "Int",
              "Optional": true,
              "Description": "In minutes, must be in the range of 1 to 120 (inclusive).",
              "Deprecated": "use `threshold_duration` attribute instead"
            },
            "operator": {
              "Type": "String",
              "Optional": true,
              "Description": "One of (above, below, equals). Defaults to 'equals'.",
              "Default": {
                "Type": "string",
                "Value": "equals"
              }
            },
            "threshold": {
              "Type": "Float",
              "Required": true,
              "Description": "Must be 0 or greater. For baseline conditions must be in range [1, 1000]."
            },
            "threshold_duration": {
              "Type": "Int",
              "Optional": true,
              "Description": "The duration, in seconds, that the threshold must violate in order to create a violation. Value must be a multiple of the 'aggregation_window' (which has a default of 60 seconds). Value must be within 120-3600 seconds for baseline and outlier conditions, within 120-7200 seconds for static conditions with the sum value function, and within 60-7200 seconds for static conditions with the single_value value function."
            },
            "threshold_occurrences": {
              "Type": "String",
              "Optional": true,
              "Description": "The criteria for how many data points must be in violation for the specified threshold duration. Valid values are: 'ALL' or 'AT_LEAST_ONCE' (case insensitive)."
            },
            "time_function": {
              "Type": "String",
              "Optional": true,
              "Description": "Valid values are: 'all' or 'any'",
              "Deprecated": "use `threshold_occurrences` attribute instead"
            }
          }
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The description of the NRQL alert condition."
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether or not to enable the alert condition.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "expected_groups": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of expected groups when using outlier detection."
      },
      "expiration_duration": {
        "Type": "Int",
        "Optional": true,
        "Description": "The amount of time (in seconds) to wait before considering the signal expired."
      },
      "fill_option": {
        "Type": "String",
        "Optional": true,
        "Description": "Which strategy to use when filling gaps in the signal. If static, the 'fill value' will be used for filling gaps in the signal. Valid values are: 'NONE', 'LAST_VALUE', or 'STATIC' (case insensitive)."
      },
      "fill_value": {
        "Type": "Float",
        "Optional": true,
        "Description": "If using the 'static' fill option, this value will be used for filling gaps in the signal."
      },
      "ignore_overlap": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to look for a convergence of groups when using outlier detection.",
        "ConflictsWith": [
          "open_violation_on_group_overlap"
        ],
        "Deprecated": "use `open_violation_on_group_overlap` attribute instead, but use the inverse of your boolean - e.g. if ignore_overlap = false, use open_violation_on_group_overlap = true"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The title of the condition."
      },
      "nrql": {
        "Type": "List",
        "Required": true,
        "Description": "A NRQL query.",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "evaluation_offset": {
              "Type": "Int",
              "Optional": true,
              "Description": "NRQL queries are evaluated in one-minute time windows. The start time depends on the value you provide in the NRQL condition's `evaluation_offset`.",
              "ConflictsWith": [
                "nrql.0.since_value"
              ]
            },
            "query": {
              "Type": "String",
              "Required": true
            },
            "since_value": {
              "Type": "String",
              "Optional": true,
              "Description": "NRQL queries are evaluated in one-minute time windows. The start time depends on the value you provide in the NRQL condition's `since_value`.",
              "ConflictsWith": [
                "nrql.0.evaluation_offset"
              ],
              "Deprecated": "use `evaluation_offset` attribute instead"
            }
          }
        }
      },
      "open_violation_on_expiration": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to create a new violation to capture that the signal expired."
      },
      "open_violation_on_group_overlap": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether overlapping groups should produce a violation.",
        "ConflictsWith": [
          "ignore_overlap"
        ]
      },
      "policy_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The ID of the policy where this condition should be used."
      },
      "runbook_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Runbook URL to display in notifications."
      },
      "term": {
        "Type": "Set",
        "Optional": true,
        "Description": "A set of terms for this condition. Max 2 terms allowed - at least one 1 critical term and 1 optional warning term.",
        "MaxItems": 2,
        "MinItems": 1,
        "ConflictsWith": [
          "critical",
          "warning"
        ],
        "Deprecated": "use `critical` and `warning` attributes instead",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "duration": {
              "Type": "Int",
              "Optional": true,
              "Description": "In minutes, must be in the range of 1 to 120 (inclusive).",
              "Deprecated": "use `threshold_duration` attribute instead"
            },
            "operator": {
              "Type": "String",
              "Optional": true,
              "Description": "One of (above, below, equals). Defaults to 'equals'.",
              "Default": {
                "Type": "string",
                "Value": "equals"
              }
            },
            "priority": {
              "Type": "String",
              "Optional": true,
              "Description": "One of (critical, warning). Defaults to 'critical'. At least one condition term must have priority set to 'critical'.",
              "Default": {
                "Type": "string",
                "Value": "critical"
              }
            },
            "threshold": {
              "Type": "Float",
              "Required": true,
              "Description": "Must be 0 or greater. For baseline conditions must be in range [1, 1000]."
            },
            "threshold_duration": {
              "Type": "Int",
              "Optional": true,
              "Description": "The duration, in seconds, that the threshold must violate in order to create a violation. Value must be a multiple of the 'aggregation_window' (which has a default of 60 seconds). Value must be within 120-3600 seconds for baseline and outlier conditions, within 120-7200 seconds for static conditions with the sum value function, and within 60-7200 seconds for static conditions with the single_value value function."
            },
            "threshold_occurrences": {
              "Type": "String",
              "Optional": true,
              "Description": "The criteria for how many data points must be in violation for the specified threshold duration. Valid values are: 'ALL' or 'AT_LEAST_ONCE' (case insensitive)."
            },
            "time_function": {
              "Type": "String",
              "Optional": true,
              "Description": "Valid values are: 'all' or 'any'",
              "Deprecated": "use `threshold_occurrences` attribute instead"
            }
          }
        }
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "The type of NRQL alert condition to create. Valid values are: 'static', 'outlier', 'baseline'.",
        "Default": {
          "Type": "string",
          "Value": "static"
        }
      },
      "value_function": {
        "Type": "String",
        "Optional": true,
        "Description": "Valid values are: 'single_value' or 'sum'"
      },
      "violation_time_limit": {
        "Type": "String",
        "Optional": true,
        "Description": "Sets a time limit, in hours, that will automatically force-close a long-lasting violation after the time limit you select. Possible values are 'ONE_HOUR', 'TWO_HOURS', 'FOUR_HOURS', 'EIGHT_HOURS', 'TWELVE_HOURS', 'TWENTY_FOUR_HOURS', 'THIRTY_DAYS' (case insensitive).",
        "Computed": true,
        "ConflictsWith": [
          "violation_time_limit_seconds"
        ],
        "Deprecated": "use `violation_time_limit_seconds` attribute instead"
      },
      "violation_time_limit_seconds": {
        "Type": "Int",
        "Optional": true,
        "Description": "Sets a time limit, in seconds, that will automatically force-close a long-lasting violation after the time limit you select.  Must be in the range of 300 to 2592000 (inclusive)",
        "ConflictsWith": [
          "violation_time_limit"
        ]
      },
      "warning": {
        "Type": "List",
        "Optional": true,
        "Description": "A condition term with priority set to warning.",
        "MaxItems": 1,
        "MinItems": 1,
        "ConflictsWith": [
          "term"
        ],
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "duration": {
              "Type": "Int",
              "Optional": true,
              "Description": "In minutes, must be in the range of 1 to 120 (inclusive).",
              "Deprecated": "use `threshold_duration` attribute instead"
            },
            "operator": {
              "Type": "String",
              "Optional": true,
              "Description": "One of (above, below, equals). Defaults to 'equals'.",
              "Default": {
                "Type": "string",
                "Value": "equals"
              }
            },
            "threshold": {
              "Type": "Float",
              "Required": true,
              "Description": "Must be 0 or greater. For baseline conditions must be in range [1, 1000]."
            },
            "threshold_duration": {
              "Type": "Int",
              "Optional": true,
              "Description": "The duration, in seconds, that the threshold must violate in order to create a violation. Value must be a multiple of the 'aggregation_window' (which has a default of 60 seconds). Value must be within 120-3600 seconds for baseline and outlier conditions, within 120-7200 seconds for static conditions with the sum value function, and within 60-7200 seconds for static conditions with the single_value value function."
            },
            "threshold_occurrences": {
              "Type": "String",
              "Optional": true,
              "Description": "The criteria for how many data points must be in violation for the specified threshold duration. Valid values are: 'ALL' or 'AT_LEAST_ONCE' (case insensitive)."
            },
            "time_function": {
              "Type": "String",
              "Optional": true,
              "Description": "Valid values are: 'all' or 'any'",
              "Deprecated": "use `threshold_occurrences` attribute instead"
            }
          }
        }
      }
    },
    "newrelic_nrql_drop_rule": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "Account with the NRQL drop rule will be put.",
        "Computed": true
      },
      "action": {
        "Type": "String",
        "Required": true,
        "Description": "The drop rule action (drop_data or drop_attributes)."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Provides additional information about the rule."
      },
      "nrql": {
        "Type": "String",
        "Required": true,
        "Description": "Explains which data to apply the drop rule to."
      },
      "rule_id": {
        "Type": "String",
        "Description": "The id, uniquely identifying the rule.",
        "Computed": true
      }
    },
    "newrelic_one_dashboard": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The New Relic account ID where you want to create the dashboard.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The dashboard's description."
      },
      "guid": {
        "Type": "String",
        "Description": "The unique entity identifier of the dashboard in New Relic.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The dashboard's name."
      },
      "page": {
        "Type": "List",
        "Required": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "description": {
              "Type": "String",
              "Optional": true,
              "Description": "The dashboard page's description."
            },
            "guid": {
              "Type": "String",
              "Description": "The unique entity identifier of the dashboard page in New Relic.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The dashboard page's name."
            },
            "widget_area": {
              "Type": "List",
              "Optional": true,
              "Description": "An area widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "nrql_query": {
                    "Type": "List",
                    "Required": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "account_id": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The account id used for the NRQL query.",
                          "Computed": true
                        },
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The NRQL query."
                        }
                      }
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            },
            "widget_bar": {
              "Type": "List",
              "Optional": true,
              "Description": "A bar widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "linked_entity_guids": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Related entities. Currently only supports Dashboard entities, but may allow other cases in the future.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "nrql_query": {
                    "Type": "List",
                    "Required": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "account_id": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The account id used for the NRQL query.",
                          "Computed": true
                        },
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The NRQL query."
                        }
                      }
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            },
            "widget_billboard": {
              "Type": "List",
              "Optional": true,
              "Description": "A billboard widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "critical": {
                    "Type": "Float",
                    "Optional": true,
                    "Description": "The critical threshold value."
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "nrql_query": {
                    "Type": "List",
                    "Required": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "account_id": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The account id used for the NRQL query.",
                          "Computed": true
                        },
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The NRQL query."
                        }
                      }
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "warning": {
                    "Type": "Float",
                    "Optional": true,
                    "Description": "The warning threshold value."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            },
            "widget_bullet": {
              "Type": "List",
              "Optional": true,
              "Description": "A bullet widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "limit": {
                    "Type": "Float",
                    "Optional": true,
                    "Description": "The maximum value for the visualization"
                  },
                  "nrql_query": {
                    "Type": "List",
                    "Required": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "account_id": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The account id used for the NRQL query.",
                          "Computed": true
                        },
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The NRQL query."
                        }
                      }
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            },
            "widget_funnel": {
              "Type": "List",
              "Optional": true,
              "Description": "A funnel widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "nrql_query": {
                    "Type": "List",
                    "Required": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "account_id": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The account id used for the NRQL query.",
                          "Computed": true
                        },
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The NRQL query."
                        }
                      }
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            },
            "widget_heatmap": {
              "Type": "List",
              "Optional": true,
              "Description": "A heatmap widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "nrql_query": {
                    "Type": "List",
                    "Required": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "account_id": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The account id used for the NRQL query.",
                          "Computed": true
                        },
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The NRQL query."
                        }
                      }
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            },
            "widget_histogram": {
              "Type": "List",
              "Optional": true,
              "Description": "A histogram widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "nrql_query": {
                    "Type": "List",
                    "Required": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "account_id": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The account id used for the NRQL query.",
                          "Computed": true
                        },
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The NRQL query."
                        }
                      }
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            },
            "widget_line": {
              "Type": "List",
              "Optional": true,
              "Description": "A line widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "nrql_query": {
                    "Type": "List",
                    "Required": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "account_id": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The account id used for the NRQL query.",
                          "Computed": true
                        },
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The NRQL query."
                        }
                      }
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            },
            "widget_markdown": {
              "Type": "List",
              "Optional": true,
              "Description": "A markdown widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "text": {
                    "Type": "String",
                    "Optional": true,
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            },
            "widget_pie": {
              "Type": "List",
              "Optional": true,
              "Description": "A pie widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "linked_entity_guids": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Related entities. Currently only supports Dashboard entities, but may allow other cases in the future.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "nrql_query": {
                    "Type": "List",
                    "Required": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "account_id": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The account id used for the NRQL query.",
                          "Computed": true
                        },
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The NRQL query."
                        }
                      }
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            },
            "widget_table": {
              "Type": "List",
              "Optional": true,
              "Description": "A table widget.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "column": {
                    "Type": "Int",
                    "Required": true
                  },
                  "height": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "3"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "The ID of the widget.",
                    "Computed": true
                  },
                  "linked_entity_guids": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Related entities. Currently only supports Dashboard entities, but may allow other cases in the future.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "nrql_query": {
                    "Type": "List",
                    "Required": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "account_id": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The account id used for the NRQL query.",
                          "Computed": true
                        },
                        "query": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The NRQL query."
                        }
                      }
                    }
                  },
                  "row": {
                    "Type": "Int",
                    "Required": true
                  },
                  "title": {
                    "Type": "String",
                    "Required": true,
                    "Description": "A title for the widget."
                  },
                  "width": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "4"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "permalink": {
        "Type": "String",
        "Description": "The URL of the dashboard.",
        "Computed": true
      },
      "permissions": {
        "Type": "String",
        "Optional": true,
        "Description": "Determines who can see or edit the dashboard. Valid values are private, public_read_only, public_read_write. Defaults to public_read_only.",
        "Default": {
          "Type": "string",
          "Value": "public_read_only"
        }
      }
    },
    "newrelic_plugins_alert_condition": {
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether or not this condition is enabled.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "entities": {
        "Type": "Set",
        "Required": true,
        "Description": "The plugin component IDs to target.",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "metric": {
        "Type": "String",
        "Required": true,
        "Description": "The plugin metric to evaluate."
      },
      "metric_description": {
        "Type": "String",
        "Required": true,
        "Description": "The metric description."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The title of the condition. Must be between 1 and 64 characters, inclusive."
      },
      "plugin_guid": {
        "Type": "String",
        "Required": true,
        "Description": "The GUID of the plugin which produces the metric."
      },
      "plugin_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the installed plugin instance which produces the metric."
      },
      "policy_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The ID of the policy where this condition should be used."
      },
      "runbook_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Runbook URL to display in notifications."
      },
      "term": {
        "Type": "Set",
        "Required": true,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "duration": {
              "Type": "Int",
              "Required": true,
              "Description": "In minutes, must be in the range of 5 to 120, inclusive."
            },
            "operator": {
              "Type": "String",
              "Optional": true,
              "Description": "One of `above`, `below`, or `equal`. Defaults to equal.",
              "Default": {
                "Type": "string",
                "Value": "equal"
              }
            },
            "priority": {
              "Type": "String",
              "Optional": true,
              "Description": "One of `critical` or `warning`. Defaults to critical.",
              "Default": {
                "Type": "string",
                "Value": "critical"
              }
            },
            "threshold": {
              "Type": "Float",
              "Required": true,
              "Description": "Must be 0 or greater."
            },
            "time_function": {
              "Type": "String",
              "Required": true,
              "Description": "One of `all` or `any`."
            }
          }
        }
      },
      "value_function": {
        "Type": "String",
        "Required": true,
        "Description": "The value function to apply to the metric data.  One of `min`, `max`, `average`, `sample_size`, `total`, or `percent`."
      }
    },
    "newrelic_synthetics_alert_condition": {
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Set whether to enable the alert condition. Defaults to true.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "monitor_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the Synthetics monitor to be referenced in the alert condition.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The title of this condition."
      },
      "policy_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The ID of the policy where this condition should be used."
      },
      "runbook_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Runbook URL to display in notifications."
      }
    },
    "newrelic_synthetics_monitor": {
      "bypass_head_request": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Bypass HEAD request."
      },
      "frequency": {
        "Type": "Int",
        "Required": true,
        "Description": "The interval (in minutes) at which this monitor should run. Valid values are 1, 5, 10, 15, 30, 60, 360, 720, or 1440."
      },
      "locations": {
        "Type": "Set",
        "Required": true,
        "Description": "The locations in which this monitor should be run.",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The title of this monitor."
      },
      "sla_threshold": {
        "Type": "Float",
        "Optional": true,
        "Description": "The base threshold for the SLA report.",
        "Default": {
          "Type": "int",
          "Value": "7"
        }
      },
      "status": {
        "Type": "String",
        "Required": true,
        "Description": "The monitor status (i.e. ENABLED, MUTED, DISABLED)."
      },
      "treat_redirect_as_failure": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Fail the monitor check if redirected."
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The monitor type. Valid values are SIMPLE, BROWSER, SCRIPT_BROWSER, and SCRIPT_API."
      },
      "uri": {
        "Type": "String",
        "Optional": true,
        "Description": "The URI for the monitor to hit."
      },
      "validation_string": {
        "Type": "String",
        "Optional": true,
        "Description": "The string to validate against in the response."
      },
      "verify_ssl": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Verify SSL."
      }
    },
    "newrelic_synthetics_monitor_script": {
      "monitor_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the monitor to attach the script to."
      },
      "text": {
        "Type": "String",
        "Required": true,
        "Description": "The plaintext representing the monitor script."
      }
    },
    "newrelic_synthetics_multilocation_alert_condition": {
      "critical": {
        "Type": "List",
        "Required": true,
        "Description": "A condition term with priority set to critical.",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "threshold": {
              "Type": "Int",
              "Required": true,
              "Description": "The minimum number of monitor locations that must be concurrently failing before a violation is opened."
            }
          }
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Set whether to enable the alert condition. Defaults to true.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "entities": {
        "Type": "List",
        "Required": true,
        "Description": "The GUIDs of the Synthetics monitors to alert on.",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The title of this condition."
      },
      "policy_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The ID of the policy where this condition will be used."
      },
      "runbook_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Runbook URL to display in notifications."
      },
      "violation_time_limit_seconds": {
        "Type": "Int",
        "Required": true,
        "Description": "The maximum number of seconds a violation can remain open before being closed by the system.  Must be one of: 0, 3600, 7200, 14400, 28800, 43200, 86400"
      },
      "warning": {
        "Type": "List",
        "Optional": true,
        "Description": "A condition term with priority set to warning.",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "threshold": {
              "Type": "Int",
              "Required": true,
              "Description": "The minimum number of monitor locations that must be concurrently failing before a violation is opened."
            }
          }
        }
      }
    },
    "newrelic_synthetics_secure_credential": {
      "created_at": {
        "Type": "String",
        "Optional": true,
        "Description": "The time the secure credential was created.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The secure credential's description."
      },
      "key": {
        "Type": "String",
        "Required": true,
        "Description": "The secure credential's key name. Regardless of the case used in the configuration, the provider will provide an upcased key to the underlying API."
      },
      "last_updated": {
        "Type": "String",
        "Optional": true,
        "Description": "The time the secure credential was last updated.",
        "Computed": true
      },
      "value": {
        "Type": "String",
        "Required": true,
        "Description": "The secure credential's value."
      }
    },
    "newrelic_workload": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The New Relic account ID where you want to create the workload.",
        "Computed": true
      },
      "composite_entity_search_query": {
        "Type": "String",
        "Description": "The composite query used to compose a dynamic workload.",
        "Computed": true
      },
      "entity_guids": {
        "Type": "Set",
        "Optional": true,
        "Description": "A list of entity GUIDs manually assigned to this workload.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "entity_search_query": {
        "Type": "Set",
        "Optional": true,
        "Description": "A list of search queries that define a dynamic workload.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "query": {
              "Type": "String",
              "Required": true,
              "Description": "The query."
            }
          }
        }
      },
      "guid": {
        "Type": "String",
        "Description": "The unique entity identifier of the workload in New Relic.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The workload's name."
      },
      "permalink": {
        "Type": "String",
        "Description": "The URL of the workload.",
        "Computed": true
      },
      "scope_account_ids": {
        "Type": "Set",
        "Optional": true,
        "Description": "A list of account IDs that will be used to get entities from.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "workload_id": {
        "Type": "Int",
        "Description": "The unique entity identifier of the workload.",
        "Computed": true
      }
    }
  },
  "data-sources": {
    "newrelic_account": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The ID of the account in New Relic."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the account in New Relic."
      },
      "scope": {
        "Type": "String",
        "Optional": true,
        "Description": "The scope of the account in New Relic.  Valid values are \"global\" and \"in_region\".  Defaults to \"in_region\".",
        "Default": {
          "Type": "string",
          "Value": "IN_REGION"
        }
      }
    },
    "newrelic_alert_channel": {
      "config": {
        "Type": "List",
        "Description": "Alert channel configuration.",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "api_key": {
              "Type": "String",
              "Optional": true
            },
            "auth_password": {
              "Type": "String",
              "Optional": true
            },
            "auth_type": {
              "Type": "String",
              "Optional": true
            },
            "auth_username": {
              "Type": "String",
              "Optional": true
            },
            "base_url": {
              "Type": "String",
              "Optional": true
            },
            "channel": {
              "Type": "String",
              "Optional": true
            },
            "headers": {
              "Type": "Map",
              "Optional": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "include_json_attachment": {
              "Type": "String",
              "Optional": true
            },
            "key": {
              "Type": "String",
              "Optional": true
            },
            "payload": {
              "Type": "Map",
              "Optional": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "payload_type": {
              "Type": "String",
              "Optional": true
            },
            "recipients": {
              "Type": "String",
              "Optional": true
            },
            "region": {
              "Type": "String",
              "Optional": true
            },
            "route_key": {
              "Type": "String",
              "Optional": true
            },
            "service_key": {
              "Type": "String",
              "Optional": true
            },
            "tags": {
              "Type": "String",
              "Optional": true
            },
            "teams": {
              "Type": "String",
              "Optional": true
            },
            "url": {
              "Type": "String",
              "Optional": true
            },
            "user_id": {
              "Type": "String",
              "Optional": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the alert channel in New Relic."
      },
      "policy_ids": {
        "Type": "List",
        "Description": "A list of policy IDs associated with the alert channel.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "type": {
        "Type": "String",
        "Description": "The type of channel. One of: (pagerduty, slack, user, victorops, webhook, email, opsgenie).",
        "Computed": true
      }
    },
    "newrelic_alert_policy": {
      "account_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "The New Relic account ID to operate on.",
        "Computed": true
      },
      "created_at": {
        "Type": "String",
        "Description": "The time the policy was created.",
        "Computed": true
      },
      "incident_preference": {
        "Type": "String",
        "Optional": true,
        "Description": "The rollup strategy for the policy. Options include: `PER_POLICY`, `PER_CONDITION`, or `PER_CONDITION_AND_TARGET`. The default is `PER_POLICY`."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the alert policy in New Relic."
      },
      "updated_at": {
        "Type": "String",
        "Description": "The time the policy was last updated.",
        "Computed": true
      }
    },
    "newrelic_application": {
      "host_ids": {
        "Type": "List",
        "Description": "A list of host IDs associated with the application.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "instance_ids": {
        "Type": "List",
        "Description": "A list of instance IDs associated with the application.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the application in New Relic."
      }
    },
    "newrelic_entity": {
      "account_id": {
        "Type": "Int",
        "Description": "The New Relic account ID associated with this entity.",
        "Computed": true
      },
      "application_id": {
        "Type": "Int",
        "Description": "The domain-specific ID of the entity (only returned for APM and Browser applications).",
        "Computed": true
      },
      "domain": {
        "Type": "String",
        "Optional": true,
        "Description": "The entity's domain. Valid values are APM, BROWSER, INFRA, MOBILE, SYNTH, and VIZ. If not specified, all domains are searched.",
        "Computed": true
      },
      "guid": {
        "Type": "String",
        "Description": "A unique entity identifier.",
        "Computed": true
      },
      "ignore_case": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Ignore case when searching the entity name.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the entity in New Relic One.  The first entity matching this name for the given search parameters will be returned."
      },
      "serving_apm_application_id": {
        "Type": "Int",
        "Description": "The browser-specific ID of the backing APM entity. (only returned for Browser applications)",
        "Computed": true
      },
      "tag": {
        "Type": "List",
        "Optional": true,
        "Description": "A tag applied to the entity.",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "The tag key."
            },
            "value": {
              "Type": "String",
              "Required": true,
              "Description": "The tag value."
            }
          }
        }
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "The entity's type. Valid values are APPLICATION, DASHBOARD, HOST, MONITOR, and WORKLOAD.",
        "Computed": true
      }
    },
    "newrelic_key_transaction": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the key transaction in New Relic."
      }
    },
    "newrelic_plugin": {
      "guid": {
        "Type": "String",
        "Required": true,
        "Description": "The GUID of the plugin in New Relic."
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the installed plugin instance.",
        "Computed": true
      }
    },
    "newrelic_plugin_component": {
      "health_status": {
        "Type": "String",
        "Description": "The health status of the plugin component.",
        "Computed": true
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the plugin component.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the plugin component."
      },
      "plugin_id": {
        "Type": "Int",
        "Required": true,
        "Description": "The ID of the plugin instance this component belongs to."
      }
    },
    "newrelic_synthetics_monitor": {
      "monitor_id": {
        "Type": "String",
        "Description": "The ID of the synthetics monitor.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the synthetics monitor in New Relic."
      }
    },
    "newrelic_synthetics_monitor_location": {
      "description": {
        "Type": "String",
        "Description": "A description of the Synthetics monitor location.",
        "Computed": true
      },
      "high_security_mode": {
        "Type": "Bool",
        "Description": "Represents if high security mode is enabled for the location. A value of true means that high security mode is enabled, and a value of false means it is disabled.",
        "Computed": true
      },
      "label": {
        "Type": "String",
        "Required": true,
        "Description": "The label of the Synthetics monitor location."
      },
      "name": {
        "Type": "String",
        "Description": "The name of the Synthetics monitor location.",
        "Computed": true
      },
      "private": {
        "Type": "Bool",
        "Description": "Represents if this location is a private location. A value of true means that the location is private, and a value of false means it is public.",
        "Computed": true
      }
    },
    "newrelic_synthetics_secure_credential": {
      "created_at": {
        "Type": "String",
        "Description": "The time the secure credential was created.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "The secure credential's description.",
        "Computed": true
      },
      "key": {
        "Type": "String",
        "Required": true,
        "Description": "The secure credential's key name. Regardless of the case used in the configuration, the provider will provide an upcased key to the underlying API."
      },
      "last_updated": {
        "Type": "String",
        "Description": "The time the secure credential was last updated.",
        "Computed": true
      }
    }
  }
}