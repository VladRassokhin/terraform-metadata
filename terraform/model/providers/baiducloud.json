{
  ".schema_version": "1",
  "name": "baiducloud",
  "type": "provider",
  "version": "v1.1.0",
  "provider": {
    "access_key": {
      "Type": "String",
      "Required": true,
      "Description": "The Access Key of BaiduCloud for API operations. You can retrieve this from the 'Security Management' section of the BaiduCloud console.",
      "DefaultFunc": "ENV(BAIDUCLOUD_ACCESS_KEY)"
    },
    "endpoints": {
      "Type": "Set",
      "Optional": true,
      "IsBlock": true,
      "Elem": {
        "Type": "SchemaInfo",
        "Info": {
          "appblb": {
            "Type": "String",
            "Optional": true,
            "Description": "Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom BLB endpoints.",
            "Default": {
              "Type": "string"
            }
          },
          "bcc": {
            "Type": "String",
            "Optional": true,
            "Description": "Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom BCC endpoints.",
            "Default": {
              "Type": "string"
            }
          },
          "bos": {
            "Type": "String",
            "Optional": true,
            "Description": "Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom BOS endpoints.",
            "Default": {
              "Type": "string"
            }
          },
          "cfc": {
            "Type": "String",
            "Optional": true,
            "Description": "Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom CFC endpoints.",
            "Default": {
              "Type": "string"
            }
          },
          "eip": {
            "Type": "String",
            "Optional": true,
            "Description": "Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom EIP endpoints.",
            "Default": {
              "Type": "string"
            }
          },
          "vpc": {
            "Type": "String",
            "Optional": true,
            "Description": "Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom VPC endpoints.",
            "Default": {
              "Type": "string"
            }
          }
        }
      }
    },
    "region": {
      "Type": "String",
      "Optional": true,
      "Description": "The region where BaiduCloud operations will take place. Examples are bj, su, gz, etc.",
      "InputDefault": "bj",
      "DefaultFunc": "ENV(BAIDUCLOUD_REGION)"
    },
    "secret_key": {
      "Type": "String",
      "Required": true,
      "Description": "The Secret key of BaiduCloud for API operations. You can retrieve this from the 'Security Management' section of the BaiduCloud console.",
      "DefaultFunc": "ENV(BAIDUCLOUD_SECRET_KEY)"
    }
  },
  "resources": {
    "baiducloud_acl": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "action": {
        "Type": "String",
        "Required": true,
        "Description": "Action of the acl. Valid values are allow and deny."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description of the acl."
      },
      "destination_ip_address": {
        "Type": "String",
        "Required": true,
        "Description": "Destination ip address of the acl."
      },
      "destination_port": {
        "Type": "String",
        "Required": true,
        "Description": "Destination port of the acl."
      },
      "direction": {
        "Type": "String",
        "Required": true,
        "Description": "Direction of the acl. Valid values are ingress and egress, respectively indicating the inbound of the rule and the outbound rule."
      },
      "position": {
        "Type": "Int",
        "Required": true,
        "Description": "Position of the acl, representing the priority of the acl rule. The value should be 1-5000 and cannot be duplicated with existing entries. The smaller the value, the higher the priority, and the rule matching order is to match the priority from high to low."
      },
      "protocol": {
        "Type": "String",
        "Required": true,
        "Description": "Protocol of the acl, available values are all, tcp, udp and icmp."
      },
      "source_ip_address": {
        "Type": "String",
        "Required": true,
        "Description": "Source ip address of the acl."
      },
      "source_port": {
        "Type": "String",
        "Required": true,
        "Description": "Source port of the acl."
      },
      "subnet_id": {
        "Type": "String",
        "Required": true,
        "Description": "Subnet ID of the acl."
      }
    },
    "baiducloud_appblb": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "address": {
        "Type": "String",
        "Description": "LoadBalance instance's service IP, instance can be accessed through this IP",
        "Computed": true
      },
      "cidr": {
        "Type": "String",
        "Description": "Cidr of the network where the LoadBalance instance reside",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "LoadBalance instance's create time",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "LoadBalance's description, length must be between 0 and 450 bytes, and support Chinese"
      },
      "listener": {
        "Type": "Set",
        "Description": "List of listeners mounted under the instance",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "port": {
              "Type": "Int",
              "Description": "Listening port",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Listening protocol type",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "LoadBalance instance's name, length must be between 1 and 65 bytes, and will be automatically generated if not set",
        "Computed": true
      },
      "public_ip": {
        "Type": "String",
        "Description": "LoadBalance instance's public ip",
        "Computed": true
      },
      "release_time": {
        "Type": "String",
        "Description": "LoadBalance instance's auto release time",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "LoadBalance instance's status, see https://cloud.baidu.com/doc/BLB/s/Pjwvxnxdm/#blbstatus for detail",
        "Computed": true
      },
      "subnet_cidr": {
        "Type": "String",
        "Description": "Cidr of the subnet which the LoadBalance instance belongs",
        "Computed": true
      },
      "subnet_id": {
        "Type": "String",
        "Required": true,
        "Description": "The subnet ID to which the LoadBalance instance belongs"
      },
      "subnet_name": {
        "Type": "String",
        "Description": "The subnet name to which the LoadBalance instance belongs",
        "Computed": true
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Tags, do not support modify",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "vpc_id": {
        "Type": "String",
        "Required": true,
        "Description": "The VPC short ID to which the LoadBalance instance belongs"
      },
      "vpc_name": {
        "Type": "String",
        "Description": "The VPC name to which the LoadBalance instance belongs",
        "Computed": true
      }
    },
    "baiducloud_appblb_listener": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "blb_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of the Application LoadBalance instance"
      },
      "cert_ids": {
        "Type": "Set",
        "Optional": true,
        "Description": "Listener bind certifications",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "client_cert_ids": {
        "Type": "Set",
        "Optional": true,
        "Description": "Listener import cert list, only useful when dual_auth is true",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "dual_auth": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Listener open dual authorization or not, default false"
      },
      "encryption_protocols": {
        "Type": "Set",
        "Optional": true,
        "Description": "Listener encryption protocol, only useful when encryption_type is userDefind, support [sslv3, tlsv10, tlsv11, tlsv12]",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "encryption_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Listener encryption option, support [compatibleIE, incompatibleIE, userDefind]",
        "Computed": true
      },
      "ie6_compatible": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Listener support ie6 option, default true",
        "Computed": true
      },
      "keep_session": {
        "Type": "Bool",
        "Optional": true,
        "Description": "KeepSession or not",
        "Computed": true
      },
      "keep_session_cookie_name": {
        "Type": "String",
        "Optional": true,
        "Description": "CookieName which need to covered, useful when keep_session_type is rewrite",
        "Computed": true
      },
      "keep_session_timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "KeepSession Cookie timeout time(second), support in [1, 15552000], default 3600s",
        "Computed": true
      },
      "keep_session_type": {
        "Type": "String",
        "Optional": true,
        "Description": "KeepSessionType option, support insert/rewrite, default insert",
        "Computed": true
      },
      "listener_port": {
        "Type": "Int",
        "Required": true,
        "Description": "Listening port, range from 1-65535"
      },
      "policies": {
        "Type": "Set",
        "Optional": true,
        "Description": "Listener's policy",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "app_server_group_id": {
              "Type": "String",
              "Required": true,
              "Description": "Policy bind server group id"
            },
            "app_server_group_name": {
              "Type": "String",
              "Description": "Policy bind server group name",
              "Computed": true
            },
            "backend_port": {
              "Type": "Int",
              "Required": true,
              "Description": "Backend port"
            },
            "description": {
              "Type": "String",
              "Optional": true,
              "Description": "Policy's description"
            },
            "frontend_port": {
              "Type": "Int",
              "Description": "Frontend port",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Description": "Policy's id",
              "Computed": true
            },
            "port_type": {
              "Type": "String",
              "Description": "Policy bind port protocol type",
              "Computed": true
            },
            "priority": {
              "Type": "Int",
              "Required": true,
              "Description": "Policy priority, support in [1, 32768]"
            },
            "rule_list": {
              "Type": "Set",
              "Optional": true,
              "Description": "Policy rule list",
              "Computed": true,
              "IsBlock": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "key": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Rule key"
                  },
                  "value": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Rule value"
                  }
                }
              }
            }
          }
        }
      },
      "protocol": {
        "Type": "String",
        "Required": true,
        "Description": "Listening protocol, support TCP/UDP/HTTP/HTTPS/SSL"
      },
      "redirect_port": {
        "Type": "Int",
        "Optional": true,
        "Description": "Redirect HTTP request to HTTPS Listener, HTTPS Listener port set by this parameter",
        "Computed": true
      },
      "scheduler": {
        "Type": "String",
        "Required": true,
        "Description": "Load balancing algorithm, support RoundRobin/LeastConnection/Hash, if protocol is HTTP/HTTPS, only support RoundRobin/LeastConnection"
      },
      "server_timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "Backend server maximum timeout time, only support in [1, 3600] second, default 30s",
        "Computed": true
      },
      "tcp_session_timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "TCP Listener connection session timeout time(second), default 900, support 10-4000",
        "Computed": true
      },
      "x_forwarded_for": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Listener xForwardedFor, determine get client real ip or not, default false",
        "Computed": true
      }
    },
    "baiducloud_appblb_server_group": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "backend_server_list": {
        "Type": "Set",
        "Optional": true,
        "Description": "Server group bound backend server list",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "instance_id": {
              "Type": "String",
              "Required": true,
              "Description": "Backend server instance ID"
            },
            "port_list": {
              "Type": "Set",
              "Description": "Backend server open port list",
              "Computed": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "backend_port": {
                    "Type": "Int",
                    "Description": "Backend open port",
                    "Computed": true
                  },
                  "health_check_port_type": {
                    "Type": "String",
                    "Description": "Health check port protocol type",
                    "Computed": true
                  },
                  "listener_port": {
                    "Type": "Int",
                    "Description": "Listener port",
                    "Computed": true
                  },
                  "policy_id": {
                    "Type": "String",
                    "Description": "Port bind policy id",
                    "Computed": true
                  },
                  "port_id": {
                    "Type": "String",
                    "Description": "Port id",
                    "Computed": true
                  },
                  "port_type": {
                    "Type": "String",
                    "Description": "Port protocol type",
                    "Computed": true
                  },
                  "status": {
                    "Type": "String",
                    "Description": "Port status, include Alive/Dead/Unknown",
                    "Computed": true
                  }
                }
              }
            },
            "private_ip": {
              "Type": "String",
              "Description": "Backend server instance bind private ip",
              "Computed": true
            },
            "weight": {
              "Type": "Int",
              "Required": true,
              "Description": "Backend server instance weight in this group, range from 0-100"
            }
          }
        }
      },
      "blb_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of the Application LoadBalance instance"
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Server Group's description, length must be between 0 and 450 bytes, and support Chinese",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the Server Group, length must be between 1 and 65 bytes, and will be automatically generated if not set",
        "Computed": true
      },
      "port_list": {
        "Type": "List",
        "Optional": true,
        "Description": "Server Group backend port list",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "health_check": {
              "Type": "String",
              "Required": true,
              "Description": "Server Group port health check protocol, support TCP/UDP/HTTP, default same as port protocol type"
            },
            "health_check_down_retry": {
              "Type": "Int",
              "Optional": true,
              "Description": "Server Group health check down retry time, support in [2, 5], default 3",
              "Computed": true
            },
            "health_check_interval_in_second": {
              "Type": "Int",
              "Optional": true,
              "Description": "Server Group health check interval time(second), support in [1, 10], default 3",
              "Computed": true
            },
            "health_check_normal_status": {
              "Type": "String",
              "Optional": true,
              "Description": "Server Group health check normal http status code, only useful when health_check is HTTP",
              "Computed": true
            },
            "health_check_port": {
              "Type": "Int",
              "Optional": true,
              "Description": "Server Group port health check port, default same as Server Group port",
              "Computed": true
            },
            "health_check_timeout_in_second": {
              "Type": "Int",
              "Optional": true,
              "Description": "Server Group health check timeout(second), support in [1, 60], default 3",
              "Computed": true
            },
            "health_check_up_retry": {
              "Type": "Int",
              "Optional": true,
              "Description": "Server Group health check up retry time, support in [2, 5], default 3",
              "Computed": true
            },
            "health_check_url_path": {
              "Type": "String",
              "Optional": true,
              "Description": "Server Group health check url path, only useful when health_check is HTTP",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Description": "Server Group port id",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Required": true,
              "Description": "App Server Group port, range from 1-65535"
            },
            "status": {
              "Type": "String",
              "Description": "Server Group port status",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "Server Group port protocol type, support TCP/UDP/HTTP"
            },
            "udp_health_check_string": {
              "Type": "String",
              "Optional": true,
              "Description": "Server Group udp health check string, if type is UDP, this parameter is required",
              "Computed": true
            }
          }
        }
      },
      "status": {
        "Type": "String",
        "Description": "Server Group's status, see https://cloud.baidu.com/doc/BLB/s/Pjwvxnxdm/#blbstatus for detail",
        "Computed": true
      }
    },
    "baiducloud_auto_snapshot_policy": {
      "__timeouts__": [
        "create",
        "delete"
      ],
      "created_time": {
        "Type": "String",
        "Description": "Creation time of the automatic snapshot policy.",
        "Computed": true
      },
      "deleted_time": {
        "Type": "String",
        "Description": "Deletion time of the automatic snapshot policy.",
        "Computed": true
      },
      "last_execute_time": {
        "Type": "String",
        "Description": "Last execution time of the automatic snapshot policy.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the automatic snapshot policy, which supports uppercase and lowercase letters, numbers, Chinese and special characters, such as \"-\",\"_\",\"/\",\",\".\", and the value must start with a letter, length 1-65."
      },
      "repeat_weekdays": {
        "Type": "Set",
        "Required": true,
        "Description": "Repeat time of the automatic snapshot policy, supporting in range of [0, 6]",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "retention_days": {
        "Type": "Int",
        "Required": true,
        "Description": "Number of days to retain the automatic snapshot, and -1 means permanently retained."
      },
      "status": {
        "Type": "String",
        "Description": "Status of the automatic snapshot policy.",
        "Computed": true
      },
      "time_points": {
        "Type": "Set",
        "Required": true,
        "Description": "Time point of generate snapshot in a day, the minimum unit is hour, supporting in range of [0, 23]",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "updated_time": {
        "Type": "String",
        "Description": "Update time of the automatic snapshot policy.",
        "Computed": true
      },
      "volume_count": {
        "Type": "Int",
        "Description": "The count of volumes associated with the snapshot.",
        "Computed": true
      },
      "volume_ids": {
        "Type": "Set",
        "Optional": true,
        "Description": "Volume id list to be attached of the automatic snapshot policy, these CDS volumes must be in-used.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "baiducloud_bos_bucket": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "acl": {
        "Type": "String",
        "Optional": true,
        "Description": "Canned ACL to apply, available values are private, public-read and public-read-write. Default to private.",
        "Default": {
          "Type": "string",
          "Value": "private"
        }
      },
      "bucket": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the bucket."
      },
      "copyright_protection": {
        "Type": "List",
        "Optional": true,
        "Description": "Configuration of the copyright protection.",
        "MaxItems": 1,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "resource": {
              "Type": "Set",
              "Required": true,
              "Description": "The resources to be protected for copyright.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "cors_rule": {
        "Type": "List",
        "Optional": true,
        "Description": "Configuration of the Cross-Origin Resource Sharing. Up to 100 rules are allowed per bucket, if there are multiple configurations, the execution order is from top to bottom.",
        "MaxItems": 100,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "allowed_expose_headers": {
              "Type": "List",
              "Optional": true,
              "Description": "Specifies which expose headers are allowed.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "allowed_headers": {
              "Type": "List",
              "Optional": true,
              "Description": "Specifies which headers are allowed.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "allowed_methods": {
              "Type": "List",
              "Required": true,
              "Description": "Specifies which methods are allowed. Can be GET,PUT,DELETE,POST or HEAD.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "allowed_origins": {
              "Type": "List",
              "Required": true,
              "Description": "Specifies which origins are allowed, containing up to one * wildcard.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "max_age_seconds": {
              "Type": "Int",
              "Optional": true,
              "Description": "Specifies time in seconds that browser can cache the response for a preflight request."
            }
          }
        }
      },
      "creation_date": {
        "Type": "String",
        "Description": "Creation date of the BOS bucket.",
        "Computed": true
      },
      "force_destroy": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to force delete the bucket and related objects when the bucket is not empty. Default to false.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "lifecycle_rule": {
        "Type": "List",
        "Optional": true,
        "Description": "Configuration of object lifecycle management.",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "List",
              "Required": true,
              "Description": "Action of the lifecycle rule.",
              "MaxItems": 1,
              "IsBlock": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Action name of the lifecycle rule, which can be Transition, DeleteObject and AbortMultipartUpload."
                  },
                  "storage_class": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "When the action is Transition, it can be set to STANDARD_IA or COLD or ARCHIVE, indicating that it is changed from the original storage type to low frequency storage or cold storage or archive storage."
                  }
                }
              }
            },
            "condition": {
              "Type": "List",
              "Required": true,
              "Description": "Condition of the lifecycle rule, only the time form is supported currently.",
              "MaxItems": 1,
              "IsBlock": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "time": {
                    "Type": "List",
                    "Required": true,
                    "Description": "The condition time, implemented by the date_greater_than.",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "date_greater_than": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Support absolute time date and relative time days. The absolute time date format is yyyy-mm-ddThh:mm:ssZ,eg. 2019-09-07T00:00:00Z. The absolute time is UTC time, which must end at 00:00:00(UTC 0 point); the description of relative time days follows ISO8601, and the minimum time granularity supported is days, such as: $(lastModified)+P7D indicates the time of object 7 days after last-modified."
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": {
              "Type": "String",
              "Optional": true,
              "Description": "ID of the lifecycle rule. The id must be unique and cannot be repeated in the same bucket. The system will automatically generate one when it is not specified.",
              "Computed": true
            },
            "resource": {
              "Type": "Set",
              "Required": true,
              "Description": "Resource of the lifecycle rule. For example, samplebucket/prefix/* will be valid for the object prefixed with prefix/ in samplebucket; samplebucket/* will be valid for all objects in samplebucket.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "status": {
              "Type": "String",
              "Required": true,
              "Description": "Status of the lifecycle rule, which can be enabled, disabled. The rule cannot take effect when the status is disabled."
            }
          }
        }
      },
      "location": {
        "Type": "String",
        "Description": "Location of the BOS bucket.",
        "Computed": true
      },
      "logging": {
        "Type": "List",
        "Optional": true,
        "Description": "Settings of the bucket logging.",
        "MaxItems": 1,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "target_bucket": {
              "Type": "String",
              "Required": true,
              "Description": "Target bucket name that will receive the log data."
            },
            "target_prefix": {
              "Type": "String",
              "Optional": true,
              "Description": "Target prefix for the log data."
            }
          }
        }
      },
      "owner_id": {
        "Type": "String",
        "Description": "Owner ID of the BOS bucket.",
        "Computed": true
      },
      "owner_name": {
        "Type": "String",
        "Description": "Owner name of the BOS bucket.",
        "Computed": true
      },
      "replication_configuration": {
        "Type": "List",
        "Optional": true,
        "Description": "Replication configuration of the BOS bucket.",
        "MaxItems": 1,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "destination": {
              "Type": "List",
              "Required": true,
              "Description": "Destination of the replication configuration.",
              "MaxItems": 1,
              "MinItems": 1,
              "IsBlock": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "bucket": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Destination bucket name of the replication configuration."
                  },
                  "storage_class": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Destination storage class of the replication configuration, the parameter does not need to be configured if it is consistent with the storage class of the source bucket, if you need to specify the storage class separately, it can be COLD, STANDARD, STANDARD_IA."
                  }
                }
              }
            },
            "id": {
              "Type": "String",
              "Required": true,
              "Description": "ID of the replication configuration."
            },
            "replicate_deletes": {
              "Type": "String",
              "Required": true,
              "Description": "Whether to enable the delete synchronization, which can be enabled, disabled."
            },
            "replicate_history": {
              "Type": "List",
              "Optional": true,
              "Description": "Configuration of the replicate history. The bucket name in replicate history needs to be the same as the bucket name in the destination above. After the history file is copied, all the objects of the inventory are copied to the destination bucket synchronously. The history file copy range is not referenced to the resource.",
              "MaxItems": 1,
              "IsBlock": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "bucket": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Destination bucket name of the replication configuration."
                  },
                  "storage_class": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Destination storage class of the replication configuration, the parameter does not need to be configured if it is consistent with the storage class of the source bucket, if you need to specify the storage class separately, it can be COLD, STANDARD, STANDARD_IA."
                  }
                }
              }
            },
            "resource": {
              "Type": "Set",
              "Required": true,
              "Description": "Resource of the replication configuration. The configuration format of the resource is {$bucket_name/\u003ceffective object prefix\u003e}, which must start with \"$bucket_name\"+\"/\"",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "status": {
              "Type": "String",
              "Required": true,
              "Description": "Status of the replication configuration. Valid values are enabled and disabled."
            }
          }
        }
      },
      "server_side_encryption_rule": {
        "Type": "String",
        "Optional": true,
        "Description": "Encryption rule for the server side, which can only be AES256 currently.",
        "Computed": true
      },
      "storage_class": {
        "Type": "String",
        "Optional": true,
        "Description": "Storage class of the BOS bucket, available values are STANDARD, STANDARD_IA, COLD or ARCHIVE.",
        "Default": {
          "Type": "string",
          "Value": "STANDARD"
        }
      },
      "website": {
        "Type": "List",
        "Optional": true,
        "Description": "Website of the BOS bucket.",
        "MaxItems": 1,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "error_document": {
              "Type": "String",
              "Optional": true,
              "Description": "An absolute path to the document to return in case of a 404 error."
            },
            "index_document": {
              "Type": "String",
              "Optional": true,
              "Description": "Baiducloud BOS returns this index document when requests are made to the root domain or any of the subfolders."
            }
          }
        }
      }
    },
    "baiducloud_bos_bucket_object": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "acl": {
        "Type": "String",
        "Optional": true,
        "Description": "Canned ACL of the object, which can be private or public-read. If the value is not set, the object permission will be empty by default, and then the bucket permission as default."
      },
      "bucket": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the bucket to put the file in."
      },
      "cache_control": {
        "Type": "String",
        "Optional": true,
        "Description": "The caching behavior along the request/reply chain. Valid values are private, no-cache, max-age and must-revalidate. If not set, the value is empty."
      },
      "content": {
        "Type": "String",
        "Optional": true,
        "Description": "The literal string value that will be uploaded as the object content.",
        "ConflictsWith": [
          "source"
        ]
      },
      "content_crc32": {
        "Type": "String",
        "Optional": true,
        "Description": "Crc(cyclic redundancy check code) value of the object.",
        "Computed": true
      },
      "content_disposition": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies presentational information for the object, which can be inline or attachment. If not set, the value is empty."
      },
      "content_encoding": {
        "Type": "String",
        "Description": "Encoding of the object.",
        "Computed": true
      },
      "content_length": {
        "Type": "Int",
        "Optional": true,
        "Description": "Length of the content to be uploaded.",
        "Computed": true
      },
      "content_md5": {
        "Type": "String",
        "Optional": true,
        "Description": "MD5 digest of the HTTP request content defined in RFC2616 can be carried by the field to verify whether the file saved on the BOS side is consistent with the file expected by the user.",
        "Computed": true
      },
      "content_sha256": {
        "Type": "String",
        "Optional": true,
        "Description": "Sha256 value of the object, which is used to verify whether the file saved on the BOS side is consistent with the file expected by the user, the sha256 has higher verification accuracy, and the sha256 value of the transmitted data must match this, otherwise the object uploaded fails."
      },
      "content_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Type to describe the format of the object data.",
        "Computed": true
      },
      "etag": {
        "Type": "String",
        "Description": "Etag generated of the object.",
        "Computed": true
      },
      "expires": {
        "Type": "String",
        "Optional": true,
        "Description": "The expire date is used to set the cache expiration time when downloading object. If it is not set, the BOS will set the cache expiration time to three days by default.",
        "Computed": true
      },
      "key": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the object once it is in the bucket."
      },
      "last_modified": {
        "Type": "String",
        "Description": "Last modified date of the object.",
        "Computed": true
      },
      "source": {
        "Type": "String",
        "Optional": true,
        "Description": "The file path that will be read and uploaded as raw bytes for the object content.",
        "ConflictsWith": [
          "content"
        ]
      },
      "storage_class": {
        "Type": "String",
        "Optional": true,
        "Description": "Storage class of the object, which can be COLD, STANDARD_IA, STANDARD or ARCHIVE. Default to STANDARD.",
        "Computed": true
      },
      "user_meta": {
        "Type": "Map",
        "Optional": true,
        "Description": "The mapping of key/values to to provision metadata, which will be automatically prefixed by x-bce-meta-."
      }
    },
    "baiducloud_cds": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "auto_snapshot": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Delete relate auto snapshot when release this cds volume"
      },
      "auto_snapshot_policy_id": {
        "Type": "String",
        "Description": "CDS bind Auto Snapshot policy id",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "CDS volume create time",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "CDS volume description"
      },
      "disk_size_in_gb": {
        "Type": "Int",
        "Optional": true,
        "Description": "CDS disk size, support between 5 and 32765, if snapshot_id not set, this parameter is required.",
        "Computed": true
      },
      "expire_time": {
        "Type": "String",
        "Description": "CDS volume expire time",
        "Computed": true
      },
      "manual_snapshot": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Delete relate snapshot when release this cds volume",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "CDS volume name"
      },
      "payment_timing": {
        "Type": "String",
        "Required": true,
        "Description": "payment method, support Prepaid or Postpaid"
      },
      "reservation_length": {
        "Type": "Int",
        "Optional": true,
        "Description": "Prepaid reservation length, support [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36], only useful when payment_timing is Prepaid"
      },
      "reservation_time_unit": {
        "Type": "String",
        "Optional": true,
        "Description": "Prepaid reservation time unit, only support Month now"
      },
      "snapshot_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Snapshot id, support create cds use snapshot, when set this parameter, cds_disk_size is ignored",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "CDS volume status",
        "Computed": true
      },
      "storage_type": {
        "Type": "String",
        "Optional": true,
        "Description": "CDS dist storage type, support hp1, std1, cloud_hp1 and hdd, default hp1, see https://cloud.baidu.com/doc/BCC/s/6jwvyo0q2/#storagetype for detail",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Description": "CDS volume type",
        "Computed": true
      },
      "zone_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Zone name",
        "Computed": true
      }
    },
    "baiducloud_cds_attachment": {
      "__timeouts__": [
        "create",
        "delete"
      ],
      "attachment_device": {
        "Type": "String",
        "Description": "CDS mount device path",
        "Computed": true
      },
      "attachment_serial": {
        "Type": "String",
        "Description": "CDS serial",
        "Computed": true
      },
      "cds_id": {
        "Type": "String",
        "Required": true,
        "Description": "CDS volume ID"
      },
      "instance_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of Instance which will attach CDS volume"
      }
    },
    "baiducloud_cert": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "cert_common_name": {
        "Type": "String",
        "Description": "Cert common name",
        "Computed": true
      },
      "cert_create_time": {
        "Type": "String",
        "Description": "Cert create time",
        "Computed": true
      },
      "cert_link_data": {
        "Type": "String",
        "Optional": true,
        "Description": "Cert lint data, base64 encode"
      },
      "cert_name": {
        "Type": "String",
        "Required": true,
        "Description": "Cert Name"
      },
      "cert_private_data": {
        "Type": "String",
        "Required": true,
        "Description": "Cert private key data, base64 encode"
      },
      "cert_server_data": {
        "Type": "String",
        "Required": true,
        "Description": "Server Cert data, base64 encode"
      },
      "cert_start_time": {
        "Type": "String",
        "Description": "Cert start time",
        "Computed": true
      },
      "cert_stop_time": {
        "Type": "String",
        "Description": "Cert stop time",
        "Computed": true
      },
      "cert_type": {
        "Type": "Int",
        "Optional": true,
        "Description": "Cert type",
        "Computed": true
      },
      "cert_update_time": {
        "Type": "String",
        "Description": "Cert update time",
        "Computed": true
      }
    },
    "baiducloud_cfc_alias": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "alias_arn": {
        "Type": "String",
        "Description": "CFC Function alias arn",
        "Computed": true
      },
      "alias_brn": {
        "Type": "String",
        "Description": "CFC Function alias brn",
        "Computed": true
      },
      "alias_name": {
        "Type": "String",
        "Required": true,
        "Description": "CFC Function alias name"
      },
      "create_time": {
        "Type": "String",
        "Description": "CFC Function alias create time",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "CFC Function alias description"
      },
      "function_name": {
        "Type": "String",
        "Required": true,
        "Description": "CFC Function name"
      },
      "function_version": {
        "Type": "String",
        "Required": true,
        "Description": "CFC Function version this alias binded"
      },
      "uid": {
        "Type": "String",
        "Description": "CFC Function uid",
        "Computed": true
      },
      "update_time": {
        "Type": "String",
        "Description": "CFC Function alias update time",
        "Computed": true
      }
    },
    "baiducloud_cfc_function": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "code_bos_bucket": {
        "Type": "String",
        "Optional": true,
        "Description": "CFC Function Code storage bos bucket name",
        "ConflictsWith": [
          "code_file_name",
          "code_file_dir"
        ]
      },
      "code_bos_object": {
        "Type": "String",
        "Optional": true,
        "Description": "CFC Function Code storage bos object key",
        "ConflictsWith": [
          "code_file_name",
          "code_file_dir"
        ]
      },
      "code_file_dir": {
        "Type": "String",
        "Optional": true,
        "Description": "CFC Function Code local file dir",
        "ConflictsWith": [
          "code_file_name",
          "code_bos_bucket",
          "code_bos_object"
        ]
      },
      "code_file_name": {
        "Type": "String",
        "Optional": true,
        "Description": "CFC Function Code local zip file name",
        "ConflictsWith": [
          "code_file_dir",
          "code_bos_bucket",
          "code_bos_object"
        ]
      },
      "code_sha256": {
        "Type": "String",
        "Description": "Function code sha256",
        "Computed": true
      },
      "code_size": {
        "Type": "String",
        "Description": "Function code size",
        "Computed": true
      },
      "code_storage": {
        "Type": "Map",
        "Description": "CFC Code storage information",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "commit_id": {
        "Type": "String",
        "Description": "Function commit id",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Function description"
      },
      "environment": {
        "Type": "Map",
        "Optional": true,
        "Description": "CFC Function environment variables",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "function_arn": {
        "Type": "String",
        "Description": "The same as function brn",
        "Computed": true
      },
      "function_brn": {
        "Type": "String",
        "Description": "Function brn",
        "Computed": true
      },
      "function_name": {
        "Type": "String",
        "Required": true,
        "Description": "CFC function name, length must be between 1 and 64 bytes"
      },
      "handler": {
        "Type": "String",
        "Required": true,
        "Description": "CFC Function execution handler"
      },
      "last_modified": {
        "Type": "String",
        "Description": "The same as update_time",
        "Computed": true
      },
      "log_bos_dir": {
        "Type": "String",
        "Optional": true,
        "Description": "Log save dir if log type is bos"
      },
      "log_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Log save type, support bos/none",
        "Computed": true
      },
      "memory_size": {
        "Type": "Int",
        "Optional": true,
        "Description": "CFC Function memory size, should be an integer multiple of 128",
        "Default": {
          "Type": "int",
          "Value": "128"
        }
      },
      "region": {
        "Type": "String",
        "Description": "Function region",
        "Computed": true
      },
      "reserved_concurrent_executions": {
        "Type": "Int",
        "Optional": true,
        "Description": "Function reserved concurrent executions, support [0-90]"
      },
      "role": {
        "Type": "String",
        "Description": "Function exec role",
        "Computed": true
      },
      "runtime": {
        "Type": "String",
        "Required": true,
        "Description": "CFC Function runtime"
      },
      "source_tag": {
        "Type": "String",
        "Description": "CFC Function source tag",
        "Computed": true
      },
      "time_out": {
        "Type": "Int",
        "Required": true,
        "Description": "Function time out, support [1, 300]s"
      },
      "uid": {
        "Type": "String",
        "Description": "Function user uid",
        "Computed": true
      },
      "update_time": {
        "Type": "String",
        "Description": "Last update time",
        "Computed": true
      },
      "version": {
        "Type": "String",
        "Description": "Function version, should only be $LATEST",
        "Computed": true
      },
      "vpc_config": {
        "Type": "List",
        "Optional": true,
        "MaxItems": 1,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "security_group_ids": {
              "Type": "Set",
              "Required": true,
              "Description": "CFC Function binded Security group list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "subnet_ids": {
              "Type": "Set",
              "Required": true,
              "Description": "CFC Function bined VPC Subnet id list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "vpc_id": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      }
    },
    "baiducloud_cfc_trigger": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "auth_type": {
        "Type": "String",
        "Optional": true,
        "Description": "CFC Function Trigger auth type if source_type is http, support anonymous or iam"
      },
      "bos_event_type": {
        "Type": "List",
        "Optional": true,
        "Description": "CFC Function Trigger bos event type",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "bucket": {
        "Type": "String",
        "Optional": true,
        "Description": "CFC Function Trigger source bucket if source_type is bos"
      },
      "cdn_event_type": {
        "Type": "String",
        "Optional": true,
        "Description": "CFC Function Trigger cdn event type"
      },
      "domain": {
        "Type": "String",
        "Optional": true,
        "Description": "CFC Function Trigger domain if source_type is cdn",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "enabled": {
        "Type": "String",
        "Optional": true,
        "Description": "CFC Function Trigger enabled if source_type is crontab"
      },
      "input": {
        "Type": "String",
        "Optional": true,
        "Description": "CFC Function Trigger input if source_type is crontab"
      },
      "method": {
        "Type": "Set",
        "Optional": true,
        "Description": "CFC Function Trigger method if source_type is http",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "CFC Function Trigger name if source_type is bos or crontab"
      },
      "relation_id": {
        "Type": "String",
        "Description": "CFC Function Trigger relation id",
        "Computed": true
      },
      "remark": {
        "Type": "String",
        "Optional": true,
        "Description": "CFC Function Trigger remark if source_type is cdn"
      },
      "resource": {
        "Type": "String",
        "Optional": true,
        "Description": "CFC Function Trigger resource if source_type is bos"
      },
      "resource_path": {
        "Type": "String",
        "Optional": true,
        "Description": "CFC Function Trigger resource path if source_type is http"
      },
      "schedule_expression": {
        "Type": "String",
        "Optional": true,
        "Description": "CFC Function Trigger schedule expression if source_type is crontab"
      },
      "sid": {
        "Type": "String",
        "Description": "CFC Funtion Trigger sid",
        "Computed": true
      },
      "source_type": {
        "Type": "String",
        "Required": true,
        "Description": "CFC Funtion Trigger source type, support bos/http/crontab/dueros/duedge/cdn"
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "CFC Funtion Trigger status if source_type is bos or cdn"
      },
      "target": {
        "Type": "String",
        "Required": true,
        "Description": "CFC Function Trigger target, it should be function brn"
      }
    },
    "baiducloud_cfc_version": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "code_sha256": {
        "Type": "String",
        "Optional": true,
        "Description": "Function code sha256",
        "Computed": true
      },
      "code_size": {
        "Type": "String",
        "Description": "Function code size",
        "Computed": true
      },
      "commit_id": {
        "Type": "String",
        "Description": "Function commit id",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Function description",
        "Computed": true
      },
      "environment": {
        "Type": "Map",
        "Description": "CFC Function environment variables",
        "Computed": true
      },
      "function_arn": {
        "Type": "String",
        "Description": "The same as function brn",
        "Computed": true
      },
      "function_brn": {
        "Type": "String",
        "Description": "Function brn",
        "Computed": true
      },
      "function_name": {
        "Type": "String",
        "Required": true,
        "Description": "CFC function name, length must be between 1 and 64 bytes"
      },
      "handler": {
        "Type": "String",
        "Description": "CFC Function execution handler",
        "Computed": true
      },
      "last_modified": {
        "Type": "String",
        "Description": "The same as update_time",
        "Computed": true
      },
      "log_bos_dir": {
        "Type": "String",
        "Optional": true,
        "Description": "Log save dir if log type is bos",
        "Computed": true
      },
      "log_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Log save type, support bos/none",
        "Computed": true
      },
      "memory_size": {
        "Type": "Int",
        "Description": "CFC Function memory size",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Description": "CFC Function bined VPC Subnet id list",
        "Computed": true
      },
      "role": {
        "Type": "String",
        "Description": "Function exec role",
        "Computed": true
      },
      "runtime": {
        "Type": "String",
        "Description": "CFC Function runtime",
        "Computed": true
      },
      "time_out": {
        "Type": "Int",
        "Description": "Function time out",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Description": "Function user uid",
        "Computed": true
      },
      "update_time": {
        "Type": "String",
        "Description": "Last update time",
        "Computed": true
      },
      "version": {
        "Type": "String",
        "Description": "Function version",
        "Computed": true
      },
      "version_description": {
        "Type": "String",
        "Optional": true,
        "Description": "Function version description"
      },
      "vpc_config": {
        "Type": "List",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "security_group_ids": {
              "Type": "Set",
              "Description": "CFC Function binded Security group list",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "subnet_ids": {
              "Type": "Set",
              "Description": "CFC Function bined VPC Subnet id list",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "vpc_id": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      }
    },
    "baiducloud_eip": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "bandwidth_in_mbps": {
        "Type": "Int",
        "Required": true,
        "Description": "Eip bandwidth(Mbps), if payment_timing is Prepaid or billing_method is ByBandWidth, support between 1 and 200, if billing_method is ByTraffic, support between 1 and 1000"
      },
      "billing_method": {
        "Type": "String",
        "Required": true,
        "Description": "Eip billing method, support ByTraffic or ByBandwidth"
      },
      "create_time": {
        "Type": "String",
        "Description": "Eip create time",
        "Computed": true
      },
      "eip": {
        "Type": "String",
        "Description": "Eip address",
        "Computed": true
      },
      "eip_instance_type": {
        "Type": "String",
        "Description": "Eip instance type",
        "Computed": true
      },
      "expire_time": {
        "Type": "String",
        "Description": "Eip expire time",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Eip name, length must be between 1 and 65 bytes",
        "Computed": true
      },
      "payment_timing": {
        "Type": "String",
        "Required": true,
        "Description": "Eip payment timing, support Prepaid and Postpaid"
      },
      "reservation_length": {
        "Type": "Int",
        "Optional": true,
        "Description": "Eip Prepaid billing reservation length, only useful when payment_timing is Prepaid"
      },
      "reservation_time_unit": {
        "Type": "String",
        "Optional": true,
        "Description": "Eip Prepaid billing reservation time unit, only useful when payment_timing is Prepaid"
      },
      "share_group_id": {
        "Type": "String",
        "Description": "Eip share group id",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "Eip status",
        "Computed": true
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Tags, do not support modify",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "baiducloud_eip_association": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "eip": {
        "Type": "String",
        "Required": true,
        "Description": "EIP which need to associate with instance"
      },
      "instance_id": {
        "Type": "String",
        "Required": true,
        "Description": "Instance ID which need to associate with EIP"
      },
      "instance_type": {
        "Type": "String",
        "Required": true,
        "Description": "Instance type which need to associate with EIP, support BCC/BLB/NAT/VPN"
      }
    },
    "baiducloud_instance": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "admin_pass": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the instance to be started. This value should be 8-16 characters, and English, numbers and symbols must exist at the same time. The symbols is limited to \"!@#$%^*()\"."
      },
      "auto_renew": {
        "Type": "Bool",
        "Description": "Whether to automatically renew.",
        "Computed": true
      },
      "auto_renew_time_length": {
        "Type": "Int",
        "Optional": true,
        "Description": "The time length of automatic renewal. It is valid when payment_timing is Prepaid, and the value should be 1-9 when the auto_renew_time_unit is month and 1-3 when the auto_renew_time_unit is year. Default to 1.",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      },
      "auto_renew_time_unit": {
        "Type": "String",
        "Optional": true,
        "Description": "Time unit of automatic renewal, the value can be month or year. The default value is empty, indicating no automatic renewal. It is valid only when the payment_timing is Prepaid."
      },
      "availability_zone": {
        "Type": "String",
        "Optional": true,
        "Description": "Availability zone to start the instance in.",
        "Computed": true
      },
      "billing": {
        "Type": "Map",
        "Required": true,
        "Description": "Billing information of the instance.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "card_count": {
        "Type": "String",
        "Optional": true,
        "Description": "Count of the GPU cards or FPGA cards to be carried for the instance to be created, it is valid only when the gpu_card or fpga_card field is not empty."
      },
      "cds_auto_renew": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether the cds is automatically renewed. It is valid when payment_timing is Prepaid. Default to false.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "cds_disks": {
        "Type": "List",
        "Optional": true,
        "Description": "CDS disks of the instance.",
        "MaxItems": 5,
        "MinItems": 1,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cds_size_in_gb": {
              "Type": "Int",
              "Optional": true,
              "Description": "The size(GB) of CDS.",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "snapshot_id": {
              "Type": "String",
              "Optional": true,
              "Description": "Snapshot ID of CDS."
            },
            "storage_type": {
              "Type": "String",
              "Optional": true,
              "Description": "Storage type of the CDS.",
              "Default": {
                "Type": "api.StorageType",
                "Value": "cloud_hp1"
              }
            }
          }
        }
      },
      "cpu_count": {
        "Type": "Int",
        "Required": true,
        "Description": "Number of CPU cores to be created for the instance."
      },
      "create_time": {
        "Type": "String",
        "Description": "Create time of the instance.",
        "Computed": true
      },
      "dedicate_host_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of dedicated host."
      },
      "delete_cds_snapshot_flag": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to release the cds disk snapshots, default to false. It is effective only when the related_release_flag is true.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description of the instance."
      },
      "ephemeral_disks": {
        "Type": "List",
        "Optional": true,
        "Description": "Ephemeral disks of the instance.",
        "MaxItems": 15,
        "MinItems": 1,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "size_in_gb": {
              "Type": "Int",
              "Optional": true,
              "Description": "Size(GB) of the ephemeral disk."
            },
            "storage_type": {
              "Type": "String",
              "Optional": true,
              "Description": "Storage type of the ephemeral disk. Available values are std1, hp1, cloud_hp1, local, sata, ssd. Default to cloud_hp1.",
              "Default": {
                "Type": "api.StorageType",
                "Value": "cloud_hp1"
              }
            }
          }
        }
      },
      "expire_time": {
        "Type": "String",
        "Description": "Expire time of the instance.",
        "Computed": true
      },
      "fpga_card": {
        "Type": "String",
        "Optional": true,
        "Description": "FPGA card of the instance.",
        "ConflictsWith": [
          "gpu_card"
        ]
      },
      "gpu_card": {
        "Type": "String",
        "Optional": true,
        "Description": "GPU card of the instance.",
        "ConflictsWith": [
          "fpga_card"
        ]
      },
      "image_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of the image to be used for the instance."
      },
      "instance_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Type of the instance to start. Available values are N1, N2, N3, C1, C2, S1, G1, F1. Default to N3.",
        "Default": {
          "Type": "api.InstanceType",
          "Value": "N3"
        }
      },
      "internal_ip": {
        "Type": "String",
        "Description": "Internal IP assigned to the instance.",
        "Computed": true
      },
      "keypair_id": {
        "Type": "String",
        "Description": "Key pair id of the instance.",
        "Computed": true
      },
      "keypair_name": {
        "Type": "String",
        "Description": "Key pair name of the instance.",
        "Computed": true
      },
      "memory_capacity_in_gb": {
        "Type": "Int",
        "Required": true,
        "Description": "Memory capacity(GB) of the instance to be created."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the instance. Support for uppercase and lowercase letters, numbers, Chinese and special characters, such as \"-\",\"_\",\"/\",\".\", the value must start with a letter, length 1-65."
      },
      "network_capacity_in_mbps": {
        "Type": "Int",
        "Description": "Public network bandwidth(Mbps) of the instance.",
        "Computed": true
      },
      "placement_policy": {
        "Type": "String",
        "Description": "The placement policy of the instance, which can be default or dedicatedHost.",
        "Computed": true
      },
      "public_ip": {
        "Type": "String",
        "Description": "Public IP",
        "Computed": true
      },
      "related_release_flag": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to release the eip and data disks mounted by the current instance. Can only be released uniformly or not. Default to false.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "relation_tag": {
        "Type": "Bool",
        "Optional": true,
        "Description": "The new instance associated with existing Tags or not, default false. The Tags should already exit if set true"
      },
      "root_disk_size_in_gb": {
        "Type": "Int",
        "Optional": true,
        "Description": "System disk size(GB) of the instance to be created. The value range is [40,500]GB, Default to 40GB, and more than 40GB is charged according to the cloud disk price. Note that the specified system disk size needs to meet the minimum disk space limit of the mirror used.",
        "Default": {
          "Type": "int",
          "Value": "40"
        }
      },
      "root_disk_storage_type": {
        "Type": "String",
        "Optional": true,
        "Description": "System disk storage type of the instance. Available values are std1, hp1, cloud_hp1, local, sata, ssd. Default to cloud_hp1.",
        "Default": {
          "Type": "api.StorageType",
          "Value": "cloud_hp1"
        }
      },
      "security_groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "Security groups of the instance.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "status": {
        "Type": "String",
        "Description": "Status of the instance.",
        "Computed": true
      },
      "subnet_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The subnet ID of VPC. The default subnet will be used when it is empty. The instance will restart after changing the subnet.",
        "Computed": true
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Tags, do not support modify",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "vpc_id": {
        "Type": "String",
        "Description": "VPC ID of the instance.",
        "Computed": true
      }
    },
    "baiducloud_nat_gateway": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "billing": {
        "Type": "Map",
        "Required": true,
        "Description": "Billing information of the NAT gateway.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "eips": {
        "Type": "Set",
        "Description": "One public network EIP associated with the NAT gateway or one or more EIPs in the shared bandwidth.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "expired_time": {
        "Type": "String",
        "Description": "Expired time of the NAT gateway, which will be empty when the payment_timing is Postpaid.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the NAT gateway, consisting of uppercase and lowercase letters、numbers and special characters, such as \"-\",\"_\",\"/\",\".\". The value must start with a letter, and the length should between 1-65."
      },
      "spec": {
        "Type": "String",
        "Optional": true,
        "Description": "Specification of the NAT gateway, available values are small(supports up to 5 public IPs), medium(up to 10 public IPs) and large(up to 15 public IPs). Default to small.",
        "Default": {
          "Type": "string",
          "Value": "small"
        }
      },
      "status": {
        "Type": "String",
        "Description": "Status of the NAT gateway.",
        "Computed": true
      },
      "vpc_id": {
        "Type": "String",
        "Required": true,
        "Description": "VPC ID of the NAT gateway."
      }
    },
    "baiducloud_peer_conn": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "bandwidth_in_mbps": {
        "Type": "Int",
        "Required": true,
        "Description": "Bandwidth(Mbps) of the peer connection."
      },
      "billing": {
        "Type": "Map",
        "Required": true,
        "Description": "Billing information of the peer connection.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "created_time": {
        "Type": "String",
        "Description": "Created time of the peer connection.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description of the peer connection."
      },
      "dns_status": {
        "Type": "String",
        "Description": "DNS status of the peer connection.",
        "Computed": true
      },
      "dns_sync": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to open the switch of dns synchronization.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "expired_time": {
        "Type": "String",
        "Description": "Expired time of the peer connection, which will be empty when the payment_timing is Postpaid.",
        "Computed": true
      },
      "local_if_id": {
        "Type": "String",
        "Description": "Local interface ID of the peer connection.",
        "Computed": true
      },
      "local_if_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Local interface name of the peer connection.",
        "Computed": true
      },
      "local_vpc_id": {
        "Type": "String",
        "Required": true,
        "Description": "Local VPC ID of the peer connection."
      },
      "peer_account_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Peer account ID of the peer VPC, which is required only when creating a peer connection across accounts.",
        "Computed": true
      },
      "peer_if_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Peer interface name of the peer connection, which is allowed to be set only when the peer connection within this account."
      },
      "peer_region": {
        "Type": "String",
        "Required": true,
        "Description": "Peer region of the peer connection."
      },
      "peer_vpc_id": {
        "Type": "String",
        "Required": true,
        "Description": "Peer VPC ID of the peer connection."
      },
      "role": {
        "Type": "String",
        "Description": "Role of the peer connection, which can be initiator or acceptor.",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "Status of the peer connection.",
        "Computed": true
      }
    },
    "baiducloud_peer_conn_acceptor": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "auto_accept": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to accept the peer connection request, default to false.",
        "ConflictsWith": [
          "auto_reject"
        ],
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "auto_reject": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to reject the peer connection request, default to false.",
        "ConflictsWith": [
          "auto_accept"
        ],
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "bandwidth_in_mbps": {
        "Type": "Int",
        "Description": "Bandwidth(Mbps) of the peer connection.",
        "Computed": true
      },
      "billing": {
        "Type": "Map",
        "Description": "Billing information of the peer connection.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "created_time": {
        "Type": "String",
        "Description": "Created time of the peer connection.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Description of the peer connection.",
        "Computed": true
      },
      "dns_status": {
        "Type": "String",
        "Description": "DNS status of the peer connection.",
        "Computed": true
      },
      "dns_sync": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to open the switch of dns synchronization.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "expired_time": {
        "Type": "String",
        "Description": "Expired time of the peer connection, which will be empty when the payment_timing is Postpaid.",
        "Computed": true
      },
      "local_if_id": {
        "Type": "String",
        "Description": "Local interface ID of the peer connection.",
        "Computed": true
      },
      "local_if_name": {
        "Type": "String",
        "Description": "Local interface name of the peer connection.",
        "Computed": true
      },
      "local_vpc_id": {
        "Type": "String",
        "Description": "Local VPC ID of the peer connection.",
        "Computed": true
      },
      "peer_account_id": {
        "Type": "String",
        "Description": "Peer account ID of the peer VPC, which is required only when creating a peer connection across accounts.",
        "Computed": true
      },
      "peer_conn_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of the peer connection."
      },
      "peer_if_name": {
        "Type": "String",
        "Description": "Peer interface name of the peer connection, which is allowed to be set only when the peer connection within this account.",
        "Computed": true
      },
      "peer_region": {
        "Type": "String",
        "Description": "Peer region of the peer connection.",
        "Computed": true
      },
      "peer_vpc_id": {
        "Type": "String",
        "Description": "Peer VPC ID of the peer connection.",
        "Computed": true
      },
      "role": {
        "Type": "String",
        "Description": "Role of the peer connection, which can be initiator or acceptor.",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "Status of the peer connection.",
        "Computed": true
      }
    },
    "baiducloud_route_rule": {
      "__timeouts__": [
        "create",
        "delete"
      ],
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description of the routing rule."
      },
      "destination_address": {
        "Type": "String",
        "Required": true,
        "Description": "Destination CIDR block of the routing rule. The network segment can be 0.0.0.0/0, otherwise, the destination address cannot overlap with this VPC CIDR block(except when the destination network segment or the VPC CIDR is 0.0.0.0/0)."
      },
      "next_hop_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the next hop.",
        "Computed": true
      },
      "next_hop_type": {
        "Type": "String",
        "Required": true,
        "Description": "Type of the next hop, available values are custom、vpn and nat."
      },
      "route_table_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of the routing table."
      },
      "source_address": {
        "Type": "String",
        "Required": true,
        "Description": "Source CIDR block of the routing rule. The value can be all network segments 0.0.0.0/0, existing subnet segments in the VPC, or the network segment within the subnet."
      }
    },
    "baiducloud_security_group": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "SecurityGroup description"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "SecurityGroup name"
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Tags, do not support modify",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "SecurityGroup binded VPC id",
        "Computed": true
      }
    },
    "baiducloud_security_group_rule": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "dest_group_id": {
        "Type": "String",
        "Optional": true,
        "Description": "SecurityGroup rule's destination group id, dest_group_id and dest_ip can not set in the same time",
        "Computed": true,
        "ConflictsWith": [
          "dest_ip"
        ]
      },
      "dest_ip": {
        "Type": "String",
        "Optional": true,
        "Description": "SecurityGroup rule's destination ip, dest_group_id and dest_ip can not set in the same time",
        "Computed": true,
        "ConflictsWith": [
          "dest_group_id"
        ]
      },
      "direction": {
        "Type": "String",
        "Required": true,
        "Description": "SecurityGroup rule's direction, support ingress/egress"
      },
      "ether_type": {
        "Type": "String",
        "Optional": true,
        "Description": "SecurityGroup rule's ether type, support IPv4/IPv6",
        "Computed": true
      },
      "port_range": {
        "Type": "String",
        "Optional": true,
        "Description": "SecurityGroup rule's port range, you can set single port like 80, or set a port range, like 1-65535, default 1-65535",
        "Computed": true
      },
      "protocol": {
        "Type": "String",
        "Optional": true,
        "Description": "SecurityGroup rule's protocol, support tcp/udp/icmp/all, default all",
        "Computed": true
      },
      "remark": {
        "Type": "String",
        "Optional": true,
        "Description": "SecurityGroup rule's remark",
        "Computed": true
      },
      "security_group_id": {
        "Type": "String",
        "Required": true,
        "Description": "SecurityGroup rule's security group id"
      },
      "source_group_id": {
        "Type": "String",
        "Optional": true,
        "Description": "SecurityGroup rule's source group id, source_group_id and source_ip can not set in the same time",
        "Computed": true,
        "ConflictsWith": [
          "source_ip"
        ]
      },
      "source_ip": {
        "Type": "String",
        "Optional": true,
        "Description": "SecurityGroup rule's source ip, source_group_id and source_ip can not set in the same time",
        "Computed": true,
        "ConflictsWith": [
          "source_group_id"
        ]
      }
    },
    "baiducloud_snapshot": {
      "__timeouts__": [
        "create",
        "delete"
      ],
      "create_method": {
        "Type": "String",
        "Description": "Creation method of the snapshot.",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "Creation time of the snapshot.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description of the snapshot."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the snapshot, which supports uppercase and lowercase letters, numbers, Chinese and special characters, such as \"-\",\"_\",\"/\",\",\".\", and the value must start with a letter, length 1-65."
      },
      "size_in_gb": {
        "Type": "Int",
        "Description": "Size of the snapshot in GB.",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "Status of the snapshot.",
        "Computed": true
      },
      "volume_id": {
        "Type": "String",
        "Required": true,
        "Description": "Volume id of the snapshot, this value will be nil if volume has been released."
      }
    },
    "baiducloud_subnet": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "cidr": {
        "Type": "String",
        "Required": true,
        "Description": "CIDR block of the subnet."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description of the subnet, and the value must be no more than 200 characters."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the subnet, which cannot take the value \"default\", the length is no more than 65 characters, and the value can be composed of numbers, characters and underscores."
      },
      "subnet_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Type of the subnet, valid values are BCC, BCC_NAT and BBC. Default to BCC.",
        "Computed": true
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Tags, do not support modify",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "vpc_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of the VPC."
      },
      "zone_name": {
        "Type": "String",
        "Required": true,
        "Description": "The availability zone name within which the subnet should be created."
      }
    },
    "baiducloud_vpc": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "cidr": {
        "Type": "String",
        "Required": true,
        "Description": "CIDR block for the VPC."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description of the VPC. The value is no more than 200 characters."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the VPC, which cannot take the value \"default\", the length is no more than 65 characters, and the value can be composed of numbers, characters and underscores."
      },
      "route_table_id": {
        "Type": "String",
        "Description": "Route table ID created by default on VPC creation.",
        "Computed": true
      },
      "secondary_cidrs": {
        "Type": "List",
        "Description": "Secondary cidr list of the VPC. They will not be repeated.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags": {
        "Type": "Map",
        "Optional": true,
        "Description": "Tags, do not support modify",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    }
  },
  "data-sources": {
    "baiducloud_acls": {
      "acl_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the ACL to retrieve."
      },
      "acls": {
        "Type": "List",
        "Description": "List of the ACLs.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "acl_id": {
              "Type": "String",
              "Description": "ID of the ACL.",
              "Computed": true
            },
            "action": {
              "Type": "String",
              "Description": "Action of the ACL.",
              "Computed": true
            },
            "description": {
              "Type": "String",
              "Description": "Description of the ACL.",
              "Computed": true
            },
            "destination_ip_address": {
              "Type": "String",
              "Description": "Destination IP address of the ACL.",
              "Computed": true
            },
            "destination_port": {
              "Type": "String",
              "Description": "Destination port of the ACL.",
              "Computed": true
            },
            "direction": {
              "Type": "String",
              "Description": "Direction of the ACL.",
              "Computed": true
            },
            "position": {
              "Type": "Int",
              "Description": "Position of the ACL.",
              "Computed": true
            },
            "protocol": {
              "Type": "String",
              "Description": "Protocol of the ACL.",
              "Computed": true
            },
            "source_ip_address": {
              "Type": "String",
              "Description": "Source IP address of the ACL.",
              "Computed": true
            },
            "source_port": {
              "Type": "String",
              "Description": "Source port of the ACL.",
              "Computed": true
            },
            "subnet_id": {
              "Type": "String",
              "Description": "Subnet ID of the ACL.",
              "Computed": true
            }
          }
        }
      },
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "only support filter string/int/bool value",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "filter variable name"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "filter variable value list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "output_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Output file for saving result."
      },
      "subnet_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Subnet ID of the ACLs to retrieve."
      },
      "vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "VPC ID of the ACLs to retrieve."
      }
    },
    "baiducloud_appblb_listeners": {
      "blb_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of the Application LoadBalance instance"
      },
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "only support filter string/int/bool value",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "filter variable name"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "filter variable value list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "listener_port": {
        "Type": "Int",
        "Optional": true,
        "Description": "The port of the Listener to be queried"
      },
      "listeners": {
        "Type": "List",
        "Description": "A list of Application LoadBalance Listener",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cert_ids": {
              "Type": "List",
              "Description": "Listener bind certifications",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "client_cert_ids": {
              "Type": "List",
              "Description": "Listener import cert list, only useful when dual_auth is true",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "dual_auth": {
              "Type": "Bool",
              "Description": "Listener open dual authorization or not, default false",
              "Computed": true
            },
            "encryption_protocols": {
              "Type": "List",
              "Description": "Listener encryption protocol",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "encryption_type": {
              "Type": "String",
              "Description": "Listener encryption option",
              "Computed": true
            },
            "ie6_compatible": {
              "Type": "Bool",
              "Description": "Listener support ie6 option, default true",
              "Computed": true
            },
            "keep_session": {
              "Type": "Bool",
              "Description": "Listener keepSession or not",
              "Computed": true
            },
            "keep_session_cookie_name": {
              "Type": "String",
              "Description": "Listener keepSeesionCookieName",
              "Computed": true
            },
            "keep_session_timeout": {
              "Type": "Int",
              "Description": "Listener keepSessionTimeout value",
              "Computed": true
            },
            "keep_session_type": {
              "Type": "String",
              "Description": "Listener keepSessionType option",
              "Computed": true
            },
            "listener_port": {
              "Type": "Int",
              "Description": "Listener bind port",
              "Computed": true
            },
            "policys": {
              "Type": "Set",
              "Description": "Listener's policy",
              "Computed": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "app_server_group_id": {
                    "Type": "String",
                    "Description": "Policy bind server group ID",
                    "Computed": true
                  },
                  "app_server_group_name": {
                    "Type": "String",
                    "Description": "Policy bind server group name",
                    "Computed": true
                  },
                  "backend_port": {
                    "Type": "Int",
                    "Description": "Backend port",
                    "Computed": true
                  },
                  "description": {
                    "Type": "String",
                    "Description": "Policy's description",
                    "Computed": true
                  },
                  "frontend_port": {
                    "Type": "Int",
                    "Description": "Frontend port",
                    "Computed": true
                  },
                  "id": {
                    "Type": "String",
                    "Description": "Policy's ID",
                    "Computed": true
                  },
                  "port_type": {
                    "Type": "String",
                    "Description": "Policy bind port protocol",
                    "Computed": true
                  },
                  "priority": {
                    "Type": "Int",
                    "Description": "Policy priority",
                    "Computed": true
                  },
                  "rule_list": {
                    "Type": "List",
                    "Description": "Policy rule list",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "key": {
                          "Type": "String",
                          "Description": "Rule key",
                          "Computed": true
                        },
                        "value": {
                          "Type": "String",
                          "Description": "Rule value",
                          "Computed": true
                        }
                      }
                    }
                  }
                }
              }
            },
            "protocol": {
              "Type": "String",
              "Description": "Listener protocol",
              "Computed": true
            },
            "redirect_port": {
              "Type": "Int",
              "Description": "Listener redirect request to https listener port",
              "Computed": true
            },
            "scheduler": {
              "Type": "String",
              "Description": "Load balancing algorithm",
              "Computed": true
            },
            "server_timeout": {
              "Type": "Int",
              "Description": "Backend server maximum timeout time, only support in [1, 3600] second, default 30s",
              "Computed": true
            },
            "tcp_session_timeout": {
              "Type": "Int",
              "Description": "TCP Listener connetion session timeout time",
              "Computed": true
            },
            "x_forwarded_for": {
              "Type": "Bool",
              "Description": "Listener xForwardedFor, determine get client real ip or not, default false",
              "Computed": true
            }
          }
        }
      },
      "output_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Query result output file path"
      },
      "protocol": {
        "Type": "String",
        "Optional": true,
        "Description": "Protocol of the Listener to be queried"
      }
    },
    "baiducloud_appblb_server_groups": {
      "blb_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of the LoadBalance instance to be queried"
      },
      "exactly_match": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether the name is an exact match or not, default false"
      },
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "only support filter string/int/bool value",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "filter variable name"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "filter variable value list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the Server Group to be queried"
      },
      "output_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Query result output file path"
      },
      "server_groups": {
        "Type": "List",
        "Description": "A list of Application LoadBalance Server Group",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "backend_server_list": {
              "Type": "List",
              "Description": "Server group bound backend server list",
              "Computed": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "instance_id": {
                    "Type": "String",
                    "Description": "Backend server instance ID",
                    "Computed": true
                  },
                  "port_list": {
                    "Type": "Set",
                    "Description": "Backend server open port list",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "backend_port": {
                          "Type": "Int",
                          "Description": "Backend open port",
                          "Computed": true
                        },
                        "health_check_port_type": {
                          "Type": "String",
                          "Description": "Health check port protocol type",
                          "Computed": true
                        },
                        "listener_port": {
                          "Type": "Int",
                          "Description": "Listener port",
                          "Computed": true
                        },
                        "policy_id": {
                          "Type": "String",
                          "Description": "Port bind policy ID",
                          "Computed": true
                        },
                        "port_id": {
                          "Type": "String",
                          "Description": "Port ID",
                          "Computed": true
                        },
                        "port_type": {
                          "Type": "String",
                          "Description": "Port protocol type",
                          "Computed": true
                        },
                        "status": {
                          "Type": "String",
                          "Description": "Port status, include Alive/Dead/Unknown",
                          "Computed": true
                        }
                      }
                    }
                  },
                  "private_ip": {
                    "Type": "String",
                    "Description": "Backend server instance bind private ip",
                    "Computed": true
                  },
                  "weight": {
                    "Type": "Int",
                    "Description": "Backend server instance weight in this group",
                    "Computed": true
                  }
                }
              }
            },
            "description": {
              "Type": "String",
              "Description": "Server Group's description",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Server Group's name",
              "Computed": true
            },
            "port_list": {
              "Type": "List",
              "Description": "Server Group backend port list",
              "Computed": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "health_check": {
                    "Type": "String",
                    "Description": "Server Group port health check protocol",
                    "Computed": true
                  },
                  "health_check_down_retry": {
                    "Type": "Int",
                    "Description": "Server Group health check down retry time",
                    "Computed": true
                  },
                  "health_check_interval_in_second": {
                    "Type": "Int",
                    "Description": "Server Group health check interval time(second)",
                    "Computed": true
                  },
                  "health_check_normal_status": {
                    "Type": "String",
                    "Description": "Server Group health check normal http status code",
                    "Computed": true
                  },
                  "health_check_port": {
                    "Type": "Int",
                    "Description": "Server Group port health check port",
                    "Computed": true
                  },
                  "health_check_timeout_in_second": {
                    "Type": "Int",
                    "Description": "Server Group health check timeout(second)",
                    "Computed": true
                  },
                  "health_check_up_retry": {
                    "Type": "Int",
                    "Description": "Server Group health check up retry time",
                    "Computed": true
                  },
                  "health_check_url_path": {
                    "Type": "String",
                    "Description": "Server Group health check url path",
                    "Computed": true
                  },
                  "id": {
                    "Type": "String",
                    "Description": "Server Group port ID",
                    "Computed": true
                  },
                  "port": {
                    "Type": "Int",
                    "Description": "Server Group port",
                    "Computed": true
                  },
                  "status": {
                    "Type": "String",
                    "Description": "Server Group port status",
                    "Computed": true
                  },
                  "type": {
                    "Type": "String",
                    "Description": "Server Group port protocol type",
                    "Computed": true
                  },
                  "udp_health_check_string": {
                    "Type": "String",
                    "Description": "Server Group udp health check string",
                    "Computed": true
                  }
                }
              }
            },
            "sg_id": {
              "Type": "String",
              "Description": "Server Group's ID",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "Server Group status",
              "Computed": true
            }
          }
        }
      }
    },
    "baiducloud_appblbs": {
      "address": {
        "Type": "String",
        "Optional": true,
        "Description": "Address ip of the LoadBalance instance to be queried"
      },
      "appblbs": {
        "Type": "List",
        "Description": "A list of Application LoadBalance Instance",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "String",
              "Description": "LoadBalance instance's service IP, instance can be accessed through this IP",
              "Computed": true
            },
            "blb_id": {
              "Type": "String",
              "Description": "LoadBalance instance's ID",
              "Computed": true
            },
            "cidr": {
              "Type": "String",
              "Description": "Cidr of the network where the LoadBalance instance reside",
              "Computed": true
            },
            "create_time": {
              "Type": "String",
              "Description": "LoadBalance instance's create time",
              "Computed": true
            },
            "description": {
              "Type": "String",
              "Description": "LoadBalance instance's description",
              "Computed": true
            },
            "listener": {
              "Type": "List",
              "Description": "List of listeners mounted under the instance",
              "Computed": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "port": {
                    "Type": "Int",
                    "Description": "Listening port",
                    "Computed": true
                  },
                  "type": {
                    "Type": "String",
                    "Description": "Listening protocol type",
                    "Computed": true
                  }
                }
              }
            },
            "name": {
              "Type": "String",
              "Description": "LoadBalance instance's name",
              "Computed": true
            },
            "public_ip": {
              "Type": "String",
              "Description": "LoadBalance instance's public ip",
              "Computed": true
            },
            "release_time": {
              "Type": "String",
              "Description": "LoadBalance instance's auto release time",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "LoadBalance instance's status",
              "Computed": true
            },
            "subnet_cidr": {
              "Type": "String",
              "Description": "Cidr of the subnet which the LoadBalance instance belongs",
              "Computed": true
            },
            "subnet_id": {
              "Type": "String",
              "Description": "The subnet ID to which the LoadBalance instance belongs",
              "Computed": true
            },
            "subnet_name": {
              "Type": "String",
              "Description": "The subnet name to which the LoadBalance instance belongs",
              "Computed": true
            },
            "tags": {
              "Type": "Map",
              "Description": "Tags",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "vpc_id": {
              "Type": "String",
              "Description": "The VPC short ID to which the LoadBalance instance belongs",
              "Computed": true
            },
            "vpc_name": {
              "Type": "String",
              "Description": "The VPC name to which the LoadBalance instance belongs",
              "Computed": true
            }
          }
        }
      },
      "bcc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the BCC instance bound to the LoadBalance"
      },
      "blb_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the LoadBalance instance to be queried"
      },
      "exactly_match": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether the query condition is an exact match or not, default false"
      },
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "only support filter string/int/bool value",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "filter variable name"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "filter variable value list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the LoadBalance instance to be queried"
      },
      "output_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Query result output file path"
      }
    },
    "baiducloud_auto_snapshot_policies": {
      "asp_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the automatic snapshot policy."
      },
      "auto_snapshot_policies": {
        "Type": "List",
        "Description": "The automatic snapshot policies search result list.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "created_time": {
              "Type": "String",
              "Description": "The creation time of the automatic snapshot policy.",
              "Computed": true
            },
            "deleted_time": {
              "Type": "String",
              "Description": "The deletion time of the automatic snapshot policy.",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Description": "The ID of the automatic snapshot policy.",
              "Computed": true
            },
            "last_execute_time": {
              "Type": "String",
              "Description": "The last execution time of the automatic snapshot policy.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "The name of the automatic snapshot policy.",
              "Computed": true
            },
            "repeat_weekdays": {
              "Type": "List",
              "Description": "The repeat weekdays of the automatic snapshot policy.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            },
            "retention_days": {
              "Type": "Int",
              "Description": "The retention days of the automatic snapshot policy.",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "The status of the automatic snapshot policy.",
              "Computed": true
            },
            "time_points": {
              "Type": "List",
              "Description": "The time points of the automatic snapshot policy.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            },
            "updated_time": {
              "Type": "String",
              "Description": "The updation time of the automatic snapshot policy.",
              "Computed": true
            },
            "volume_count": {
              "Type": "Int",
              "Description": "The volume count of the automatic snapshot policy.",
              "Computed": true
            }
          }
        }
      },
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "only support filter string/int/bool value",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "filter variable name"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "filter variable value list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "output_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Automatic snapshot policies search result output file."
      },
      "volume_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the volume."
      }
    },
    "baiducloud_bos_bucket_objects": {
      "bucket": {
        "Type": "String",
        "Required": true,
        "Description": "Bucket name of the objects to retrieve."
      },
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "only support filter string/int/bool value",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "filter variable name"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "filter variable value list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "objects": {
        "Type": "List",
        "Description": "List of the objects.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "acl": {
              "Type": "String",
              "Description": "Acl of the object.",
              "Computed": true
            },
            "bucket": {
              "Type": "String",
              "Description": "Bucket of the object.",
              "Computed": true
            },
            "cache_control": {
              "Type": "String",
              "Description": "Caching behavior of the object.",
              "Computed": true
            },
            "content_crc32": {
              "Type": "String",
              "Description": "Crc(cyclic redundancy check code) value of the object.",
              "Computed": true
            },
            "content_disposition": {
              "Type": "String",
              "Description": "Content disposition of the object.",
              "Computed": true
            },
            "content_encoding": {
              "Type": "String",
              "Description": "Encoding of the object.",
              "Computed": true
            },
            "content_length": {
              "Type": "Int",
              "Description": "Content length of the object.",
              "Computed": true
            },
            "content_md5": {
              "Type": "String",
              "Description": "MD5 value of the object content defined in RFC2616.",
              "Computed": true
            },
            "content_sha256": {
              "Type": "String",
              "Description": "Sha256 value of the object.",
              "Computed": true
            },
            "content_type": {
              "Type": "String",
              "Description": "Content type of the object data.",
              "Computed": true
            },
            "etag": {
              "Type": "String",
              "Description": "Etag of the object.",
              "Computed": true
            },
            "expires": {
              "Type": "String",
              "Description": "Expire date of the object.",
              "Computed": true
            },
            "key": {
              "Type": "String",
              "Description": "Key of the object.",
              "Computed": true
            },
            "last_modified": {
              "Type": "String",
              "Description": "Last modifyed time of the object.",
              "Computed": true
            },
            "owner_id": {
              "Type": "String",
              "Description": "Owner id of the object.",
              "Computed": true
            },
            "owner_name": {
              "Type": "String",
              "Description": "Owner name of the object.",
              "Computed": true
            },
            "size": {
              "Type": "Int",
              "Description": "Size of the object.",
              "Computed": true
            },
            "storage_class": {
              "Type": "String",
              "Description": "Storage class of the object.",
              "Computed": true
            },
            "user_meta": {
              "Type": "Map",
              "Description": "Metadata of the object.",
              "Computed": true
            }
          }
        }
      },
      "output_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Output file for saving result."
      },
      "prefix": {
        "Type": "String",
        "Optional": true,
        "Description": "Prefix of the objects."
      }
    },
    "baiducloud_bos_buckets": {
      "bucket": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the bucket to retrieve."
      },
      "buckets": {
        "Type": "List",
        "Description": "List of buckets.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "acl": {
              "Type": "String",
              "Description": "Acl of the bucket.",
              "Computed": true
            },
            "bucket": {
              "Type": "String",
              "Description": "Name of the bucket.",
              "Computed": true
            },
            "copyright_protection": {
              "Type": "List",
              "Description": "Configuration of the copyright protection.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "resource": {
                    "Type": "List",
                    "Description": "Resources to be protected for copyright.",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "cors_rule": {
              "Type": "List",
              "Description": "Configuration of the Cross-Origin Resource Sharing.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allowed_expose_headers": {
                    "Type": "List",
                    "Description": "Indicate which expose headers are allowed.",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "allowed_headers": {
                    "Type": "List",
                    "Description": "Indicate which headers are allowed.",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "allowed_methods": {
                    "Type": "List",
                    "Description": "Indicate which methods are allowed.",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "allowed_origins": {
                    "Type": "List",
                    "Description": "Indicate which origins are allowed.",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "max_age_seconds": {
                    "Type": "Int",
                    "Description": "Indicate time in seconds that browser can cache the response for a preflight request.",
                    "Computed": true
                  }
                }
              }
            },
            "creation_date": {
              "Type": "String",
              "Description": "Creation date of the bucket.",
              "Computed": true
            },
            "lifecycle_rule": {
              "Type": "List",
              "Description": "Configuration of object lifecycle management.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action": {
                    "Type": "List",
                    "Description": "Action of the lifecycle rule.",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "name": {
                          "Type": "String",
                          "Description": "Action name of the lifecycle rule.",
                          "Computed": true
                        },
                        "storage_class": {
                          "Type": "String",
                          "Description": "Storage class of the action.",
                          "Computed": true
                        }
                      }
                    }
                  },
                  "condition": {
                    "Type": "List",
                    "Description": "Condition of the lifecycle rule.",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "time": {
                          "Type": "List",
                          "Description": "Condition time, implemented by the date_greater_than.",
                          "Computed": true,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "date_greater_than": {
                                "Type": "String",
                                "Description": "Support absolute time date and relative time days.",
                                "Computed": true
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "ID of the lifecycle rule.",
                    "Computed": true
                  },
                  "resource": {
                    "Type": "List",
                    "Description": "Resource of the lifecycle rule.",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "status": {
                    "Type": "String",
                    "Description": "Status of the lifecycle rule.",
                    "Computed": true
                  }
                }
              }
            },
            "location": {
              "Type": "String",
              "Description": "Bucket location of the bucket.",
              "Computed": true
            },
            "logging": {
              "Type": "List",
              "Description": "Logging of the bucket.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "target_bucket": {
                    "Type": "String",
                    "Description": "Target bucket name of the logging.",
                    "Computed": true
                  },
                  "target_prefix": {
                    "Type": "String",
                    "Description": "Target prefix of the logging.",
                    "Computed": true
                  }
                }
              }
            },
            "owner_id": {
              "Type": "String",
              "Description": "Owner id of the bucket.",
              "Computed": true
            },
            "owner_name": {
              "Type": "String",
              "Description": "Owner name of the bucket.",
              "Computed": true
            },
            "replication_configuration": {
              "Type": "List",
              "Description": "Replication configuration of the bucket.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "destination": {
                    "Type": "List",
                    "Description": "Destination of the replication configuration.",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "bucket": {
                          "Type": "String",
                          "Description": "Destination bucket name of the replication configuration.",
                          "Computed": true
                        },
                        "storage_class": {
                          "Type": "String",
                          "Description": "Destination storage class of the replication configuration.",
                          "Computed": true
                        }
                      }
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Description": "ID of the replication configuration.",
                    "Computed": true
                  },
                  "replicate_deletes": {
                    "Type": "String",
                    "Description": "Whether to enable the delete synchronization.",
                    "Computed": true
                  },
                  "replicate_history": {
                    "Type": "List",
                    "Description": "Configuration of the replicate history.",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "bucket": {
                          "Type": "String",
                          "Description": "Destination bucket name of the replication configuration.",
                          "Computed": true
                        },
                        "storage_class": {
                          "Type": "String",
                          "Description": "Destination storage class of the replication configuration.",
                          "Computed": true
                        }
                      }
                    }
                  },
                  "resource": {
                    "Type": "List",
                    "Description": "Resource of the replication configuration.",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "status": {
                    "Type": "String",
                    "Description": "Status of the replication configuration.",
                    "Computed": true
                  }
                }
              }
            },
            "server_side_encryption_rule": {
              "Type": "String",
              "Description": "Encryption of the bucket.",
              "Computed": true
            },
            "storage_class": {
              "Type": "String",
              "Description": "Storage class of the bucket.",
              "Computed": true
            },
            "website": {
              "Type": "List",
              "Description": "Website of the BOS bucket.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "error_document": {
                    "Type": "String",
                    "Description": "An absolute path to the document to return in case of a 404 error.",
                    "Computed": true
                  },
                  "index_document": {
                    "Type": "String",
                    "Description": "Baiducloud BOS returns this index document when requests are made to the root domain or any of the subfolders.",
                    "Computed": true
                  }
                }
              }
            }
          }
        }
      },
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "only support filter string/int/bool value",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "filter variable name"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "filter variable value list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "output_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Output file for saving result."
      }
    },
    "baiducloud_cdss": {
      "cdss": {
        "Type": "List",
        "Description": "CDS volume list",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "attachments": {
              "Type": "List",
              "Description": "CDS volume attachments",
              "Computed": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "device": {
                    "Type": "String",
                    "Description": "CDS attachment device path",
                    "Computed": true
                  },
                  "instance_id": {
                    "Type": "String",
                    "Description": "CDS attachment instance id",
                    "Computed": true
                  },
                  "serial": {
                    "Type": "String",
                    "Description": "CDS attachment serial",
                    "Computed": true
                  },
                  "volume_id": {
                    "Type": "String",
                    "Description": "CDS attachment volume id",
                    "Computed": true
                  }
                }
              }
            },
            "auto_snapshot_policy": {
              "Type": "List",
              "Description": "CDS volume bind auto snapshot policy info",
              "Computed": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "created_time": {
                    "Type": "String",
                    "Description": "Auto Snapshot Policy created time",
                    "Computed": true
                  },
                  "deleted_time": {
                    "Type": "String",
                    "Description": "Auto Snapshot Policy deleted time",
                    "Computed": true
                  },
                  "id": {
                    "Type": "String",
                    "Description": "Auto Snapshot Policy ID",
                    "Computed": true
                  },
                  "last_execute_time": {
                    "Type": "String",
                    "Description": "Auto Snapshot Policy last execute time",
                    "Computed": true
                  },
                  "name": {
                    "Type": "String",
                    "Description": "Auto Snapshot Policy name",
                    "Computed": true
                  },
                  "repeat_weekdays": {
                    "Type": "List",
                    "Description": "Auto Snapshot Policy repeat weekdays",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "Int"
                    }
                  },
                  "retention_days": {
                    "Type": "Int",
                    "Description": "Auto Snapshot Policy retention days",
                    "Computed": true
                  },
                  "status": {
                    "Type": "String",
                    "Description": "Auto Snapshot Policy status",
                    "Computed": true
                  },
                  "time_points": {
                    "Type": "List",
                    "Description": "Auto Snapshot Policy set snapshot create time points",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "Int"
                    }
                  },
                  "updated_time": {
                    "Type": "String",
                    "Description": "Auto Snapshot Policy updated time",
                    "Computed": true
                  },
                  "volume_count": {
                    "Type": "Int",
                    "Description": "Auto Snapshot Policy volume count",
                    "Computed": true
                  }
                }
              }
            },
            "cds_id": {
              "Type": "String",
              "Description": "CDS volume id",
              "Computed": true
            },
            "create_time": {
              "Type": "String",
              "Description": "CDS disk create time",
              "Computed": true
            },
            "description": {
              "Type": "String",
              "Description": "CDS description",
              "Computed": true
            },
            "disk_size_in_gb": {
              "Type": "Int",
              "Description": "CDS disk size, should in [1, 32765], when snapshot_id not set, this parameter is required.",
              "Computed": true
            },
            "expire_time": {
              "Type": "String",
              "Description": "CDS disk expire time",
              "Computed": true
            },
            "is_system_volume": {
              "Type": "Bool",
              "Description": "CDS disk is system volume or not",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "CDS disk name",
              "Computed": true
            },
            "payment_timing": {
              "Type": "String",
              "Description": "payment method, support Prepaid or Postpaid",
              "Computed": true
            },
            "region_id": {
              "Type": "String",
              "Description": "CDS disk region id",
              "Computed": true
            },
            "snapshot_num": {
              "Type": "String",
              "Description": "CDS disk snapshot num",
              "Computed": true
            },
            "source_snapshot_id": {
              "Type": "String",
              "Description": "CDS disk create source snapshot id",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "CDS volume status",
              "Computed": true
            },
            "storage_type": {
              "Type": "String",
              "Description": "CDS dist storage type, support hp1 and std1, default hp1",
              "Computed": true
            },
            "tags": {
              "Type": "Map",
              "Description": "Tags",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "type": {
              "Type": "String",
              "Description": "CDS disk type",
              "Computed": true
            },
            "zone_name": {
              "Type": "String",
              "Description": "Zone name",
              "Computed": true
            }
          }
        }
      },
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "only support filter string/int/bool value",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "filter variable name"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "filter variable value list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "instance_id": {
        "Type": "String",
        "Optional": true,
        "Description": "CDS volume bind instance ID"
      },
      "output_file": {
        "Type": "String",
        "Optional": true,
        "Description": "CDS volume search result output file"
      },
      "zone_name": {
        "Type": "String",
        "Optional": true,
        "Description": "CDS volume zone name"
      }
    },
    "baiducloud_certs": {
      "cert_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the Cert to be queried"
      },
      "certs": {
        "Type": "List",
        "Description": "A list of Cert",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cert_common_name": {
              "Type": "String",
              "Description": "Cert's common name",
              "Computed": true
            },
            "cert_create_time": {
              "Type": "String",
              "Description": "Cert's create time",
              "Computed": true
            },
            "cert_id": {
              "Type": "String",
              "Description": "Cert's ID",
              "Computed": true
            },
            "cert_name": {
              "Type": "String",
              "Description": "Cert's name",
              "Computed": true
            },
            "cert_start_time": {
              "Type": "String",
              "Description": "Cert's start time",
              "Computed": true
            },
            "cert_stop_time": {
              "Type": "String",
              "Description": "Cert's stop time",
              "Computed": true
            },
            "cert_type": {
              "Type": "Int",
              "Description": "Cert's type",
              "Computed": true
            },
            "cert_update_time": {
              "Type": "String",
              "Description": "Cert's update time",
              "Computed": true
            }
          }
        }
      },
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "only support filter string/int/bool value",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "filter variable name"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "filter variable value list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "output_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Certs search result output file"
      }
    },
    "baiducloud_cfc_function": {
      "code_sha256": {
        "Type": "String",
        "Description": "Function code sha256",
        "Computed": true
      },
      "code_size": {
        "Type": "String",
        "Description": "Function code size",
        "Computed": true
      },
      "code_storage": {
        "Type": "Map",
        "Description": "CFC Code storage information",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "code_zip_file": {
        "Type": "String",
        "Description": "CFC Function Code base64-encoded data",
        "Computed": true
      },
      "commit_id": {
        "Type": "String",
        "Description": "Function commit id",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Function description",
        "Computed": true
      },
      "environment": {
        "Type": "Map",
        "Description": "CFC Function environment variables",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "function_arn": {
        "Type": "String",
        "Description": "The same as function brn",
        "Computed": true
      },
      "function_brn": {
        "Type": "String",
        "Description": "Function brn",
        "Computed": true
      },
      "function_name": {
        "Type": "String",
        "Required": true,
        "Description": "CFC function name, length must be between 1 and 64 bytes"
      },
      "handler": {
        "Type": "String",
        "Description": "CFC Function execution handler",
        "Computed": true
      },
      "last_modified": {
        "Type": "String",
        "Description": "The same as update_time",
        "Computed": true
      },
      "log_bos_dir": {
        "Type": "String",
        "Description": "Log save dir if log type is bos",
        "Computed": true
      },
      "log_type": {
        "Type": "String",
        "Description": "Log save type, support bos/none",
        "Computed": true
      },
      "memory_size": {
        "Type": "Int",
        "Description": "CFC Function memory size, should be an integer multiple of 128",
        "Computed": true
      },
      "qualifier": {
        "Type": "String",
        "Optional": true,
        "Description": "Function search qualifier"
      },
      "region": {
        "Type": "String",
        "Description": "Function region",
        "Computed": true
      },
      "reserved_concurrent_executions": {
        "Type": "Int",
        "Description": "Function reserved concurrent executions, support [0-90]",
        "Computed": true
      },
      "role": {
        "Type": "String",
        "Description": "Function exec role",
        "Computed": true
      },
      "runtime": {
        "Type": "String",
        "Description": "CFC Function runtime",
        "Computed": true
      },
      "source_tag": {
        "Type": "String",
        "Description": "CFC Function source tag",
        "Computed": true
      },
      "time_out": {
        "Type": "Int",
        "Description": "Function time out, support [1, 300]s",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Description": "Function user uid",
        "Computed": true
      },
      "update_time": {
        "Type": "String",
        "Description": "Last update time",
        "Computed": true
      },
      "version": {
        "Type": "String",
        "Description": "Function version, should only be $LATEST",
        "Computed": true
      },
      "vpc_config": {
        "Type": "List",
        "Description": "Function VPC Config",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "security_group_ids": {
              "Type": "Set",
              "Description": "CFC Function binded Security group list",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "subnet_ids": {
              "Type": "Set",
              "Description": "CFC Function bined VPC Subnet id list",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "vpc_id": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      }
    },
    "baiducloud_eips": {
      "eip": {
        "Type": "String",
        "Optional": true,
        "Description": "Eip address"
      },
      "eips": {
        "Type": "List",
        "Description": "Eip list",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bandwidth_in_mbps": {
              "Type": "Int",
              "Description": "Eip bandwidth(Mbps)",
              "Computed": true
            },
            "billing_method": {
              "Type": "String",
              "Description": "Eip billing method",
              "Computed": true
            },
            "create_time": {
              "Type": "String",
              "Description": "Eip create time",
              "Computed": true
            },
            "eip": {
              "Type": "String",
              "Description": "Eip address",
              "Computed": true
            },
            "eip_instance_type": {
              "Type": "String",
              "Description": "Eip instance type",
              "Computed": true
            },
            "expire_time": {
              "Type": "String",
              "Description": "Eip expire time",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Eip name",
              "Computed": true
            },
            "payment_timing": {
              "Type": "String",
              "Description": "Eip payment timing",
              "Computed": true
            },
            "share_group_id": {
              "Type": "String",
              "Description": "Eip share group id",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "Eip status",
              "Computed": true
            },
            "tags": {
              "Type": "Map",
              "Description": "Tags",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "only support filter string/int/bool value",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "filter variable name"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "filter variable value list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "instance_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Eip bind instance id"
      },
      "instance_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Eip bind instance type"
      },
      "output_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Eips search result output file"
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Eip status"
      }
    },
    "baiducloud_images": {
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "only support filter string/int/bool value",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "filter variable name"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "filter variable value list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "image_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Image type of the images to be queried, support ALL/System/Custom/Integration/Sharing/GpuBccSystem/GpuBccCustom/FpgaBccSystem/FpgaBccCustom"
      },
      "images": {
        "Type": "List",
        "Description": "Image list",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "create_time": {
              "Type": "String",
              "Description": "Image create time",
              "Computed": true
            },
            "description": {
              "Type": "String",
              "Description": "Image description",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Description": "Image id",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Image name",
              "Computed": true
            },
            "os_arch": {
              "Type": "String",
              "Description": "Image os arch",
              "Computed": true
            },
            "os_build": {
              "Type": "String",
              "Description": "Image os build",
              "Computed": true
            },
            "os_name": {
              "Type": "String",
              "Description": "Image os name",
              "Computed": true
            },
            "os_type": {
              "Type": "String",
              "Description": "Image os type",
              "Computed": true
            },
            "os_version": {
              "Type": "String",
              "Description": "Image os version",
              "Computed": true
            },
            "special_version": {
              "Type": "String",
              "Description": "Image special version",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "Image status",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Image type",
              "Computed": true
            }
          }
        }
      },
      "name_regex": {
        "Type": "String",
        "Optional": true,
        "Description": "Regex pattern of the search image name"
      },
      "os_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Search image OS Name"
      },
      "output_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Images search result output file"
      }
    },
    "baiducloud_instances": {
      "dedicated_host_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Dedicated host id of the instance to retrieve."
      },
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "only support filter string/int/bool value",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "filter variable name"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "filter variable value list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "instances": {
        "Type": "List",
        "Description": "The result of the instances list.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "auto_renew": {
              "Type": "Bool",
              "Description": "Whether to automatically renew.",
              "Computed": true
            },
            "card_count": {
              "Type": "Int",
              "Description": "The card count of the instance.",
              "Computed": true
            },
            "cpu_count": {
              "Type": "Int",
              "Description": "The cpu count of the instance.",
              "Computed": true
            },
            "create_time": {
              "Type": "String",
              "Description": "The creation time of the instance.",
              "Computed": true
            },
            "dedicated_host_id": {
              "Type": "String",
              "Description": "The dedicated host id of the instance.",
              "Computed": true
            },
            "description": {
              "Type": "String",
              "Description": "The description of the instance.",
              "Computed": true
            },
            "ephemeral_disks": {
              "Type": "List",
              "Description": "The ephemeral disks of the instance.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "size_in_gb": {
                    "Type": "Int",
                    "Description": "The size(GB) of the ephemeral disk.",
                    "Computed": true
                  },
                  "storage_type": {
                    "Type": "String",
                    "Description": "The storage type of the ephemeral disk.",
                    "Computed": true
                  }
                }
              }
            },
            "expire_time": {
              "Type": "String",
              "Description": "The expire time of the instance.",
              "Computed": true
            },
            "fpga_card": {
              "Type": "String",
              "Description": "The fgpa card of the instance.",
              "Computed": true
            },
            "gpu_card": {
              "Type": "String",
              "Description": "The gpu card of the instance.",
              "Computed": true
            },
            "image_id": {
              "Type": "String",
              "Description": "The image id of the instance.",
              "Computed": true
            },
            "instance_id": {
              "Type": "String",
              "Description": "The ID of the instance.",
              "Computed": true
            },
            "instance_type": {
              "Type": "String",
              "Description": "The type of the instance.",
              "Computed": true
            },
            "internal_ip": {
              "Type": "String",
              "Description": "The internal ip of the instance.",
              "Computed": true
            },
            "keypair_id": {
              "Type": "String",
              "Description": "The key pair id of the instance.",
              "Computed": true
            },
            "keypair_name": {
              "Type": "String",
              "Description": "The key pair name of the instance.",
              "Computed": true
            },
            "memory_capacity_in_gb": {
              "Type": "Int",
              "Description": "The memory capacity in GB of the instance.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "The name of the instance.",
              "Computed": true
            },
            "network_capacity_in_mbps": {
              "Type": "Int",
              "Description": "The network capacity in Mbps of the instance.",
              "Computed": true
            },
            "payment_timing": {
              "Type": "String",
              "Description": "The payment timing of the instance.",
              "Computed": true
            },
            "placement_policy": {
              "Type": "String",
              "Description": "The placement policy of the instance.",
              "Computed": true
            },
            "public_ip": {
              "Type": "String",
              "Description": "The public ip of the instance.",
              "Computed": true
            },
            "root_disk_size_in_gb": {
              "Type": "Int",
              "Description": "The system disk size in GB of the instance.",
              "Computed": true
            },
            "root_disk_storage_type": {
              "Type": "String",
              "Description": "The system disk storage type of the instance.",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "The status of the instance.",
              "Computed": true
            },
            "subnet_id": {
              "Type": "String",
              "Description": "The subnet ID of the instance.",
              "Computed": true
            },
            "tags": {
              "Type": "Map",
              "Description": "Tags",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "vpc_id": {
              "Type": "String",
              "Description": "The VPC ID of the instance.",
              "Computed": true
            },
            "zone_name": {
              "Type": "String",
              "Description": "The zone name of the instance.",
              "Computed": true
            }
          }
        }
      },
      "internal_ip": {
        "Type": "String",
        "Optional": true,
        "Description": "Internal ip address of the instance to retrieve."
      },
      "output_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Output file of the instances search result"
      },
      "zone_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the available zone to which the instance belongs."
      }
    },
    "baiducloud_nat_gateways": {
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "only support filter string/int/bool value",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "filter variable name"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "filter variable value list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "ip": {
        "Type": "String",
        "Optional": true,
        "Description": "Specify the EIP binded by the NAT gateway to retrieve."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the NAT gateway."
      },
      "nat_gateways": {
        "Type": "List",
        "Description": "The list of NAT gateways.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "eips": {
              "Type": "List",
              "Description": "EIP list of the NAT gateway.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "expired_time": {
              "Type": "String",
              "Description": "Expired time of the NAT gateway.",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Description": "ID of the NAT gateway.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Name of the NAT gateway.",
              "Computed": true
            },
            "payment_timing": {
              "Type": "String",
              "Description": "Payment timing of the NAT gateway.",
              "Computed": true
            },
            "spec": {
              "Type": "String",
              "Description": "Spec of the NAT gateway.",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "Status of the NAT gateway.",
              "Computed": true
            },
            "vpc_id": {
              "Type": "String",
              "Description": "VPC ID of the NAT gateway.",
              "Computed": true
            }
          }
        }
      },
      "nat_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the NAT gateway to retrieve."
      },
      "output_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Output file for saving result."
      },
      "vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "VPC ID where the NAT gateways located."
      }
    },
    "baiducloud_peer_conns": {
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "only support filter string/int/bool value",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "filter variable name"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "filter variable value list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "output_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Output file for saving result."
      },
      "peer_conn_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the peer connection to retrieve."
      },
      "peer_conns": {
        "Type": "List",
        "Description": "The list of the peer connections.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bandwidth_in_mbps": {
              "Type": "Int",
              "Description": "Bandwidth(Mbps) of the peer connection.",
              "Computed": true
            },
            "created_time": {
              "Type": "String",
              "Description": "Created time of the peer connection.",
              "Computed": true
            },
            "description": {
              "Type": "String",
              "Description": "Description of the peer connection.",
              "Computed": true
            },
            "dns_status": {
              "Type": "String",
              "Description": "DNS status of the peer connection.",
              "Computed": true
            },
            "expired_time": {
              "Type": "String",
              "Description": "Expired time of the peer connection.",
              "Computed": true
            },
            "local_if_id": {
              "Type": "String",
              "Description": "Local interface ID of the peer connection.",
              "Computed": true
            },
            "local_if_name": {
              "Type": "String",
              "Description": "Local interface name of the peer connection.",
              "Computed": true
            },
            "local_region": {
              "Type": "String",
              "Description": "Local region of the peer connection.",
              "Computed": true
            },
            "local_vpc_id": {
              "Type": "String",
              "Description": "Local VPC ID of the peer connection.",
              "Computed": true
            },
            "payment_timing": {
              "Type": "String",
              "Description": "Payment timing of the peer connection.",
              "Computed": true
            },
            "peer_account_id": {
              "Type": "String",
              "Description": "Peer account ID of the peer connection.",
              "Computed": true
            },
            "peer_conn_id": {
              "Type": "String",
              "Description": "ID of the peer connection.",
              "Computed": true
            },
            "peer_region": {
              "Type": "String",
              "Description": "Peer region of the peer connection.",
              "Computed": true
            },
            "peer_vpc_id": {
              "Type": "String",
              "Description": "Peer VPC ID of the peer connection.",
              "Computed": true
            },
            "role": {
              "Type": "String",
              "Description": "Role of the peer connection.",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "Status of the peer connection.",
              "Computed": true
            }
          }
        }
      },
      "vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "VPC ID where the peer connections located."
      }
    },
    "baiducloud_route_rules": {
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "only support filter string/int/bool value",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "filter variable name"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "filter variable value list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "output_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Output file for saving result."
      },
      "route_rule_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the routing rule to be retrieved."
      },
      "route_rules": {
        "Type": "List",
        "Description": "Result of the routing rules.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "description": {
              "Type": "String",
              "Description": "Description of the routing rule.",
              "Computed": true
            },
            "destination_address": {
              "Type": "String",
              "Description": "Destination address of the routing rule.",
              "Computed": true
            },
            "next_hop_id": {
              "Type": "String",
              "Description": "Next hop ID of the routing rule.",
              "Computed": true
            },
            "next_hop_type": {
              "Type": "String",
              "Description": "Next hop type of the routing rule.",
              "Computed": true
            },
            "route_rule_id": {
              "Type": "String",
              "Description": "ID of the routing rule.",
              "Computed": true
            },
            "route_table_id": {
              "Type": "String",
              "Description": "Routing table ID of the routing rule.",
              "Computed": true
            },
            "source_address": {
              "Type": "String",
              "Description": "Source address of the routing rule.",
              "Computed": true
            }
          }
        }
      },
      "route_table_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Routing table ID for the routing rules to retrieve."
      },
      "vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "VPC ID for the routing rules."
      }
    },
    "baiducloud_security_group_rules": {
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "only support filter string/int/bool value",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "filter variable name"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "filter variable value list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "instance_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Security Group attached instance ID"
      },
      "output_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Security Group search result output file"
      },
      "rules": {
        "Type": "List",
        "Description": "Security Group rules",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dest_group_id": {
              "Type": "String",
              "Description": "SecurityGroup rule's destination group id",
              "Computed": true
            },
            "dest_ip": {
              "Type": "String",
              "Description": "SecurityGroup rule's destination ip",
              "Computed": true
            },
            "direction": {
              "Type": "String",
              "Description": "SecurityGroup rule's direction",
              "Computed": true
            },
            "ether_type": {
              "Type": "String",
              "Description": "SecurityGroup rule's ether type",
              "Computed": true
            },
            "port_range": {
              "Type": "String",
              "Description": "SecurityGroup rule's port range",
              "Computed": true
            },
            "protocol": {
              "Type": "String",
              "Description": "SecurityGroup rule's protocol",
              "Computed": true
            },
            "remark": {
              "Type": "String",
              "Description": "SecurityGroup rule's remark",
              "Computed": true
            },
            "security_group_id": {
              "Type": "String",
              "Description": "SecurityGroup rule's security group id",
              "Computed": true
            },
            "source_group_id": {
              "Type": "String",
              "Description": "SecurityGroup rule's source group id",
              "Computed": true
            },
            "source_ip": {
              "Type": "String",
              "Description": "SecurityGroup rule's source ip",
              "Computed": true
            }
          }
        }
      },
      "security_group_id": {
        "Type": "String",
        "Required": true,
        "Description": "Security Group ID"
      },
      "vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Security Group attached vpc id"
      }
    },
    "baiducloud_security_groups": {
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "only support filter string/int/bool value",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "filter variable name"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "filter variable value list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "instance_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Security Group attached instance ID"
      },
      "output_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Security Group search result output file"
      },
      "security_groups": {
        "Type": "List",
        "Description": "Security Groups search result",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "description": {
              "Type": "String",
              "Description": "Security Group description",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Description": "Security Group ID",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Security Group name",
              "Computed": true
            },
            "tags": {
              "Type": "Map",
              "Description": "Tags",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "vpc_id": {
              "Type": "String",
              "Description": "Security Group vpc id",
              "Computed": true
            }
          }
        }
      },
      "vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Security Group attached vpc id"
      }
    },
    "baiducloud_snapshots": {
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "only support filter string/int/bool value",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "filter variable name"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "filter variable value list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "output_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Snapshots search result output file."
      },
      "snapshots": {
        "Type": "List",
        "Description": "The result of the snapshots list.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "create_method": {
              "Type": "String",
              "Description": "The creation method of the snapshot.",
              "Computed": true
            },
            "create_time": {
              "Type": "String",
              "Description": "The creation time of the snapshot.",
              "Computed": true
            },
            "description": {
              "Type": "String",
              "Description": "The description of the snapshot.",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Description": "The ID of the snapshot.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "The name of the snapshot.",
              "Computed": true
            },
            "size_in_gb": {
              "Type": "Int",
              "Description": "The size of the snapshot in GB.",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "The status of the snapshot.",
              "Computed": true
            },
            "volume_id": {
              "Type": "String",
              "Description": "The volume id of the snapshot.",
              "Computed": true
            }
          }
        }
      },
      "volume_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Volume ID to be attached of snapshots, if volume is system disk, volume ID is instance ID"
      }
    },
    "baiducloud_specs": {
      "cpu_count": {
        "Type": "Int",
        "Optional": true,
        "Description": "Useful cpu count of the search spec"
      },
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "only support filter string/int/bool value",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "filter variable name"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "filter variable value list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "instance_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Instance type of the search spec"
      },
      "memory_size_in_gb": {
        "Type": "Int",
        "Optional": true,
        "Description": "Useful memory size in GB of the search spec"
      },
      "name_regex": {
        "Type": "String",
        "Optional": true,
        "Description": "Regex pattern of the search spec name"
      },
      "output_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Output file for saving result."
      },
      "specs": {
        "Type": "List",
        "Description": "Useful spec list, when create a bcc instance, suggest use instance_type/cpu_count/memory_capacity_in_gb as bcc instance parameters",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cpu_count": {
              "Type": "Int",
              "Description": "Useful cpu count",
              "Computed": true
            },
            "instance_type": {
              "Type": "String",
              "Description": "Useful instance type",
              "Computed": true
            },
            "local_disk_size_in_gb": {
              "Type": "Int",
              "Description": "Useful local disk size in GB",
              "Computed": true
            },
            "memory_size_in_gb": {
              "Type": "Int",
              "Description": "Useful memory size in GB",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Spec name",
              "Computed": true
            }
          }
        }
      }
    },
    "baiducloud_subnets": {
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "only support filter string/int/bool value",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "filter variable name"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "filter variable value list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "output_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Output file for saving result."
      },
      "subnet_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the subnet."
      },
      "subnet_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Specify the subnet type for subnets."
      },
      "subnets": {
        "Type": "List",
        "Description": "Result of the subnets.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "available_ip": {
              "Type": "Int",
              "Description": "Available IP address of the subnet.",
              "Computed": true
            },
            "cidr": {
              "Type": "String",
              "Description": "CIDR block of the subnet.",
              "Computed": true
            },
            "description": {
              "Type": "String",
              "Description": "Description of the subnet.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Name of the subnet.",
              "Computed": true
            },
            "subnet_id": {
              "Type": "String",
              "Description": "ID of the subnet.",
              "Computed": true
            },
            "subnet_type": {
              "Type": "String",
              "Description": "Type of the subnet.",
              "Computed": true
            },
            "tags": {
              "Type": "Map",
              "Description": "Tags",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "vpc_id": {
              "Type": "String",
              "Description": "VPC ID of the subnet.",
              "Computed": true
            },
            "zone_name": {
              "Type": "String",
              "Description": "Zone name of the subnet.",
              "Computed": true
            }
          }
        }
      },
      "vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "VPC ID for subnets to retrieve."
      },
      "zone_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Specify the zone name for subnets."
      }
    },
    "baiducloud_vpcs": {
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "only support filter string/int/bool value",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "filter variable name"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "filter variable value list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the specific VPC to retrieve."
      },
      "output_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Output file for saving result."
      },
      "vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the specific VPC to retrieve."
      },
      "vpcs": {
        "Type": "List",
        "Description": "Result of VPCs.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cidr": {
              "Type": "String",
              "Description": "CIDR block of the VPC.",
              "Computed": true
            },
            "description": {
              "Type": "String",
              "Description": "Description of the VPC.",
              "Computed": true
            },
            "is_default": {
              "Type": "Bool",
              "Description": "Specify if it is the default VPC.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Name of the VPC.",
              "Computed": true
            },
            "route_table_id": {
              "Type": "String",
              "Description": "Route table ID of the VPC.",
              "Computed": true
            },
            "secondary_cidrs": {
              "Type": "List",
              "Description": "The secondary cidr list of the VPC. They will not be repeated.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "tags": {
              "Type": "Map",
              "Description": "Tags",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "vpc_id": {
              "Type": "String",
              "Description": "ID of the VPC.",
              "Computed": true
            }
          }
        }
      }
    },
    "baiducloud_zones": {
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "only support filter string/int/bool value",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "filter variable name"
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "filter variable value list",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "name_regex": {
        "Type": "String",
        "Optional": true,
        "Description": "Regex pattern of the search zone name"
      },
      "output_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Output file for saving result."
      },
      "zones": {
        "Type": "List",
        "Description": "Useful zone list",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "zone_name": {
              "Type": "String",
              "Description": "Useful zone name",
              "Computed": true
            }
          }
        }
      }
    }
  }
}