{
  ".schema_version": "1",
  "name": "okta",
  "type": "provider",
  "version": "v3.1.1",
  "provider": {
    "api_token": {
      "Type": "String",
      "Required": true,
      "Description": "API Token granting privileges to Okta API.",
      "DefaultFunc": "ENV(OKTA_API_TOKEN)"
    },
    "backoff": {
      "Type": "Bool",
      "Optional": true,
      "Description": "Use exponential back off strategy for rate limits.",
      "Default": {
        "Type": "bool",
        "Value": "true"
      }
    },
    "base_url": {
      "Type": "String",
      "Optional": true,
      "Description": "The Okta url. (Use 'oktapreview.com' for Okta testing)",
      "DefaultFunc": "ENV(OKTA_BASE_URL)"
    },
    "max_retries": {
      "Type": "Int",
      "Optional": true,
      "Description": "maximum number of retries to attempt before erroring out.",
      "Default": {
        "Type": "int",
        "Value": "5"
      }
    },
    "max_wait_seconds": {
      "Type": "Int",
      "Optional": true,
      "Description": "maximum seconds to wait when rate limit is hit. We use exponential backoffs when backoff is enabled.",
      "Default": {
        "Type": "int",
        "Value": "300"
      }
    },
    "min_wait_seconds": {
      "Type": "Int",
      "Optional": true,
      "Description": "minimum seconds to wait when rate limit is hit. We use exponential backoffs when backoff is enabled.",
      "Default": {
        "Type": "int",
        "Value": "30"
      }
    },
    "org_name": {
      "Type": "String",
      "Required": true,
      "Description": "The organization to manage in Okta.",
      "DefaultFunc": "ENV(OKTA_ORG_NAME)"
    },
    "parallelism": {
      "Type": "Int",
      "Optional": true,
      "Description": "Number of concurrent requests to make within a resource where bulk operations are not possible. Take note of https://developer.okta.com/docs/api/getting_started/rate-limits.",
      "Default": {
        "Type": "int",
        "Value": "1"
      }
    }
  },
  "resources": {
    "okta_app_auto_login": {
      "accessibility_error_redirect_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom error page URL"
      },
      "accessibility_self_service": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable self service",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "auto_submit_toolbar": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Display auto submit toolbar",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "credentials_scheme": {
        "Type": "String",
        "Optional": true,
        "Description": "Application credentials scheme",
        "Default": {
          "Type": "string",
          "Value": "EDIT_USERNAME_AND_PASSWORD"
        }
      },
      "groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "Groups associated with the application",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hide_ios": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon on mobile app",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "hide_web": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon to users",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "label": {
        "Type": "String",
        "Required": true,
        "Description": "Pretty name of app."
      },
      "name": {
        "Type": "String",
        "Description": "name of app.",
        "Computed": true
      },
      "preconfigured_app": {
        "Type": "String",
        "Optional": true,
        "Description": "Preconfigured app name"
      },
      "reveal_password": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Allow user to reveal password",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "shared_password": {
        "Type": "String",
        "Optional": true,
        "Description": "Shared password, required for certain schemes."
      },
      "shared_username": {
        "Type": "String",
        "Optional": true,
        "Description": "Shared username, required for certain schemes."
      },
      "sign_on_mode": {
        "Type": "String",
        "Description": "Sign on mode of application.",
        "Computed": true
      },
      "sign_on_redirect_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Post login redirect URL"
      },
      "sign_on_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Login URL"
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Status of application.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "user_name_template": {
        "Type": "String",
        "Description": "Username template",
        "Computed": true
      },
      "user_name_template_type": {
        "Type": "String",
        "Description": "Username template type",
        "Computed": true
      },
      "users": {
        "Type": "Set",
        "Optional": true,
        "Description": "Users associated with the application",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Optional": true,
              "Description": "User ID."
            },
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for user application."
            },
            "scope": {
              "Type": "String",
              "Description": "Scope of application user.",
              "Computed": true
            },
            "username": {
              "Type": "String",
              "Optional": true,
              "Description": "Username for user."
            }
          }
        }
      }
    },
    "okta_app_basic_auth": {
      "auth_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Login button field"
      },
      "auto_submit_toolbar": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Display auto submit toolbar",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "Groups associated with the application",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hide_ios": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon on mobile app",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "hide_web": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon to users",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "label": {
        "Type": "String",
        "Required": true,
        "Description": "Pretty name of app."
      },
      "name": {
        "Type": "String",
        "Description": "name of app.",
        "Computed": true
      },
      "sign_on_mode": {
        "Type": "String",
        "Description": "Sign on mode of application.",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Status of application.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "url": {
        "Type": "String",
        "Optional": true,
        "Description": "Login password field"
      },
      "users": {
        "Type": "Set",
        "Optional": true,
        "Description": "Users associated with the application",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Optional": true,
              "Description": "User ID."
            },
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for user application."
            },
            "scope": {
              "Type": "String",
              "Description": "Scope of application user.",
              "Computed": true
            },
            "username": {
              "Type": "String",
              "Optional": true,
              "Description": "Username for user."
            }
          }
        }
      }
    },
    "okta_app_bookmark": {
      "auto_submit_toolbar": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Display auto submit toolbar",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "Groups associated with the application",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hide_ios": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon on mobile app",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "hide_web": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon to users",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "label": {
        "Type": "String",
        "Required": true,
        "Description": "Pretty name of app."
      },
      "name": {
        "Type": "String",
        "Description": "name of app.",
        "Computed": true
      },
      "request_integration": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "sign_on_mode": {
        "Type": "String",
        "Description": "Sign on mode of application.",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Status of application.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "url": {
        "Type": "String",
        "Required": true
      },
      "users": {
        "Type": "Set",
        "Optional": true,
        "Description": "Users associated with the application",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Optional": true,
              "Description": "User ID."
            },
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for user application."
            },
            "scope": {
              "Type": "String",
              "Description": "Scope of application user.",
              "Computed": true
            },
            "username": {
              "Type": "String",
              "Optional": true,
              "Description": "Username for user."
            }
          }
        }
      }
    },
    "okta_app_group_assignment": {
      "app_id": {
        "Type": "String",
        "Required": true,
        "Description": "App to associate group with"
      },
      "group_id": {
        "Type": "String",
        "Required": true,
        "Description": "Group associated with the application"
      },
      "priority": {
        "Type": "Int",
        "Optional": true
      },
      "profile": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "{}"
        }
      }
    },
    "okta_app_oauth": {
      "auto_key_rotation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Requested key rotation mode.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "auto_submit_toolbar": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Display auto submit toolbar",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "client_basic_secret": {
        "Type": "String",
        "Optional": true,
        "Description": "OAuth client secret key, this can be set when token_endpoint_auth_method is client_secret_basic."
      },
      "client_id": {
        "Type": "String",
        "Optional": true,
        "Description": "OAuth client ID. If set during creation, app is created with this id.",
        "Computed": true
      },
      "client_secret": {
        "Type": "String",
        "Description": "OAuth client secret key. This will be in plain text in your statefile unless you set omit_secret above.",
        "Computed": true
      },
      "client_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI to a web page providing information about the client."
      },
      "consent_method": {
        "Type": "String",
        "Optional": true,
        "Description": "*Early Access Property*. Indicates whether user consent is required or implicit. Valid values: REQUIRED, TRUSTED. Default value is TRUSTED"
      },
      "custom_client_id": {
        "Type": "String",
        "Optional": true,
        "Description": "**Deprecated** This property allows you to set your client_id during creation. NOTE: updating after creation will be a no-op, use client_id for that behavior instead.",
        "ConflictsWith": [
          "client_id"
        ],
        "Deprecated": "This field is being replaced by client_id. Please set that field instead."
      },
      "grant_types": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of OAuth 2.0 grant types. Conditional validation params found here https://developer.okta.com/docs/api/resources/apps#credentials-settings-details. Defaults to minimum requirements per app type.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "Groups associated with the application",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hide_ios": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon on mobile app",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "hide_web": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon to users",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "issuer_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "*Early Access Property*. Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a custom domain URL as the issuer of ID token for this client.",
        "Default": {
          "Type": "string",
          "Value": "ORG_URL"
        }
      },
      "jwks": {
        "Type": "List",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "e": {
              "Type": "String",
              "Optional": true,
              "Description": "RSA Exponent"
            },
            "kid": {
              "Type": "String",
              "Required": true,
              "Description": "Key ID"
            },
            "kty": {
              "Type": "String",
              "Required": true,
              "Description": "Key type"
            },
            "n": {
              "Type": "String",
              "Optional": true,
              "Description": "RSA Modulus"
            }
          }
        }
      },
      "label": {
        "Type": "String",
        "Required": true,
        "Description": "Pretty name of app."
      },
      "login_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI that initiates login."
      },
      "logo_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI that references a logo for the client."
      },
      "name": {
        "Type": "String",
        "Description": "name of app.",
        "Computed": true
      },
      "omit_secret": {
        "Type": "Bool",
        "Optional": true,
        "Description": "This tells the provider not to persist the application's secret to state. If this is ever changes from true =\u003e false your app will be recreated.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "policy_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "*Early Access Property*. URI to web page providing client policy document."
      },
      "post_logout_redirect_uris": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of URIs for redirection after logout",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "profile": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom JSON that represents an OAuth application's profile"
      },
      "redirect_uris": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of URIs for use in the redirect-based flow. This is required for all application types except service. Note: see okta_app_oauth_redirect_uri for appending to this list in a decentralized way.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "response_types": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of OAuth 2.0 response type strings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "sign_on_mode": {
        "Type": "String",
        "Description": "Sign on mode of application.",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Status of application.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "token_endpoint_auth_method": {
        "Type": "String",
        "Optional": true,
        "Description": "Requested authentication method for the token endpoint.",
        "Default": {
          "Type": "string",
          "Value": "client_secret_basic"
        }
      },
      "tos_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "*Early Access Property*. URI to web page providing client tos (terms of service)."
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The type of client application."
      },
      "users": {
        "Type": "Set",
        "Optional": true,
        "Description": "Users associated with the application",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Optional": true,
              "Description": "User ID."
            },
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for user application."
            },
            "scope": {
              "Type": "String",
              "Description": "Scope of application user.",
              "Computed": true
            },
            "username": {
              "Type": "String",
              "Optional": true,
              "Description": "Username for user."
            }
          }
        }
      }
    },
    "okta_app_oauth_redirect_uri": {
      "app_id": {
        "Type": "String",
        "Required": true
      },
      "uri": {
        "Type": "String",
        "Required": true,
        "Description": "Redirect URI to append to Okta OIDC application."
      }
    },
    "okta_app_saml": {
      "accessibility_error_redirect_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom error page URL"
      },
      "accessibility_login_redirect_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom login page URL"
      },
      "accessibility_self_service": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable self service",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "app_settings_json": {
        "Type": "String",
        "Optional": true,
        "Description": "Application settings in JSON format"
      },
      "assertion_signed": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Determines whether the SAML assertion is digitally signed"
      },
      "attribute_statements": {
        "Type": "List",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "filter_type": {
              "Type": "String",
              "Optional": true,
              "Description": "Type of group attribute filter"
            },
            "filter_value": {
              "Type": "String",
              "Optional": true,
              "Description": "Filter value to use"
            },
            "name": {
              "Type": "String",
              "Required": true
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified"
              }
            },
            "type": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "EXPRESSION"
              }
            },
            "values": {
              "Type": "List",
              "Optional": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "audience": {
        "Type": "String",
        "Optional": true,
        "Description": "Audience Restriction"
      },
      "authn_context_class_ref": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifies the SAML authentication context class for the assertion’s authentication statement"
      },
      "auto_submit_toolbar": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Display auto submit toolbar",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "certificate": {
        "Type": "String",
        "Description": "cert from SAML XML metadata payload",
        "Computed": true
      },
      "default_relay_state": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifies a specific application resource in an IDP initiated SSO scenario."
      },
      "destination": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifies the location where the SAML response is intended to be sent inside of the SAML assertion"
      },
      "digest_algorithm": {
        "Type": "String",
        "Optional": true,
        "Description": "Determines the digest algorithm used to digitally sign the SAML assertion and response"
      },
      "entity_key": {
        "Type": "String",
        "Description": "Entity ID, the ID portion of the entity_url",
        "Computed": true
      },
      "entity_url": {
        "Type": "String",
        "Description": "Entity URL for instance http://www.okta.com/exk1fcia6d6EMsf331d8",
        "Computed": true
      },
      "features": {
        "Type": "Set",
        "Optional": true,
        "Description": "features to enable",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "Groups associated with the application",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hide_ios": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon on mobile app",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "hide_web": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon to users",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "honor_force_authn": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prompt user to re-authenticate if SP asks for it"
      },
      "http_post_binding": {
        "Type": "String",
        "Description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post location from the SAML metadata.",
        "Computed": true
      },
      "http_redirect_binding": {
        "Type": "String",
        "Description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect location from the SAML metadata.",
        "Computed": true
      },
      "idp_issuer": {
        "Type": "String",
        "Optional": true,
        "Description": "SAML issuer ID"
      },
      "key_id": {
        "Type": "String",
        "Description": "Certificate ID",
        "Computed": true
      },
      "key_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Certificate name. This modulates the rotation of keys. New name == new key."
      },
      "key_years_valid": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of years the certificate is valid.",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      },
      "label": {
        "Type": "String",
        "Required": true,
        "Description": "Pretty name of app."
      },
      "metadata": {
        "Type": "String",
        "Description": "SAML xml metadata payload",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "name of app.",
        "Computed": true
      },
      "preconfigured_app": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of preexisting SAML application. For instance 'slack'"
      },
      "recipient": {
        "Type": "String",
        "Optional": true,
        "Description": "The location where the app may present the SAML assertion"
      },
      "request_compressed": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Denotes whether the request is compressed or not."
      },
      "response_signed": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Determines whether the SAML auth response message is digitally signed"
      },
      "sign_on_mode": {
        "Type": "String",
        "Description": "Sign on mode of application.",
        "Computed": true
      },
      "signature_algorithm": {
        "Type": "String",
        "Optional": true,
        "Description": "Signature algorithm used ot digitally sign the assertion and response"
      },
      "sp_issuer": {
        "Type": "String",
        "Optional": true,
        "Description": "SAML SP issuer ID"
      },
      "sso_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Single Sign On URL"
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Status of application.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "subject_name_id_format": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifies the SAML processing rules."
      },
      "subject_name_id_template": {
        "Type": "String",
        "Optional": true,
        "Description": "Template for app user's username when a user is assigned to the app"
      },
      "user_name_template": {
        "Type": "String",
        "Optional": true,
        "Description": "Username template",
        "Default": {
          "Type": "string",
          "Value": "${source.login}"
        }
      },
      "user_name_template_suffix": {
        "Type": "String",
        "Optional": true,
        "Description": "Username template suffix"
      },
      "user_name_template_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Username template type",
        "Default": {
          "Type": "string",
          "Value": "BUILT_IN"
        }
      },
      "users": {
        "Type": "Set",
        "Optional": true,
        "Description": "Users associated with the application",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Optional": true,
              "Description": "User ID."
            },
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for user application."
            },
            "scope": {
              "Type": "String",
              "Description": "Scope of application user.",
              "Computed": true
            },
            "username": {
              "Type": "String",
              "Optional": true,
              "Description": "Username for user."
            }
          }
        }
      }
    },
    "okta_app_secure_password_store": {
      "accessibility_error_redirect_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom error page URL"
      },
      "accessibility_self_service": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable self service",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "auto_submit_toolbar": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Display auto submit toolbar",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "credentials_scheme": {
        "Type": "String",
        "Optional": true,
        "Description": "Application credentials scheme",
        "Default": {
          "Type": "string",
          "Value": "EDIT_USERNAME_AND_PASSWORD"
        }
      },
      "groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "Groups associated with the application",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hide_ios": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon on mobile app",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "hide_web": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon to users",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "label": {
        "Type": "String",
        "Required": true,
        "Description": "Pretty name of app."
      },
      "name": {
        "Type": "String",
        "Description": "name of app.",
        "Computed": true
      },
      "optional_field1": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of optional param in the login form"
      },
      "optional_field1_value": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of optional value in login form"
      },
      "optional_field2": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of optional param in the login form"
      },
      "optional_field2_value": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of optional value in login form"
      },
      "optional_field3": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of optional param in the login form"
      },
      "optional_field3_value": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of optional value in login form"
      },
      "password_field": {
        "Type": "String",
        "Required": true,
        "Description": "Login password field"
      },
      "reveal_password": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Allow user to reveal password",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "shared_password": {
        "Type": "String",
        "Optional": true,
        "Description": "Shared password, required for certain schemes."
      },
      "shared_username": {
        "Type": "String",
        "Optional": true,
        "Description": "Shared username, required for certain schemes."
      },
      "sign_on_mode": {
        "Type": "String",
        "Description": "Sign on mode of application.",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Status of application.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "url": {
        "Type": "String",
        "Required": true,
        "Description": "Login URL"
      },
      "user_name_template": {
        "Type": "String",
        "Description": "Username template",
        "Computed": true
      },
      "user_name_template_type": {
        "Type": "String",
        "Description": "Username template type",
        "Computed": true
      },
      "username_field": {
        "Type": "String",
        "Required": true,
        "Description": "Login username field"
      },
      "users": {
        "Type": "Set",
        "Optional": true,
        "Description": "Users associated with the application",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Optional": true,
              "Description": "User ID."
            },
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for user application."
            },
            "scope": {
              "Type": "String",
              "Description": "Scope of application user.",
              "Computed": true
            },
            "username": {
              "Type": "String",
              "Optional": true,
              "Description": "Username for user."
            }
          }
        }
      }
    },
    "okta_app_swa": {
      "accessibility_error_redirect_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom error page URL"
      },
      "accessibility_self_service": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable self service",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "auto_submit_toolbar": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Display auto submit toolbar",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "button_field": {
        "Type": "String",
        "Optional": true,
        "Description": "Login button field"
      },
      "groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "Groups associated with the application",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hide_ios": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon on mobile app",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "hide_web": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon to users",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "label": {
        "Type": "String",
        "Required": true,
        "Description": "Pretty name of app."
      },
      "name": {
        "Type": "String",
        "Description": "name of app.",
        "Computed": true
      },
      "password_field": {
        "Type": "String",
        "Optional": true,
        "Description": "Login password field"
      },
      "preconfigured_app": {
        "Type": "String",
        "Optional": true,
        "Description": "Preconfigured app name"
      },
      "sign_on_mode": {
        "Type": "String",
        "Description": "Sign on mode of application.",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Status of application.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "url": {
        "Type": "String",
        "Optional": true,
        "Description": "Login URL"
      },
      "url_regex": {
        "Type": "String",
        "Optional": true,
        "Description": "A regex that further restricts URL to the specified regex"
      },
      "user_name_template": {
        "Type": "String",
        "Description": "Username template",
        "Computed": true
      },
      "user_name_template_type": {
        "Type": "String",
        "Description": "Username template type",
        "Computed": true
      },
      "username_field": {
        "Type": "String",
        "Optional": true,
        "Description": "Login username field"
      },
      "users": {
        "Type": "Set",
        "Optional": true,
        "Description": "Users associated with the application",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Optional": true,
              "Description": "User ID."
            },
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for user application."
            },
            "scope": {
              "Type": "String",
              "Description": "Scope of application user.",
              "Computed": true
            },
            "username": {
              "Type": "String",
              "Optional": true,
              "Description": "Username for user."
            }
          }
        }
      }
    },
    "okta_app_three_field": {
      "accessibility_error_redirect_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom error page URL"
      },
      "accessibility_self_service": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable self service",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "auto_submit_toolbar": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Display auto submit toolbar",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "button_selector": {
        "Type": "String",
        "Required": true,
        "Description": "Login button field CSS selector"
      },
      "extra_field_selector": {
        "Type": "String",
        "Required": true,
        "Description": "Extra field CSS selector"
      },
      "extra_field_value": {
        "Type": "String",
        "Required": true,
        "Description": "Value for extra form field"
      },
      "groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "Groups associated with the application",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hide_ios": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon on mobile app",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "hide_web": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon to users",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "label": {
        "Type": "String",
        "Required": true,
        "Description": "Pretty name of app."
      },
      "name": {
        "Type": "String",
        "Description": "name of app.",
        "Computed": true
      },
      "password_selector": {
        "Type": "String",
        "Required": true,
        "Description": "Login password field CSS selector"
      },
      "sign_on_mode": {
        "Type": "String",
        "Description": "Sign on mode of application.",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Status of application.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "url": {
        "Type": "String",
        "Required": true,
        "Description": "Login URL"
      },
      "url_regex": {
        "Type": "String",
        "Optional": true,
        "Description": "A regex that further restricts URL to the specified regex"
      },
      "user_name_template": {
        "Type": "String",
        "Description": "Username template",
        "Computed": true
      },
      "user_name_template_type": {
        "Type": "String",
        "Description": "Username template type",
        "Computed": true
      },
      "username_selector": {
        "Type": "String",
        "Required": true,
        "Description": "Login username field CSS selector"
      },
      "users": {
        "Type": "Set",
        "Optional": true,
        "Description": "Users associated with the application",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Optional": true,
              "Description": "User ID."
            },
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for user application."
            },
            "scope": {
              "Type": "String",
              "Description": "Scope of application user.",
              "Computed": true
            },
            "username": {
              "Type": "String",
              "Optional": true,
              "Description": "Username for user."
            }
          }
        }
      }
    },
    "okta_app_user": {
      "app_id": {
        "Type": "String",
        "Required": true,
        "Description": "App to associate user with"
      },
      "password": {
        "Type": "String",
        "Optional": true
      },
      "profile": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "{}"
        }
      },
      "user_id": {
        "Type": "String",
        "Required": true,
        "Description": "User associated with the application"
      },
      "username": {
        "Type": "String",
        "Required": true
      }
    },
    "okta_app_user_base_schema": {
      "app_id": {
        "Type": "String",
        "Required": true
      },
      "index": {
        "Type": "String",
        "Required": true,
        "Description": "Subschema unique string identifier"
      },
      "master": {
        "Type": "String",
        "Optional": true,
        "Description": "SubSchema profile manager, if not set it will inherit its setting."
      },
      "permissions": {
        "Type": "String",
        "Optional": true,
        "Description": "SubSchema permissions: HIDE, READ_ONLY, or READ_WRITE.",
        "Default": {
          "Type": "string",
          "Value": "READ_ONLY"
        }
      },
      "required": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether the Subschema is required"
      },
      "title": {
        "Type": "String",
        "Required": true,
        "Description": "Subschema title (display name)"
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "Subschema type: string, boolean, number, integer, array, or object"
      }
    },
    "okta_app_user_schema": {
      "app_id": {
        "Type": "String",
        "Required": true
      },
      "array_enum": {
        "Type": "List",
        "Optional": true,
        "Description": "Custom Subschema enumerated value of a property of type array.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "array_one_of": {
        "Type": "List",
        "Optional": true,
        "Description": "array of valid JSON schemas for property type array.",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "const": {
              "Type": "String",
              "Required": true,
              "Description": "Enum value"
            },
            "title": {
              "Type": "String",
              "Required": true,
              "Description": "Enum title"
            }
          }
        }
      },
      "array_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Subschema array type: string, number, integer, reference. Type field must be an array."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom Subschema description"
      },
      "enum": {
        "Type": "List",
        "Optional": true,
        "Description": "Custom Subschema enumerated value of the property. see: developer.okta.com/docs/api/resources/schemas#user-profile-schema-property-object",
        "ConflictsWith": [
          "array_type"
        ],
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "external_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Subschema external name"
      },
      "index": {
        "Type": "String",
        "Required": true,
        "Description": "Subschema unique string identifier"
      },
      "master": {
        "Type": "String",
        "Optional": true,
        "Description": "SubSchema profile manager, if not set it will inherit its setting."
      },
      "max_length": {
        "Type": "Int",
        "Optional": true,
        "Description": "Subschema of type string maximum length"
      },
      "min_length": {
        "Type": "Int",
        "Optional": true,
        "Description": "Subschema of type string minimum length"
      },
      "one_of": {
        "Type": "List",
        "Optional": true,
        "Description": "Custom Subschema json schemas. see: developer.okta.com/docs/api/resources/schemas#user-profile-schema-property-object",
        "ConflictsWith": [
          "array_type"
        ],
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "const": {
              "Type": "String",
              "Required": true,
              "Description": "Enum value"
            },
            "title": {
              "Type": "String",
              "Required": true,
              "Description": "Enum title"
            }
          }
        }
      },
      "permissions": {
        "Type": "String",
        "Optional": true,
        "Description": "SubSchema permissions: HIDE, READ_ONLY, or READ_WRITE.",
        "Default": {
          "Type": "string",
          "Value": "READ_ONLY"
        }
      },
      "required": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether the Subschema is required"
      },
      "scope": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "NONE"
        }
      },
      "title": {
        "Type": "String",
        "Required": true,
        "Description": "Subschema title (display name)"
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "Subschema type: string, boolean, number, integer, array, or object"
      },
      "unique": {
        "Type": "String",
        "Optional": true,
        "Description": "Subschema unique restriction",
        "ConflictsWith": [
          "one_of",
          "enum",
          "array_type"
        ]
      }
    },
    "okta_auth_server": {
      "audiences": {
        "Type": "Set",
        "Required": true,
        "Description": "Currently Okta only supports a single value here",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "credentials_last_rotated": {
        "Type": "String",
        "Computed": true
      },
      "credentials_next_rotation": {
        "Type": "String",
        "Computed": true
      },
      "credentials_rotation_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "Credential rotation mode, in many cases you cannot set this to MANUAL, the API will ignore the value and you will get a perpetual diff. This should rarely be used.",
        "Default": {
          "Type": "string",
          "Value": "AUTO"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true
      },
      "issuer": {
        "Type": "String",
        "Description": "EA Feature: allows you to use a custom issuer URL",
        "Computed": true
      },
      "issuer_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "EA Feature: allows you to use a custom issuer URL",
        "Default": {
          "Type": "string",
          "Value": "ORG_URL"
        }
      },
      "kid": {
        "Type": "String",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      }
    },
    "okta_auth_server_claim": {
      "always_include_in_token": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "auth_server_id": {
        "Type": "String",
        "Required": true,
        "Description": "Auth server ID"
      },
      "claim_type": {
        "Type": "String",
        "Required": true
      },
      "group_filter_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Required when value_type is GROUPS"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Auth server claim name"
      },
      "scopes": {
        "Type": "Set",
        "Optional": true,
        "Description": "Auth server claim list of scopes",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "value": {
        "Type": "String",
        "Required": true
      },
      "value_type": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "EXPRESSION"
        }
      }
    },
    "okta_auth_server_policy": {
      "auth_server_id": {
        "Type": "String",
        "Required": true
      },
      "client_whitelist": {
        "Type": "Set",
        "Required": true,
        "Description": "Use [\"ALL_CLIENTS\"] when unsure.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "description": {
        "Type": "String",
        "Required": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "priority": {
        "Type": "Int",
        "Required": true,
        "Description": "Priority of the auth server policy"
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "Auth server policy type, unlikely this will be anything other then the default",
        "Default": {
          "Type": "string",
          "Value": "OAUTH_AUTHORIZATION_POLICY"
        }
      }
    },
    "okta_auth_server_policy_rule": {
      "access_token_lifetime_minutes": {
        "Type": "Int",
        "Optional": true,
        "Default": {
          "Type": "int",
          "Value": "60"
        }
      },
      "auth_server_id": {
        "Type": "String",
        "Required": true,
        "Description": "Auth server ID"
      },
      "grant_type_whitelist": {
        "Type": "Set",
        "Required": true,
        "Description": "Accepted grant type values: authorization_code, implicit, password.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "group_blacklist": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "group_whitelist": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "inline_hook_id": {
        "Type": "String",
        "Optional": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Auth server policy rule name"
      },
      "policy_id": {
        "Type": "String",
        "Required": true,
        "Description": "Auth server policy ID"
      },
      "priority": {
        "Type": "Int",
        "Required": true,
        "Description": "Priority of the auth server policy rule"
      },
      "refresh_token_lifetime_minutes": {
        "Type": "Int",
        "Optional": true
      },
      "refresh_token_window_minutes": {
        "Type": "Int",
        "Optional": true,
        "Default": {
          "Type": "int",
          "Value": "10080"
        }
      },
      "scope_whitelist": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "Auth server policy rule type, unlikely this will be anything other then the default",
        "Default": {
          "Type": "string",
          "Value": "RESOURCE_ACCESS"
        }
      },
      "user_blacklist": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "user_whitelist": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "okta_auth_server_scope": {
      "auth_server_id": {
        "Type": "String",
        "Required": true,
        "Description": "Auth server ID"
      },
      "consent": {
        "Type": "String",
        "Optional": true,
        "Description": "EA Feature and thus it is simply ignored if the feature is off",
        "Default": {
          "Type": "string",
          "Value": "IMPLICIT"
        }
      },
      "default": {
        "Type": "Bool",
        "Optional": true,
        "Description": "A default scope will be returned in an access token when the client omits the scope parameter in a token request, provided this scope is allowed as part of the access policy rule.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true
      },
      "metadata_publish": {
        "Type": "String",
        "Optional": true,
        "Description": "Whether to publish metadata or not, matching API type despite the fact it could just be a boolean",
        "Default": {
          "Type": "string",
          "Value": "ALL_CLIENTS"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Auth server scope name"
      }
    },
    "okta_auto_login_app": {
      "accessibility_error_redirect_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom error page URL"
      },
      "accessibility_self_service": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable self service",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "auto_submit_toolbar": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Display auto submit toolbar",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "credentials_scheme": {
        "Type": "String",
        "Optional": true,
        "Description": "Application credentials scheme",
        "Default": {
          "Type": "string",
          "Value": "EDIT_USERNAME_AND_PASSWORD"
        }
      },
      "groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "Groups associated with the application",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hide_ios": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon on mobile app",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "hide_web": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon to users",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "label": {
        "Type": "String",
        "Required": true,
        "Description": "Pretty name of app."
      },
      "name": {
        "Type": "String",
        "Description": "name of app.",
        "Computed": true
      },
      "preconfigured_app": {
        "Type": "String",
        "Optional": true,
        "Description": "Preconfigured app name"
      },
      "reveal_password": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Allow user to reveal password",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "shared_password": {
        "Type": "String",
        "Optional": true,
        "Description": "Shared password, required for certain schemes."
      },
      "shared_username": {
        "Type": "String",
        "Optional": true,
        "Description": "Shared username, required for certain schemes."
      },
      "sign_on_mode": {
        "Type": "String",
        "Description": "Sign on mode of application.",
        "Computed": true
      },
      "sign_on_redirect_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Post login redirect URL"
      },
      "sign_on_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Login URL"
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Status of application.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "user_name_template": {
        "Type": "String",
        "Description": "Username template",
        "Computed": true
      },
      "user_name_template_type": {
        "Type": "String",
        "Description": "Username template type",
        "Computed": true
      },
      "users": {
        "Type": "Set",
        "Optional": true,
        "Description": "Users associated with the application",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Optional": true,
              "Description": "User ID."
            },
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for user application."
            },
            "scope": {
              "Type": "String",
              "Description": "Scope of application user.",
              "Computed": true
            },
            "username": {
              "Type": "String",
              "Optional": true,
              "Description": "Username for user."
            }
          }
        }
      }
    },
    "okta_bookmark_app": {
      "auto_submit_toolbar": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Display auto submit toolbar",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "Groups associated with the application",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hide_ios": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon on mobile app",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "hide_web": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon to users",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "label": {
        "Type": "String",
        "Required": true,
        "Description": "Pretty name of app."
      },
      "name": {
        "Type": "String",
        "Description": "name of app.",
        "Computed": true
      },
      "request_integration": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "sign_on_mode": {
        "Type": "String",
        "Description": "Sign on mode of application.",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Status of application.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "url": {
        "Type": "String",
        "Required": true
      },
      "users": {
        "Type": "Set",
        "Optional": true,
        "Description": "Users associated with the application",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Optional": true,
              "Description": "User ID."
            },
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for user application."
            },
            "scope": {
              "Type": "String",
              "Description": "Scope of application user.",
              "Computed": true
            },
            "username": {
              "Type": "String",
              "Optional": true,
              "Description": "Username for user."
            }
          }
        }
      }
    },
    "okta_factor": {
      "active": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Is this provider active?",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "provider_id": {
        "Type": "String",
        "Required": true,
        "Description": "Factor provider ID"
      }
    },
    "okta_group": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Group description"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Group name"
      },
      "users": {
        "Type": "Set",
        "Optional": true,
        "Description": "Users associated with the group. This can also be done per user.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "okta_group_roles": {
      "admin_roles": {
        "Type": "Set",
        "Optional": true,
        "Description": "Admin roles associated with the group. This can also be done per user.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "group_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of group to attach admin roles to"
      }
    },
    "okta_group_rule": {
      "expression_type": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "urn:okta:expression:1.0"
        }
      },
      "expression_value": {
        "Type": "String",
        "Required": true
      },
      "group_assignments": {
        "Type": "Set",
        "Required": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      }
    },
    "okta_idp": {
      "account_link_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "AUTO"
        }
      },
      "account_link_group_include": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "acs_binding": {
        "Type": "String",
        "Required": true
      },
      "acs_type": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "INSTANCE"
        }
      },
      "authorization_binding": {
        "Type": "String",
        "Required": true
      },
      "authorization_url": {
        "Type": "String",
        "Required": true
      },
      "client_id": {
        "Type": "String",
        "Required": true
      },
      "client_secret": {
        "Type": "String",
        "Required": true
      },
      "deprovisioned_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "NONE"
        }
      },
      "groups_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "NONE"
        }
      },
      "groups_assignment": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "groups_attribute": {
        "Type": "String",
        "Optional": true
      },
      "groups_filter": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "issuer_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL",
        "Default": {
          "Type": "string",
          "Value": "ORG_URL"
        }
      },
      "issuer_url": {
        "Type": "String",
        "Required": true
      },
      "jwks_binding": {
        "Type": "String",
        "Required": true
      },
      "jwks_url": {
        "Type": "String",
        "Required": true
      },
      "max_clock_skew": {
        "Type": "Int",
        "Optional": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "name of idp"
      },
      "profile_master": {
        "Type": "Bool",
        "Optional": true
      },
      "protocol_type": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "OIDC"
        }
      },
      "provisioning_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "AUTO"
        }
      },
      "request_signature_algorithm": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign requests",
        "Default": {
          "Type": "string",
          "Value": "SHA-256"
        }
      },
      "request_signature_scope": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign response"
      },
      "response_signature_algorithm": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign requests",
        "Default": {
          "Type": "string",
          "Value": "SHA-256"
        }
      },
      "response_signature_scope": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign response"
      },
      "scopes": {
        "Type": "Set",
        "Required": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "subject_match_attribute": {
        "Type": "String",
        "Optional": true
      },
      "subject_match_type": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "USERNAME"
        }
      },
      "suspended_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "NONE"
        }
      },
      "token_binding": {
        "Type": "String",
        "Required": true
      },
      "token_url": {
        "Type": "String",
        "Required": true
      },
      "type": {
        "Type": "String",
        "Computed": true
      },
      "user_info_binding": {
        "Type": "String",
        "Optional": true
      },
      "user_info_url": {
        "Type": "String",
        "Optional": true
      },
      "username_template": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "idpuser.email"
        }
      }
    },
    "okta_idp_oidc": {
      "account_link_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "AUTO"
        }
      },
      "account_link_group_include": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "acs_binding": {
        "Type": "String",
        "Required": true
      },
      "acs_type": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "INSTANCE"
        }
      },
      "authorization_binding": {
        "Type": "String",
        "Required": true
      },
      "authorization_url": {
        "Type": "String",
        "Required": true
      },
      "client_id": {
        "Type": "String",
        "Required": true
      },
      "client_secret": {
        "Type": "String",
        "Required": true
      },
      "deprovisioned_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "NONE"
        }
      },
      "groups_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "NONE"
        }
      },
      "groups_assignment": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "groups_attribute": {
        "Type": "String",
        "Optional": true
      },
      "groups_filter": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "issuer_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL",
        "Default": {
          "Type": "string",
          "Value": "ORG_URL"
        }
      },
      "issuer_url": {
        "Type": "String",
        "Required": true
      },
      "jwks_binding": {
        "Type": "String",
        "Required": true
      },
      "jwks_url": {
        "Type": "String",
        "Required": true
      },
      "max_clock_skew": {
        "Type": "Int",
        "Optional": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "name of idp"
      },
      "profile_master": {
        "Type": "Bool",
        "Optional": true
      },
      "protocol_type": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "OIDC"
        }
      },
      "provisioning_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "AUTO"
        }
      },
      "request_signature_algorithm": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign requests",
        "Default": {
          "Type": "string",
          "Value": "SHA-256"
        }
      },
      "request_signature_scope": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign response"
      },
      "response_signature_algorithm": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign requests",
        "Default": {
          "Type": "string",
          "Value": "SHA-256"
        }
      },
      "response_signature_scope": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign response"
      },
      "scopes": {
        "Type": "Set",
        "Required": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "subject_match_attribute": {
        "Type": "String",
        "Optional": true
      },
      "subject_match_type": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "USERNAME"
        }
      },
      "suspended_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "NONE"
        }
      },
      "token_binding": {
        "Type": "String",
        "Required": true
      },
      "token_url": {
        "Type": "String",
        "Required": true
      },
      "type": {
        "Type": "String",
        "Computed": true
      },
      "user_info_binding": {
        "Type": "String",
        "Optional": true
      },
      "user_info_url": {
        "Type": "String",
        "Optional": true
      },
      "username_template": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "idpuser.email"
        }
      }
    },
    "okta_idp_saml": {
      "account_link_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "AUTO"
        }
      },
      "account_link_group_include": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "acs_binding": {
        "Type": "String",
        "Required": true
      },
      "acs_type": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "INSTANCE"
        }
      },
      "audience": {
        "Type": "String",
        "Computed": true
      },
      "deprovisioned_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "NONE"
        }
      },
      "groups_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "NONE"
        }
      },
      "groups_assignment": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "groups_attribute": {
        "Type": "String",
        "Optional": true
      },
      "groups_filter": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "issuer": {
        "Type": "String",
        "Required": true
      },
      "issuer_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL",
        "Default": {
          "Type": "string",
          "Value": "ORG_URL"
        }
      },
      "kid": {
        "Type": "String",
        "Required": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "name of idp"
      },
      "name_format": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified"
        }
      },
      "profile_master": {
        "Type": "Bool",
        "Optional": true
      },
      "provisioning_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "AUTO"
        }
      },
      "request_signature_algorithm": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign requests",
        "Default": {
          "Type": "string",
          "Value": "SHA-256"
        }
      },
      "request_signature_scope": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign response"
      },
      "response_signature_algorithm": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign requests",
        "Default": {
          "Type": "string",
          "Value": "SHA-256"
        }
      },
      "response_signature_scope": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign response"
      },
      "sso_binding": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "HTTP-POST"
        }
      },
      "sso_destination": {
        "Type": "String",
        "Optional": true
      },
      "sso_url": {
        "Type": "String",
        "Required": true
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "subject_filter": {
        "Type": "String",
        "Optional": true
      },
      "subject_format": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "subject_match_attribute": {
        "Type": "String",
        "Optional": true
      },
      "subject_match_type": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "USERNAME"
        }
      },
      "suspended_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "NONE"
        }
      },
      "type": {
        "Type": "String",
        "Computed": true
      },
      "username_template": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "idpuser.email"
        }
      }
    },
    "okta_idp_saml_key": {
      "created": {
        "Type": "String",
        "Computed": true
      },
      "expires_at": {
        "Type": "String",
        "Computed": true
      },
      "kid": {
        "Type": "String",
        "Computed": true
      },
      "kty": {
        "Type": "String",
        "Computed": true
      },
      "use": {
        "Type": "String",
        "Computed": true
      },
      "x5c": {
        "Type": "Set",
        "Required": true,
        "Description": "base64-encoded X.509 certificate chain with DER encoding",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "x5t_s256": {
        "Type": "String",
        "Computed": true
      }
    },
    "okta_idp_social": {
      "account_link_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "AUTO"
        }
      },
      "account_link_group_include": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "authorization_binding": {
        "Type": "String",
        "Computed": true
      },
      "authorization_url": {
        "Type": "String",
        "Computed": true
      },
      "client_id": {
        "Type": "String",
        "Optional": true
      },
      "client_secret": {
        "Type": "String",
        "Optional": true
      },
      "deprovisioned_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "NONE"
        }
      },
      "groups_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "NONE"
        }
      },
      "groups_assignment": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "groups_attribute": {
        "Type": "String",
        "Optional": true
      },
      "groups_filter": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "issuer_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL",
        "Default": {
          "Type": "string",
          "Value": "ORG_URL"
        }
      },
      "match_attribute": {
        "Type": "String",
        "Optional": true,
        "Deprecated": "This property was incorrectly added to this resource, you should use \"subject_match_attribute\""
      },
      "match_type": {
        "Type": "String",
        "Optional": true,
        "Deprecated": "This property was incorrectly added to this resource, you should use \"subject_match_type\""
      },
      "max_clock_skew": {
        "Type": "Int",
        "Optional": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "name of idp"
      },
      "profile_master": {
        "Type": "Bool",
        "Optional": true
      },
      "protocol_type": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "OAUTH2"
        }
      },
      "provisioning_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "AUTO"
        }
      },
      "request_signature_algorithm": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign requests",
        "Default": {
          "Type": "string",
          "Value": "SHA-256"
        }
      },
      "request_signature_scope": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign response"
      },
      "response_signature_algorithm": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign requests",
        "Default": {
          "Type": "string",
          "Value": "SHA-256"
        }
      },
      "response_signature_scope": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign response"
      },
      "scopes": {
        "Type": "Set",
        "Required": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "subject_match_attribute": {
        "Type": "String",
        "Optional": true
      },
      "subject_match_type": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "USERNAME"
        }
      },
      "suspended_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "NONE"
        }
      },
      "token_binding": {
        "Type": "String",
        "Computed": true
      },
      "token_url": {
        "Type": "String",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Required": true
      },
      "username_template": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "idpuser.email"
        }
      }
    },
    "okta_inline_hook": {
      "auth": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "channel": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "headers": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "key": {
              "Type": "String",
              "Optional": true
            },
            "value": {
              "Type": "String",
              "Optional": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "type": {
        "Type": "String",
        "Required": true
      },
      "version": {
        "Type": "String",
        "Required": true
      }
    },
    "okta_mfa_policy": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Policy Description"
      },
      "duo": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "fido_u2f": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "fido_webauthn": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "google_otp": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "groups_included": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of Group IDs to Include",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Policy Name"
      },
      "okta_call": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "okta_otp": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "okta_password": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "okta_push": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "okta_question": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "okta_sms": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "priority": {
        "Type": "Int",
        "Optional": true,
        "Description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last/lowest if not there."
      },
      "rsa_token": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Policy Status: ACTIVE or INACTIVE.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "symantec_vip": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "yubikey_token": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "okta_mfa_policy_rule": {
      "enroll": {
        "Type": "String",
        "Optional": true,
        "Description": "Should the user be enrolled the first time they LOGIN, the next time they are CHALLENGEd, or NEVER?",
        "Default": {
          "Type": "string",
          "Value": "CHALLENGE"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Policy Rule Name"
      },
      "network_connection": {
        "Type": "String",
        "Optional": true,
        "Description": "Network selection mode: ANYWHERE, ZONE, ON_NETWORK, or OFF_NETWORK.",
        "Default": {
          "Type": "string",
          "Value": "ANYWHERE"
        }
      },
      "network_excludes": {
        "Type": "List",
        "Optional": true,
        "Description": "The zones to exclude",
        "ConflictsWith": [
          "network_includes"
        ],
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "network_includes": {
        "Type": "List",
        "Optional": true,
        "Description": "The zones to include",
        "ConflictsWith": [
          "network_excludes"
        ],
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "policyid": {
        "Type": "String",
        "Required": true,
        "Description": "Policy ID of the Rule"
      },
      "priority": {
        "Type": "Int",
        "Optional": true,
        "Description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last/lowest if not there."
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Policy Rule Status: ACTIVE or INACTIVE.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "users_excluded": {
        "Type": "Set",
        "Optional": true,
        "Description": "Set of User IDs to Exclude",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "okta_network_zone": {
      "dynamic_locations": {
        "Type": "Set",
        "Optional": true,
        "Description": "Array of locations ISO-3166-1(2). Format code: countryCode OR countryCode-regionCode",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "gateways": {
        "Type": "Set",
        "Optional": true,
        "Description": "Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please check API docs for examples",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the Network Zone Resource"
      },
      "proxies": {
        "Type": "Set",
        "Optional": true,
        "Description": "Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please check API docs for examples",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "Type of the Network Zone - can either be IP or DYNAMIC only"
      }
    },
    "okta_oauth_app": {
      "auto_key_rotation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Requested key rotation mode.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "auto_submit_toolbar": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Display auto submit toolbar",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "client_basic_secret": {
        "Type": "String",
        "Optional": true,
        "Description": "OAuth client secret key, this can be set when token_endpoint_auth_method is client_secret_basic."
      },
      "client_id": {
        "Type": "String",
        "Optional": true,
        "Description": "OAuth client ID. If set during creation, app is created with this id.",
        "Computed": true
      },
      "client_secret": {
        "Type": "String",
        "Description": "OAuth client secret key. This will be in plain text in your statefile unless you set omit_secret above.",
        "Computed": true
      },
      "client_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI to a web page providing information about the client."
      },
      "consent_method": {
        "Type": "String",
        "Optional": true,
        "Description": "*Early Access Property*. Indicates whether user consent is required or implicit. Valid values: REQUIRED, TRUSTED. Default value is TRUSTED"
      },
      "custom_client_id": {
        "Type": "String",
        "Optional": true,
        "Description": "**Deprecated** This property allows you to set your client_id during creation. NOTE: updating after creation will be a no-op, use client_id for that behavior instead.",
        "ConflictsWith": [
          "client_id"
        ],
        "Deprecated": "This field is being replaced by client_id. Please set that field instead."
      },
      "grant_types": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of OAuth 2.0 grant types. Conditional validation params found here https://developer.okta.com/docs/api/resources/apps#credentials-settings-details. Defaults to minimum requirements per app type.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "Groups associated with the application",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hide_ios": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon on mobile app",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "hide_web": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon to users",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "issuer_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "*Early Access Property*. Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a custom domain URL as the issuer of ID token for this client.",
        "Default": {
          "Type": "string",
          "Value": "ORG_URL"
        }
      },
      "jwks": {
        "Type": "List",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "e": {
              "Type": "String",
              "Optional": true,
              "Description": "RSA Exponent"
            },
            "kid": {
              "Type": "String",
              "Required": true,
              "Description": "Key ID"
            },
            "kty": {
              "Type": "String",
              "Required": true,
              "Description": "Key type"
            },
            "n": {
              "Type": "String",
              "Optional": true,
              "Description": "RSA Modulus"
            }
          }
        }
      },
      "label": {
        "Type": "String",
        "Required": true,
        "Description": "Pretty name of app."
      },
      "login_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI that initiates login."
      },
      "logo_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI that references a logo for the client."
      },
      "name": {
        "Type": "String",
        "Description": "name of app.",
        "Computed": true
      },
      "omit_secret": {
        "Type": "Bool",
        "Optional": true,
        "Description": "This tells the provider not to persist the application's secret to state. If this is ever changes from true =\u003e false your app will be recreated.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "policy_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "*Early Access Property*. URI to web page providing client policy document."
      },
      "post_logout_redirect_uris": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of URIs for redirection after logout",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "profile": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom JSON that represents an OAuth application's profile"
      },
      "redirect_uris": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of URIs for use in the redirect-based flow. This is required for all application types except service. Note: see okta_app_oauth_redirect_uri for appending to this list in a decentralized way.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "response_types": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of OAuth 2.0 response type strings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "sign_on_mode": {
        "Type": "String",
        "Description": "Sign on mode of application.",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Status of application.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "token_endpoint_auth_method": {
        "Type": "String",
        "Optional": true,
        "Description": "Requested authentication method for the token endpoint.",
        "Default": {
          "Type": "string",
          "Value": "client_secret_basic"
        }
      },
      "tos_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "*Early Access Property*. URI to web page providing client tos (terms of service)."
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The type of client application."
      },
      "users": {
        "Type": "Set",
        "Optional": true,
        "Description": "Users associated with the application",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Optional": true,
              "Description": "User ID."
            },
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for user application."
            },
            "scope": {
              "Type": "String",
              "Description": "Scope of application user.",
              "Computed": true
            },
            "username": {
              "Type": "String",
              "Optional": true,
              "Description": "Username for user."
            }
          }
        }
      }
    },
    "okta_oauth_app_redirect_uri": {
      "app_id": {
        "Type": "String",
        "Required": true
      },
      "uri": {
        "Type": "String",
        "Required": true,
        "Description": "Redirect URI to append to Okta OIDC application."
      }
    },
    "okta_password_policy": {
      "auth_provider": {
        "Type": "String",
        "Optional": true,
        "Description": "Authentication Provider: OKTA or ACTIVE_DIRECTORY.",
        "Default": {
          "Type": "string",
          "Value": "OKTA"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Policy Description"
      },
      "email_recovery": {
        "Type": "String",
        "Optional": true,
        "Description": "Enable or disable email password recovery: ACTIVE or INACTIVE.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "groups_included": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of Group IDs to Include",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Policy Name"
      },
      "password_auto_unlock_minutes": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of minutes before a locked account is unlocked: 0 = no limit.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "password_dictionary_lookup": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Check Passwords Against Common Password Dictionary.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "password_exclude_first_name": {
        "Type": "Bool",
        "Optional": true,
        "Description": "User firstName attribute must be excluded from the password"
      },
      "password_exclude_last_name": {
        "Type": "Bool",
        "Optional": true,
        "Description": "User lastName attribute must be excluded from the password"
      },
      "password_exclude_username": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If the user name must be excluded from the password.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "password_expire_warn_days": {
        "Type": "Int",
        "Optional": true,
        "Description": "Length in days a user will be warned before password expiry: 0 = no warning.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "password_history_count": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of distinct passwords that must be created before they can be reused: 0 = none.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "password_max_age_days": {
        "Type": "Int",
        "Optional": true,
        "Description": "Length in days a password is valid before expiry: 0 = no limit.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "password_max_lockout_attempts": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of unsuccessful login attempts allowed before lockout: 0 = no limit.",
        "Default": {
          "Type": "int",
          "Value": "10"
        }
      },
      "password_min_age_minutes": {
        "Type": "Int",
        "Optional": true,
        "Description": "Minimum time interval in minutes between password changes: 0 = no limit.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "password_min_length": {
        "Type": "Int",
        "Optional": true,
        "Description": "Minimum password length.",
        "Default": {
          "Type": "int",
          "Value": "8"
        }
      },
      "password_min_lowercase": {
        "Type": "Int",
        "Optional": true,
        "Description": "If a password must contain at least one lower case letter: 0 = no, 1 = yes. Default = 1",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      },
      "password_min_number": {
        "Type": "Int",
        "Optional": true,
        "Description": "If a password must contain at least one number: 0 = no, 1 = yes. Default = 1",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      },
      "password_min_symbol": {
        "Type": "Int",
        "Optional": true,
        "Description": "If a password must contain at least one symbol (!@#$%^\u0026*): 0 = no, 1 = yes. Default = 1",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "password_min_uppercase": {
        "Type": "Int",
        "Optional": true,
        "Description": "If a password must contain at least one upper case letter: 0 = no, 1 = yes. Default = 1",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      },
      "password_show_lockout_failures": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If a user should be informed when their account is locked.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "priority": {
        "Type": "Int",
        "Optional": true,
        "Description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last/lowest if not there."
      },
      "question_min_length": {
        "Type": "Int",
        "Optional": true,
        "Description": "Min length of the password recovery question answer.",
        "Default": {
          "Type": "int",
          "Value": "4"
        }
      },
      "question_recovery": {
        "Type": "String",
        "Optional": true,
        "Description": "Enable or disable security question password recovery: ACTIVE or INACTIVE.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "recovery_email_token": {
        "Type": "Int",
        "Optional": true,
        "Description": "Lifetime in minutes of the recovery email token.",
        "Default": {
          "Type": "int",
          "Value": "60"
        }
      },
      "skip_unlock": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also attempt to unlock the user's Windows account.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "sms_recovery": {
        "Type": "String",
        "Optional": true,
        "Description": "Enable or disable SMS password recovery: ACTIVE or INACTIVE.",
        "Default": {
          "Type": "string",
          "Value": "INACTIVE"
        }
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Policy Status: ACTIVE or INACTIVE.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      }
    },
    "okta_password_policy_rule": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Policy Rule Name"
      },
      "network_connection": {
        "Type": "String",
        "Optional": true,
        "Description": "Network selection mode: ANYWHERE, ZONE, ON_NETWORK, or OFF_NETWORK.",
        "Default": {
          "Type": "string",
          "Value": "ANYWHERE"
        }
      },
      "network_excludes": {
        "Type": "List",
        "Optional": true,
        "Description": "The zones to exclude",
        "ConflictsWith": [
          "network_includes"
        ],
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "network_includes": {
        "Type": "List",
        "Optional": true,
        "Description": "The zones to include",
        "ConflictsWith": [
          "network_excludes"
        ],
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "password_change": {
        "Type": "String",
        "Optional": true,
        "Description": "Allow or deny a user to change their password: ALLOW or DENY. Default = ALLOW",
        "Default": {
          "Type": "string",
          "Value": "ALLOW"
        }
      },
      "password_reset": {
        "Type": "String",
        "Optional": true,
        "Description": "Allow or deny a user to reset their password: ALLOW or DENY. Default = ALLOW",
        "Default": {
          "Type": "string",
          "Value": "ALLOW"
        }
      },
      "password_unlock": {
        "Type": "String",
        "Optional": true,
        "Description": "Allow or deny a user to unlock. Default = DENY",
        "Default": {
          "Type": "string",
          "Value": "DENY"
        }
      },
      "policyid": {
        "Type": "String",
        "Required": true,
        "Description": "Policy ID of the Rule"
      },
      "priority": {
        "Type": "Int",
        "Optional": true,
        "Description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last/lowest if not there."
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Policy Rule Status: ACTIVE or INACTIVE.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "users_excluded": {
        "Type": "Set",
        "Optional": true,
        "Description": "Set of User IDs to Exclude",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "okta_policy_mfa": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Policy Description"
      },
      "duo": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "fido_u2f": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "fido_webauthn": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "google_otp": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "groups_included": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of Group IDs to Include",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Policy Name"
      },
      "okta_call": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "okta_otp": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "okta_password": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "okta_push": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "okta_question": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "okta_sms": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "priority": {
        "Type": "Int",
        "Optional": true,
        "Description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last/lowest if not there."
      },
      "rsa_token": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Policy Status: ACTIVE or INACTIVE.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "symantec_vip": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "yubikey_token": {
        "Type": "Map",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "okta_policy_password": {
      "auth_provider": {
        "Type": "String",
        "Optional": true,
        "Description": "Authentication Provider: OKTA or ACTIVE_DIRECTORY.",
        "Default": {
          "Type": "string",
          "Value": "OKTA"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Policy Description"
      },
      "email_recovery": {
        "Type": "String",
        "Optional": true,
        "Description": "Enable or disable email password recovery: ACTIVE or INACTIVE.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "groups_included": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of Group IDs to Include",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Policy Name"
      },
      "password_auto_unlock_minutes": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of minutes before a locked account is unlocked: 0 = no limit.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "password_dictionary_lookup": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Check Passwords Against Common Password Dictionary.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "password_exclude_first_name": {
        "Type": "Bool",
        "Optional": true,
        "Description": "User firstName attribute must be excluded from the password"
      },
      "password_exclude_last_name": {
        "Type": "Bool",
        "Optional": true,
        "Description": "User lastName attribute must be excluded from the password"
      },
      "password_exclude_username": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If the user name must be excluded from the password.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "password_expire_warn_days": {
        "Type": "Int",
        "Optional": true,
        "Description": "Length in days a user will be warned before password expiry: 0 = no warning.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "password_history_count": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of distinct passwords that must be created before they can be reused: 0 = none.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "password_max_age_days": {
        "Type": "Int",
        "Optional": true,
        "Description": "Length in days a password is valid before expiry: 0 = no limit.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "password_max_lockout_attempts": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of unsuccessful login attempts allowed before lockout: 0 = no limit.",
        "Default": {
          "Type": "int",
          "Value": "10"
        }
      },
      "password_min_age_minutes": {
        "Type": "Int",
        "Optional": true,
        "Description": "Minimum time interval in minutes between password changes: 0 = no limit.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "password_min_length": {
        "Type": "Int",
        "Optional": true,
        "Description": "Minimum password length.",
        "Default": {
          "Type": "int",
          "Value": "8"
        }
      },
      "password_min_lowercase": {
        "Type": "Int",
        "Optional": true,
        "Description": "If a password must contain at least one lower case letter: 0 = no, 1 = yes. Default = 1",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      },
      "password_min_number": {
        "Type": "Int",
        "Optional": true,
        "Description": "If a password must contain at least one number: 0 = no, 1 = yes. Default = 1",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      },
      "password_min_symbol": {
        "Type": "Int",
        "Optional": true,
        "Description": "If a password must contain at least one symbol (!@#$%^\u0026*): 0 = no, 1 = yes. Default = 1",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "password_min_uppercase": {
        "Type": "Int",
        "Optional": true,
        "Description": "If a password must contain at least one upper case letter: 0 = no, 1 = yes. Default = 1",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      },
      "password_show_lockout_failures": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If a user should be informed when their account is locked.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "priority": {
        "Type": "Int",
        "Optional": true,
        "Description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last/lowest if not there."
      },
      "question_min_length": {
        "Type": "Int",
        "Optional": true,
        "Description": "Min length of the password recovery question answer.",
        "Default": {
          "Type": "int",
          "Value": "4"
        }
      },
      "question_recovery": {
        "Type": "String",
        "Optional": true,
        "Description": "Enable or disable security question password recovery: ACTIVE or INACTIVE.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "recovery_email_token": {
        "Type": "Int",
        "Optional": true,
        "Description": "Lifetime in minutes of the recovery email token.",
        "Default": {
          "Type": "int",
          "Value": "60"
        }
      },
      "skip_unlock": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also attempt to unlock the user's Windows account.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "sms_recovery": {
        "Type": "String",
        "Optional": true,
        "Description": "Enable or disable SMS password recovery: ACTIVE or INACTIVE.",
        "Default": {
          "Type": "string",
          "Value": "INACTIVE"
        }
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Policy Status: ACTIVE or INACTIVE.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      }
    },
    "okta_policy_rule_idp_discovery": {
      "app_exclude": {
        "Type": "Set",
        "Optional": true,
        "Description": "Applications to exclude in discovery rule",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Optional": true
            },
            "name": {
              "Type": "String",
              "Optional": true
            },
            "type": {
              "Type": "String",
              "Optional": true
            }
          }
        }
      },
      "app_include": {
        "Type": "Set",
        "Optional": true,
        "Description": "Applications to include in discovery rule",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Optional": true
            },
            "name": {
              "Type": "String",
              "Optional": true
            },
            "type": {
              "Type": "String",
              "Optional": true
            }
          }
        }
      },
      "idp_id": {
        "Type": "String",
        "Optional": true
      },
      "idp_type": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "OKTA"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Policy Rule Name"
      },
      "network_connection": {
        "Type": "String",
        "Optional": true,
        "Description": "Network selection mode: ANYWHERE, ZONE, ON_NETWORK, or OFF_NETWORK.",
        "Default": {
          "Type": "string",
          "Value": "ANYWHERE"
        }
      },
      "network_excludes": {
        "Type": "List",
        "Optional": true,
        "Description": "The zones to exclude",
        "ConflictsWith": [
          "network_includes"
        ],
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "network_includes": {
        "Type": "List",
        "Optional": true,
        "Description": "The zones to include",
        "ConflictsWith": [
          "network_excludes"
        ],
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "platform_include": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "os_expression": {
              "Type": "String",
              "Optional": true,
              "Description": "Only available with OTHER OS type"
            },
            "os_type": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "ANY"
              }
            },
            "type": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "ANY"
              }
            }
          }
        }
      },
      "policyid": {
        "Type": "String",
        "Required": true,
        "Description": "Policy ID of the Rule"
      },
      "priority": {
        "Type": "Int",
        "Optional": true,
        "Description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last/lowest if not there."
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Policy Rule Status: ACTIVE or INACTIVE.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "user_identifier_attribute": {
        "Type": "String",
        "Optional": true
      },
      "user_identifier_patterns": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "match_type": {
              "Type": "String",
              "Optional": true
            },
            "value": {
              "Type": "String",
              "Optional": true
            }
          }
        }
      },
      "user_identifier_type": {
        "Type": "String",
        "Optional": true
      }
    },
    "okta_policy_rule_mfa": {
      "enroll": {
        "Type": "String",
        "Optional": true,
        "Description": "Should the user be enrolled the first time they LOGIN, the next time they are CHALLENGEd, or NEVER?",
        "Default": {
          "Type": "string",
          "Value": "CHALLENGE"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Policy Rule Name"
      },
      "network_connection": {
        "Type": "String",
        "Optional": true,
        "Description": "Network selection mode: ANYWHERE, ZONE, ON_NETWORK, or OFF_NETWORK.",
        "Default": {
          "Type": "string",
          "Value": "ANYWHERE"
        }
      },
      "network_excludes": {
        "Type": "List",
        "Optional": true,
        "Description": "The zones to exclude",
        "ConflictsWith": [
          "network_includes"
        ],
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "network_includes": {
        "Type": "List",
        "Optional": true,
        "Description": "The zones to include",
        "ConflictsWith": [
          "network_excludes"
        ],
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "policyid": {
        "Type": "String",
        "Required": true,
        "Description": "Policy ID of the Rule"
      },
      "priority": {
        "Type": "Int",
        "Optional": true,
        "Description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last/lowest if not there."
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Policy Rule Status: ACTIVE or INACTIVE.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "users_excluded": {
        "Type": "Set",
        "Optional": true,
        "Description": "Set of User IDs to Exclude",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "okta_policy_rule_password": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Policy Rule Name"
      },
      "network_connection": {
        "Type": "String",
        "Optional": true,
        "Description": "Network selection mode: ANYWHERE, ZONE, ON_NETWORK, or OFF_NETWORK.",
        "Default": {
          "Type": "string",
          "Value": "ANYWHERE"
        }
      },
      "network_excludes": {
        "Type": "List",
        "Optional": true,
        "Description": "The zones to exclude",
        "ConflictsWith": [
          "network_includes"
        ],
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "network_includes": {
        "Type": "List",
        "Optional": true,
        "Description": "The zones to include",
        "ConflictsWith": [
          "network_excludes"
        ],
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "password_change": {
        "Type": "String",
        "Optional": true,
        "Description": "Allow or deny a user to change their password: ALLOW or DENY. Default = ALLOW",
        "Default": {
          "Type": "string",
          "Value": "ALLOW"
        }
      },
      "password_reset": {
        "Type": "String",
        "Optional": true,
        "Description": "Allow or deny a user to reset their password: ALLOW or DENY. Default = ALLOW",
        "Default": {
          "Type": "string",
          "Value": "ALLOW"
        }
      },
      "password_unlock": {
        "Type": "String",
        "Optional": true,
        "Description": "Allow or deny a user to unlock. Default = DENY",
        "Default": {
          "Type": "string",
          "Value": "DENY"
        }
      },
      "policyid": {
        "Type": "String",
        "Required": true,
        "Description": "Policy ID of the Rule"
      },
      "priority": {
        "Type": "Int",
        "Optional": true,
        "Description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last/lowest if not there."
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Policy Rule Status: ACTIVE or INACTIVE.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "users_excluded": {
        "Type": "Set",
        "Optional": true,
        "Description": "Set of User IDs to Exclude",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "okta_policy_rule_signon": {
      "access": {
        "Type": "String",
        "Optional": true,
        "Description": "Allow or deny access based on the rule conditions: ALLOW or DENY.",
        "Default": {
          "Type": "string",
          "Value": "ALLOW"
        }
      },
      "authtype": {
        "Type": "String",
        "Optional": true,
        "Description": "Authentication entrypoint: ANY or RADIUS.",
        "Default": {
          "Type": "string",
          "Value": "ANY"
        }
      },
      "mfa_lifetime": {
        "Type": "Int",
        "Optional": true,
        "Description": "Elapsed time before the next MFA challenge"
      },
      "mfa_prompt": {
        "Type": "String",
        "Optional": true,
        "Description": "Prompt for MFA based on the device used, a factor session lifetime, or every sign on attempt: DEVICE, SESSION or ALWAYS"
      },
      "mfa_remember_device": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Remember MFA device.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "mfa_required": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Require MFA.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Policy Rule Name"
      },
      "network_connection": {
        "Type": "String",
        "Optional": true,
        "Description": "Network selection mode: ANYWHERE, ZONE, ON_NETWORK, or OFF_NETWORK.",
        "Default": {
          "Type": "string",
          "Value": "ANYWHERE"
        }
      },
      "network_excludes": {
        "Type": "List",
        "Optional": true,
        "Description": "The zones to exclude",
        "ConflictsWith": [
          "network_includes"
        ],
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "network_includes": {
        "Type": "List",
        "Optional": true,
        "Description": "The zones to include",
        "ConflictsWith": [
          "network_excludes"
        ],
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "policyid": {
        "Type": "String",
        "Required": true,
        "Description": "Policy ID of the Rule"
      },
      "priority": {
        "Type": "Int",
        "Optional": true,
        "Description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last/lowest if not there."
      },
      "session_idle": {
        "Type": "Int",
        "Optional": true,
        "Description": "Max minutes a session can be idle.",
        "Default": {
          "Type": "int",
          "Value": "120"
        }
      },
      "session_lifetime": {
        "Type": "Int",
        "Optional": true,
        "Description": "Max minutes a session is active: Disable = 0.",
        "Default": {
          "Type": "int",
          "Value": "120"
        }
      },
      "session_persistent": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether session cookies will last across browser sessions. Okta Administrators can never have persistent session cookies.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Policy Rule Status: ACTIVE or INACTIVE.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "users_excluded": {
        "Type": "Set",
        "Optional": true,
        "Description": "Set of User IDs to Exclude",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "okta_policy_signon": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Policy Description"
      },
      "groups_included": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of Group IDs to Include",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Policy Name"
      },
      "priority": {
        "Type": "Int",
        "Optional": true,
        "Description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last/lowest if not there."
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Policy Status: ACTIVE or INACTIVE.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      }
    },
    "okta_profile_mapping": {
      "delete_when_absent": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When turned on this flag will trigger the provider to delete mapping properties that are not defined in config. By default, we do not delete missing properties."
      },
      "mappings": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "expression": {
              "Type": "String",
              "Required": true
            },
            "id": {
              "Type": "String",
              "Required": true,
              "Description": "The mapping property key."
            },
            "push_status": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "DONT_PUSH"
              }
            }
          }
        }
      },
      "source_id": {
        "Type": "String",
        "Required": true,
        "Description": "The source id of the mapping to manage."
      },
      "source_name": {
        "Type": "String",
        "Computed": true
      },
      "source_type": {
        "Type": "String",
        "Computed": true
      },
      "target_id": {
        "Type": "String",
        "Required": true,
        "Description": "The target id of the mapping to manage."
      },
      "target_name": {
        "Type": "String",
        "Computed": true
      },
      "target_type": {
        "Type": "String",
        "Computed": true
      }
    },
    "okta_saml_app": {
      "accessibility_error_redirect_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom error page URL"
      },
      "accessibility_login_redirect_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom login page URL"
      },
      "accessibility_self_service": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable self service",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "app_settings_json": {
        "Type": "String",
        "Optional": true,
        "Description": "Application settings in JSON format"
      },
      "assertion_signed": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Determines whether the SAML assertion is digitally signed"
      },
      "attribute_statements": {
        "Type": "List",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "filter_type": {
              "Type": "String",
              "Optional": true,
              "Description": "Type of group attribute filter"
            },
            "filter_value": {
              "Type": "String",
              "Optional": true,
              "Description": "Filter value to use"
            },
            "name": {
              "Type": "String",
              "Required": true
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified"
              }
            },
            "type": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "EXPRESSION"
              }
            },
            "values": {
              "Type": "List",
              "Optional": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "audience": {
        "Type": "String",
        "Optional": true,
        "Description": "Audience Restriction"
      },
      "authn_context_class_ref": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifies the SAML authentication context class for the assertion’s authentication statement"
      },
      "auto_submit_toolbar": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Display auto submit toolbar",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "certificate": {
        "Type": "String",
        "Description": "cert from SAML XML metadata payload",
        "Computed": true
      },
      "default_relay_state": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifies a specific application resource in an IDP initiated SSO scenario."
      },
      "destination": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifies the location where the SAML response is intended to be sent inside of the SAML assertion"
      },
      "digest_algorithm": {
        "Type": "String",
        "Optional": true,
        "Description": "Determines the digest algorithm used to digitally sign the SAML assertion and response"
      },
      "entity_key": {
        "Type": "String",
        "Description": "Entity ID, the ID portion of the entity_url",
        "Computed": true
      },
      "entity_url": {
        "Type": "String",
        "Description": "Entity URL for instance http://www.okta.com/exk1fcia6d6EMsf331d8",
        "Computed": true
      },
      "features": {
        "Type": "Set",
        "Optional": true,
        "Description": "features to enable",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "Groups associated with the application",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hide_ios": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon on mobile app",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "hide_web": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon to users",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "honor_force_authn": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prompt user to re-authenticate if SP asks for it"
      },
      "http_post_binding": {
        "Type": "String",
        "Description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post location from the SAML metadata.",
        "Computed": true
      },
      "http_redirect_binding": {
        "Type": "String",
        "Description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect location from the SAML metadata.",
        "Computed": true
      },
      "idp_issuer": {
        "Type": "String",
        "Optional": true,
        "Description": "SAML issuer ID"
      },
      "key_id": {
        "Type": "String",
        "Description": "Certificate ID",
        "Computed": true
      },
      "key_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Certificate name. This modulates the rotation of keys. New name == new key."
      },
      "key_years_valid": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of years the certificate is valid.",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      },
      "label": {
        "Type": "String",
        "Required": true,
        "Description": "Pretty name of app."
      },
      "metadata": {
        "Type": "String",
        "Description": "SAML xml metadata payload",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "name of app.",
        "Computed": true
      },
      "preconfigured_app": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of preexisting SAML application. For instance 'slack'"
      },
      "recipient": {
        "Type": "String",
        "Optional": true,
        "Description": "The location where the app may present the SAML assertion"
      },
      "request_compressed": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Denotes whether the request is compressed or not."
      },
      "response_signed": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Determines whether the SAML auth response message is digitally signed"
      },
      "sign_on_mode": {
        "Type": "String",
        "Description": "Sign on mode of application.",
        "Computed": true
      },
      "signature_algorithm": {
        "Type": "String",
        "Optional": true,
        "Description": "Signature algorithm used ot digitally sign the assertion and response"
      },
      "sp_issuer": {
        "Type": "String",
        "Optional": true,
        "Description": "SAML SP issuer ID"
      },
      "sso_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Single Sign On URL"
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Status of application.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "subject_name_id_format": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifies the SAML processing rules."
      },
      "subject_name_id_template": {
        "Type": "String",
        "Optional": true,
        "Description": "Template for app user's username when a user is assigned to the app"
      },
      "user_name_template": {
        "Type": "String",
        "Optional": true,
        "Description": "Username template",
        "Default": {
          "Type": "string",
          "Value": "${source.login}"
        }
      },
      "user_name_template_suffix": {
        "Type": "String",
        "Optional": true,
        "Description": "Username template suffix"
      },
      "user_name_template_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Username template type",
        "Default": {
          "Type": "string",
          "Value": "BUILT_IN"
        }
      },
      "users": {
        "Type": "Set",
        "Optional": true,
        "Description": "Users associated with the application",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Optional": true,
              "Description": "User ID."
            },
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for user application."
            },
            "scope": {
              "Type": "String",
              "Description": "Scope of application user.",
              "Computed": true
            },
            "username": {
              "Type": "String",
              "Optional": true,
              "Description": "Username for user."
            }
          }
        }
      }
    },
    "okta_saml_idp": {
      "account_link_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "AUTO"
        }
      },
      "account_link_group_include": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "acs_binding": {
        "Type": "String",
        "Required": true
      },
      "acs_type": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "INSTANCE"
        }
      },
      "audience": {
        "Type": "String",
        "Computed": true
      },
      "deprovisioned_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "NONE"
        }
      },
      "groups_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "NONE"
        }
      },
      "groups_assignment": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "groups_attribute": {
        "Type": "String",
        "Optional": true
      },
      "groups_filter": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "issuer": {
        "Type": "String",
        "Required": true
      },
      "issuer_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL",
        "Default": {
          "Type": "string",
          "Value": "ORG_URL"
        }
      },
      "kid": {
        "Type": "String",
        "Required": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "name of idp"
      },
      "name_format": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified"
        }
      },
      "profile_master": {
        "Type": "Bool",
        "Optional": true
      },
      "provisioning_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "AUTO"
        }
      },
      "request_signature_algorithm": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign requests",
        "Default": {
          "Type": "string",
          "Value": "SHA-256"
        }
      },
      "request_signature_scope": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign response"
      },
      "response_signature_algorithm": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign requests",
        "Default": {
          "Type": "string",
          "Value": "SHA-256"
        }
      },
      "response_signature_scope": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign response"
      },
      "sso_binding": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "HTTP-POST"
        }
      },
      "sso_destination": {
        "Type": "String",
        "Optional": true
      },
      "sso_url": {
        "Type": "String",
        "Required": true
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "subject_filter": {
        "Type": "String",
        "Optional": true
      },
      "subject_format": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "subject_match_attribute": {
        "Type": "String",
        "Optional": true
      },
      "subject_match_type": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "USERNAME"
        }
      },
      "suspended_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "NONE"
        }
      },
      "type": {
        "Type": "String",
        "Computed": true
      },
      "username_template": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "idpuser.email"
        }
      }
    },
    "okta_saml_idp_signing_key": {
      "created": {
        "Type": "String",
        "Computed": true
      },
      "expires_at": {
        "Type": "String",
        "Computed": true
      },
      "kid": {
        "Type": "String",
        "Computed": true
      },
      "kty": {
        "Type": "String",
        "Computed": true
      },
      "use": {
        "Type": "String",
        "Computed": true
      },
      "x5c": {
        "Type": "Set",
        "Required": true,
        "Description": "base64-encoded X.509 certificate chain with DER encoding",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "x5t_s256": {
        "Type": "String",
        "Computed": true
      }
    },
    "okta_secure_password_store_app": {
      "accessibility_error_redirect_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom error page URL"
      },
      "accessibility_self_service": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable self service",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "auto_submit_toolbar": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Display auto submit toolbar",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "credentials_scheme": {
        "Type": "String",
        "Optional": true,
        "Description": "Application credentials scheme",
        "Default": {
          "Type": "string",
          "Value": "EDIT_USERNAME_AND_PASSWORD"
        }
      },
      "groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "Groups associated with the application",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hide_ios": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon on mobile app",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "hide_web": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon to users",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "label": {
        "Type": "String",
        "Required": true,
        "Description": "Pretty name of app."
      },
      "name": {
        "Type": "String",
        "Description": "name of app.",
        "Computed": true
      },
      "optional_field1": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of optional param in the login form"
      },
      "optional_field1_value": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of optional value in login form"
      },
      "optional_field2": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of optional param in the login form"
      },
      "optional_field2_value": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of optional value in login form"
      },
      "optional_field3": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of optional param in the login form"
      },
      "optional_field3_value": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of optional value in login form"
      },
      "password_field": {
        "Type": "String",
        "Required": true,
        "Description": "Login password field"
      },
      "reveal_password": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Allow user to reveal password",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "shared_password": {
        "Type": "String",
        "Optional": true,
        "Description": "Shared password, required for certain schemes."
      },
      "shared_username": {
        "Type": "String",
        "Optional": true,
        "Description": "Shared username, required for certain schemes."
      },
      "sign_on_mode": {
        "Type": "String",
        "Description": "Sign on mode of application.",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Status of application.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "url": {
        "Type": "String",
        "Required": true,
        "Description": "Login URL"
      },
      "user_name_template": {
        "Type": "String",
        "Description": "Username template",
        "Computed": true
      },
      "user_name_template_type": {
        "Type": "String",
        "Description": "Username template type",
        "Computed": true
      },
      "username_field": {
        "Type": "String",
        "Required": true,
        "Description": "Login username field"
      },
      "users": {
        "Type": "Set",
        "Optional": true,
        "Description": "Users associated with the application",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Optional": true,
              "Description": "User ID."
            },
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for user application."
            },
            "scope": {
              "Type": "String",
              "Description": "Scope of application user.",
              "Computed": true
            },
            "username": {
              "Type": "String",
              "Optional": true,
              "Description": "Username for user."
            }
          }
        }
      }
    },
    "okta_signon_policy": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Policy Description"
      },
      "groups_included": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of Group IDs to Include",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Policy Name"
      },
      "priority": {
        "Type": "Int",
        "Optional": true,
        "Description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last/lowest if not there."
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Policy Status: ACTIVE or INACTIVE.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      }
    },
    "okta_signon_policy_rule": {
      "access": {
        "Type": "String",
        "Optional": true,
        "Description": "Allow or deny access based on the rule conditions: ALLOW or DENY.",
        "Default": {
          "Type": "string",
          "Value": "ALLOW"
        }
      },
      "authtype": {
        "Type": "String",
        "Optional": true,
        "Description": "Authentication entrypoint: ANY or RADIUS.",
        "Default": {
          "Type": "string",
          "Value": "ANY"
        }
      },
      "mfa_lifetime": {
        "Type": "Int",
        "Optional": true,
        "Description": "Elapsed time before the next MFA challenge"
      },
      "mfa_prompt": {
        "Type": "String",
        "Optional": true,
        "Description": "Prompt for MFA based on the device used, a factor session lifetime, or every sign on attempt: DEVICE, SESSION or ALWAYS"
      },
      "mfa_remember_device": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Remember MFA device.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "mfa_required": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Require MFA.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Policy Rule Name"
      },
      "network_connection": {
        "Type": "String",
        "Optional": true,
        "Description": "Network selection mode: ANYWHERE, ZONE, ON_NETWORK, or OFF_NETWORK.",
        "Default": {
          "Type": "string",
          "Value": "ANYWHERE"
        }
      },
      "network_excludes": {
        "Type": "List",
        "Optional": true,
        "Description": "The zones to exclude",
        "ConflictsWith": [
          "network_includes"
        ],
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "network_includes": {
        "Type": "List",
        "Optional": true,
        "Description": "The zones to include",
        "ConflictsWith": [
          "network_excludes"
        ],
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "policyid": {
        "Type": "String",
        "Required": true,
        "Description": "Policy ID of the Rule"
      },
      "priority": {
        "Type": "Int",
        "Optional": true,
        "Description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last/lowest if not there."
      },
      "session_idle": {
        "Type": "Int",
        "Optional": true,
        "Description": "Max minutes a session can be idle.",
        "Default": {
          "Type": "int",
          "Value": "120"
        }
      },
      "session_lifetime": {
        "Type": "Int",
        "Optional": true,
        "Description": "Max minutes a session is active: Disable = 0.",
        "Default": {
          "Type": "int",
          "Value": "120"
        }
      },
      "session_persistent": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether session cookies will last across browser sessions. Okta Administrators can never have persistent session cookies.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Policy Rule Status: ACTIVE or INACTIVE.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "users_excluded": {
        "Type": "Set",
        "Optional": true,
        "Description": "Set of User IDs to Exclude",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "okta_social_idp": {
      "account_link_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "AUTO"
        }
      },
      "account_link_group_include": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "authorization_binding": {
        "Type": "String",
        "Computed": true
      },
      "authorization_url": {
        "Type": "String",
        "Computed": true
      },
      "client_id": {
        "Type": "String",
        "Optional": true
      },
      "client_secret": {
        "Type": "String",
        "Optional": true
      },
      "deprovisioned_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "NONE"
        }
      },
      "groups_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "NONE"
        }
      },
      "groups_assignment": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "groups_attribute": {
        "Type": "String",
        "Optional": true
      },
      "groups_filter": {
        "Type": "Set",
        "Optional": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "issuer_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL",
        "Default": {
          "Type": "string",
          "Value": "ORG_URL"
        }
      },
      "match_attribute": {
        "Type": "String",
        "Optional": true,
        "Deprecated": "This property was incorrectly added to this resource, you should use \"subject_match_attribute\""
      },
      "match_type": {
        "Type": "String",
        "Optional": true,
        "Deprecated": "This property was incorrectly added to this resource, you should use \"subject_match_type\""
      },
      "max_clock_skew": {
        "Type": "Int",
        "Optional": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "name of idp"
      },
      "profile_master": {
        "Type": "Bool",
        "Optional": true
      },
      "protocol_type": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "OAUTH2"
        }
      },
      "provisioning_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "AUTO"
        }
      },
      "request_signature_algorithm": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign requests",
        "Default": {
          "Type": "string",
          "Value": "SHA-256"
        }
      },
      "request_signature_scope": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign response"
      },
      "response_signature_algorithm": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign requests",
        "Default": {
          "Type": "string",
          "Value": "SHA-256"
        }
      },
      "response_signature_scope": {
        "Type": "String",
        "Optional": true,
        "Description": "algorithm to use to sign response"
      },
      "scopes": {
        "Type": "Set",
        "Required": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "subject_match_attribute": {
        "Type": "String",
        "Optional": true
      },
      "subject_match_type": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "USERNAME"
        }
      },
      "suspended_action": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "NONE"
        }
      },
      "token_binding": {
        "Type": "String",
        "Computed": true
      },
      "token_url": {
        "Type": "String",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Required": true
      },
      "username_template": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "idpuser.email"
        }
      }
    },
    "okta_swa_app": {
      "accessibility_error_redirect_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom error page URL"
      },
      "accessibility_self_service": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable self service",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "auto_submit_toolbar": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Display auto submit toolbar",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "button_field": {
        "Type": "String",
        "Optional": true,
        "Description": "Login button field"
      },
      "groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "Groups associated with the application",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hide_ios": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon on mobile app",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "hide_web": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon to users",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "label": {
        "Type": "String",
        "Required": true,
        "Description": "Pretty name of app."
      },
      "name": {
        "Type": "String",
        "Description": "name of app.",
        "Computed": true
      },
      "password_field": {
        "Type": "String",
        "Optional": true,
        "Description": "Login password field"
      },
      "preconfigured_app": {
        "Type": "String",
        "Optional": true,
        "Description": "Preconfigured app name"
      },
      "sign_on_mode": {
        "Type": "String",
        "Description": "Sign on mode of application.",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Status of application.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "url": {
        "Type": "String",
        "Optional": true,
        "Description": "Login URL"
      },
      "url_regex": {
        "Type": "String",
        "Optional": true,
        "Description": "A regex that further restricts URL to the specified regex"
      },
      "user_name_template": {
        "Type": "String",
        "Description": "Username template",
        "Computed": true
      },
      "user_name_template_type": {
        "Type": "String",
        "Description": "Username template type",
        "Computed": true
      },
      "username_field": {
        "Type": "String",
        "Optional": true,
        "Description": "Login username field"
      },
      "users": {
        "Type": "Set",
        "Optional": true,
        "Description": "Users associated with the application",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Optional": true,
              "Description": "User ID."
            },
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for user application."
            },
            "scope": {
              "Type": "String",
              "Description": "Scope of application user.",
              "Computed": true
            },
            "username": {
              "Type": "String",
              "Optional": true,
              "Description": "Username for user."
            }
          }
        }
      }
    },
    "okta_template_email": {
      "default_language": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "en"
        }
      },
      "translations": {
        "Type": "Set",
        "Required": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "language": {
              "Type": "String",
              "Required": true
            },
            "subject": {
              "Type": "String",
              "Required": true
            },
            "template": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "Email template type"
      }
    },
    "okta_three_field_app": {
      "accessibility_error_redirect_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom error page URL"
      },
      "accessibility_self_service": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable self service",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "auto_submit_toolbar": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Display auto submit toolbar",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "button_selector": {
        "Type": "String",
        "Required": true,
        "Description": "Login button field CSS selector"
      },
      "extra_field_selector": {
        "Type": "String",
        "Required": true,
        "Description": "Extra field CSS selector"
      },
      "extra_field_value": {
        "Type": "String",
        "Required": true,
        "Description": "Value for extra form field"
      },
      "groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "Groups associated with the application",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hide_ios": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon on mobile app",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "hide_web": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon to users",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "label": {
        "Type": "String",
        "Required": true,
        "Description": "Pretty name of app."
      },
      "name": {
        "Type": "String",
        "Description": "name of app.",
        "Computed": true
      },
      "password_selector": {
        "Type": "String",
        "Required": true,
        "Description": "Login password field CSS selector"
      },
      "sign_on_mode": {
        "Type": "String",
        "Description": "Sign on mode of application.",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Status of application.",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "url": {
        "Type": "String",
        "Required": true,
        "Description": "Login URL"
      },
      "url_regex": {
        "Type": "String",
        "Optional": true,
        "Description": "A regex that further restricts URL to the specified regex"
      },
      "user_name_template": {
        "Type": "String",
        "Description": "Username template",
        "Computed": true
      },
      "user_name_template_type": {
        "Type": "String",
        "Description": "Username template type",
        "Computed": true
      },
      "username_selector": {
        "Type": "String",
        "Required": true,
        "Description": "Login username field CSS selector"
      },
      "users": {
        "Type": "Set",
        "Optional": true,
        "Description": "Users associated with the application",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Optional": true,
              "Description": "User ID."
            },
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for user application."
            },
            "scope": {
              "Type": "String",
              "Description": "Scope of application user.",
              "Computed": true
            },
            "username": {
              "Type": "String",
              "Optional": true,
              "Description": "Username for user."
            }
          }
        }
      }
    },
    "okta_trusted_origin": {
      "active": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether the Trusted Origin is active or not - can only be issued post-creation",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the Trusted Origin Resource"
      },
      "origin": {
        "Type": "String",
        "Required": true,
        "Description": "The origin to trust"
      },
      "scopes": {
        "Type": "List",
        "Required": true,
        "Description": "Scopes of the Trusted Origin - can either be CORS or REDIRECT only",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "okta_user": {
      "admin_roles": {
        "Type": "Set",
        "Optional": true,
        "Description": "User Okta admin roles - ie. ['APP_ADMIN', 'USER_ADMIN']",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "city": {
        "Type": "String",
        "Optional": true,
        "Description": "User city"
      },
      "cost_center": {
        "Type": "String",
        "Optional": true,
        "Description": "User cost center"
      },
      "country_code": {
        "Type": "String",
        "Optional": true,
        "Description": "User country code"
      },
      "custom_profile_attributes": {
        "Type": "String",
        "Optional": true,
        "Description": "JSON formatted custom attributes for a user. It must be JSON due to various types Okta allows.",
        "Default": {
          "Type": "string",
          "Value": "{}"
        }
      },
      "department": {
        "Type": "String",
        "Optional": true,
        "Description": "User department"
      },
      "display_name": {
        "Type": "String",
        "Optional": true,
        "Description": "User display name, suitable to show end users"
      },
      "division": {
        "Type": "String",
        "Optional": true,
        "Description": "User division"
      },
      "email": {
        "Type": "String",
        "Required": true,
        "Description": "User primary email address"
      },
      "employee_number": {
        "Type": "String",
        "Optional": true,
        "Description": "User employee number"
      },
      "first_name": {
        "Type": "String",
        "Required": true,
        "Description": "User first name"
      },
      "group_memberships": {
        "Type": "Set",
        "Optional": true,
        "Description": "The groups that you want this user to be a part of. This can also be done via the group using the `users` property.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "honorific_prefix": {
        "Type": "String",
        "Optional": true,
        "Description": "User honorific prefix"
      },
      "honorific_suffix": {
        "Type": "String",
        "Optional": true,
        "Description": "User honorific suffix"
      },
      "last_name": {
        "Type": "String",
        "Required": true,
        "Description": "User last name"
      },
      "locale": {
        "Type": "String",
        "Optional": true,
        "Description": "User default location"
      },
      "login": {
        "Type": "String",
        "Required": true,
        "Description": "User Okta login"
      },
      "manager": {
        "Type": "String",
        "Optional": true,
        "Description": "Manager of User"
      },
      "manager_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Manager ID of User"
      },
      "middle_name": {
        "Type": "String",
        "Optional": true,
        "Description": "User middle name"
      },
      "mobile_phone": {
        "Type": "String",
        "Optional": true,
        "Description": "User mobile phone number"
      },
      "nick_name": {
        "Type": "String",
        "Optional": true,
        "Description": "User nickname"
      },
      "organization": {
        "Type": "String",
        "Optional": true,
        "Description": "User organization"
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "User Password"
      },
      "postal_address": {
        "Type": "String",
        "Optional": true,
        "Description": "User mailing address"
      },
      "preferred_language": {
        "Type": "String",
        "Optional": true,
        "Description": "User preferred language"
      },
      "primary_phone": {
        "Type": "String",
        "Optional": true,
        "Description": "User primary phone number"
      },
      "profile_url": {
        "Type": "String",
        "Optional": true,
        "Description": "User online profile (web page)"
      },
      "raw_status": {
        "Type": "String",
        "Description": "The raw status of the User in Okta - (status is mapped)",
        "Computed": true
      },
      "recovery_answer": {
        "Type": "String",
        "Optional": true,
        "Description": "User Password Recovery Answer"
      },
      "recovery_question": {
        "Type": "String",
        "Optional": true,
        "Description": "User Password Recovery Question"
      },
      "second_email": {
        "Type": "String",
        "Optional": true,
        "Description": "User secondary email address, used for account recovery"
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "User state or region"
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "The status of the User in Okta - remove to set user back to active/provisioned",
        "Default": {
          "Type": "string",
          "Value": "ACTIVE"
        }
      },
      "street_address": {
        "Type": "String",
        "Optional": true,
        "Description": "User street address"
      },
      "timezone": {
        "Type": "String",
        "Optional": true,
        "Description": "User default timezone"
      },
      "title": {
        "Type": "String",
        "Optional": true,
        "Description": "User title"
      },
      "user_type": {
        "Type": "String",
        "Optional": true,
        "Description": "User employee type"
      },
      "zip_code": {
        "Type": "String",
        "Optional": true,
        "Description": "User zipcode or postal code"
      }
    },
    "okta_user_base_schema": {
      "index": {
        "Type": "String",
        "Required": true,
        "Description": "Subschema unique string identifier"
      },
      "master": {
        "Type": "String",
        "Optional": true,
        "Description": "SubSchema profile manager, if not set it will inherit its setting."
      },
      "permissions": {
        "Type": "String",
        "Optional": true,
        "Description": "SubSchema permissions: HIDE, READ_ONLY, or READ_WRITE.",
        "Default": {
          "Type": "string",
          "Value": "READ_ONLY"
        }
      },
      "required": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether the Subschema is required"
      },
      "title": {
        "Type": "String",
        "Required": true,
        "Description": "Subschema title (display name)"
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "Subschema type: string, boolean, number, integer, array, or object"
      }
    },
    "okta_user_schema": {
      "array_enum": {
        "Type": "List",
        "Optional": true,
        "Description": "Custom Subschema enumerated value of a property of type array.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "array_one_of": {
        "Type": "List",
        "Optional": true,
        "Description": "array of valid JSON schemas for property type array.",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "const": {
              "Type": "String",
              "Required": true,
              "Description": "Enum value"
            },
            "title": {
              "Type": "String",
              "Required": true,
              "Description": "Enum title"
            }
          }
        }
      },
      "array_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Subschema array type: string, number, integer, reference. Type field must be an array."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom Subschema description"
      },
      "enum": {
        "Type": "List",
        "Optional": true,
        "Description": "Custom Subschema enumerated value of the property. see: developer.okta.com/docs/api/resources/schemas#user-profile-schema-property-object",
        "ConflictsWith": [
          "array_type"
        ],
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "external_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Subschema external name"
      },
      "index": {
        "Type": "String",
        "Required": true,
        "Description": "Subschema unique string identifier"
      },
      "master": {
        "Type": "String",
        "Optional": true,
        "Description": "SubSchema profile manager, if not set it will inherit its setting."
      },
      "max_length": {
        "Type": "Int",
        "Optional": true,
        "Description": "Subschema of type string maximum length"
      },
      "min_length": {
        "Type": "Int",
        "Optional": true,
        "Description": "Subschema of type string minimum length"
      },
      "one_of": {
        "Type": "List",
        "Optional": true,
        "Description": "Custom Subschema json schemas. see: developer.okta.com/docs/api/resources/schemas#user-profile-schema-property-object",
        "ConflictsWith": [
          "array_type"
        ],
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "const": {
              "Type": "String",
              "Required": true,
              "Description": "Enum value"
            },
            "title": {
              "Type": "String",
              "Required": true,
              "Description": "Enum title"
            }
          }
        }
      },
      "permissions": {
        "Type": "String",
        "Optional": true,
        "Description": "SubSchema permissions: HIDE, READ_ONLY, or READ_WRITE.",
        "Default": {
          "Type": "string",
          "Value": "READ_ONLY"
        }
      },
      "required": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether the Subschema is required"
      },
      "scope": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "NONE"
        }
      },
      "title": {
        "Type": "String",
        "Required": true,
        "Description": "Subschema title (display name)"
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "Subschema type: string, boolean, number, integer, array, or object"
      },
      "unique": {
        "Type": "String",
        "Optional": true,
        "Description": "Subschema unique restriction",
        "ConflictsWith": [
          "one_of",
          "enum",
          "array_type"
        ]
      }
    }
  },
  "data-sources": {
    "okta_app": {
      "active_only": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Search only ACTIVE applications.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "description": {
        "Type": "String",
        "Computed": true
      },
      "id": {
        "Type": "String",
        "Optional": true,
        "ConflictsWith": [
          "label",
          "label_prefix"
        ]
      },
      "label": {
        "Type": "String",
        "Optional": true,
        "ConflictsWith": [
          "id",
          "label_prefix"
        ]
      },
      "label_prefix": {
        "Type": "String",
        "Optional": true,
        "ConflictsWith": [
          "id",
          "label"
        ]
      },
      "name": {
        "Type": "String",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Computed": true
      }
    },
    "okta_app_metadata_saml": {
      "app_id": {
        "Type": "String",
        "Required": true
      },
      "certificate": {
        "Type": "String",
        "Computed": true
      },
      "entity_id": {
        "Type": "String",
        "Description": "Entity URL for instance https://www.okta.com/saml2/service-provider/sposcfdmlybtwkdcgtuf",
        "Computed": true
      },
      "http_post_binding": {
        "Type": "String",
        "Description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post location from the SAML metadata.",
        "Computed": true
      },
      "http_redirect_binding": {
        "Type": "String",
        "Description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect location from the SAML metadata.",
        "Computed": true
      },
      "key_id": {
        "Type": "String",
        "Required": true
      },
      "metadata": {
        "Type": "String",
        "Computed": true
      },
      "want_authn_requests_signed": {
        "Type": "Bool",
        "Computed": true
      }
    },
    "okta_app_saml": {
      "accessibility_error_redirect_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom error page URL"
      },
      "accessibility_login_redirect_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom login page URL"
      },
      "accessibility_self_service": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable self service",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "active_only": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Search only ACTIVE applications.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "app_settings_json": {
        "Type": "String",
        "Optional": true,
        "Description": "Application settings in JSON format"
      },
      "assertion_signed": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Determines whether the SAML assertion is digitally signed"
      },
      "attribute_statements": {
        "Type": "List",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "filter_type": {
              "Type": "String",
              "Optional": true,
              "Description": "Type of group attribute filter"
            },
            "filter_value": {
              "Type": "String",
              "Optional": true,
              "Description": "Filter value to use"
            },
            "name": {
              "Type": "String",
              "Required": true
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified"
              }
            },
            "type": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "EXPRESSION"
              }
            },
            "values": {
              "Type": "List",
              "Optional": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "audience": {
        "Type": "String",
        "Optional": true,
        "Description": "Audience Restriction"
      },
      "authn_context_class_ref": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifies the SAML authentication context class for the assertion’s authentication statement"
      },
      "auto_submit_toolbar": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Display auto submit toolbar",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "default_relay_state": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifies a specific application resource in an IDP initiated SSO scenario."
      },
      "description": {
        "Type": "String",
        "Computed": true
      },
      "destination": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifies the location where the SAML response is intended to be sent inside of the SAML assertion"
      },
      "digest_algorithm": {
        "Type": "String",
        "Optional": true,
        "Description": "Determines the digest algorithm used to digitally sign the SAML assertion and response"
      },
      "features": {
        "Type": "Set",
        "Optional": true,
        "Description": "features to enable",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hide_ios": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon on mobile app",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "hide_web": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Do not display application icon to users",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "honor_force_authn": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prompt user to re-authenticate if SP asks for it"
      },
      "id": {
        "Type": "String",
        "Optional": true,
        "ConflictsWith": [
          "label",
          "label_prefix"
        ]
      },
      "idp_issuer": {
        "Type": "String",
        "Optional": true,
        "Description": "SAML issuer ID"
      },
      "key_id": {
        "Type": "String",
        "Description": "Certificate ID",
        "Computed": true
      },
      "label": {
        "Type": "String",
        "Optional": true,
        "ConflictsWith": [
          "id",
          "label_prefix"
        ]
      },
      "label_prefix": {
        "Type": "String",
        "Optional": true,
        "ConflictsWith": [
          "id",
          "label"
        ]
      },
      "name": {
        "Type": "String",
        "Computed": true
      },
      "recipient": {
        "Type": "String",
        "Optional": true,
        "Description": "The location where the app may present the SAML assertion"
      },
      "request_compressed": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Denotes whether the request is compressed or not."
      },
      "response_signed": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Determines whether the SAML auth response message is digitally signed"
      },
      "signature_algorithm": {
        "Type": "String",
        "Optional": true,
        "Description": "Signature algorithm used ot digitally sign the assertion and response"
      },
      "sp_issuer": {
        "Type": "String",
        "Optional": true,
        "Description": "SAML SP issuer ID"
      },
      "sso_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Single Sign On URL"
      },
      "status": {
        "Type": "String",
        "Computed": true
      },
      "subject_name_id_format": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifies the SAML processing rules."
      },
      "subject_name_id_template": {
        "Type": "String",
        "Optional": true,
        "Description": "Template for app user's username when a user is assigned to the app"
      },
      "user_name_template": {
        "Type": "String",
        "Optional": true,
        "Description": "Username template",
        "Default": {
          "Type": "string",
          "Value": "${source.login}"
        }
      },
      "user_name_template_suffix": {
        "Type": "String",
        "Optional": true,
        "Description": "Username template suffix"
      },
      "user_name_template_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Username template type",
        "Default": {
          "Type": "string",
          "Value": "BUILT_IN"
        }
      }
    },
    "okta_auth_server": {
      "audiences": {
        "Type": "Set",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "credentials_last_rotated": {
        "Type": "String",
        "Computed": true
      },
      "credentials_next_rotation": {
        "Type": "String",
        "Computed": true
      },
      "credentials_rotation_mode": {
        "Type": "String",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Computed": true
      },
      "kid": {
        "Type": "String",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "status": {
        "Type": "String",
        "Computed": true
      }
    },
    "okta_default_policies": {
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "Policy type: OKTA_SIGN_ON, PASSWORD, MFA_ENROLL, or OAUTH_AUTHORIZATION_POLICY"
      }
    },
    "okta_default_policy": {
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "Policy type: OKTA_SIGN_ON, PASSWORD, MFA_ENROLL, or OAUTH_AUTHORIZATION_POLICY"
      }
    },
    "okta_everyone_group": {
      "include_users": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Fetch group users, having default off cuts down on API calls.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      }
    },
    "okta_group": {
      "description": {
        "Type": "String",
        "Computed": true
      },
      "include_users": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Fetch group users, having default off cuts down on API calls.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "users": {
        "Type": "Set",
        "Description": "Users associated with the group. This can also be done per user.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "okta_idp_metadata_saml": {
      "assertions_signed": {
        "Type": "Bool",
        "Computed": true
      },
      "authn_request_signed": {
        "Type": "Bool",
        "Computed": true
      },
      "encryption_certificate": {
        "Type": "String",
        "Computed": true
      },
      "entity_id": {
        "Type": "String",
        "Description": "Entity URL for instance https://www.okta.com/saml2/service-provider/sposcfdmlybtwkdcgtuf",
        "Computed": true
      },
      "http_post_binding": {
        "Type": "String",
        "Description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post location from the SAML metadata.",
        "Computed": true
      },
      "http_redirect_binding": {
        "Type": "String",
        "Description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect location from the SAML metadata.",
        "Computed": true
      },
      "idp_id": {
        "Type": "String",
        "Optional": true
      },
      "metadata": {
        "Type": "String",
        "Computed": true
      },
      "signing_certificate": {
        "Type": "String",
        "Computed": true
      }
    },
    "okta_idp_saml": {
      "acs_binding": {
        "Type": "String",
        "Computed": true
      },
      "acs_type": {
        "Type": "String",
        "Computed": true
      },
      "audience": {
        "Type": "String",
        "Computed": true
      },
      "id": {
        "Type": "String",
        "Optional": true,
        "ConflictsWith": [
          "name"
        ]
      },
      "issuer": {
        "Type": "String",
        "Computed": true
      },
      "issuer_mode": {
        "Type": "String",
        "Computed": true
      },
      "kid": {
        "Type": "String",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "ConflictsWith": [
          "id"
        ]
      },
      "sso_binding": {
        "Type": "String",
        "Computed": true
      },
      "sso_destination": {
        "Type": "String",
        "Computed": true
      },
      "sso_url": {
        "Type": "String",
        "Computed": true
      },
      "subject_filter": {
        "Type": "String",
        "Computed": true
      },
      "subject_format": {
        "Type": "Set",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "type": {
        "Type": "String",
        "Computed": true
      }
    },
    "okta_policy": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "name of policy"
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "Policy type: OKTA_SIGN_ON, PASSWORD, MFA_ENROLL, IDP_DISCOVERY, or OAUTH_AUTHORIZATION_POLICY"
      }
    },
    "okta_user": {
      "admin_roles": {
        "Type": "Set",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "city": {
        "Type": "String",
        "Computed": true
      },
      "cost_center": {
        "Type": "String",
        "Computed": true
      },
      "country_code": {
        "Type": "String",
        "Computed": true
      },
      "custom_profile_attributes": {
        "Type": "String",
        "Computed": true
      },
      "department": {
        "Type": "String",
        "Computed": true
      },
      "display_name": {
        "Type": "String",
        "Computed": true
      },
      "division": {
        "Type": "String",
        "Computed": true
      },
      "email": {
        "Type": "String",
        "Computed": true
      },
      "employee_number": {
        "Type": "String",
        "Computed": true
      },
      "first_name": {
        "Type": "String",
        "Computed": true
      },
      "group_memberships": {
        "Type": "Set",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "honorific_prefix": {
        "Type": "String",
        "Computed": true
      },
      "honorific_suffix": {
        "Type": "String",
        "Computed": true
      },
      "last_name": {
        "Type": "String",
        "Computed": true
      },
      "locale": {
        "Type": "String",
        "Computed": true
      },
      "login": {
        "Type": "String",
        "Computed": true
      },
      "manager": {
        "Type": "String",
        "Computed": true
      },
      "manager_id": {
        "Type": "String",
        "Computed": true
      },
      "middle_name": {
        "Type": "String",
        "Computed": true
      },
      "mobile_phone": {
        "Type": "String",
        "Computed": true
      },
      "nick_name": {
        "Type": "String",
        "Computed": true
      },
      "organization": {
        "Type": "String",
        "Computed": true
      },
      "postal_address": {
        "Type": "String",
        "Computed": true
      },
      "preferred_language": {
        "Type": "String",
        "Computed": true
      },
      "primary_phone": {
        "Type": "String",
        "Computed": true
      },
      "profile_url": {
        "Type": "String",
        "Computed": true
      },
      "search": {
        "Type": "Set",
        "Optional": true,
        "Description": "Filter to find a user, each filter will be concatenated with an AND clause. Please be aware profile properties must match what is in Okta, which is likely camel case",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "comparison": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "eq"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Property name to search for. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search"
            },
            "value": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "second_email": {
        "Type": "String",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Computed": true
      },
      "street_address": {
        "Type": "String",
        "Computed": true
      },
      "timezone": {
        "Type": "String",
        "Computed": true
      },
      "title": {
        "Type": "String",
        "Computed": true
      },
      "user_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Retrieve a single user based on their id"
      },
      "user_type": {
        "Type": "String",
        "Computed": true
      },
      "zip_code": {
        "Type": "String",
        "Computed": true
      }
    },
    "okta_user_profile_mapping_source": {
      "name": {
        "Type": "String",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Computed": true
      }
    },
    "okta_users": {
      "search": {
        "Type": "Set",
        "Required": true,
        "Description": "Filter to find a user, each filter will be concatenated with an AND clause. Please be aware profile properties must match what is in Okta, which is likely camel case",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "comparison": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "eq"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Property name to search for. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search"
            },
            "value": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "users": {
        "Type": "List",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "admin_roles": {
              "Type": "Set",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "city": {
              "Type": "String",
              "Computed": true
            },
            "cost_center": {
              "Type": "String",
              "Computed": true
            },
            "country_code": {
              "Type": "String",
              "Computed": true
            },
            "custom_profile_attributes": {
              "Type": "String",
              "Computed": true
            },
            "department": {
              "Type": "String",
              "Computed": true
            },
            "display_name": {
              "Type": "String",
              "Computed": true
            },
            "division": {
              "Type": "String",
              "Computed": true
            },
            "email": {
              "Type": "String",
              "Computed": true
            },
            "employee_number": {
              "Type": "String",
              "Computed": true
            },
            "first_name": {
              "Type": "String",
              "Computed": true
            },
            "group_memberships": {
              "Type": "Set",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "honorific_prefix": {
              "Type": "String",
              "Computed": true
            },
            "honorific_suffix": {
              "Type": "String",
              "Computed": true
            },
            "last_name": {
              "Type": "String",
              "Computed": true
            },
            "locale": {
              "Type": "String",
              "Computed": true
            },
            "login": {
              "Type": "String",
              "Computed": true
            },
            "manager": {
              "Type": "String",
              "Computed": true
            },
            "manager_id": {
              "Type": "String",
              "Computed": true
            },
            "middle_name": {
              "Type": "String",
              "Computed": true
            },
            "mobile_phone": {
              "Type": "String",
              "Computed": true
            },
            "nick_name": {
              "Type": "String",
              "Computed": true
            },
            "organization": {
              "Type": "String",
              "Computed": true
            },
            "postal_address": {
              "Type": "String",
              "Computed": true
            },
            "preferred_language": {
              "Type": "String",
              "Computed": true
            },
            "primary_phone": {
              "Type": "String",
              "Computed": true
            },
            "profile_url": {
              "Type": "String",
              "Computed": true
            },
            "second_email": {
              "Type": "String",
              "Computed": true
            },
            "state": {
              "Type": "String",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Computed": true
            },
            "street_address": {
              "Type": "String",
              "Computed": true
            },
            "timezone": {
              "Type": "String",
              "Computed": true
            },
            "title": {
              "Type": "String",
              "Computed": true
            },
            "user_type": {
              "Type": "String",
              "Computed": true
            },
            "zip_code": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      }
    }
  }
}