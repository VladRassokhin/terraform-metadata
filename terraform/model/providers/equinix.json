{
  ".schema_version": "2",
  ".sdk_type": "terraform-plugin-sdk-v2",
  "name": "equinix",
  "type": "provider",
  "version": "v1.1.0-beta",
  "provider": {
    "client_id": {
      "Type": "String",
      "Optional": true,
      "Description": "API Consumer Key available under My Apps section in developer portal",
      "DefaultFunc": "ENV(EQUINIX_API_CLIENTID)"
    },
    "client_secret": {
      "Type": "String",
      "Optional": true,
      "Description": "API Consumer secret available under My Apps section in developer portal",
      "DefaultFunc": "ENV(EQUINIX_API_CLIENTSECRET)"
    },
    "endpoint": {
      "Type": "String",
      "Optional": true,
      "Description": "The Equinix API base URL to point out desired environment. Defaults to https://api.equinix.com",
      "DefaultFunc": "ENV(EQUINIX_API_ENDPOINT)"
    },
    "request_timeout": {
      "Type": "Int",
      "Optional": true,
      "Description": "The duration of time, in seconds, that the Equinix Platform API Client should wait before canceling an API request",
      "DefaultFunc": "ENV(EQUINIX_API_TIMEOUT)"
    },
    "response_max_page_size": {
      "Type": "Int",
      "Optional": true,
      "Description": "The maximum number of records in a single response for REST queries that produce paginated responses"
    }
  },
  "resources": {
    "equinix_ecx_l2_connection": {
      "__timeouts__": [
        "create",
        "delete"
      ],
      "additional_info": {
        "Type": "Set",
        "Optional": true,
        "Description": "One or more additional information key-value objects",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Additional information key"
            },
            "value": {
              "Type": "String",
              "Required": true,
              "Description": "Additional information value"
            }
          }
        }
      },
      "authorization_key": {
        "Type": "String",
        "Optional": true,
        "Description": "Text field used to authorize connection on the provider side. Value depends on a provider service profile used for connection",
        "Computed": true
      },
      "device_interface_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "Identifier of network interface on a given device, used for a connection. If not specified then first available interface will be selected",
        "ConflictsWith": [
          "port_uuid"
        ]
      },
      "device_uuid": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique identifier of the Network Edge virtual device from which the connection would originate",
        "ConflictsWith": [
          "port_uuid"
        ]
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Connection name. An alpha-numeric 24 characters string which can include only hyphens and underscores"
      },
      "named_tag": {
        "Type": "String",
        "Optional": true,
        "Description": "The type of peering to set up in case when connecting to Azure Express Route. One of Public, Private, Microsoft, Manual"
      },
      "notifications": {
        "Type": "Set",
        "Required": true,
        "Description": "A list of email addresses used for sending connection update notifications",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "port_uuid": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique identifier of the buyer's port from which the connection would originate",
        "ConflictsWith": [
          "device_uuid"
        ]
      },
      "profile_uuid": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique identifier of the service provider's service profile",
        "Computed": true
      },
      "provider_status": {
        "Type": "String",
        "Description": "Connection provisioning status on service provider's side",
        "Computed": true
      },
      "purchase_order_number": {
        "Type": "String",
        "Optional": true,
        "Description": "Connection's purchase order number to reflect on the invoice"
      },
      "redundancy_type": {
        "Type": "String",
        "Description": "Connection redundancy type, applicable for HA connections. Either primary or secondary",
        "Computed": true
      },
      "redundant_uuid": {
        "Type": "String",
        "Description": "Unique identifier of the redundant connection, applicable for HA connections",
        "Computed": true
      },
      "secondary_connection": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of secondary connection for redundant, HA connectivity",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "authorization_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Text field used to authorize connection on the provider side. Value depends on a provider service profile used for connection",
              "Computed": true
            },
            "device_interface_id": {
              "Type": "Int",
              "Optional": true,
              "Description": "Identifier of network interface on a given device, used for a connection. If not specified then first available interface will be selected",
              "Computed": true,
              "ConflictsWith": [
                "secondary_connection.0.port_uuid"
              ]
            },
            "device_uuid": {
              "Type": "String",
              "Optional": true,
              "Description": "Unique identifier of the Network Edge virtual device from which the connection would originate",
              "ConflictsWith": [
                "secondary_connection.0.port_uuid"
              ]
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Connection name. An alpha-numeric 24 characters string which can include only hyphens and underscores"
            },
            "port_uuid": {
              "Type": "String",
              "Optional": true,
              "Description": "Unique identifier of the buyer's port from which the connection would originate",
              "ConflictsWith": [
                "secondary_connection.0.device_uuid"
              ]
            },
            "profile_uuid": {
              "Type": "String",
              "Optional": true,
              "Description": "Unique identifier of the service provider's service profile",
              "Computed": true
            },
            "provider_status": {
              "Type": "String",
              "Description": "Connection provisioning status on service provider's side",
              "Computed": true
            },
            "redundancy_type": {
              "Type": "String",
              "Description": "Connection redundancy type, applicable for HA connections. Either primary or secondary",
              "Computed": true
            },
            "redundant_uuid": {
              "Type": "String",
              "Description": "Unique identifier of the redundant connection, applicable for HA connections",
              "Computed": true
            },
            "seller_metro_code": {
              "Type": "String",
              "Optional": true,
              "Description": "The metro code that denotes the connectionâ€™s remote side (z-side)",
              "Computed": true
            },
            "seller_region": {
              "Type": "String",
              "Optional": true,
              "Description": "The region in which the seller port resides",
              "Computed": true
            },
            "speed": {
              "Type": "Int",
              "Optional": true,
              "Description": "Speed/Bandwidth to be allocated to the connection",
              "Computed": true
            },
            "speed_unit": {
              "Type": "String",
              "Optional": true,
              "Description": "Unit of the speed/bandwidth to be allocated to the connection",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "Connection provisioning status on Equinix Fabric side",
              "Computed": true
            },
            "uuid": {
              "Type": "String",
              "Description": "Unique identifier of the connection",
              "Computed": true
            },
            "vlan_ctag": {
              "Type": "Int",
              "Optional": true,
              "Description": "C-Tag/Inner-Tag of the connection, a numeric character ranging from 2 - 4094",
              "ConflictsWith": [
                "secondary_connection.0.device_uuid"
              ]
            },
            "vlan_stag": {
              "Type": "Int",
              "Optional": true,
              "Description": "S-Tag/Outer-Tag of the connection, a numeric character ranging from 2 - 4094",
              "Computed": true,
              "ConflictsWith": [
                "secondary_connection.0.device_uuid"
              ]
            },
            "zside_port_uuid": {
              "Type": "String",
              "Description": "Unique identifier of the port on the remote side (z-side)",
              "Computed": true
            },
            "zside_vlan_ctag": {
              "Type": "Int",
              "Description": "C-Tag/Inner-Tag of the connection on the remote side (z-side)",
              "Computed": true
            },
            "zside_vlan_stag": {
              "Type": "Int",
              "Description": "S-Tag/Outer-Tag of the connection on the remote side (z-side)",
              "Computed": true
            }
          }
        }
      },
      "seller_metro_code": {
        "Type": "String",
        "Optional": true,
        "Description": "The metro code that denotes the connectionâ€™s remote side (z-side)",
        "Computed": true
      },
      "seller_region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region in which the seller port resides"
      },
      "speed": {
        "Type": "Int",
        "Required": true,
        "Description": "Speed/Bandwidth to be allocated to the connection"
      },
      "speed_unit": {
        "Type": "String",
        "Required": true,
        "Description": "Unit of the speed/bandwidth to be allocated to the connection"
      },
      "status": {
        "Type": "String",
        "Description": "Connection provisioning status on Equinix Fabric side",
        "Computed": true
      },
      "uuid": {
        "Type": "String",
        "Description": "Unique identifier of the connection",
        "Computed": true
      },
      "vlan_ctag": {
        "Type": "Int",
        "Optional": true,
        "Description": "C-Tag/Inner-Tag of the connection, a numeric character ranging from 2 - 4094",
        "ConflictsWith": [
          "device_uuid"
        ]
      },
      "vlan_stag": {
        "Type": "Int",
        "Optional": true,
        "Description": "S-Tag/Outer-Tag of the connection, a numeric character ranging from 2 - 4094",
        "Computed": true,
        "ConflictsWith": [
          "device_uuid"
        ]
      },
      "zside_port_uuid": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique identifier of the port on the remote side (z-side)",
        "Computed": true
      },
      "zside_vlan_ctag": {
        "Type": "Int",
        "Optional": true,
        "Description": "C-Tag/Inner-Tag of the connection on the remote side (z-side)",
        "Computed": true
      },
      "zside_vlan_stag": {
        "Type": "Int",
        "Optional": true,
        "Description": "S-Tag/Outer-Tag of the connection on the remote side (z-side)",
        "Computed": true
      }
    },
    "equinix_ecx_l2_connection_accepter": {
      "__timeouts__": [
        "create"
      ],
      "access_key": {
        "Type": "String",
        "Optional": true,
        "Description": "Access Key used to accept connection on provider side",
        "Computed": true
      },
      "aws_connection_id": {
        "Type": "String",
        "Description": "Identifier of a hosted Direct Connect connection on AWS side, applicable for accepter resource with connections to AWS only",
        "Computed": true
      },
      "aws_profile": {
        "Type": "String",
        "Optional": true,
        "Description": "AWS Profile Name for retrieving credentials from shared credentials file"
      },
      "connection_id": {
        "Type": "String",
        "Required": true,
        "Description": "Identifier of layer 2 connection that will be accepted"
      },
      "secret_key": {
        "Type": "String",
        "Optional": true,
        "Description": "Secret Key used to accept connection on provider side",
        "Computed": true
      }
    },
    "equinix_ecx_l2_serviceprofile": {
      "api_integration": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Specifies the API integration ID that was provided to the customer during onboarding"
      },
      "authkey_label": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the authentication key label to be used by the Authentication Key service"
      },
      "bandwidth_alert_threshold": {
        "Type": "Float",
        "Optional": true,
        "Description": "Specifies the port bandwidth threshold percentage. If the bandwidth limit is met or exceeded, an alert is sent to the seller"
      },
      "bandwidth_threshold_notifications": {
        "Type": "Set",
        "Required": true,
        "Description": "A list of email addresses that will receive notifications about bandwidth thresholds",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "connection_name_label": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom name used for calling a connections i.e. circuit. Defaults to Connection",
        "Default": {
          "Type": "string",
          "Value": "Connection"
        }
      },
      "ctag_label": {
        "Type": "String",
        "Optional": true,
        "Description": "C-Tag/Inner-Tag label name for the connections"
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description of the service profile"
      },
      "equinix_managed_port_vlan": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value that indicates whether the port and VLAN details are managed by Equinix"
      },
      "features": {
        "Type": "Set",
        "Required": true,
        "Description": "Block of profile features configuration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "allow_remote_connections": {
              "Type": "Bool",
              "Required": true,
              "Description": "Indicates whether or not connections to this profile can be created from remote metro locations"
            },
            "test_profile": {
              "Type": "Bool",
              "Required": true,
              "Description": "Indicates whether or not this profile can be used for test connections"
            }
          }
        }
      },
      "integration_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies the API integration ID that was provided to the customer during onboarding"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the service profile. An alpha-numeric 50 characters string which can include only hyphens and underscores"
      },
      "oversubscription": {
        "Type": "String",
        "Optional": true,
        "Description": "Oversubscription limit that will cause alerting. Default is 1x",
        "Default": {
          "Type": "string",
          "Value": "1x"
        }
      },
      "oversubscription_allowed": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value that determines if, regardless of the utilization, Equinix Fabric will continue to add connections to your links until we reach the oversubscription limit"
      },
      "port": {
        "Type": "Set",
        "Required": true,
        "Description": "One or more definitions of ports associated with the profile",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "metro_code": {
              "Type": "String",
              "Required": true,
              "Description": "Port location metro code"
            },
            "uuid": {
              "Type": "String",
              "Required": true,
              "Description": "Unique identifier of the port"
            }
          }
        }
      },
      "private": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value that indicates whether or not this is a private profile."
      },
      "private_user_emails": {
        "Type": "Set",
        "Optional": true,
        "Description": "A list of email addresses associated to users that will be allowed to access this service profile. Applicable for private profiles",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "profile_statuschange_notifications": {
        "Type": "Set",
        "Required": true,
        "Description": "A list of email addresses that will receive notifications about profile status changes",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "redundancy_required": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value that determines if yourconnections will require redundancy"
      },
      "secondary_vlan_from_primary": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether the VLAN ID of the secondary connection is the same as the primary connection"
      },
      "servicekey_autogenerated": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value that indicates whether multiple connections can be created with the same authorization key"
      },
      "speed_band": {
        "Type": "Set",
        "Optional": true,
        "Description": "One or more definitions of supported speed/bandwidth configurations",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "speed": {
              "Type": "Int",
              "Required": true,
              "Description": "Speed/bandwidth supported by given service profile"
            },
            "speed_unit": {
              "Type": "String",
              "Required": true,
              "Description": "Unit of the speed/bandwidth supported by given service profile"
            }
          }
        }
      },
      "speed_customization_allowed": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value that determines if customer is allowed to enter a custom connection speed"
      },
      "speed_from_api": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean valuta that determines if connection speed will be derived from an API call"
      },
      "state": {
        "Type": "String",
        "Description": "Service profile provisioning status",
        "Computed": true
      },
      "tag_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies additional tagging information required by the seller profile for Dot1Q to QinQ translation",
        "Default": {
          "Type": "string",
          "Value": "CTAGED"
        }
      },
      "uuid": {
        "Type": "String",
        "Description": "Unique identifier of the service profile",
        "Computed": true
      },
      "vc_statuschange_notifications": {
        "Type": "Set",
        "Required": true,
        "Description": "A list of email addresses that will receive notifications about connections approvals and rejections",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "equinix_network_acl_template": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "ACL template description"
      },
      "device_acl_status": {
        "Type": "String",
        "Description": "Status of ACL template provisioning process on a device, where template was applied",
        "Computed": true
      },
      "device_id": {
        "Type": "String",
        "Description": "Identifier of a network device where template was applied",
        "Computed": true
      },
      "inbound_rule": {
        "Type": "List",
        "Required": true,
        "Description": "One or more rules to specify allowed inbound traffic. Rules are ordered, matching traffic rule stops processing subsequent ones.",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dst_port": {
              "Type": "String",
              "Required": true,
              "Description": "Inbound traffic destination ports. Either up to 10, comma separated ports or port range or any word"
            },
            "protocol": {
              "Type": "String",
              "Required": true,
              "Description": "Inbound traffic protocol. One of: `IP`, `TCP`, `UDP`"
            },
            "sequence_number": {
              "Type": "Int",
              "Description": "Inbound rule sequence number",
              "Computed": true
            },
            "source_type": {
              "Type": "String",
              "Description": "Type of traffic source used in a given innbound rule",
              "Computed": true
            },
            "src_port": {
              "Type": "String",
              "Required": true,
              "Description": "Inbound traffic source ports. Either up to 10, comma separated ports or port range or any word"
            },
            "subnets": {
              "Type": "List",
              "Required": true,
              "Description": "Inbound traffic source IP subnets in CIDR format",
              "MinItems": 1,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "metro_code": {
        "Type": "String",
        "Required": true,
        "Description": "ACL template location metro code"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "ACL template name"
      },
      "uuid": {
        "Type": "String",
        "Description": "Unique identifier of ACL template resource",
        "Computed": true
      }
    },
    "equinix_network_bgp": {
      "__timeouts__": [
        "create"
      ],
      "authentication_key": {
        "Type": "String",
        "Optional": true,
        "Description": "Shared key used for BGP peer authentication"
      },
      "connection_id": {
        "Type": "String",
        "Required": true,
        "Description": "Identifier of a connection established between network device and remote service provider that will be used for peering"
      },
      "device_id": {
        "Type": "String",
        "Description": "Unique identifier of a network device that is a local peer in a given BGP peering configuration",
        "Computed": true
      },
      "local_asn": {
        "Type": "Int",
        "Required": true,
        "Description": "Local ASN number"
      },
      "local_ip_address": {
        "Type": "String",
        "Required": true,
        "Description": "IP address in CIDR format of a local device"
      },
      "provisioning_status": {
        "Type": "String",
        "Description": "BGP peering configuration provisioning status",
        "Computed": true
      },
      "remote_asn": {
        "Type": "Int",
        "Required": true,
        "Description": "Remote ASN number"
      },
      "remote_ip_address": {
        "Type": "String",
        "Required": true,
        "Description": "IP address of remote peer"
      },
      "state": {
        "Type": "String",
        "Description": "BGP peer state",
        "Computed": true
      },
      "uuid": {
        "Type": "String",
        "Description": "BGP peering configuration unique identifier",
        "Computed": true
      }
    },
    "equinix_network_device": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "account_number": {
        "Type": "String",
        "Required": true,
        "Description": "Device billing account number"
      },
      "acl_template_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique identifier of applied ACL template"
      },
      "additional_bandwidth": {
        "Type": "Int",
        "Optional": true,
        "Description": "Additional Internet bandwidth, in Mbps, that will be allocated to the device"
      },
      "byol": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value that determines device licensing mode: bring your own license or subscription (default)",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "core_count": {
        "Type": "Int",
        "Required": true,
        "Description": "Number of CPU cores used by device"
      },
      "hostname": {
        "Type": "String",
        "Optional": true,
        "Description": "Device hostname prefix"
      },
      "ibx": {
        "Type": "String",
        "Description": "Device location Equinix Business Exchange name",
        "Computed": true
      },
      "interface": {
        "Type": "List",
        "Description": "List of device interfaces",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "assigned_type": {
              "Type": "String",
              "Description": "Interface management type (Equinix Managed or empty)",
              "Computed": true
            },
            "id": {
              "Type": "Int",
              "Description": "Interface identifier",
              "Computed": true
            },
            "ip_address": {
              "Type": "String",
              "Description": "interface IP address",
              "Computed": true
            },
            "mac_address": {
              "Type": "String",
              "Description": "Interface MAC addres",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Interface name",
              "Computed": true
            },
            "operational_status": {
              "Type": "String",
              "Description": "Interface operational status (up or down)",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "Interface status (AVAILABLE, RESERVED, ASSIGNED)",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Interface type",
              "Computed": true
            }
          }
        }
      },
      "interface_count": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of network interfaces on a device. If not specified, default number for a given device type will be used",
        "Computed": true
      },
      "license_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Path to the license file that will be uploaded and applied on a device, applicable for some device types in BYOL licensing mode"
      },
      "license_file_id": {
        "Type": "String",
        "Description": "Unique identifier of applied license file",
        "Computed": true
      },
      "license_status": {
        "Type": "String",
        "Description": "Device license registration status",
        "Computed": true
      },
      "license_token": {
        "Type": "String",
        "Optional": true,
        "Description": "License Token applicable for some device types in BYOL licensing mode",
        "ConflictsWith": [
          "license_file"
        ]
      },
      "metro_code": {
        "Type": "String",
        "Required": true,
        "Description": "Device location metro code"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Device name"
      },
      "notifications": {
        "Type": "Set",
        "Required": true,
        "Description": "List of email addresses that will receive device status notifications",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "order_reference": {
        "Type": "String",
        "Optional": true,
        "Description": "Name/number used to identify device order on the invoice"
      },
      "package_code": {
        "Type": "String",
        "Required": true,
        "Description": "Device software package code"
      },
      "purchase_order_number": {
        "Type": "String",
        "Optional": true,
        "Description": "Purchase order number associated with a device order"
      },
      "redundancy_type": {
        "Type": "String",
        "Description": "Device redundancy type applicable for HA devices, either primary or secondary",
        "Computed": true
      },
      "redundant_id": {
        "Type": "String",
        "Description": "Unique identifier for a redundant device, applicable for HA device",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Description": "Device location region",
        "Computed": true
      },
      "secondary_device": {
        "Type": "List",
        "Optional": true,
        "Description": "Definition of secondary device applicable for HA setup",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "account_number": {
              "Type": "String",
              "Required": true,
              "Description": "Device billing account number"
            },
            "acl_template_id": {
              "Type": "String",
              "Optional": true,
              "Description": "Unique identifier of applied ACL template"
            },
            "additional_bandwidth": {
              "Type": "Int",
              "Optional": true,
              "Description": "Additional Internet bandwidth, in Mbps, that will be allocated to the device"
            },
            "hostname": {
              "Type": "String",
              "Optional": true,
              "Description": "Device hostname prefix"
            },
            "ibx": {
              "Type": "String",
              "Description": "Device location Equinix Business Exchange name",
              "Computed": true
            },
            "interface": {
              "Type": "List",
              "Description": "List of device interfaces",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "assigned_type": {
                    "Type": "String",
                    "Description": "Interface management type (Equinix Managed or empty)",
                    "Computed": true
                  },
                  "id": {
                    "Type": "Int",
                    "Description": "Interface identifier",
                    "Computed": true
                  },
                  "ip_address": {
                    "Type": "String",
                    "Description": "interface IP address",
                    "Computed": true
                  },
                  "mac_address": {
                    "Type": "String",
                    "Description": "Interface MAC addres",
                    "Computed": true
                  },
                  "name": {
                    "Type": "String",
                    "Description": "Interface name",
                    "Computed": true
                  },
                  "operational_status": {
                    "Type": "String",
                    "Description": "Interface operational status (up or down)",
                    "Computed": true
                  },
                  "status": {
                    "Type": "String",
                    "Description": "Interface status (AVAILABLE, RESERVED, ASSIGNED)",
                    "Computed": true
                  },
                  "type": {
                    "Type": "String",
                    "Description": "Interface type",
                    "Computed": true
                  }
                }
              }
            },
            "license_file": {
              "Type": "String",
              "Optional": true,
              "Description": "Path to the license file that will be uploaded and applied on a device, applicable for some device types in BYOL licensing mode"
            },
            "license_file_id": {
              "Type": "String",
              "Description": "Unique identifier of applied license file",
              "Computed": true
            },
            "license_status": {
              "Type": "String",
              "Description": "Device license registration status",
              "Computed": true
            },
            "license_token": {
              "Type": "String",
              "Optional": true,
              "Description": "License Token applicable for some device types in BYOL licensing mode",
              "ConflictsWith": [
                "secondary_device.0.license_file"
              ]
            },
            "metro_code": {
              "Type": "String",
              "Required": true,
              "Description": "Device location metro code"
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Device name"
            },
            "notifications": {
              "Type": "Set",
              "Required": true,
              "Description": "List of email addresses that will receive device status notifications",
              "MinItems": 1,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "redundancy_type": {
              "Type": "String",
              "Description": "Device redundancy type applicable for HA devices, either primary or secondary",
              "Computed": true
            },
            "redundant_id": {
              "Type": "String",
              "Description": "Unique identifier for a redundant device, applicable for HA device",
              "Computed": true
            },
            "region": {
              "Type": "String",
              "Description": "Device location region",
              "Computed": true
            },
            "ssh_ip_address": {
              "Type": "String",
              "Description": "IP address of SSH enabled interface on the device",
              "Computed": true
            },
            "ssh_ip_fqdn": {
              "Type": "String",
              "Description": "FQDN of SSH enabled interface on the device",
              "Computed": true
            },
            "ssh_key": {
              "Type": "Set",
              "Optional": true,
              "Description": "Definition of SSH key that will be provisioned on a device",
              "MaxItems": 1,
              "MinItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "key_name": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Reference by name to previously provisioned public SSH key"
                  },
                  "username": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Username associated with given key"
                  }
                }
              }
            },
            "status": {
              "Type": "String",
              "Description": "Device provisioning status",
              "Computed": true
            },
            "uuid": {
              "Type": "String",
              "Description": "Device unique identifier",
              "Computed": true
            },
            "vendor_configuration": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of vendor specific configuration parameters for a device",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "self_managed": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value that determines device management mode: self-managed or subscription (default)",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ssh_ip_address": {
        "Type": "String",
        "Description": "IP address of SSH enabled interface on the device",
        "Computed": true
      },
      "ssh_ip_fqdn": {
        "Type": "String",
        "Description": "FQDN of SSH enabled interface on the device",
        "Computed": true
      },
      "ssh_key": {
        "Type": "Set",
        "Optional": true,
        "Description": "Definition of SSH key that will be provisioned on a device",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "key_name": {
              "Type": "String",
              "Required": true,
              "Description": "Reference by name to previously provisioned public SSH key"
            },
            "username": {
              "Type": "String",
              "Required": true,
              "Description": "Username associated with given key"
            }
          }
        }
      },
      "status": {
        "Type": "String",
        "Description": "Device provisioning status",
        "Computed": true
      },
      "term_length": {
        "Type": "Int",
        "Required": true,
        "Description": "Device term length"
      },
      "throughput": {
        "Type": "Int",
        "Optional": true,
        "Description": "Device license throughput"
      },
      "throughput_unit": {
        "Type": "String",
        "Optional": true,
        "Description": "Device license throughput unit (Mbps or Gbps)"
      },
      "type_code": {
        "Type": "String",
        "Required": true,
        "Description": "Device type code"
      },
      "uuid": {
        "Type": "String",
        "Description": "Device unique identifier",
        "Computed": true
      },
      "vendor_configuration": {
        "Type": "Map",
        "Optional": true,
        "Description": "Map of vendor specific configuration parameters for a device",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "version": {
        "Type": "String",
        "Required": true,
        "Description": "Device software software version"
      }
    },
    "equinix_network_ssh_key": {
      "__timeouts__": [
        "create"
      ],
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of SSH key used for identification"
      },
      "public_key": {
        "Type": "String",
        "Required": true,
        "Description": "The SSH public key. If this is a file, it can be read using the file interpolation function"
      },
      "uuid": {
        "Type": "String",
        "Description": "The unique identifier of the key",
        "Computed": true
      }
    },
    "equinix_network_ssh_user": {
      "device_ids": {
        "Type": "Set",
        "Required": true,
        "Description": "list of device identifiers to which user will have access",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "password": {
        "Type": "String",
        "Required": true,
        "Description": "SSH user password"
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "SSH user login name"
      },
      "uuid": {
        "Type": "String",
        "Description": "SSH user unique identifier",
        "Computed": true
      }
    }
  },
  "data-sources": {
    "equinix_ecx_l2_sellerprofile": {
      "additional_info": {
        "Type": "Set",
        "Description": "One or more specifications of additional buyer information attributes that can be provided in connection definition that uses given seller profile",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "captured_in_email": {
              "Type": "Bool",
              "Description": "Specified if additional information attribute can be captured in email",
              "Computed": true
            },
            "data_type": {
              "Type": "String",
              "Description": "Data type of additional information attribute. Either BOOLEAN, INTEGER or STRING",
              "Computed": true
            },
            "description": {
              "Type": "String",
              "Description": "Textual description of additional information attribute",
              "Computed": true
            },
            "mandatory": {
              "Type": "Bool",
              "Description": "Specifies if additional information attribute is mandatory to create connection",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Name of additional information attribute",
              "Computed": true
            }
          }
        }
      },
      "description": {
        "Type": "String",
        "Description": "Seller Profile text description",
        "Computed": true
      },
      "encapsulation": {
        "Type": "String",
        "Description": "Seller profile's encapsulation (either Dot1q or QinQ)",
        "Computed": true
      },
      "metro": {
        "Type": "Set",
        "Description": "One or more specifications of metro locations supported by seller profile",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "code": {
              "Type": "String",
              "Description": "Location metro code",
              "Computed": true
            },
            "ibxes": {
              "Type": "Set",
              "Description": "List of IBXes supported within given metro",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Description": "Location metro nam",
              "Computed": true
            },
            "regions": {
              "Type": "Map",
              "Description": "List of regions supported within given metro",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the seller profile",
        "Computed": true
      },
      "organization_global_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of seller's global organization",
        "Computed": true
      },
      "organization_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of seller's organization",
        "Computed": true
      },
      "redundancy_required": {
        "Type": "Bool",
        "Description": "Boolean that indicate if seller requires connections to be redundant",
        "Computed": true
      },
      "speed_band": {
        "Type": "Set",
        "Description": "One or more specifications of speed/bandwidth supported by given seller profile",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "speed": {
              "Type": "Int",
              "Description": "Speed/bandwidth supported by given service profile",
              "Computed": true
            },
            "speed_unit": {
              "Type": "String",
              "Description": "Unit of the speed/bandwidth supported by given service profile",
              "Computed": true
            }
          }
        }
      },
      "speed_customization_allowed": {
        "Type": "Bool",
        "Description": "Boolean that indicates if seller allows customer to enter a custom connection speed",
        "Computed": true
      },
      "speed_from_api": {
        "Type": "Bool",
        "Description": "Boolean that indicates if seller is deriving connection speed from an API call",
        "Computed": true
      },
      "uuid": {
        "Type": "String",
        "Description": "Unique identifier of the seller profile",
        "Computed": true
      }
    },
    "equinix_ecx_l2_sellerprofiles": {
      "metro_codes": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of metro codes of locations that should be served by resulting profiles",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name_regex": {
        "Type": "String",
        "Optional": true,
        "Description": "A regex string to apply on returned seller profile names and filter search results"
      },
      "organization_global_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of seller's global organization"
      },
      "organization_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of seller's organization"
      },
      "profiles": {
        "Type": "List",
        "Description": "Resulting list of profiles that match filtering criteria",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "additional_info": {
              "Type": "Set",
              "Description": "One or more specifications of additional buyer information attributes that can be provided in connection definition that uses given seller profile",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "captured_in_email": {
                    "Type": "Bool",
                    "Description": "Specified if additional information attribute can be captured in email",
                    "Computed": true
                  },
                  "data_type": {
                    "Type": "String",
                    "Description": "Data type of additional information attribute. Either BOOLEAN, INTEGER or STRING",
                    "Computed": true
                  },
                  "description": {
                    "Type": "String",
                    "Description": "Textual description of additional information attribute",
                    "Computed": true
                  },
                  "mandatory": {
                    "Type": "Bool",
                    "Description": "Specifies if additional information attribute is mandatory to create connection",
                    "Computed": true
                  },
                  "name": {
                    "Type": "String",
                    "Description": "Name of additional information attribute",
                    "Computed": true
                  }
                }
              }
            },
            "description": {
              "Type": "String",
              "Description": "Seller Profile text description",
              "Computed": true
            },
            "encapsulation": {
              "Type": "String",
              "Description": "Seller profile's encapsulation (either Dot1q or QinQ)",
              "Computed": true
            },
            "metro": {
              "Type": "Set",
              "Description": "One or more specifications of metro locations supported by seller profile",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "code": {
                    "Type": "String",
                    "Description": "Location metro code",
                    "Computed": true
                  },
                  "ibxes": {
                    "Type": "Set",
                    "Description": "List of IBXes supported within given metro",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "name": {
                    "Type": "String",
                    "Description": "Location metro nam",
                    "Computed": true
                  },
                  "regions": {
                    "Type": "Map",
                    "Description": "List of regions supported within given metro",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the seller profile",
              "Computed": true
            },
            "organization_global_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of seller's global organization",
              "Computed": true
            },
            "organization_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of seller's organization",
              "Computed": true
            },
            "redundancy_required": {
              "Type": "Bool",
              "Description": "Boolean that indicate if seller requires connections to be redundant",
              "Computed": true
            },
            "speed_band": {
              "Type": "Set",
              "Description": "One or more specifications of speed/bandwidth supported by given seller profile",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "speed": {
                    "Type": "Int",
                    "Description": "Speed/bandwidth supported by given service profile",
                    "Computed": true
                  },
                  "speed_unit": {
                    "Type": "String",
                    "Description": "Unit of the speed/bandwidth supported by given service profile",
                    "Computed": true
                  }
                }
              }
            },
            "speed_customization_allowed": {
              "Type": "Bool",
              "Description": "Boolean that indicates if seller allows customer to enter a custom connection speed",
              "Computed": true
            },
            "speed_from_api": {
              "Type": "Bool",
              "Description": "Boolean that indicates if seller is deriving connection speed from an API call",
              "Computed": true
            },
            "uuid": {
              "Type": "String",
              "Description": "Unique identifier of the seller profile",
              "Computed": true
            }
          }
        }
      },
      "speed_bands": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of speed bands that should be supported by resulting profiles",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "equinix_ecx_port": {
      "bandwidth": {
        "Type": "String",
        "Description": "Port Bandwidth in bytes",
        "Computed": true
      },
      "buyout": {
        "Type": "Bool",
        "Description": "Boolean value that indicates whether the port supports unlimited connections.",
        "Computed": true
      },
      "encapsulation": {
        "Type": "String",
        "Description": "The VLAN encapsulation of the port (Dot1q or QinQ)",
        "Computed": true
      },
      "ibx": {
        "Type": "String",
        "Description": "Port location Equinix Business Exchange (IBX)",
        "Computed": true
      },
      "metro_code": {
        "Type": "String",
        "Description": "Port location metro code",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the port"
      },
      "priority": {
        "Type": "String",
        "Description": "The priority of the device (primary / secondary) where the port resides",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Description": "Port location region",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "Port status that indicates whether a port has been assigned or is ready for connection",
        "Computed": true
      },
      "uuid": {
        "Type": "String",
        "Description": "Unique identifier of the por",
        "Computed": true
      }
    },
    "equinix_network_account": {
      "metro_code": {
        "Type": "String",
        "Required": true,
        "Description": "Account location metro cod"
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Account name for filtering",
        "Computed": true
      },
      "number": {
        "Type": "String",
        "Description": "Account unique number",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "Account status for filtering. Possible values are Active, Processing, Submitted, Staged",
        "Computed": true
      },
      "ucm_id": {
        "Type": "String",
        "Description": "Account unique identifier",
        "Computed": true
      }
    },
    "equinix_network_device_platform": {
      "core_count": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of CPU cores used to limit platform search results",
        "Computed": true
      },
      "device_type": {
        "Type": "String",
        "Required": true,
        "Description": "Device type code"
      },
      "flavor": {
        "Type": "String",
        "Optional": true,
        "Description": "Device platform flavor that determines number of CPU cores and memory. Supported values: small, medium, large, xlarge",
        "Computed": true
      },
      "license_options": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of device licensing options to limit platform search result. Supported values: BYOL (Bring Your Own License), Sub (license subscription)",
        "Computed": true,
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "management_types": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of device management types to limit platform search results. Supported values: EQUINIX-CONFIGURED, SELF-CONFIGURED",
        "Computed": true,
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "memory": {
        "Type": "Int",
        "Description": "The amount of memory provided by device platform",
        "Computed": true
      },
      "memory_unit": {
        "Type": "String",
        "Description": "Unit of memory provider by device platform",
        "Computed": true
      },
      "packages": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of software package codes to limit platform search results",
        "Computed": true,
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "equinix_network_device_software": {
      "date": {
        "Type": "String",
        "Description": "Version release date",
        "Computed": true
      },
      "device_type": {
        "Type": "String",
        "Required": true,
        "Description": "Code of a device type"
      },
      "image_name": {
        "Type": "String",
        "Description": "Software image name",
        "Computed": true
      },
      "most_recent": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value to indicate that most recent version should be used, in case when more than one result is returned",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "packages": {
        "Type": "Set",
        "Optional": true,
        "Description": "Limits returned versions to those that are supported by given software package codes",
        "Computed": true,
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "release_notes_link": {
        "Type": "String",
        "Description": "Link to version release notes",
        "Computed": true
      },
      "stable": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value to limit query results to stable versions only",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "Version status",
        "Computed": true
      },
      "version": {
        "Type": "String",
        "Description": "Software version",
        "Computed": true
      },
      "version_regex": {
        "Type": "String",
        "Optional": true,
        "Description": "A regex string to apply on returned versions and filter search results"
      }
    },
    "equinix_network_device_type": {
      "category": {
        "Type": "String",
        "Optional": true,
        "Description": "Device type category, one of: Router, Firewall, SDWAN",
        "Computed": true
      },
      "code": {
        "Type": "String",
        "Description": "Device type short code, unique identifier of a network device type",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Device type textual description",
        "Computed": true
      },
      "metro_codes": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of metro codes where device type has to be available",
        "Computed": true,
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Device type name",
        "Computed": true
      },
      "vendor": {
        "Type": "String",
        "Optional": true,
        "Description": "Device type vendor i.e. Cisco, Juniper Networks, VERSA Networks",
        "Computed": true
      }
    }
  }
}