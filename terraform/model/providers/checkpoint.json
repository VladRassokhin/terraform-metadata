{
  ".schema_version": "2",
  ".sdk_type": "terraform-plugin-sdk-v1",
  "name": "checkpoint",
  "type": "provider",
  "version": "v1.6.0",
  "provider": {
    "api_key": {
      "Type": "String",
      "Optional": true,
      "Description": "Administrator API key.",
      "DefaultFunc": "ENV(CHECKPOINT_API_KEY)"
    },
    "context": {
      "Type": "String",
      "Optional": true,
      "Description": "Check Point access context - gaia_api or web_api",
      "DefaultFunc": "ENV(CHECKPOINT_CONTEXT)"
    },
    "domain": {
      "Type": "String",
      "Optional": true,
      "Description": "login to specific domain. Domain can be identified by name or UID.",
      "DefaultFunc": "ENV(CHECKPOINT_DOMAIN)"
    },
    "password": {
      "Type": "String",
      "Optional": true,
      "Description": "Check Point Management admin password",
      "DefaultFunc": "ENV(CHECKPOINT_PASSWORD)"
    },
    "port": {
      "Type": "Int",
      "Optional": true,
      "Description": "Port used for connection to the API server",
      "DefaultFunc": "ENV(CHECKPOINT_PORT)"
    },
    "proxy_host": {
      "Type": "String",
      "Optional": true,
      "Description": "HTTP proxy server address (without \"http://\").",
      "DefaultFunc": "ENV(CHECKPOINT_PROXY_HOST)"
    },
    "proxy_port": {
      "Type": "Int",
      "Optional": true,
      "Description": "HTTP proxy port.",
      "DefaultFunc": "ENV(CHECKPOINT_PROXY_PORT)"
    },
    "server": {
      "Type": "String",
      "Optional": true,
      "Description": "Check Point Management server IP",
      "DefaultFunc": "ENV(CHECKPOINT_SERVER)"
    },
    "session_file_name": {
      "Type": "String",
      "Optional": true,
      "Description": "File name used to store the current session id.",
      "DefaultFunc": "ENV(CHECKPOINT_SESSION_FILE_NAME)"
    },
    "timeout": {
      "Type": "Int",
      "Optional": true,
      "Description": "Timeout in seconds for the Go SDK to complete a transaction",
      "DefaultFunc": "ENV(CHECKPOINT_TIMEOUT)"
    },
    "username": {
      "Type": "String",
      "Optional": true,
      "Description": "Check Point Management admin name",
      "DefaultFunc": "ENV(CHECKPOINT_USERNAME)"
    }
  },
  "resources": {
    "checkpoint_hostname": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "interface name"
      }
    },
    "checkpoint_management_access_layer": {
      "add_default_rule": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether to include a cleanup rule in the new layer.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "applications_and_url_filtering": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to enable Applications \u0026 URL Filtering blade on the layer.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "content_awareness": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to enable Content Awareness blade on the layer.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "detect_using_x_forward_for": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to use X-Forward-For HTTP header, which is added by the  proxy server to keep track of the original source IP."
      },
      "firewall": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to enable Firewall blade on the layer.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "implicit_cleanup_action": {
        "Type": "String",
        "Optional": true,
        "Description": "The default \"catch-all\" action for traffic that does not match any explicit or implied rules in the layer.",
        "Default": {
          "Type": "string",
          "Value": "drop"
        }
      },
      "mobile_access": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to enable Mobile Access blade on the layer.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "shared": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether this layer is shared.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_access_point_name": {
      "apn": {
        "Type": "String",
        "Optional": true,
        "Description": "APN name."
      },
      "block_traffic_other_end_user_domains": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Block MS to MS traffic between this and other APN end user domains.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "block_traffic_this_end_user_domain": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Block MS to MS traffic within this end user domain.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "end_user_domain": {
        "Type": "String",
        "Optional": true,
        "Description": "End user domain name or UID."
      },
      "enforce_end_user_domain": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable enforce end user domain."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_access_role": {
      "__timeouts__": [
        "create"
      ],
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "machines": {
        "Type": "List",
        "Optional": true,
        "Description": "Machines that can access the system.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "base_dn": {
              "Type": "String",
              "Optional": true,
              "Description": "When source is \"Active Directory\" use \"base-dn\" to refine the query in AD database."
            },
            "selection": {
              "Type": "Set",
              "Optional": true,
              "Description": "Name or UID of an object selected from source.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "source": {
              "Type": "String",
              "Optional": true,
              "Description": "Active Directory name or UID or Identity Tag."
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "networks": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID that can access the system.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "remote_access_clients": {
        "Type": "String",
        "Optional": true,
        "Description": "Remote access clients identified by name or UID.",
        "Default": {
          "Type": "string",
          "Value": "Any"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "users": {
        "Type": "List",
        "Optional": true,
        "Description": "Users that can access the system.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "base_dn": {
              "Type": "String",
              "Optional": true,
              "Description": "When source is \"Active Directory\" use \"base-dn\" to refine the query in AD database."
            },
            "selection": {
              "Type": "Set",
              "Optional": true,
              "Description": "Name or UID of an object selected from source.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "source": {
              "Type": "String",
              "Optional": true,
              "Description": "Active Directory name or UID or Identity Tag  or Internal User Groups or LDAP groups or Guests."
            }
          }
        }
      }
    },
    "checkpoint_management_access_rule": {
      "action": {
        "Type": "String",
        "Optional": true,
        "Description": "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User Auth\", \"Client Auth\", \"Apply Layer\".",
        "Default": {
          "Type": "string",
          "Value": "Drop"
        }
      },
      "action_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Action settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "content": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of processed file types that this rule applies on.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "content_direction": {
        "Type": "String",
        "Optional": true,
        "Description": "On which direction the file types processing is applied.",
        "Default": {
          "Type": "string",
          "Value": "any"
        }
      },
      "content_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for data.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "custom_fields": {
        "Type": "Map",
        "Optional": true,
        "Description": "Custom fields.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "destination": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "destination_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for destination.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable/Disable the rule.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "inline_layer": {
        "Type": "String",
        "Optional": true,
        "Description": "Inline Layer identified by the name or UID. Relevant only if \"Action\" was set to \"Apply Layer\"."
      },
      "install_on": {
        "Type": "Set",
        "Optional": true,
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that the rule belongs to identified by the name or UID."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Rule name."
      },
      "position": {
        "Type": "Map",
        "Required": true,
        "Description": "Position in the rulebase.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for service.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "source": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "source_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for source.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "time": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of time objects. For example: \"Weekend\", \"Off-Work\", \"Every-Day\".",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "track": {
        "Type": "Map",
        "Optional": true,
        "Description": "Track Settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "user_check": {
        "Type": "List",
        "Optional": true,
        "Description": "User check settings.",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "confirm": {
              "Type": "String",
              "Optional": true,
              "Description": "N/A"
            },
            "custom_frequency": {
              "Type": "List",
              "Optional": true,
              "Description": "N/A",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "every": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "N/A"
                  },
                  "unit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "N/A"
                  }
                }
              }
            },
            "frequency": {
              "Type": "String",
              "Optional": true,
              "Description": "N/A"
            },
            "interaction": {
              "Type": "String",
              "Optional": true,
              "Description": "N/A"
            }
          }
        }
      },
      "vpn": {
        "Type": "String",
        "Optional": true,
        "Description": "Communities or Directional.",
        "Default": {
          "Type": "string",
          "Value": "Any"
        }
      }
    },
    "checkpoint_management_access_section": {
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that the rule belongs to identified by the name or UID."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "position": {
        "Type": "Map",
        "Required": true,
        "Description": "Position in the rulebase.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_aci_data_center_server": {
      "certificate_fingerprint": {
        "Type": "String",
        "Optional": true,
        "Description": "Specify the SHA-1 or SHA-256 fingerprint of the Data Center Server's certificate."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings. By Setting this parameter to 'true' test connection failure will be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the Cisco APIC server."
      },
      "password_base64": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the Cisco APIC server encoded in Base64."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "urls": {
        "Type": "List",
        "Required": true,
        "Description": "Address of APIC cluster members.\nExample: http(s)://\u003chost1 ip/url\u003e.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "User ID of the Cisco APIC server.\nWhen using commonLoginLogic Domains use the following syntax:\napic:\u003cdomain\u003e\\\u003cusername\u003e."
      }
    },
    "checkpoint_management_add_api_key": {
      "admin_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Administrator name to generate API key for."
      },
      "admin_uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Administrator uid to generate API key for."
      },
      "api_key": {
        "Type": "String",
        "Description": "Represents the API Key to be used for commonLoginLogic.",
        "Computed": true
      }
    },
    "checkpoint_management_add_data_center_object": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors."
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "data_center_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the Data Center Server the object is in."
      },
      "data_center_uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique identifier of the Data Center Server the object is in."
      },
      "groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of group identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored."
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Override default name on data-center."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid_in_data_center": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique identifier of the object in the Data Center Server."
      },
      "uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI of the object in the Data Center Server."
      }
    },
    "checkpoint_management_add_threat_protections": {
      "package_format": {
        "Type": "String",
        "Optional": true,
        "Description": "Protections package format."
      },
      "package_path": {
        "Type": "String",
        "Optional": true,
        "Description": "Protections package path."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_add_updatable_object": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors."
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored."
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid_in_updatable_objects_repository": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique identifier of the updatable object in the Updatable Objects Repository."
      },
      "uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI of the updatable object in the Updatable Objects Repository."
      }
    },
    "checkpoint_management_address_range": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ipv4_address_first": {
        "Type": "String",
        "Optional": true,
        "Description": "First IPv4 address in the range."
      },
      "ipv4_address_last": {
        "Type": "String",
        "Optional": true,
        "Description": "Last IPv4 address in the range."
      },
      "ipv6_address_first": {
        "Type": "String",
        "Optional": true,
        "Description": "First IPv6 address in the range."
      },
      "ipv6_address_last": {
        "Type": "String",
        "Optional": true,
        "Description": "Last IPv6 address in the range."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "nat_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "NAT settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_application_site": {
      "additional_categories": {
        "Type": "Set",
        "Optional": true,
        "Description": "Used to configure or edit the additional categories of a custom application / site used in the Application and URL Filtering or Threat Prevention.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "application_signature": {
        "Type": "String",
        "Optional": true,
        "Description": "Application signature generated by \u003ca href=\"https://supportcenter.checkpoint.com/supportcenter/portal?eventSubmit_doGoviewsolutiondetails=\u0026solutionid=sk103051\"\u003eSignature Tool\u003c/a\u003e."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "A description for the application."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "primary_category": {
        "Type": "String",
        "Optional": true,
        "Description": "Each application is assigned to one primary category based on its most defining aspect."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "url_list": {
        "Type": "Set",
        "Optional": true,
        "Description": "URLs that determine this particular application.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "urls_defined_as_regular_expression": {
        "Type": "Bool",
        "Optional": true,
        "Description": "States whether the URL is defined as a Regular Expression or not.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      }
    },
    "checkpoint_management_application_site_category": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "N/A"
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_application_site_group": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "members": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of application and URL filtering objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_assign_global_assignment": {
      "dependent_domains": {
        "Type": "Set",
        "Optional": true,
        "Description": "N/A",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "global_domains": {
        "Type": "Set",
        "Optional": true,
        "Description": "N/A",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tasks": {
        "Type": "Set",
        "Description": "Command asynchronous task unique identifiers",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_aws_data_center_server": {
      "access_key_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Access key ID for the AWS account.\nRequired for authentication-method: user-authentication."
      },
      "authentication_method": {
        "Type": "String",
        "Required": true,
        "Description": "user-authentication\nUses the Access keys to authenticate.\nrole-authentication\nUses the AWS IAM role to authenticate.\nThis option requires the Security Management Server be deployed in AWS and has an IAM Role."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "enable_sts_assume_role": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enables the STS Assume Role option. After it is enabled, the sts-role field is mandatory, whereas the sts-external-id is optional.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings. By Setting this parameter to 'true' test connection failure will be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "region": {
        "Type": "String",
        "Required": true,
        "Description": "Select the AWS region."
      },
      "secret_access_key": {
        "Type": "String",
        "Optional": true,
        "Description": "Secret access key for the AWS account.\nRequired for authentication-method: user-authentication."
      },
      "sts_external_id": {
        "Type": "String",
        "Optional": true,
        "Description": "An optional STS External-Id to use when assuming the role."
      },
      "sts_role": {
        "Type": "String",
        "Optional": true,
        "Description": "The STS RoleARN of the role to be assumed.\nRequired for enable-sts-assume-role: true."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_azure_data_center_server": {
      "application_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The Application ID of the Service Principal, in UUID format.\nRequired for authentication-method: service-principal-authentication."
      },
      "application_key": {
        "Type": "Bool",
        "Optional": true,
        "Description": "The key created for the Service Principal.\nRequired for authentication-method: service-principal-authentication.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "authentication_method": {
        "Type": "String",
        "Required": true,
        "Description": "user-authentication\nUses the Azure AD User to authenticate.\nservice-principal-authentication\nUses the Service Principal to authenticate."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "directory_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The Directory ID of the Azure AD, in UUID format.\nRequired for authentication-method: service-principal-authentication."
      },
      "environment": {
        "Type": "String",
        "Optional": true,
        "Description": "Select the Azure Cloud Environment.",
        "Default": {
          "Type": "string",
          "Value": "AzureCloud"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings. By Setting this parameter to 'true' test connection failure will be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the Azure account.\nRequired for authentication-method: user-authentication."
      },
      "password_base64": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the Azure account encoded in Base64.\nRequired for authentication-method: user-authentication."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "username": {
        "Type": "String",
        "Optional": true,
        "Description": "An Azure Active Directory user Format \u003cusername\u003e@\u003cdomain\u003e.\nRequired for authentication-method: user-authentication."
      }
    },
    "checkpoint_management_backup_domain": {
      "domain": {
        "Type": "String",
        "Required": true,
        "Description": "Domain can be identified by name or UID."
      },
      "file_path": {
        "Type": "String",
        "Optional": true,
        "Description": "Path in which the backup domain data will be saved. \u003cbr\u003eShould be the directory path or the full file path with \".tgz\" \u003cbr\u003eIf no path was inserted the default will be: \"/var/log/\u0026lt;domain name\u0026gt;_\u0026lt;date\u0026gt;.tgz\"."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_checkpoint_host": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "hardware": {
        "Type": "String",
        "Optional": true,
        "Description": "Hardware name.",
        "Default": {
          "Type": "string",
          "Value": "Open server"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "interfaces": {
        "Type": "List",
        "Optional": true,
        "Description": "Checkpoint host interfaces.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "color": {
              "Type": "String",
              "Optional": true,
              "Description": "Color of the object. Should be one of existing colors.",
              "Default": {
                "Type": "string",
                "Value": "black"
              }
            },
            "comments": {
              "Type": "String",
              "Optional": true,
              "Description": "Comments string."
            },
            "ignore_errors": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "ignore_warnings": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Apply changes ignoring warnings.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "mask_length4": {
              "Type": "Int",
              "Optional": true,
              "Description": "IPv4 network mask length."
            },
            "mask_length6": {
              "Type": "Int",
              "Optional": true,
              "Description": "IPv6 network mask length."
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Interface name."
            },
            "subnet4": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 network address."
            },
            "subnet6": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv6 network address."
            },
            "subnet_mask": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 network mask."
            }
          }
        }
      },
      "ipv4_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv4 address."
      },
      "ipv6_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv6 address."
      },
      "logs_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Logs settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "management_blades": {
        "Type": "Map",
        "Optional": true,
        "Description": "Management blades.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "nat_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "NAT settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "one_time_password": {
        "Type": "String",
        "Optional": true,
        "Description": "Secure internal connection one time password."
      },
      "os": {
        "Type": "String",
        "Optional": true,
        "Description": "Operating system name.",
        "Default": {
          "Type": "string",
          "Value": "Gaia"
        }
      },
      "save_logs_locally": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable save logs locally."
      },
      "send_alerts_to_server": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Server(s) to send alerts to identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_backup_server": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Backup server(s) to send logs to identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_server": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Server(s) to send logs to identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "sic_name": {
        "Type": "String",
        "Description": "Name of the Secure Internal Connection Trust.",
        "Computed": true
      },
      "sic_state": {
        "Type": "String",
        "Description": "State the Secure Internal Connection Trust.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "version": {
        "Type": "String",
        "Optional": true,
        "Description": "Checkpoint host platform version.",
        "Default": {
          "Type": "string",
          "Value": "R81"
        }
      }
    },
    "checkpoint_management_data_center_query": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "data_centers": {
        "Type": "List",
        "Optional": true,
        "Description": "Collection of Data Center servers identified by the name or UID. Use \"All\" to select all data centers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "query_rules": {
        "Type": "List",
        "Optional": true,
        "Description": "Data Center Query Rules.\u003cbr\u003eThere is an 'AND' operation between multiple Query Rules.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "key": {
              "Type": "String",
              "Optional": true,
              "Description": "Defines in which Data Center property to query.\u003cbr\u003eFor key-type \"predefined\", use these keys: type-in-data-center, name-in-data-center, and ip-address.\u003cbr\u003eFor key-type \"tag\", use the Data Center tag key to query.\u003cbr\u003eKeys are case-insensitive."
            },
            "key_type": {
              "Type": "String",
              "Optional": true,
              "Description": "The type of the \"key\" parameter.\u003cbr\u003eUse \"predefined\" for these keys: type-in-data-center, name-in-data-center, and ip-address.\u003cbr\u003eUse \"tag\" to query the Data Center tag�s property."
            },
            "values": {
              "Type": "List",
              "Optional": true,
              "Description": "The value(s) of the Data Center property to match the Query Rule.\u003cbr\u003eValues are case-insensitive.\u003cbr\u003eThere is an 'OR' operation between multiple values.\u003cbr\u003eFor key-type \"predefined\" and key 'ip-address', the values must be an IPv4 or IPv6 address.\u003cbr\u003eFor key-type \"tag\", the values must be the Data Center tag values.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_delete_api_key": {
      "admin_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Administrator name to generate API key for."
      },
      "admin_uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Administrator uid to generate API key for."
      },
      "api_key": {
        "Type": "String",
        "Optional": true,
        "Description": "API key to be deleted."
      }
    },
    "checkpoint_management_delete_data_center_object": {
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored."
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      }
    },
    "checkpoint_management_delete_threat_protections": {
      "package_format": {
        "Type": "String",
        "Optional": true,
        "Description": "Protections package format."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_delete_updatable_object": {
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored."
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      }
    },
    "checkpoint_management_discard": {},
    "checkpoint_management_disconnect": {
      "discard": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Discard all changes committed during the session."
      }
    },
    "checkpoint_management_dns_domain": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "is_sub_domain": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to match sub-domains in addition to the domain itself."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_dynamic_object": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_exception_group": {
      "applied_profile": {
        "Type": "String",
        "Optional": true,
        "Description": "The threat profile to apply this group to in the case of apply-on threat-rules-with-specific-profile."
      },
      "applied_threat_rules": {
        "Type": "List",
        "Optional": true,
        "Description": "The threat rules to apply this group on in the case of apply-on manually-select-threat-rules.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "layer": {
              "Type": "String",
              "Optional": true,
              "Description": "The layer of the threat rule to which the group is to be attached."
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of the threat rule to which the group is to be attached."
            },
            "position": {
              "Type": "Map",
              "Required": true,
              "Description": "Position in the rulebase.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "apply_on": {
        "Type": "String",
        "Optional": true,
        "Description": "An exception group can be set to apply on all threat rules, all threat rules which have a specific profile, or those rules manually chosen by the user."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_export": {
      "exclude_classes": {
        "Type": "Set",
        "Optional": true,
        "Description": "N/A",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "exclude_topics": {
        "Type": "Set",
        "Optional": true,
        "Description": "N/A",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "export_files_by_class": {
        "Type": "Bool",
        "Optional": true,
        "Description": "N/A"
      },
      "include_classes": {
        "Type": "Set",
        "Optional": true,
        "Description": "N/A",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "include_topics": {
        "Type": "Set",
        "Optional": true,
        "Description": "N/A",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "query_limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "N/A"
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_gcp_data_center_server": {
      "authentication_method": {
        "Type": "String",
        "Required": true,
        "Description": "key-authentication\nUses the Service Account private key file to authenticate.\nvm-instance-authentication\nUses the Service Account VM Instance to authenticate.\nThis option requires the Security Management Server deployed in a GCP, and runs as a Service Account with the required permissions."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings. By Setting this parameter to 'true' test connection failure will be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "private_key": {
        "Type": "String",
        "Optional": true,
        "Description": "A Service Account Key JSON file, encoded in base64.\nRequired for authentication-method: key-authentication."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_generic_data_center_server": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "custom_header": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When set to false, The admin is not using Key and Value for a Custom Header in order to connect to the feed server.\n\nWhen set to true, The admin is using Key and Value for a Custom Header in order to connect to the feed server.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "custom_key": {
        "Type": "String",
        "Optional": true,
        "Description": "Key for the Custom Header, relevant and required only when custom_header set to true."
      },
      "custom_value": {
        "Type": "String",
        "Optional": true,
        "Description": "Value for the Custom Header, relevant and required only when custom_header set to true."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings. By Setting this parameter to 'true' test connection failure will be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "interval": {
        "Type": "String",
        "Required": true,
        "Description": "Update interval of the feed in seconds."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "url": {
        "Type": "String",
        "Required": true,
        "Description": "URL of the JSON feed (e.g. https://example.com/file.json)."
      }
    },
    "checkpoint_management_get_attachment": {
      "attachment_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Attachment identifier from a log record."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Log uid from a log record."
      }
    },
    "checkpoint_management_group": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "members": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_group_with_exclusion": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "except": {
        "Type": "String",
        "Optional": true,
        "Description": "Name or UID of an object which the group excludes."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "include": {
        "Type": "String",
        "Optional": true,
        "Description": "Name or UID of an object which the group includes."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_gsn_handover_group": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "enforce_gtp": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable enforce GTP signal packet rate limit from this group."
      },
      "gtp_rate": {
        "Type": "Int",
        "Optional": true,
        "Description": "Limit of the GTP rate in PDU/sec."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "members": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of GSN handover group members identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_ha_full_sync": {
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Peer name (Multi Domain Server, Domain Server or Security Management Server)."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Peer unique identifier (Multi Domain Server, Domain Server or Security Management Server)."
      }
    },
    "checkpoint_management_host": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "host_servers": {
        "Type": "List",
        "Optional": true,
        "Description": "Servers Configuration.",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dns_server": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Gets True if this server is a DNS Server.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "mail_server": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Gets True if this server is a Mail Server.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "web_server": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Gets True if this server is a Web Server.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "web_server_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Web Server configuration.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "additional_ports": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "Server additional ports.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "application_engines": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "Application engines of this web server.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "listen_standard_port": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether server listens to standard port.",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "operating_system": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Operating System.",
                    "Default": {
                      "Type": "string",
                      "Value": "other"
                    }
                  },
                  "protected_by": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Network object which protects this server identified by the name or UID.",
                    "Default": {
                      "Type": "string",
                      "Value": "97aeb368-9aea-11d5-bd16-0090272ccb30"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "interfaces": {
        "Type": "List",
        "Optional": true,
        "Description": "Host interfaces.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "color": {
              "Type": "String",
              "Optional": true,
              "Description": "Color of the object. Should be one of existing colors.",
              "Default": {
                "Type": "string",
                "Value": "black"
              }
            },
            "comments": {
              "Type": "String",
              "Optional": true,
              "Description": "Comments string."
            },
            "ignore_errors": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "ignore_warnings": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Apply changes ignoring warnings.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "mask_length4": {
              "Type": "Int",
              "Optional": true,
              "Description": "IPv4 network mask length."
            },
            "mask_length6": {
              "Type": "Int",
              "Optional": true,
              "Description": "IPv6 network mask length."
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Object name. Should be unique in the domain."
            },
            "subnet4": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 network address."
            },
            "subnet6": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv6 network address."
            }
          }
        }
      },
      "ipv4_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv4 address."
      },
      "ipv6_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv6 address."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "nat_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "NAT settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_https_layer": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "shared": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Define the Layer as Shared (TRUE/FALSE)."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_https_rule": {
      "action": {
        "Type": "String",
        "Optional": true,
        "Description": "Rule inspect level. \"Bypass\" or \"Inspect\"."
      },
      "blade": {
        "Type": "Set",
        "Optional": true,
        "Description": "Blades for HTTPS Inspection. Identified by Name or UID to enable the inspection for. \"Anti Bot\",\"Anti Virus\",\"Application Control\",\"Data Awareness\",\"DLP\",\"IPS\",\"Threat Emulation\",\"Url Filtering\".",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "certificate": {
        "Type": "String",
        "Optional": true,
        "Description": "Internal Server Certificate identified by Name or UID, otherwise, \"Outbound Certificate\" is a default value."
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "destination": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by Name or UID that represents connection destination.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "destination_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "TRUE if \"negate\" value is set for Destination."
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable/Disable the rule."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "install_on": {
        "Type": "Set",
        "Optional": true,
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that holds the Object. Identified by the Name or UID."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "HTTPS rule name."
      },
      "position": {
        "Type": "Map",
        "Required": true,
        "Description": "Position in the rulebase.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by Name or UID that represents connection service.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "TRUE if \"negate\" value is set for Service."
      },
      "site_category": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Site Categories objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "site_category_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "TRUE if \"negate\" value is set for Site Category."
      },
      "source": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by Name or UID that represents connection source.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "source_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "TRUE if \"negate\" value is set for Source."
      },
      "track": {
        "Type": "String",
        "Optional": true,
        "Description": "\"None\",\"Log\",\"Alert\",\"Mail\",\"SNMP trap\",\"Mail\",\"User Alert\", \"User Alert 2\", \"User Alert 3\"."
      }
    },
    "checkpoint_management_https_section": {
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that holds the Object. Identified by the Name or UID."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "position": {
        "Type": "Map",
        "Required": true,
        "Description": "Position in the rulebase.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_identity_tag": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "external_identifier": {
        "Type": "String",
        "Optional": true,
        "Description": "External identifier. For example: Cisco ISE security group tag."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_install_database": {
      "targets": {
        "Type": "Set",
        "Required": true,
        "Description": "Check Point host(s) with one or more Management Software Blades enabled. The targets can be identified by their name or unique identifier.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tasks": {
        "Type": "Set",
        "Description": "Command asynchronous task unique identifiers",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_install_policy": {
      "access": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Set to be true in order to install the Access Control policy. By default, the value is true if Access Control policy is enabled on the input policy package, otherwise false."
      },
      "desktop_security": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Set to be true in order to install the Desktop Security policy. By default, the value is true if desktop security policy is enabled on the input policy package, otherwise false."
      },
      "install_on_all_cluster_members_or_fail": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Relevant for the gateway clusters. If true, the policy is installed on all the cluster members. If the installation on a cluster member fails, don't install on that cluster.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "policy_package": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the Policy Package to be installed."
      },
      "prepare_only": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If true, prepares the policy for the installation, but doesn't install it on an installation target.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "qos": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Set to be true in order to install the QoS policy. By default, the value is true if Quality-of-Service policy is enabled on the input policy package, otherwise false."
      },
      "revision": {
        "Type": "String",
        "Optional": true,
        "Description": "The UID of the revision of the policy to install."
      },
      "targets": {
        "Type": "Set",
        "Required": true,
        "Description": "On what targets to execute this command. Targets may be identified by their name, or object unique identifier.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      },
      "threat_prevention": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Set to be true in order to install the Threat Prevention policy. By default, the value is true if Threat Prevention policy is enabled on the input policy package, otherwise false."
      },
      "triggers": {
        "Type": "Set",
        "Optional": true,
        "Description": "Triggers a install-policy if there are any changes to objects in this list.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_install_software_package": {
      "cluster_installation_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Installation settings for cluster.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "concurrency_limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "The number of targets, on which the same package is installed at the same time."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the software package."
      },
      "targets": {
        "Type": "Set",
        "Required": true,
        "Description": "On what targets to execute this command. Targets may be identified by their name, or object unique identifier.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_ise_data_center_server": {
      "certificate_fingerprint": {
        "Type": "String",
        "Optional": true,
        "Description": "Specify the SHA-1 or SHA-256 fingerprint of the Data Center Server's certificate."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "hostnames": {
        "Type": "List",
        "Required": true,
        "Description": "Address of ISE administrator hostnames.\nExample: http(s)://\u003chost1 ip/url\u003e.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings. By Setting this parameter to 'true' test connection failure will be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the ISE administrator server."
      },
      "password_base64": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the Cisco ISE administrator encoded in Base64."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "User ID of the ISE administrator server.\nWhen using commonLoginLogic Domains use the following syntax:\napic:\u003cdomain\u003e\\\u003cusername\u003e."
      }
    },
    "checkpoint_management_keepalive": {},
    "checkpoint_management_kubernetes_data_center_server": {
      "ca_certificate": {
        "Type": "String",
        "Optional": true,
        "Description": "The Kubernetes public certificate key encoded in base64."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "hostname": {
        "Type": "String",
        "Required": true,
        "Description": "IP address or hostname of the Kubernetes server."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings. By Setting this parameter to 'true' test connection failure will be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "token_file": {
        "Type": "String",
        "Required": true,
        "Description": "Kubernetes access token encoded in base64."
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      }
    },
    "checkpoint_management_login": {
      "continue_last_session": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When 'continue-last-session' is set to 'True', the new session would continue where the last session was stopped. This option is available when the administrator has only one session that can be continued. If there is more than one session, see 'switch-session' API."
      },
      "domain": {
        "Type": "String",
        "Optional": true,
        "Description": "Use domain to login to specific domain. Domain can be identified by name or UID."
      },
      "enter_last_published_session": {
        "Type": "Bool",
        "Optional": true,
        "Description": "commonLoginLogic to the last published session. Such login is done with the Read Only permissions."
      },
      "password": {
        "Type": "String",
        "Required": true,
        "Description": "Administrator password."
      },
      "read_only": {
        "Type": "Bool",
        "Optional": true,
        "Description": "commonLoginLogic with Read Only permissions. This parameter is not considered in case continue-last-session is true."
      },
      "session_comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Session comments."
      },
      "session_description": {
        "Type": "String",
        "Optional": true,
        "Description": "Session description."
      },
      "session_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Session unique name."
      },
      "session_timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "Session expiration timeout in seconds. Default 600 seconds."
      },
      "user": {
        "Type": "String",
        "Required": true,
        "Description": "Administrator user name."
      }
    },
    "checkpoint_management_logout": {
      "triggers": {
        "Type": "Set",
        "Optional": true,
        "Description": "Triggers a logout if there are any changes to objects in this list.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_mds": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "domains": {
        "Type": "Set",
        "Description": "Collection of Domain objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "global_domains": {
        "Type": "Set",
        "Description": "Collection of Global domain objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hardware": {
        "Type": "String",
        "Optional": true,
        "Description": "Hardware name. For example: Open server, Smart-1, Other."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ip_pool_first": {
        "Type": "String",
        "Optional": true,
        "Description": "First IP address in the range."
      },
      "ip_pool_last": {
        "Type": "String",
        "Optional": true,
        "Description": "Last IP address in the range."
      },
      "ipv4_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv4 address."
      },
      "ipv6_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv6 address."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "one_time_password": {
        "Type": "String",
        "Optional": true,
        "Description": "Secure internal connection one time password."
      },
      "os": {
        "Type": "String",
        "Optional": true,
        "Description": "Operating system name. For example: Gaia, Linux, SecurePlatform."
      },
      "server_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Type of the management server.",
        "Default": {
          "Type": "string",
          "Value": "multi-domain server"
        }
      },
      "sic_name": {
        "Type": "String",
        "Description": "Name of the Secure Internal Connection Trust.",
        "Computed": true
      },
      "sic_state": {
        "Type": "String",
        "Description": "State the Secure Internal Connection Trust.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "version": {
        "Type": "String",
        "Optional": true,
        "Description": "System version.",
        "Default": {
          "Type": "string",
          "Value": "R81"
        }
      }
    },
    "checkpoint_management_migrate_export_domain": {
      "domain": {
        "Type": "String",
        "Required": true,
        "Description": "Domain can be identified by name or UID.\u003cbr\u003e\u003cfont color=\"red\"\u003eRequired only for\u003c/font\u003e exporting domain from Multi-Domain Server."
      },
      "file_path": {
        "Type": "String",
        "Optional": true,
        "Description": "Path in which the exported domain data will be saved. \u003cbr\u003eShould be the directory path or the full file path with \".tgz\" \u003cbr\u003eIf no path was inserted the default will be: \"/var/log/\u0026lt;domain name\u0026gt;_\u0026lt;date\u0026gt;.tgz\"."
      },
      "include_logs": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Export logs."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_migrate_import_domain": {
      "domain_ip_address": {
        "Type": "String",
        "Required": true,
        "Description": "IPv4 address.\u003cbr\u003e\u003cfont color=\"red\"\u003eRequired only for\u003c/font\u003e importing Security Management Server into Multi-Domain Server."
      },
      "domain_name": {
        "Type": "String",
        "Required": true,
        "Description": "Domain name. Should be unique in the MDS.\u003cbr\u003e\u003cfont color=\"red\"\u003eRequired only for\u003c/font\u003e importing Security Management Server into Multi-Domain Server."
      },
      "domain_server_name": {
        "Type": "String",
        "Required": true,
        "Description": "Multi Domain server name.\u003cbr\u003e\u003cfont color=\"red\"\u003eRequired only for\u003c/font\u003e importing Security Management Server into Multi-Domain Server."
      },
      "file_path": {
        "Type": "String",
        "Required": true,
        "Description": "Path to the exported file to be imported. \u003cbr\u003eShould be the full file path (example, \"/var/log/domain1_exported.tgz\")."
      },
      "include_logs": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Import logs from the input package."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_multicast_address_range": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ipv4_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv4 address."
      },
      "ipv4_address_first": {
        "Type": "String",
        "Optional": true,
        "Description": "First IPv4 address in the range."
      },
      "ipv4_address_last": {
        "Type": "String",
        "Optional": true,
        "Description": "Last IPv4 address in the range."
      },
      "ipv6_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv6 address."
      },
      "ipv6_address_first": {
        "Type": "String",
        "Optional": true,
        "Description": "First IPv6 address in the range."
      },
      "ipv6_address_last": {
        "Type": "String",
        "Optional": true,
        "Description": "Last IPv6 address in the range."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_nat_rule": {
      "auto_generated": {
        "Type": "Bool",
        "Description": "Auto generated.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable/Disable the rule.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "install_on": {
        "Type": "Set",
        "Optional": true,
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "method": {
        "Type": "String",
        "Optional": true,
        "Description": "Nat method.",
        "Default": {
          "Type": "string",
          "Value": "static"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Rule name."
      },
      "original_destination": {
        "Type": "String",
        "Optional": true,
        "Description": "Original destination.",
        "Default": {
          "Type": "string",
          "Value": "Any"
        }
      },
      "original_service": {
        "Type": "String",
        "Optional": true,
        "Description": "Original service.",
        "Default": {
          "Type": "string",
          "Value": "Any"
        }
      },
      "original_source": {
        "Type": "String",
        "Optional": true,
        "Description": "Original source.",
        "Default": {
          "Type": "string",
          "Value": "Any"
        }
      },
      "package": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the package."
      },
      "position": {
        "Type": "Map",
        "Required": true,
        "Description": "Position in the rulebase.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "translated_destination": {
        "Type": "String",
        "Optional": true,
        "Description": "Translated destination.",
        "Default": {
          "Type": "string",
          "Value": "Original"
        }
      },
      "translated_service": {
        "Type": "String",
        "Optional": true,
        "Description": "Translated service.",
        "Default": {
          "Type": "string",
          "Value": "Original"
        }
      },
      "translated_source": {
        "Type": "String",
        "Optional": true,
        "Description": "Translated source.",
        "Default": {
          "Type": "string",
          "Value": "Original"
        }
      }
    },
    "checkpoint_management_nat_section": {
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "package": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the package."
      },
      "position": {
        "Type": "Map",
        "Required": true,
        "Description": "Position in the rulebase.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_network": {
      "broadcast": {
        "Type": "String",
        "Optional": true,
        "Description": "Allow broadcast address inclusion.",
        "Default": {
          "Type": "string",
          "Value": "allow"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "mask_length4": {
        "Type": "Int",
        "Optional": true,
        "Description": "IPv4 network mask length."
      },
      "mask_length6": {
        "Type": "Int",
        "Optional": true,
        "Description": "IPv6 network mask length."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "nat_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "NAT settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "subnet4": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv4 network address."
      },
      "subnet6": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv6 network address."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_nuage_data_center_server": {
      "certificate_fingerprint": {
        "Type": "String",
        "Optional": true,
        "Description": "Specify the SHA-1 or SHA-256 fingerprint of the Data Center Server's certificate."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "hostname": {
        "Type": "String",
        "Required": true,
        "Description": "IP address or hostname of the Nuage server."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings. By Setting this parameter to 'true' test connection failure will be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "organization": {
        "Type": "String",
        "Required": true,
        "Description": "Organization name or enterprise."
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the Nuage administrator."
      },
      "password_base64": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the Nuage administrator encoded in Base64."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "Username of the Nuage administrator."
      }
    },
    "checkpoint_management_openstack_data_center_server": {
      "certificate_fingerprint": {
        "Type": "String",
        "Optional": true,
        "Description": "Specify the SHA-1 or SHA-256 fingerprint of the Data Center Server's certificate."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "hostname": {
        "Type": "String",
        "Required": true,
        "Description": "URL of the OpenStack server.\nhttp(s)://\u003chost\u003e:\u003cport\u003e/\u003cversion\u003e\nExample: https://1.2.3.4:5000/v2.0"
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings. By Setting this parameter to 'true' test connection failure will be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the OpenStack server."
      },
      "password_base64": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the OpenStack server encoded in Base64."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "Username of the OpenStack server.\nTo login to specific domain insert domain name before username.\nExample: \u003cdomain\u003e/\u003cusername\u003e"
      }
    },
    "checkpoint_management_opsec_application": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "cpmi": {
        "Type": "Map",
        "Optional": true,
        "Description": "Used to setup the CPMI client entity.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "host": {
        "Type": "String",
        "Optional": true,
        "Description": "The host where the server is running. Pre-define the host as a network object."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "lea": {
        "Type": "Map",
        "Optional": true,
        "Description": "Used to setup the LEA client entity.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "one_time_password": {
        "Type": "String",
        "Optional": true,
        "Description": "A password required for establishing a Secure Internal Communication (SIC)."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_package": {
      "access": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True - enables, False - disables access \u0026 NAT policies, empty - nothing is changed.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "desktop_security": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True - enables, False - disables Desktop security policy, empty - nothing is changed.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "installation_targets": {
        "Type": "Set",
        "Optional": true,
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "qos": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True - enables, False - disables QoS policy, empty - nothing is changed.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "qos_policy_type": {
        "Type": "String",
        "Optional": true,
        "Description": "QoS policy type.",
        "Default": {
          "Type": "string",
          "Value": "recommended"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "threat_prevention": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True - enables, False - disables Threat policy, empty - nothing is changed.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "vpn_traditional_mode": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True - enables, False - disables VPN traditional mode, empty - nothing is changed.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      }
    },
    "checkpoint_management_publish": {
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      },
      "triggers": {
        "Type": "Set",
        "Optional": true,
        "Description": "Triggers a publish if there are any changes to objects in this list.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Session unique identifier. Specify it to publish a different session than the one you currently use."
      }
    },
    "checkpoint_management_put_file": {
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "file_content": {
        "Type": "String",
        "Optional": true,
        "Description": "Text file content."
      },
      "file_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Text file name."
      },
      "file_path": {
        "Type": "String",
        "Optional": true,
        "Description": "Text file target path."
      },
      "targets": {
        "Type": "Set",
        "Required": true,
        "Description": "On what targets to execute this command. Targets may be identified by their name, or object unique identifier.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tasks": {
        "Type": "Set",
        "Description": "Command asynchronous task unique identifiers",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_restore_domain": {
      "domain_ip_address": {
        "Type": "String",
        "Required": true,
        "Description": "IPv4 address.\u003cbr\u003e\u003cfont color=\"red\"\u003eRequired only for\u003c/font\u003e importing Security Management Server into Multi-Domain Server."
      },
      "domain_name": {
        "Type": "String",
        "Required": true,
        "Description": "Domain name. Should be unique in the MDS.\u003cbr\u003e\u003cfont color=\"red\"\u003eRequired only for\u003c/font\u003e importing Security Management Server into Multi-Domain Server."
      },
      "domain_server_name": {
        "Type": "String",
        "Required": true,
        "Description": "Multi Domain server name.\u003cbr\u003e\u003cfont color=\"red\"\u003eRequired only for\u003c/font\u003e importing Security Management Server into Multi-Domain Server."
      },
      "file_path": {
        "Type": "String",
        "Required": true,
        "Description": "Path to the backup file to be restored. \u003cbr\u003eShould be the full file path (example, \"/var/log/domain1_backup.tgz\")."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      },
      "verify_only": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If true, verify that the import operation is valid for this input file and this environment \u003cbr\u003eNote: Restore operation will not be executed."
      }
    },
    "checkpoint_management_revert_to_revision": {
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      },
      "to_session": {
        "Type": "String",
        "Optional": true,
        "Description": "Session unique identifier. Specify the session  id you would like to revert your database to."
      }
    },
    "checkpoint_management_run_ips_update": {
      "package_path": {
        "Type": "String",
        "Optional": true,
        "Description": "Offline update package path."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_run_script": {
      "args": {
        "Type": "String",
        "Optional": true,
        "Description": "Script arguments."
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "script": {
        "Type": "String",
        "Required": true,
        "Description": "Script body."
      },
      "script_name": {
        "Type": "String",
        "Required": true,
        "Description": "Script name."
      },
      "targets": {
        "Type": "Set",
        "Required": true,
        "Description": "On what targets to execute this command. Targets may be identified by their name, or object unique identifier.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tasks": {
        "Type": "Set",
        "Description": "Command asynchronous task unique identifiers",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_run_threat_emulation_file_types_offline_update": {
      "file_path": {
        "Type": "String",
        "Required": true,
        "Description": "File path for offline update of Threat Emulation file types, the file path should be on the management machine."
      },
      "file_raw_data": {
        "Type": "String",
        "Required": true,
        "Description": "The contents of a file containing the Threat Emulation file types."
      }
    },
    "checkpoint_management_security_zone": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_service_citrix_tcp": {
      "application": {
        "Type": "String",
        "Optional": true,
        "Description": "Citrix application name."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_service_compound_tcp": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "compound_service": {
        "Type": "String",
        "Optional": true,
        "Description": "Compound service type.",
        "Default": {
          "Type": "string",
          "Value": "pointcast"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_service_dce_rpc": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "interface_uuid": {
        "Type": "String",
        "Optional": true,
        "Description": "Network interface UUID."
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_service_group": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "members": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_service_icmp": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "icmp_code": {
        "Type": "Int",
        "Optional": true,
        "Description": "As listed in: \u003ca href=\"http://www.iana.org/assignments/icmp-parameters\" target=\"_blank\"\u003eRFC 792\u003c/a\u003e.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "icmp_type": {
        "Type": "Int",
        "Optional": true,
        "Description": "As listed in: \u003ca href=\"http://www.iana.org/assignments/icmp-parameters\" target=\"_blank\"\u003eRFC 792\u003c/a\u003e.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_service_icmp6": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "icmp_code": {
        "Type": "Int",
        "Optional": true,
        "Description": "As listed in: \u003ca href=\"http://www.iana.org/assignments/icmp-parameters\" target=\"_blank\"\u003eRFC 792\u003c/a\u003e.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "icmp_type": {
        "Type": "Int",
        "Optional": true,
        "Description": "As listed in: \u003ca href=\"http://www.iana.org/assignments/icmp-parameters\" target=\"_blank\"\u003eRFC 792\u003c/a\u003e.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_service_other": {
      "accept_replies": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Specifies whether Other Service replies are to be accepted.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "action": {
        "Type": "String",
        "Optional": true,
        "Description": "Contains an INSPECT expression that defines the action to take if a rule containing this service is matched. Example: set r_mhandler \u0026open_ssl_handler sets a handler on the connection."
      },
      "aggressive_aging": {
        "Type": "Map",
        "Optional": true,
        "Description": "Sets short (aggressive) timeouts for idle connections.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ip_protocol": {
        "Type": "Int",
        "Optional": true,
        "Description": "IP protocol number."
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections."
      },
      "match": {
        "Type": "String",
        "Optional": true,
        "Description": "Contains an INSPECT expression that defines the matching criteria. The connection is examined against the expression during the first packet. Example: tcp, dport = 21, direction = 0 matches incoming FTP control connections."
      },
      "match_for_any": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether this service is used when 'Any' is set as the rule's service and there are several service objects with the same source port and protocol."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "override_default_settings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether this service is a Data Domain service which has been overridden.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "session_timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "Time (in seconds) before the session times out."
      },
      "sync_connections_on_cluster": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enables state-synchronized High Availability or Load Sharing on a ClusterXL or OPSEC-certified cluster."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "use_default_session_timeout": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Use default virtual session timeout.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      }
    },
    "checkpoint_management_service_rpc": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "program_number": {
        "Type": "Int",
        "Optional": true,
        "Description": "N/A"
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_service_sctp": {
      "aggressive_aging": {
        "Type": "Map",
        "Optional": true,
        "Description": "Sets short (aggressive) timeouts for idle connections.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections."
      },
      "match_for_any": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether this service is used when 'Any' is set as the rule's service and there are several service objects with the same source port and protocol."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "port": {
        "Type": "String",
        "Optional": true,
        "Description": "Port number. To specify a port range add a hyphen between the lowest and the highest port numbers, for example 44-45."
      },
      "session_timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "Time (in seconds) before the session times out."
      },
      "source_port": {
        "Type": "String",
        "Optional": true,
        "Description": "Source port number. To specify a port range add a hyphen between the lowest and the highest port numbers, for example 44-45."
      },
      "sync_connections_on_cluster": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enables state-synchronized High Availability or Load Sharing on a ClusterXL or OPSEC-certified cluster."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "use_default_session_timeout": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Use default virtual session timeout.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      }
    },
    "checkpoint_management_service_tcp": {
      "aggressive_aging": {
        "Type": "Map",
        "Optional": true,
        "Description": "Sets short (aggressive) timeouts for idle connections.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections."
      },
      "match_by_protocol_signature": {
        "Type": "Bool",
        "Optional": true,
        "Description": "A value of true enables matching by the selected protocol's signature - the signature identifies the protocol as genuine. Select this option to limit the port to the specified protocol. If the selected protocol does not support matching by signature, this field cannot be set to true.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "match_for_any": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether this service is used when 'Any' is set as the rule's service and there are several service objects with the same source port and protocol.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "override_default_settings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether this service is a Data Domain service which has been overridden."
      },
      "port": {
        "Type": "String",
        "Optional": true,
        "Description": "The number of the port used to provide this service. To specify a port range, place a hyphen between the lowest and highest port numbers, for example 44-55."
      },
      "protocol": {
        "Type": "String",
        "Optional": true,
        "Description": "Select the protocol type associated with the service, and by implication, the management server (if any) that enforces Content Security and Authentication for the service. Selecting a Protocol Type invokes the specific protocol handlers for each protocol type, thus enabling higher level of security by parsing the protocol, and higher level of connectivity by tracking dynamic actions (such as opening of ports)."
      },
      "session_timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "Time (in seconds) before the session times out.",
        "Default": {
          "Type": "int",
          "Value": "3600"
        }
      },
      "source_port": {
        "Type": "String",
        "Optional": true,
        "Description": "Port number for the client side service. If specified, only those Source port Numbers will be Accepted, Dropped, or Rejected during packet inspection. Otherwise, the source port is not inspected."
      },
      "sync_connections_on_cluster": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enables state-synchronized High Availability or Load Sharing on a ClusterXL or OPSEC-certified cluster.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "use_default_session_timeout": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Use default virtual session timeout.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      }
    },
    "checkpoint_management_service_udp": {
      "accept_replies": {
        "Type": "Bool",
        "Optional": true,
        "Description": "N/A",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "aggressive_aging": {
        "Type": "Map",
        "Optional": true,
        "Description": "Sets short (aggressive) timeouts for idle connections.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections."
      },
      "match_by_protocol_signature": {
        "Type": "Bool",
        "Optional": true,
        "Description": "A value of true enables matching by the selected protocol's signature - the signature identifies the protocol as genuine. Select this option to limit the port to the specified protocol. If the selected protocol does not support matching by signature, this field cannot be set to true.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "match_for_any": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether this service is used when 'Any' is set as the rule's service and there are several service objects with the same source port and protocol.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "override_default_settings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether this service is a Data Domain service which has been overridden."
      },
      "port": {
        "Type": "String",
        "Optional": true,
        "Description": "The number of the port used to provide this service. To specify a port range, place a hyphen between the lowest and highest port numbers, for example 44-55."
      },
      "protocol": {
        "Type": "String",
        "Optional": true,
        "Description": "Select the protocol type associated with the service, and by implication, the management server (if any) that enforces Content Security and Authentication for the service. Selecting a Protocol Type invokes the specific protocol handlers for each protocol type, thus enabling higher level of security by parsing the protocol, and higher level of connectivity by tracking dynamic actions (such as opening of ports)."
      },
      "session_timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "Time (in seconds) before the session times out.",
        "Default": {
          "Type": "int",
          "Value": "40"
        }
      },
      "source_port": {
        "Type": "String",
        "Optional": true,
        "Description": "Port number for the client side service. If specified, only those Source port Numbers will be Accepted, Dropped, or Rejected during packet inspection. Otherwise, the source port is not inspected."
      },
      "sync_connections_on_cluster": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enables state-synchronized High Availability or Load Sharing on a ClusterXL or OPSEC-certified cluster.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "use_default_session_timeout": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Use default virtual session timeout.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      }
    },
    "checkpoint_management_set_api_settings": {
      "accepted_api_calls_from": {
        "Type": "String",
        "Optional": true,
        "Description": "Clients allowed to connect to the API Server."
      },
      "automatic_start": {
        "Type": "Bool",
        "Optional": true,
        "Description": "MGMT API will start after server will start."
      }
    },
    "checkpoint_management_set_automatic_purge": {
      "enabled": {
        "Type": "Bool",
        "Required": true,
        "Description": "Turn on/off the automatic-purge feature."
      },
      "keep_sessions_by_count": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether or not to keep the latest N sessions. Note: when the automatic purge feature is enabled, this field and/or the \"keep-sessions-by-date\" field must be set to 'true'."
      },
      "keep_sessions_by_days": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether or not to keep the sessions for D days. Note: when the automatic purge feature is enabled, this field and/or the \"keep-sessions-by-count\" field must be set to 'true'."
      },
      "number_of_days_to_keep": {
        "Type": "Int",
        "Optional": true,
        "Description": "When \"keep-sessions-by-days = true\" this sets the number of days to keep the sessions."
      },
      "number_of_sessions_to_keep": {
        "Type": "Int",
        "Optional": true,
        "Description": "When \"keep-sessions-by-count = true\" this sets the number of newest sessions to preserve, by the sessions's publish date."
      },
      "scheduling": {
        "Type": "Map",
        "Optional": true,
        "Description": "When to purge sessions that do not meet the \"keep\" criteria. Note: when the automatic purge feature is enabled, this field must be set.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_set_global_domain": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors."
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored."
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "servers": {
        "Type": "Map",
        "Optional": true,
        "Description": "Multi Domain Servers. When the field is provided, 'set-global-domain' command is executed asynchronously.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers. Note: The list of tags can not be modified in a singlecommand together with the domain servers. To modify tags, please use the separate 'set-global-domain' command, without providing the list of domain servers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tasks": {
        "Type": "Set",
        "Description": "Command asynchronous task unique identifiers",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_set_ha_state": {
      "new_state": {
        "Type": "String",
        "Required": true,
        "Description": "Domain server new state."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_set_ips_update_schedule": {
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable/Disable IPS Update Schedule."
      },
      "recurrence": {
        "Type": "Map",
        "Optional": true,
        "Description": "Days recurrence.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time in format HH:mm."
      }
    },
    "checkpoint_management_set_login_message": {
      "header": {
        "Type": "String",
        "Optional": true,
        "Description": "commonLoginLogic message header."
      },
      "message": {
        "Type": "String",
        "Optional": true,
        "Description": "commonLoginLogic message body."
      },
      "show_message": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to show login message."
      },
      "warning": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Add warning sign."
      }
    },
    "checkpoint_management_set_threat_protection": {
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Protection comments."
      },
      "follow_up": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Tag the protection with pre-defined follow-up flag."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "overrides": {
        "Type": "List",
        "Optional": true,
        "Description": "Overrides per profile for this protection\u003cbr\u003e Note: Remove override for Core protections removes only the actions override. Remove override for Threat Cloud protections removes the action, track and packet captures.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Optional": true,
              "Description": "Protection action."
            },
            "capture_packets": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Capture packets."
            },
            "profile": {
              "Type": "String",
              "Optional": true,
              "Description": "Profile name."
            },
            "track": {
              "Type": "String",
              "Optional": true,
              "Description": "Tracking method for protection."
            }
          }
        }
      }
    },
    "checkpoint_management_simple_cluster": {
      "anti_bot": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Anti-Bot blade enabled."
      },
      "anti_virus": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Anti-Virus blade enabled."
      },
      "application_control": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Application Control blade enabled."
      },
      "cluster_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "Cluster mode.",
        "Default": {
          "Type": "string",
          "Value": "cluster-xl-ha"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "content_awareness": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Content Awareness blade enabled."
      },
      "data_awareness": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Data Awareness blade enabled."
      },
      "dynamic_ip": {
        "Type": "Bool",
        "Description": "Dynamic IP address.",
        "Computed": true
      },
      "firewall": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Firewall blade enabled."
      },
      "firewall_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Firewall settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hardware": {
        "Type": "String",
        "Optional": true,
        "Description": "Cluster platform hardware."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "interfaces": {
        "Type": "List",
        "Optional": true,
        "Description": "Network interfaces.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "anti_spoofing": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Anti spoofing.",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "anti_spoofing_settings": {
              "Type": "Map",
              "Optional": true,
              "Description": "Anti spoofing settings",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "color": {
              "Type": "String",
              "Optional": true,
              "Description": "Color of the object. Should be one of existing colors.",
              "Default": {
                "Type": "string",
                "Value": "black"
              }
            },
            "comments": {
              "Type": "String",
              "Optional": true,
              "Description": "Comments string."
            },
            "interface_type": {
              "Type": "String",
              "Required": true,
              "Description": "Cluster interface type."
            },
            "ipv4_address": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 address."
            },
            "ipv4_mask_length": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 network mask length."
            },
            "ipv4_network_mask": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 network address."
            },
            "ipv6_address": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv6 address."
            },
            "ipv6_mask_length": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv6 network mask length."
            },
            "ipv6_network_mask": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv6 network address."
            },
            "multicast_address": {
              "Type": "String",
              "Optional": true,
              "Description": "Multicast IP Address."
            },
            "multicast_address_type": {
              "Type": "String",
              "Optional": true,
              "Description": "Multicast Address Type."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Object name. Should be unique in the domain."
            },
            "security_zone": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Security zone.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "security_zone_settings": {
              "Type": "Map",
              "Optional": true,
              "Description": "Security zone settings.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "topology": {
              "Type": "String",
              "Optional": true,
              "Description": "Topology.",
              "Default": {
                "Type": "string",
                "Value": "automatic"
              }
            },
            "topology_automatic_calculation": {
              "Type": "String",
              "Description": "Shows the automatic topology calculation.",
              "Computed": true
            },
            "topology_settings": {
              "Type": "Map",
              "Optional": true,
              "Description": "Topology settings.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "ips": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Intrusion Prevention System blade enabled."
      },
      "ipv4_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv4 address."
      },
      "ipv6_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv6 address."
      },
      "members": {
        "Type": "List",
        "Optional": true,
        "Description": "Cluster members.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "interfaces": {
              "Type": "List",
              "Optional": true,
              "Description": "Network interfaces.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "ipv4_address": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "IPv4 address."
                  },
                  "ipv4_mask_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "IPv4 network mask length."
                  },
                  "ipv4_network_mask": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "IPv4 network address."
                  },
                  "ipv6_address": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "IPv6 address."
                  },
                  "ipv6_mask_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "IPv6 network mask length."
                  },
                  "ipv6_network_mask": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "IPv6 network address."
                  },
                  "name": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Object name. Should be unique in the domain."
                  }
                }
              }
            },
            "ip_address": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 or IPv6 address."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Object name. Should be unique in the domain."
            },
            "one_time_password": {
              "Type": "String",
              "Optional": true,
              "Description": "SIC one time password."
            },
            "priority": {
              "Type": "Int",
              "Description": "The member priority on the cluster.",
              "Computed": true
            },
            "sic_message": {
              "Type": "String",
              "Description": "Secure Internal Communication state.",
              "Computed": true
            },
            "sic_state": {
              "Type": "String",
              "Description": "Secure Internal Communication name.",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "os_name": {
        "Type": "String",
        "Optional": true,
        "Description": "OS name.",
        "Default": {
          "Type": "string",
          "Value": "Gaia"
        }
      },
      "save_logs_locally": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Save logs locally."
      },
      "send_alerts_to_server": {
        "Type": "Set",
        "Optional": true,
        "Description": "Server(s) to send alerts to.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_backup_server": {
        "Type": "Set",
        "Optional": true,
        "Description": "Backup server(s) to send logs to.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_server": {
        "Type": "Set",
        "Optional": true,
        "Description": "Server(s) to send logs to.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "sic_name": {
        "Type": "String",
        "Description": "Secure Internal Communication name.",
        "Computed": true
      },
      "sic_state": {
        "Type": "String",
        "Description": "Secure Internal Communication state.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "threat_emulation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Threat Emulation blade enabled."
      },
      "url_filtering": {
        "Type": "Bool",
        "Optional": true,
        "Description": "URL Filtering blade enabled."
      },
      "version": {
        "Type": "String",
        "Optional": true,
        "Description": "Cluster platform version."
      },
      "vpn": {
        "Type": "Bool",
        "Optional": true,
        "Description": "VPN blade enabled."
      },
      "vpn_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Gateway VPN settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_simple_gateway": {
      "anti_bot": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Anti-Bot blade enabled."
      },
      "anti_virus": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Anti-Virus blade enabled."
      },
      "application_control": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Application Control blade enabled."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "content_awareness": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Content Awareness blade enabled."
      },
      "dynamic_ip": {
        "Type": "Bool",
        "Description": "Dynamic IP address.",
        "Computed": true
      },
      "firewall": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Firewall blade enabled.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "firewall_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Firewall settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hardware": {
        "Type": "String",
        "Description": "Gateway platform hardware type.",
        "Computed": true
      },
      "icap_server": {
        "Type": "Bool",
        "Optional": true,
        "Description": "ICAP Server enabled."
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "interfaces": {
        "Type": "List",
        "Optional": true,
        "Description": "Network interfaces.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "anti_spoofing": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Anti spoofing.",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "anti_spoofing_settings": {
              "Type": "Map",
              "Optional": true,
              "Description": "Anti spoofing settings",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "color": {
              "Type": "String",
              "Optional": true,
              "Description": "Color of the object. Should be one of existing colors.",
              "Default": {
                "Type": "string",
                "Value": "black"
              }
            },
            "comments": {
              "Type": "String",
              "Optional": true,
              "Description": "Comments string."
            },
            "ipv4_address": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 address."
            },
            "ipv4_mask_length": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 network mask length."
            },
            "ipv4_network_mask": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv4 network address."
            },
            "ipv6_address": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv6 address."
            },
            "ipv6_mask_length": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv6 network mask length."
            },
            "ipv6_network_mask": {
              "Type": "String",
              "Optional": true,
              "Description": "IPv6 network address."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Object name. Should be unique in the domain."
            },
            "security_zone": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Security zone.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "security_zone_settings": {
              "Type": "Map",
              "Optional": true,
              "Description": "Security zone settings.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "topology": {
              "Type": "String",
              "Optional": true,
              "Description": "Topology.",
              "Default": {
                "Type": "string",
                "Value": "automatic"
              }
            },
            "topology_automatic_calculation": {
              "Type": "String",
              "Description": "Shows the automatic topology calculation.",
              "Computed": true
            },
            "topology_settings": {
              "Type": "Map",
              "Optional": true,
              "Description": "Topology settings.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "ips": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Intrusion Prevention System blade enabled."
      },
      "ipv4_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv4 address."
      },
      "ipv6_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv6 address."
      },
      "logs_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Logs settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "one_time_password": {
        "Type": "String",
        "Optional": true,
        "Description": "SIC one time password."
      },
      "os_name": {
        "Type": "String",
        "Optional": true,
        "Description": "OS name.",
        "Default": {
          "Type": "string",
          "Value": "Gaia"
        }
      },
      "save_logs_locally": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Save logs locally."
      },
      "send_alerts_to_server": {
        "Type": "Set",
        "Optional": true,
        "Description": "Server(s) to send alerts to.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_backup_server": {
        "Type": "Set",
        "Optional": true,
        "Description": "Backup server(s) to send logs to.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_server": {
        "Type": "Set",
        "Optional": true,
        "Description": "Server(s) to send logs to.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "sic_name": {
        "Type": "String",
        "Description": "Secure Internal Communication name.",
        "Computed": true
      },
      "sic_state": {
        "Type": "String",
        "Description": "Secure Internal Communication state.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "threat_emulation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Threat Emulation blade enabled."
      },
      "threat_extraction": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Threat Extraction blade enabled."
      },
      "url_filtering": {
        "Type": "Bool",
        "Optional": true,
        "Description": "URL Filtering blade enabled."
      },
      "version": {
        "Type": "String",
        "Optional": true,
        "Description": "Gateway platform version."
      },
      "vpn": {
        "Type": "Bool",
        "Optional": true,
        "Description": "VPN blade enabled."
      },
      "vpn_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Gateway VPN settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_threat_exception": {
      "action": {
        "Type": "String",
        "Optional": true,
        "Description": "Action-the enforced profile.",
        "Default": {
          "Type": "string",
          "Value": "Detect"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "destination": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "destination_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for destination.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable/Disable the rule.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "exception_group_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the exception-group."
      },
      "exception_group_uid": {
        "Type": "String",
        "Optional": true,
        "Description": "The UID of the exception-group."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "install_on": {
        "Type": "Set",
        "Optional": true,
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that the rule belongs to identified by the name or UID."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Rule name."
      },
      "owner": {
        "Type": "String",
        "Description": "Owner UID.",
        "Computed": true
      },
      "position": {
        "Type": "Map",
        "Required": true,
        "Description": "Position in the rulebase.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "protected_scope": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of objects defining Protected Scope identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "protected_scope_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for Protected Scope.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "protection_or_site": {
        "Type": "Set",
        "Optional": true,
        "Description": "Name of the protection or site.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "rule_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the parent rule."
      },
      "rule_uid": {
        "Type": "String",
        "Optional": true,
        "Description": "The UID of the parent rule."
      },
      "service": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for service.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "source": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "source_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for source.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "track": {
        "Type": "String",
        "Optional": true,
        "Description": "Packet tracking.",
        "Default": {
          "Type": "string",
          "Value": "Log"
        }
      }
    },
    "checkpoint_management_threat_indicator": {
      "action": {
        "Type": "String",
        "Optional": true,
        "Description": "The indicator's action.",
        "Default": {
          "Type": "string",
          "Value": "Prevent"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "observables": {
        "Type": "List",
        "Optional": true,
        "Description": "The indicator's observables.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "confidence": {
              "Type": "String",
              "Optional": true,
              "Description": "The confidence level the indicator has that a real threat has been uncovered."
            },
            "domain": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of a domain."
            },
            "ip_address": {
              "Type": "String",
              "Optional": true,
              "Description": "A valid IP-Address."
            },
            "ip_address_first": {
              "Type": "String",
              "Optional": true,
              "Description": "A valid IP-Address, the beginning of the range. If you configure this parameter with a value, you must also configure the value of the 'ip-address-last' parameter"
            },
            "ip_address_last": {
              "Type": "String",
              "Optional": true,
              "Description": "A valid IP-Address, the end of the range. If you configure this parameter with a value, you must also configure the value of the 'ip-address-first' parameter."
            },
            "mail_cc": {
              "Type": "String",
              "Optional": true,
              "Description": "A valid E-Mail address, cc field."
            },
            "mail_from": {
              "Type": "String",
              "Optional": true,
              "Description": "A valid E-Mail address, sender field."
            },
            "mail_reply_to": {
              "Type": "String",
              "Optional": true,
              "Description": "A valid E-Mail address, reply-to field."
            },
            "mail_subject": {
              "Type": "String",
              "Optional": true,
              "Description": "Subject of E-Mail."
            },
            "mail_to": {
              "Type": "String",
              "Optional": true,
              "Description": "A valid E-Mail address, recipient filed."
            },
            "md5": {
              "Type": "String",
              "Optional": true,
              "Description": "A valid MD5 sequence."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Object name. Should be unique in the domain."
            },
            "product": {
              "Type": "String",
              "Optional": true,
              "Description": "The software blade that processes the observable: AV - AntiVirus, AB - AntiBot."
            },
            "severity": {
              "Type": "String",
              "Optional": true,
              "Description": "The severity level of the threat."
            },
            "url": {
              "Type": "String",
              "Optional": true,
              "Description": "A valid URL."
            }
          }
        }
      },
      "profile_overrides": {
        "Type": "List",
        "Optional": true,
        "Description": "Profiles in which to override the indicator's default action.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Optional": true,
              "Description": "The indicator's action in this profile."
            },
            "profile": {
              "Type": "String",
              "Optional": true,
              "Description": "The profile in which to override the indicator's action."
            }
          }
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_threat_profile": {
      "activate_protections_by_extended_attributes": {
        "Type": "List",
        "Description": "Activate protections by these extended attributes.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "category": {
              "Type": "String",
              "Optional": true,
              "Description": "IPS tag category name."
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "IPS tag name."
            },
            "uid": {
              "Type": "String",
              "Optional": true,
              "Description": "IPS tag unique identifier."
            },
            "values": {
              "Type": "List",
              "Description": "IPS protection extended attribute values",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Description": "Object name.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Object unique identifier.",
                    "Computed": true
                  }
                }
              }
            }
          }
        }
      },
      "active_protections_performance_impact": {
        "Type": "String",
        "Optional": true,
        "Description": "Protections with this performance impact only will be activated in the profile."
      },
      "active_protections_severity": {
        "Type": "String",
        "Optional": true,
        "Description": "Protections with this severity only will be activated in the profile."
      },
      "anti_bot": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Is Anti-Bot blade activated.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "anti_virus": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Is Anti-Virus blade activated.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "confidence_level_high": {
        "Type": "String",
        "Optional": true,
        "Description": "Action for protections with high confidence level.",
        "Default": {
          "Type": "string",
          "Value": "Prevent"
        }
      },
      "confidence_level_low": {
        "Type": "String",
        "Optional": true,
        "Description": "Action for protections with low confidence level.",
        "Default": {
          "Type": "string",
          "Value": "Detect"
        }
      },
      "confidence_level_medium": {
        "Type": "String",
        "Optional": true,
        "Description": "Action for protections with medium confidence level.",
        "Default": {
          "Type": "string",
          "Value": "Prevent"
        }
      },
      "deactivate_protections_by_extended_attributes": {
        "Type": "List",
        "Optional": true,
        "Description": "Deactivate protections by these extended attributes.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "category": {
              "Type": "String",
              "Optional": true,
              "Description": "IPS tag category name."
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "IPS tag name."
            },
            "uid": {
              "Type": "String",
              "Optional": true,
              "Description": "IPS tag unique identifier."
            },
            "values": {
              "Type": "List",
              "Description": "IPS protection extended attribute values",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Description": "Object name.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Object unique identifier.",
                    "Computed": true
                  }
                }
              }
            }
          }
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "indicator_overrides": {
        "Type": "List",
        "Optional": true,
        "Description": "Indicators whose action will be overridden in this profile.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Optional": true,
              "Description": "The indicator's action in this profile."
            },
            "indicator": {
              "Type": "String",
              "Optional": true,
              "Description": "The indicator whose action is to be overriden."
            }
          }
        }
      },
      "ips": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Is IPS blade activated.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "ips_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "IPS blade settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "malicious_mail_policy_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Malicious Mail Policy for MTA Gateways.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "overrides": {
        "Type": "List",
        "Optional": true,
        "Description": "Overrides per profile for this protection.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Required": true,
              "Description": "Protection action."
            },
            "capture_packets": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Capture packets."
            },
            "default": {
              "Type": "Map",
              "Description": "Default settings.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "final": {
              "Type": "Map",
              "Description": "Final settings.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "protection": {
              "Type": "String",
              "Required": true,
              "Description": "IPS protection identified by name."
            },
            "protection_external_info": {
              "Type": "Set",
              "Description": "Collection of industry reference (CVE).",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "protection_uid": {
              "Type": "String",
              "Description": "IPS protection unique identifier.",
              "Computed": true
            },
            "track": {
              "Type": "String",
              "Optional": true,
              "Description": "Tracking method for protection."
            }
          }
        }
      },
      "scan_malicious_links": {
        "Type": "Map",
        "Optional": true,
        "Description": "Scans malicious links (URLs) inside email messages.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "threat_emulation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Is Threat Emulation blade activated.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "use_extended_attributes": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to activate/deactivate IPS protections according to the extended attributes."
      },
      "use_indicators": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether the profile should make use of indicators.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      }
    },
    "checkpoint_management_threat_rule": {
      "action": {
        "Type": "String",
        "Optional": true,
        "Description": "Action-the enforced profile.",
        "Default": {
          "Type": "string",
          "Value": "Optimized"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "destination": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "destination_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for destination.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable/Disable the rule.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "exceptions": {
        "Type": "Set",
        "Description": "Collection of rule's exceptions identified by UID",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "install_on": {
        "Type": "Set",
        "Optional": true,
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that the rule belongs to identified by the name or UID."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Rule name."
      },
      "position": {
        "Type": "Map",
        "Required": true,
        "Description": "Position in the rulebase.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "protected_scope": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of objects defining Protected Scope identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "protected_scope_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for Protected Scope.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "service": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for service.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "source": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Network objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "source_negate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if negate is set for source.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "track": {
        "Type": "String",
        "Optional": true,
        "Description": "Packet tracking.",
        "Default": {
          "Type": "string",
          "Value": "Log"
        }
      },
      "track_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Threat rule track settings.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_time_group": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "members": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Time Group objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_uninstall_software_package": {
      "cluster_installation_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Installation settings for cluster.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "concurrency_limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "The number of targets, on which the same package is installed at the same time."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the software package."
      },
      "targets": {
        "Type": "Set",
        "Required": true,
        "Description": "On what targets to execute this command. Targets may be identified by their name, or object unique identifier.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_unlock_administrator": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      }
    },
    "checkpoint_management_update_updatable_objects_repository_content": {
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_user": {
      "allowed_locations": {
        "Type": "Map",
        "Optional": true,
        "Description": "User allowed locations.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "authentication_method": {
        "Type": "String",
        "Optional": true,
        "Description": "Authentication method."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "connect_daily": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Connect every day."
      },
      "connect_on_days": {
        "Type": "Set",
        "Optional": true,
        "Description": "Days users allow to connect.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "email": {
        "Type": "String",
        "Optional": true,
        "Description": "User email."
      },
      "encryption": {
        "Type": "Map",
        "Optional": true,
        "Description": "User encryption.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "expiration_date": {
        "Type": "String",
        "Optional": true,
        "Description": "Expiration date in format: yyyy-MM-dd."
      },
      "from_hour": {
        "Type": "String",
        "Optional": true,
        "Description": "Allow users connect from hour."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "Checkpoint password authentication method identified by the name or UID. Must be set when \"authentication-method\" was selected to be \"Check Point Password\"."
      },
      "phone_number": {
        "Type": "String",
        "Optional": true,
        "Description": "User phone number."
      },
      "radius_server": {
        "Type": "String",
        "Optional": true,
        "Description": "RADIUS server object identified by the name or UID. Must be set when \"authentication-method\" was selected to be \"RADIUS\"."
      },
      "tacacs_server": {
        "Type": "String",
        "Optional": true,
        "Description": "TACACS server object identified by the name or UID. Must be set when \"authentication-method\" was selected to be \"TACACS\"."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "template": {
        "Type": "String",
        "Optional": true,
        "Description": "User template name or UID.",
        "Default": {
          "Type": "string",
          "Value": "Default"
        }
      },
      "to_hour": {
        "Type": "String",
        "Optional": true,
        "Description": "Allow users connect until hour."
      }
    },
    "checkpoint_management_user_group": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "email": {
        "Type": "String",
        "Optional": true,
        "Description": "Email Address."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "members": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of User Group objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_user_template": {
      "allowed_locations": {
        "Type": "Map",
        "Optional": true,
        "Description": "User allowed locations.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "authentication_method": {
        "Type": "String",
        "Optional": true,
        "Description": "Authentication method.",
        "Default": {
          "Type": "string",
          "Value": "undefined"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "connect_daily": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Connect every day.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "connect_on_days": {
        "Type": "Set",
        "Optional": true,
        "Description": "Days users allow to connect.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "encryption": {
        "Type": "Map",
        "Optional": true,
        "Description": "User encryption.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "expiration_by_global_properties": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Expiration date according to global properties."
      },
      "expiration_date": {
        "Type": "String",
        "Optional": true,
        "Description": "Expiration date in format: yyyy-MM-dd."
      },
      "from_hour": {
        "Type": "String",
        "Optional": true,
        "Description": "Allow users connect from hour.",
        "Default": {
          "Type": "string",
          "Value": "00:00"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "radius_server": {
        "Type": "String",
        "Optional": true,
        "Description": "RADIUS server object identified by the name or UID. Must be set when \"authentication-method\" was selected to be \"RADIUS\"."
      },
      "tacacs_server": {
        "Type": "String",
        "Optional": true,
        "Description": "TACACS server object identified by the name or UID. Must be set when \"authentication-method\" was selected to be \"TACACS\"."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "to_hour": {
        "Type": "String",
        "Optional": true,
        "Description": "Allow users connect until hour.",
        "Default": {
          "Type": "string",
          "Value": "23:59"
        }
      }
    },
    "checkpoint_management_verify_policy": {
      "policy_package": {
        "Type": "String",
        "Required": true,
        "Description": "Policy package identified by the name or UID."
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_verify_revert": {
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      },
      "to_session": {
        "Type": "String",
        "Required": true,
        "Description": "Session unique identifier. Specify the session you would like to verify a revert operation to."
      }
    },
    "checkpoint_management_verify_software_package": {
      "concurrency_limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "The number of targets, on which the same package is installed at the same time."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the software package."
      },
      "targets": {
        "Type": "Set",
        "Required": true,
        "Description": "On what targets to execute this command. Targets may be identified by their name, or object unique identifier.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "task_id": {
        "Type": "String",
        "Description": "Command asynchronous task unique identifier.",
        "Computed": true
      }
    },
    "checkpoint_management_vmware_data_center_server": {
      "certificate_fingerprint": {
        "Type": "String",
        "Optional": true,
        "Description": "Specify the SHA-1 or SHA-256 fingerprint of the Data Center Server's certificate."
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "hostname": {
        "Type": "String",
        "Required": true,
        "Description": "IP Address or hostname of the vCenter server."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings. By Setting this parameter to 'true' test connection failure will be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the vCenter server."
      },
      "password_base64": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the vCenter server encoded in Base64."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "VMWare object type. nsx or nsxt or vcenter."
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "Username of the vCenter server"
      }
    },
    "checkpoint_management_vpn_community_meshed": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "encryption_method": {
        "Type": "String",
        "Optional": true,
        "Description": "The encryption method to be used."
      },
      "encryption_suite": {
        "Type": "String",
        "Optional": true,
        "Description": "The encryption suite to be used."
      },
      "gateways": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Gateway objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ike_phase_1": {
        "Type": "Map",
        "Optional": true,
        "Description": "Ike Phase 1 settings. Only applicable when the encryption-suite is set to [custom].",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ike_phase_2": {
        "Type": "Map",
        "Optional": true,
        "Description": "Ike Phase 2 settings. Only applicable when the encryption-suite is set to [custom].",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "override_vpn_domains": {
        "Type": "List",
        "Optional": true,
        "Description": "The Overrides VPN Domains of the participants GWs.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "gateway": {
              "Type": "String",
              "Optional": true,
              "Description": "Participant gateway in override VPN domain identified by the name or UID."
            },
            "vpn_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "VPN domain network identified by the name or UID."
            }
          }
        }
      },
      "shared_secrets": {
        "Type": "List",
        "Optional": true,
        "Description": "Shared secrets for external gateways.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "external_gateway": {
              "Type": "String",
              "Optional": true,
              "Description": "External gateway identified by the name or UID."
            },
            "shared_secret": {
              "Type": "String",
              "Optional": true,
              "Description": "Shared secret."
            }
          }
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "use_shared_secret": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether the shared secret should be used for all external gateways.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      }
    },
    "checkpoint_management_vpn_community_remote_access": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "gateways": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Gateway objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored."
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "user_groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of User group objects identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_vpn_community_star": {
      "center_gateways": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Gateway objects representing center gateways identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "encryption_method": {
        "Type": "String",
        "Optional": true,
        "Description": "The encryption method to be used."
      },
      "encryption_suite": {
        "Type": "String",
        "Optional": true,
        "Description": "The encryption suite to be used."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ike_phase_1": {
        "Type": "Map",
        "Optional": true,
        "Description": "Ike Phase 1 settings. Only applicable when the encryption-suite is set to [custom].",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ike_phase_2": {
        "Type": "Map",
        "Optional": true,
        "Description": "Ike Phase 2 settings. Only applicable when the encryption-suite is set to [custom].",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "mesh_center_gateways": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether the meshed community is in center.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "override_vpn_domains": {
        "Type": "List",
        "Optional": true,
        "Description": "The Overrides VPN Domains of the participants GWs.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "gateway": {
              "Type": "String",
              "Optional": true,
              "Description": "Participant gateway in override VPN domain identified by the name or UID."
            },
            "vpn_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "VPN domain network identified by the name or UID."
            }
          }
        }
      },
      "satellite_gateways": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of Gateway objects representing satellite gateways identified by the name or UID.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "shared_secrets": {
        "Type": "List",
        "Optional": true,
        "Description": "Shared secrets for external gateways.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "external_gateway": {
              "Type": "String",
              "Optional": true,
              "Description": "External gateway identified by the name or UID."
            },
            "shared_secret": {
              "Type": "String",
              "Optional": true,
              "Description": "Shared secret."
            }
          }
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "use_shared_secret": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether the shared secret should be used for all external gateways.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      }
    },
    "checkpoint_management_where_used": {
      "dereference_group_members": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether to dereference \"members\" field by details level for every object in reply."
      },
      "indirect": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Search for indirect usage."
      },
      "indirect_max_depth": {
        "Type": "Int",
        "Optional": true,
        "Description": "Maximum nesting level during indirect usage search."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "show_membership": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether to calculate and show \"groups\" field for every object in reply."
      }
    },
    "checkpoint_management_wildcard": {
      "color": {
        "Type": "String",
        "Optional": true,
        "Description": "Color of the object. Should be one of existing colors.",
        "Default": {
          "Type": "string",
          "Value": "black"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "ignore_errors": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ignore_warnings": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Apply changes ignoring warnings.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "ipv4_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv4 address."
      },
      "ipv4_mask_wildcard": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv4 mask wildcard."
      },
      "ipv6_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv6 address."
      },
      "ipv6_mask_wildcard": {
        "Type": "String",
        "Optional": true,
        "Description": "IPv6 mask wildcard."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of tag identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_physical_interface": {
      "auto_negotiation": {
        "Type": "String",
        "Optional": true,
        "Description": "Activating auto_negotiation will skip the speed and duplex configuration",
        "Default": {
          "Type": "string",
          "Value": "Not-Configured"
        }
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "comments"
      },
      "duplex": {
        "Type": "String",
        "Optional": true,
        "Description": "Duplex is not relevant when 'auto_negotiation' is enabled.",
        "Default": {
          "Type": "string",
          "Value": "Not-Configured"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true
      },
      "ipv4_address": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Not-Configured"
        }
      },
      "ipv4_mask_length": {
        "Type": "Int",
        "Optional": true
      },
      "ipv6_address": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Not-Configured"
        }
      },
      "ipv6_autoconfig": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Not-Configured"
        }
      },
      "ipv6_mask_length": {
        "Type": "Int",
        "Optional": true
      },
      "mac_addr": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Not-Configured"
        }
      },
      "monitor_mode": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Not-Configured"
        }
      },
      "mtu": {
        "Type": "Int",
        "Optional": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "interface name"
      },
      "rx_ringsize": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Not-Configured"
        }
      },
      "speed": {
        "Type": "String",
        "Optional": true,
        "Description": "Speed is not relevant when 'auto_negotiation' is enabled",
        "Default": {
          "Type": "string",
          "Value": "Not-Configured"
        }
      },
      "tx_ringsize": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "Not-Configured"
        }
      }
    },
    "checkpoint_put_file": {
      "file_name": {
        "Type": "String",
        "Required": true,
        "Description": "Filename include the desired path. The file will be created in the user home directory if the full path wasn't provided"
      },
      "override": {
        "Type": "Bool",
        "Optional": true,
        "Description": "comments"
      },
      "text_content": {
        "Type": "String",
        "Required": true
      }
    }
  },
  "data-sources": {
    "checkpoint_management_access_point_name": {
      "apn": {
        "Type": "String",
        "Description": "APN name.",
        "Computed": true
      },
      "block_traffic_other_end_user_domains": {
        "Type": "Bool",
        "Description": "Block MS to MS traffic between this and other APN end user domains.",
        "Computed": true
      },
      "block_traffic_this_end_user_domain": {
        "Type": "Bool",
        "Description": "Block MS to MS traffic within this end user domain.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "end_user_domain": {
        "Type": "String",
        "Description": "End user domain name or UID.",
        "Computed": true
      },
      "enforce_end_user_domain": {
        "Type": "Bool",
        "Description": "Enable enforce end user domain.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_access_rulebase": {
      "dereference_group_members": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When true, the source, destination and services \u0026 applications parameters are displayed as ranges of IP addresses and port numbers rather than network objects.\nObjects that are not represented using IP addresses or port numbers are presented as objects.\nIn addition, the response of each rule does not contain the parameters: source, source-negate, destination, destination-negate, service and service-negate, but instead it contains the parameters: source-ranges, destination-ranges and service-ranges.\n\nNote: Requesting to show rules as ranges is limited up to 20 rules per request, otherwise an error is returned. If you wish to request more rules, use the offset and limit parameters to limit your request.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "filter": {
        "Type": "String",
        "Optional": true,
        "Description": "Search expression to filter the rulebase. The provided text should be exactly the same as it would be given in Smart Console. The logical operators in the expression ('AND', 'OR') should be provided in capital letters. If an operator is not used, the default OR operator applies."
      },
      "filter_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Sets filter preferences.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hits_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "N/A",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximal number of returned results.",
        "Default": {
          "Type": "int",
          "Value": "50"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "offset": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of the results to initially skip.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "order": {
        "Type": "List",
        "Optional": true,
        "Description": "Sorts the results by search criteria. Automatically sorts the results by Name, in the ascending order.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "asc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in ascending order."
            },
            "desc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in descending order."
            }
          }
        }
      },
      "package": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the package."
      },
      "rulebase": {
        "Type": "List",
        "Description": "The show rulebase api reply",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "from": {
              "Type": "Int",
              "Description": "From which element number the query was done.",
              "Computed": true
            },
            "objects_dictionary": {
              "Type": "List",
              "Description": "Level of details in the output corresponds to the number of details for search. This table shows the level of details in the Standard level.",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Description": "Object name. Must be unique in the domain",
                    "Computed": true
                  },
                  "type": {
                    "Type": "String",
                    "Description": "Object type.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Object unique identifier.",
                    "Computed": true
                  }
                }
              }
            },
            "rulebase": {
              "Type": "List",
              "Description": "N/A",
              "Computed": true,
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action": {
                    "Type": "String",
                    "Description": "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User Auth\", \"Client Auth\", \"Apply Layer\".",
                    "Computed": true
                  },
                  "action_settings": {
                    "Type": "Map",
                    "Description": "Action settings.",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "comments": {
                    "Type": "String",
                    "Description": "Comments string.",
                    "Computed": true
                  },
                  "content": {
                    "Type": "Set",
                    "Description": "List of processed file types that this rule applies on.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "content_direction": {
                    "Type": "String",
                    "Description": "On which direction the file types processing is applied.",
                    "Computed": true
                  },
                  "content_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for data.",
                    "Computed": true
                  },
                  "custom_fields": {
                    "Type": "Map",
                    "Description": "Custom fields.",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "destination": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "destination_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for destination.",
                    "Computed": true
                  },
                  "enabled": {
                    "Type": "Bool",
                    "Description": "Enable/Disable the rule.",
                    "Computed": true
                  },
                  "from": {
                    "Type": "Int",
                    "Description": "From which element number the query was done.",
                    "Computed": true
                  },
                  "inline_layer": {
                    "Type": "String",
                    "Description": "Inline Layer identified by the name or UID. Relevant only if \"Action\" was set to \"Apply Layer\".",
                    "Computed": true
                  },
                  "install_on": {
                    "Type": "List",
                    "Description": "Which Gateways identified by the name or UID to install the policy on.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "name": {
                    "Type": "String",
                    "Description": "Rules name.",
                    "Computed": true
                  },
                  "rule_number": {
                    "Type": "Int",
                    "Description": "Number of the rule.",
                    "Computed": true
                  },
                  "rulebase": {
                    "Type": "List",
                    "Description": "N/A",
                    "Computed": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "ComputedBlock",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "action": {
                          "Type": "String",
                          "Description": "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User Auth\", \"Client Auth\", \"Apply Layer\".",
                          "Computed": true
                        },
                        "action_settings": {
                          "Type": "Map",
                          "Description": "Action settings.",
                          "Computed": true,
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "comments": {
                          "Type": "String",
                          "Description": "Comments string.",
                          "Computed": true
                        },
                        "content": {
                          "Type": "Set",
                          "Description": "List of processed file types that this rule applies on.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "content_direction": {
                          "Type": "String",
                          "Description": "On which direction the file types processing is applied.",
                          "Computed": true
                        },
                        "content_negate": {
                          "Type": "Bool",
                          "Description": "True if negate is set for data.",
                          "Computed": true
                        },
                        "custom_fields": {
                          "Type": "Map",
                          "Description": "Custom fields.",
                          "Computed": true,
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "destination": {
                          "Type": "List",
                          "Description": "Collection of Network objects identified by the name or UID.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        },
                        "destination_negate": {
                          "Type": "Bool",
                          "Description": "True if negate is set for destination.",
                          "Computed": true
                        },
                        "enabled": {
                          "Type": "Bool",
                          "Description": "Enable/Disable the rule.",
                          "Computed": true
                        },
                        "inline_layer": {
                          "Type": "String",
                          "Description": "Inline Layer identified by the name or UID. Relevant only if \"Action\" was set to \"Apply Layer\".",
                          "Computed": true
                        },
                        "install_on": {
                          "Type": "List",
                          "Description": "Which Gateways identified by the name or UID to install the policy on.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        },
                        "name": {
                          "Type": "String",
                          "Description": "Rules name.",
                          "Computed": true
                        },
                        "rule_number": {
                          "Type": "Int",
                          "Description": "Number of the rule.",
                          "Computed": true
                        },
                        "service": {
                          "Type": "List",
                          "Description": "Collection of Network objects identified by the name or UID.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        },
                        "service_negate": {
                          "Type": "Bool",
                          "Description": "True if negate is set for service.",
                          "Computed": true
                        },
                        "service_resource": {
                          "Type": "String",
                          "Description": "service resource.",
                          "Computed": true
                        },
                        "source": {
                          "Type": "List",
                          "Description": "Collection of Network objects identified by the name or UID.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        },
                        "source_negate": {
                          "Type": "Bool",
                          "Description": "True if negate is set for source.",
                          "Computed": true
                        },
                        "time": {
                          "Type": "Set",
                          "Description": "List of time objects. For example: \"Weekend\", \"Off-Work\", \"Every-Day\".",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "track": {
                          "Type": "Map",
                          "Description": "Track Settings.",
                          "Computed": true,
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "type": {
                          "Type": "String",
                          "Description": "Rules type.",
                          "Computed": true
                        },
                        "uid": {
                          "Type": "String",
                          "Description": "Rules uid.",
                          "Computed": true
                        },
                        "vpn": {
                          "Type": "List",
                          "Description": "Communities or Directional.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        }
                      }
                    }
                  },
                  "service": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "service_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for service.",
                    "Computed": true
                  },
                  "service_resource": {
                    "Type": "String",
                    "Description": "service resource.",
                    "Computed": true
                  },
                  "source": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "source_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for source.",
                    "Computed": true
                  },
                  "time": {
                    "Type": "Set",
                    "Description": "List of time objects. For example: \"Weekend\", \"Off-Work\", \"Every-Day\".",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "to": {
                    "Type": "Int",
                    "Description": "To which element number the query was done.",
                    "Computed": true
                  },
                  "track": {
                    "Type": "Map",
                    "Description": "Track Settings.",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "type": {
                    "Type": "String",
                    "Description": "Rules type.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Rules uid.",
                    "Computed": true
                  },
                  "vpn": {
                    "Type": "List",
                    "Description": "Communities or Directional.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  }
                }
              }
            },
            "to": {
              "Type": "Int",
              "Description": "To which element number the query was done.",
              "Computed": true
            },
            "total": {
              "Type": "Int",
              "Description": "Total number of elements returned by the query.",
              "Computed": true
            }
          }
        }
      },
      "show_as_ranges": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When true, the source, destination and services \u0026 applications parameters are displayed as ranges of IP addresses and port numbers rather than network objects.\nObjects that are not represented using IP addresses or port numbers are presented as objects.\nIn addition, the response of each rule does not contain the parameters: source, source-negate, destination, destination-negate, service and service-negate, but instead it contains the parameters: source-ranges, destination-ranges and service-ranges.\n\nNote: Requesting to show rules as ranges is limited up to 20 rules per request, otherwise an error is returned. If you wish to request more rules, use the offset and limit parameters to limit your request.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "show_hits": {
        "Type": "Bool",
        "Optional": true,
        "Description": "N/A"
      },
      "show_membership": {
        "Type": "Bool",
        "Optional": true,
        "Description": "N/A",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_aci_data_center_server": {
      "certificate_fingerprint": {
        "Type": "String",
        "Description": "Specify the SHA-1 or SHA-256 fingerprint of the Data Center Server's certificate.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Computed": true
      },
      "urls": {
        "Type": "List",
        "Description": "Address of APIC cluster members.\nExample: http(s)://\u003chost1 ip/url\u003e.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "username": {
        "Type": "String",
        "Description": "User ID of the Cisco APIC server.\nWhen using commonLoginLogic Domains use the following syntax:\napic:\u003cdomain\u003e\\\u003cusername\u003e.",
        "Computed": true
      }
    },
    "checkpoint_management_aws_data_center_server": {
      "access_key_id": {
        "Type": "String",
        "Description": "Access key ID for the AWS account.\nRequired for authentication-method: user-authentication.",
        "Computed": true
      },
      "authentication_method": {
        "Type": "String",
        "Description": "user-authentication\nUses the Access keys to authenticate.\nrole-authentication\nUses the AWS IAM role to authenticate.\nThis option requires the Security Management Server be deployed in AWS and has an IAM Role.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Computed": true
      },
      "enable_sts_assume_role": {
        "Type": "Bool",
        "Description": "Enables the STS Assume Role option. After it is enabled, the sts-role field is mandatory, whereas the sts-external-id is optional.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "region": {
        "Type": "String",
        "Description": "Select the AWS region.",
        "Computed": true
      },
      "sts_external_id": {
        "Type": "String",
        "Description": "An optional STS External-Id to use when assuming the role.",
        "Computed": true
      },
      "sts_role": {
        "Type": "String",
        "Description": "The STS RoleARN of the role to be assumed.\nRequired for enable-sts-assume-role: true.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_azure_data_center_server": {
      "application_id": {
        "Type": "String",
        "Description": "The Application ID of the Service Principal, in UUID format.\nRequired for authentication-method: service-principal-authentication.",
        "Computed": true
      },
      "authentication_method": {
        "Type": "String",
        "Description": "user-authentication\nUses the Azure AD User to authenticate.\nservice-principal-authentication\nUses the Service Principal to authenticate.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Computed": true
      },
      "directory_id": {
        "Type": "String",
        "Description": "The Directory ID of the Azure AD, in UUID format.\nRequired for authentication-method: service-principal-authentication.",
        "Computed": true
      },
      "environment": {
        "Type": "String",
        "Description": "Select the Azure Cloud Environment.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "username": {
        "Type": "String",
        "Description": "An Azure Active Directory user Format \u003cusername\u003e@\u003cdomain\u003e.\nRequired for authentication-method: user-authentication.",
        "Computed": true
      }
    },
    "checkpoint_management_checkpoint_host": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "hardware": {
        "Type": "String",
        "Description": "Hardware name.",
        "Computed": true
      },
      "interfaces": {
        "Type": "List",
        "Description": "Checkpoint host interfaces.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "color": {
              "Type": "String",
              "Description": "Color of the object. Should be one of existing colors.",
              "Computed": true
            },
            "comments": {
              "Type": "String",
              "Description": "Comments string.",
              "Computed": true
            },
            "mask_length4": {
              "Type": "Int",
              "Description": "IPv4 network mask length.",
              "Computed": true
            },
            "mask_length6": {
              "Type": "Int",
              "Description": "IPv6 network mask length.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Interface name.",
              "Computed": true
            },
            "subnet4": {
              "Type": "String",
              "Description": "IPv4 network address.",
              "Computed": true
            },
            "subnet6": {
              "Type": "String",
              "Description": "IPv6 network address.",
              "Computed": true
            },
            "subnet_mask": {
              "Type": "String",
              "Description": "IPv4 network mask.",
              "Computed": true
            }
          }
        }
      },
      "ipv4_address": {
        "Type": "String",
        "Description": "IPv4 address.",
        "Computed": true
      },
      "ipv6_address": {
        "Type": "String",
        "Description": "IPv6 address.",
        "Computed": true
      },
      "logs_settings": {
        "Type": "Map",
        "Description": "Logs settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "management_blades": {
        "Type": "Map",
        "Optional": true,
        "Description": "Management blades.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "nat_settings": {
        "Type": "Map",
        "Description": "NAT settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "os": {
        "Type": "String",
        "Description": "Operating system name.",
        "Computed": true
      },
      "save_logs_locally": {
        "Type": "Bool",
        "Description": "Enable save logs locally.",
        "Computed": true
      },
      "send_alerts_to_server": {
        "Type": "Set",
        "Description": "Collection of Server(s) to send alerts to identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_backup_server": {
        "Type": "Set",
        "Description": "Collection of Backup server(s) to send logs to identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_server": {
        "Type": "Set",
        "Description": "Collection of Server(s) to send logs to identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "sic_name": {
        "Type": "String",
        "Description": "Name of the Secure Internal Connection Trust.",
        "Computed": true
      },
      "sic_state": {
        "Type": "String",
        "Description": "State the Secure Internal Connection Trust.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "version": {
        "Type": "String",
        "Description": "Checkpoint host platform version.",
        "Computed": true
      }
    },
    "checkpoint_management_data_access_layer": {
      "applications_and_url_filtering": {
        "Type": "Bool",
        "Description": "Whether to enable Applications \u0026 URL Filtering blade on the layer.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "content_awareness": {
        "Type": "Bool",
        "Description": "Whether to enable Content Awareness blade on the layer.",
        "Computed": true
      },
      "detect_using_x_forward_for": {
        "Type": "Bool",
        "Description": "Whether to use X-Forward-For HTTP header, which is added by the  proxy server to keep track of the original source IP.",
        "Computed": true
      },
      "firewall": {
        "Type": "Bool",
        "Description": "Whether to enable Firewall blade on the layer.",
        "Computed": true
      },
      "implicit_cleanup_action": {
        "Type": "String",
        "Description": "The default \"catch-all\" action for traffic that does not match any explicit or implied rules in the layer.",
        "Computed": true
      },
      "mobile_access": {
        "Type": "Bool",
        "Description": "Whether to enable Mobile Access blade on the layer.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "shared": {
        "Type": "Bool",
        "Description": "Whether this layer is shared.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_access_role": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "machines": {
        "Type": "List",
        "Description": "Machines that can access the system.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "base_dn": {
              "Type": "String",
              "Description": "When source is \"Active Directory\" use \"base-dn\" to refine the query in AD database.",
              "Computed": true
            },
            "selection": {
              "Type": "Set",
              "Description": "Name or UID of an object selected from source.",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "source": {
              "Type": "String",
              "Description": "Active Directory name or UID or Identity Tag.",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "networks": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID that can access the system.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "remote_access_clients": {
        "Type": "String",
        "Description": "Remote access clients identified by name or UID.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "users": {
        "Type": "List",
        "Description": "Users that can access the system.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "base_dn": {
              "Type": "String",
              "Description": "When source is \"Active Directory\" use \"base-dn\" to refine the query in AD database.",
              "Computed": true
            },
            "selection": {
              "Type": "Set",
              "Description": "Name or UID of an object selected from source.",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "source": {
              "Type": "String",
              "Description": "Active Directory name or UID or Identity Tag  or Internal User Groups or LDAP groups or Guests.",
              "Computed": true
            }
          }
        }
      }
    },
    "checkpoint_management_data_access_rule": {
      "action": {
        "Type": "String",
        "Description": "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User Auth\", \"Client Auth\", \"Apply Layer\".",
        "Computed": true
      },
      "action_settings": {
        "Type": "Map",
        "Description": "Action settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "content": {
        "Type": "Set",
        "Description": "List of processed file types that this rule applies on.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "content_direction": {
        "Type": "String",
        "Description": "On which direction the file types processing is applied.",
        "Computed": true
      },
      "content_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for data.",
        "Computed": true
      },
      "custom_fields": {
        "Type": "Map",
        "Description": "Custom fields.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "destination": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "destination_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for destination.",
        "Computed": true
      },
      "enabled": {
        "Type": "Bool",
        "Description": "Enable/Disable the rule.",
        "Computed": true
      },
      "inline_layer": {
        "Type": "String",
        "Description": "Inline Layer identified by the name or UID. Relevant only if \"Action\" was set to \"Apply Layer\".",
        "Computed": true
      },
      "install_on": {
        "Type": "Set",
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that the rule belongs to identified by the name or UID."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "service": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for service.",
        "Computed": true
      },
      "source": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "source_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for source.",
        "Computed": true
      },
      "time": {
        "Type": "Set",
        "Description": "List of time objects. For example: \"Weekend\", \"Off-Work\", \"Every-Day\".",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "track": {
        "Type": "Map",
        "Description": "Track Settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "user_check": {
        "Type": "List",
        "Description": "User check settings.",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "confirm": {
              "Type": "String",
              "Description": "N/A",
              "Computed": true
            },
            "custom_frequency": {
              "Type": "List",
              "Description": "N/A",
              "Computed": true,
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "every": {
                    "Type": "Int",
                    "Description": "N/A",
                    "Computed": true
                  },
                  "unit": {
                    "Type": "String",
                    "Description": "N/A",
                    "Computed": true
                  }
                }
              }
            },
            "frequency": {
              "Type": "String",
              "Description": "N/A",
              "Computed": true
            },
            "interaction": {
              "Type": "String",
              "Description": "N/A",
              "Computed": true
            }
          }
        }
      },
      "vpn": {
        "Type": "String",
        "Description": "Communities or Directional.",
        "Computed": true
      }
    },
    "checkpoint_management_data_access_section": {
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that the rule belongs to identified by the name or UID."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_address_range": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ipv4_address_first": {
        "Type": "String",
        "Description": "First IPv4 address in the range.",
        "Computed": true
      },
      "ipv4_address_last": {
        "Type": "String",
        "Description": "Last IPv4 address in the range.",
        "Computed": true
      },
      "ipv6_address_first": {
        "Type": "String",
        "Description": "First IPv6 address in the range.",
        "Computed": true
      },
      "ipv6_address_last": {
        "Type": "String",
        "Description": "Last IPv6 address in the range.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "nat_settings": {
        "Type": "Map",
        "Description": "NAT settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_application_site": {
      "additional_categories": {
        "Type": "Set",
        "Description": "Used to configure or edit the additional categories of a custom application / site used in the Application and URL Filtering or Threat Prevention.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "application_signature": {
        "Type": "String",
        "Description": "Application signature generated by \u003ca href=\"https://supportcenter.checkpoint.com/supportcenter/portal?eventSubmit_doGoviewsolutiondetails=\u0026solutionid=sk103051\"\u003eSignature Tool\u003c/a\u003e.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "A description for the application.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "primary_category": {
        "Type": "String",
        "Description": "Each application is assigned to one primary category based on its most defining aspect.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "url_list": {
        "Type": "Set",
        "Description": "URLs that determine this particular application.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "urls_defined_as_regular_expression": {
        "Type": "Bool",
        "Description": "States whether the URL is defined as a Regular Expression or not.",
        "Computed": true
      }
    },
    "checkpoint_management_data_application_site_category": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "N/A",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_application_site_group": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "members": {
        "Type": "Set",
        "Description": "Collection of application and URL filtering objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_center_content": {
      "data_center_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the Data Center Server where to search for objects."
      },
      "data_center_uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique identifier of the Data Center Server where to search for objects."
      },
      "filter": {
        "Type": "Map",
        "Optional": true,
        "Description": "Return results matching the specified filter.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "from": {
        "Type": "Int",
        "Description": "From which element number the query was done.",
        "Computed": true
      },
      "limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximal number of returned results.",
        "Default": {
          "Type": "int",
          "Value": "50"
        }
      },
      "objects": {
        "Type": "List",
        "Description": "Remote objects views.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "additional_properties": {
              "Type": "Map",
              "Description": "Additional properties on the object.\nRemote objects views.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "data_center_object": {
              "Type": "Map",
              "Description": "The imported management object (if exists). Level of details in the output corresponds to the number of details for search. This table shows the level of details in the Standard level.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Description": "Object management name.",
              "Computed": true
            },
            "name_in_data_center": {
              "Type": "String",
              "Description": "Object name in the Data Center.",
              "Computed": true
            },
            "type_in_data_center": {
              "Type": "String",
              "Description": "Object type in Data Center.",
              "Computed": true
            },
            "uid_in_data_center": {
              "Type": "String",
              "Description": "Unique identifier of the object in the Data Center.",
              "Computed": true
            }
          }
        }
      },
      "offset": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of the results to initially skip.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "order": {
        "Type": "List",
        "Optional": true,
        "Description": "Sorts the results by search criteria. Automatically sorts the results by Name, in the ascending order.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "asc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in ascending order."
            },
            "desc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in descending order."
            }
          }
        }
      },
      "to": {
        "Type": "Int",
        "Description": "To which element number the query was done.",
        "Computed": true
      },
      "total": {
        "Type": "Int",
        "Description": "Total number of elements returned by the query.",
        "Computed": true
      },
      "uid_in_data_center": {
        "Type": "String",
        "Optional": true,
        "Description": "Return result matching the unique identifier of the object on the Data Center Server."
      }
    },
    "checkpoint_management_data_center_query": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "data_centers": {
        "Type": "List",
        "Description": "Collection of Data Center servers identified by the name or UID. Use \"All\" to select all data centers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "query_rules": {
        "Type": "List",
        "Description": "Data Center Query Rules.\u003cbr\u003eThere is an 'AND' operation between multiple Query Rules.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "key": {
              "Type": "String",
              "Optional": true,
              "Description": "Defines in which Data Center property to query.\u003cbr\u003eFor key-type \"predefined\", use these keys: type-in-data-center, name-in-data-center, and ip-address.\u003cbr\u003eFor key-type \"tag\", use the Data Center tag key to query.\u003cbr\u003eKeys are case-insensitive."
            },
            "key_type": {
              "Type": "String",
              "Optional": true,
              "Description": "The type of the \"key\" parameter.\u003cbr\u003eUse \"predefined\" for these keys: type-in-data-center, name-in-data-center, and ip-address.\u003cbr\u003eUse \"tag\" to query the Data Center tag�s property."
            },
            "values": {
              "Type": "List",
              "Optional": true,
              "Description": "The value(s) of the Data Center property to match the Query Rule.\u003cbr\u003eValues are case-insensitive.\u003cbr\u003eThere is an 'OR' operation between multiple values.\u003cbr\u003eFor key-type \"predefined\" and key 'ip-address', the values must be an IPv4 or IPv6 address.\u003cbr\u003eFor key-type \"tag\", the values must be the Data Center tag values.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_dns_domain": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "is_sub_domain": {
        "Type": "Bool",
        "Description": "Whether to match sub-domains in addition to the domain itself.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_dynamic_object": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_exception_group": {
      "applied_profile": {
        "Type": "String",
        "Description": "The threat profile to apply this group to in the case of apply-on threat-rules-with-specific-profile.",
        "Computed": true
      },
      "apply_on": {
        "Type": "String",
        "Description": "An exception group can be set to apply on all threat rules, all threat rules which have a specific profile, or those rules manually chosen by the user.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_group": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group name.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "members": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_group_with_exclusion": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "except": {
        "Type": "String",
        "Description": "Name or UID of an object which the group excludes.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "include": {
        "Type": "String",
        "Description": "Name or UID of an object which the group includes.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_host": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "host_servers": {
        "Type": "List",
        "Description": "Servers Configuration.",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dns_server": {
              "Type": "Bool",
              "Description": "Gets True if this server is a DNS Server.",
              "Computed": true
            },
            "mail_server": {
              "Type": "Bool",
              "Description": "Gets True if this server is a Mail Server.",
              "Computed": true
            },
            "web_server": {
              "Type": "Bool",
              "Description": "Gets True if this server is a Web Server.",
              "Computed": true
            },
            "web_server_config": {
              "Type": "List",
              "Description": "Web Server configuration.",
              "Computed": true,
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "additional_ports": {
                    "Type": "Set",
                    "Description": "Server additional ports.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "application_engines": {
                    "Type": "Set",
                    "Description": "Application engines of this web server.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "listen_standard_port": {
                    "Type": "Bool",
                    "Description": "Whether server listens to standard port.",
                    "Computed": true
                  },
                  "operating_system": {
                    "Type": "String",
                    "Description": "Operating System.",
                    "Computed": true
                  },
                  "protected_by": {
                    "Type": "String",
                    "Description": "Network object which protects this server identified by the name or UID.",
                    "Computed": true
                  }
                }
              }
            }
          }
        }
      },
      "interfaces": {
        "Type": "List",
        "Description": "Host interfaces.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "color": {
              "Type": "String",
              "Description": "Color of the object. Should be one of existing colors.",
              "Computed": true
            },
            "comments": {
              "Type": "String",
              "Description": "Comments string.",
              "Computed": true
            },
            "mask_length4": {
              "Type": "Int",
              "Description": "IPv4 network mask length.",
              "Computed": true
            },
            "mask_length6": {
              "Type": "Int",
              "Description": "IPv6 network mask length.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Object name. Should be unique in the domain.",
              "Computed": true
            },
            "subnet4": {
              "Type": "String",
              "Description": "IPv4 network address.",
              "Computed": true
            },
            "subnet6": {
              "Type": "String",
              "Description": "IPv6 network address.",
              "Computed": true
            }
          }
        }
      },
      "ipv4_address": {
        "Type": "String",
        "Description": "IPv4 address.",
        "Computed": true
      },
      "ipv6_address": {
        "Type": "String",
        "Description": "IPv6 address.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "nat_settings": {
        "Type": "Map",
        "Description": "NAT settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_https_layer": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "shared": {
        "Type": "Bool",
        "Description": "Define the Layer as Shared (TRUE/FALSE).",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_https_rule": {
      "action": {
        "Type": "String",
        "Description": "Rule inspect level. \"Bypass\" or \"Inspect\".",
        "Computed": true
      },
      "blade": {
        "Type": "Set",
        "Description": "Blades for HTTPS Inspection. Identified by Name or UID to enable the inspection for. \"Anti Bot\",\"Anti Virus\",\"Application Control\",\"Data Awareness\",\"DLP\",\"IPS\",\"Threat Emulation\",\"Url Filtering\".",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "certificate": {
        "Type": "String",
        "Description": "Internal Server Certificate identified by Name or UID, otherwise, \"Outbound Certificate\" is a default value.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "destination": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by Name or UID that represents connection destination.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "destination_negate": {
        "Type": "Bool",
        "Description": "TRUE if \"negate\" value is set for Destination.",
        "Computed": true
      },
      "enabled": {
        "Type": "Bool",
        "Description": "Enable/Disable the rule.",
        "Computed": true
      },
      "install_on": {
        "Type": "Set",
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that holds the Object. Identified by the Name or UID."
      },
      "name": {
        "Type": "String",
        "Description": "Object name.",
        "Computed": true
      },
      "rule_number": {
        "Type": "String",
        "Optional": true,
        "Description": "HTTPS rule number."
      },
      "service": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by Name or UID that represents connection service.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service_negate": {
        "Type": "Bool",
        "Description": "TRUE if \"negate\" value is set for Service.",
        "Computed": true
      },
      "site_category": {
        "Type": "Set",
        "Description": "Collection of Site Categories objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "site_category_negate": {
        "Type": "Bool",
        "Description": "TRUE if \"negate\" value is set for Site Category.",
        "Computed": true
      },
      "source": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by Name or UID that represents connection source.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "source_negate": {
        "Type": "Bool",
        "Description": "TRUE if \"negate\" value is set for Source.",
        "Computed": true
      },
      "track": {
        "Type": "String",
        "Description": "\"None\",\"Log\",\"Alert\",\"Mail\",\"SNMP trap\",\"Mail\",\"User Alert\", \"User Alert 2\", \"User Alert 3\".",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_https_section": {
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that holds the Object. Identified by the Name or UID."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_multicast_address_range": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ipv4_address": {
        "Type": "String",
        "Description": "IPv4 address.",
        "Computed": true
      },
      "ipv4_address_first": {
        "Type": "String",
        "Description": "First IPv4 address in the range.",
        "Computed": true
      },
      "ipv4_address_last": {
        "Type": "String",
        "Description": "Last IPv4 address in the range.",
        "Computed": true
      },
      "ipv6_address": {
        "Type": "String",
        "Description": "IPv6 address.",
        "Computed": true
      },
      "ipv6_address_first": {
        "Type": "String",
        "Description": "First IPv6 address in the range.",
        "Computed": true
      },
      "ipv6_address_last": {
        "Type": "String",
        "Description": "Last IPv6 address in the range.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_network": {
      "broadcast": {
        "Type": "String",
        "Description": "Allow broadcast address inclusion.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Optional": true,
        "Description": "Collection of group identifiers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "mask_length4": {
        "Type": "Int",
        "Description": "IPv4 network mask length.",
        "Computed": true
      },
      "mask_length6": {
        "Type": "Int",
        "Description": "IPv6 network mask length.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "nat_settings": {
        "Type": "Map",
        "Description": "NAT settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "subnet4": {
        "Type": "String",
        "Description": "IPv4 network address.",
        "Computed": true
      },
      "subnet6": {
        "Type": "String",
        "Description": "IPv6 network address.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_opsec_application": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "cpmi": {
        "Type": "Map",
        "Description": "Used to setup the CPMI client entity.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "lea": {
        "Type": "Map",
        "Description": "Used to setup the LEA client entity.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_package": {
      "access": {
        "Type": "Bool",
        "Description": "True - enables, False - disables access \u0026 NAT policies, empty - nothing is changed.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "desktop_security": {
        "Type": "Bool",
        "Description": "True - enables, False - disables Desktop security policy, empty - nothing is changed.",
        "Computed": true
      },
      "installation_targets": {
        "Type": "Set",
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "qos": {
        "Type": "Bool",
        "Description": "True - enables, False - disables QoS policy, empty - nothing is changed.",
        "Computed": true
      },
      "qos_policy_type": {
        "Type": "String",
        "Description": "QoS policy type.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "threat_prevention": {
        "Type": "Bool",
        "Description": "True - enables, False - disables Threat policy, empty - nothing is changed.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "vpn_traditional_mode": {
        "Type": "Bool",
        "Description": "True - enables, False - disables VPN traditional mode, empty - nothing is changed.",
        "Computed": true
      }
    },
    "checkpoint_management_data_security_zone": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_service_dce_rpc": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "interface_uuid": {
        "Type": "String",
        "Description": "Network interface UUID.",
        "Computed": true
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_service_group": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group name.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "members": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_service_icmp": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "icmp_code": {
        "Type": "Int",
        "Description": "As listed in: \u003ca href=\"http://www.iana.org/assignments/icmp-parameters\" target=\"_blank\"\u003eRFC 792\u003c/a\u003e.",
        "Computed": true
      },
      "icmp_type": {
        "Type": "Int",
        "Description": "As listed in: \u003ca href=\"http://www.iana.org/assignments/icmp-parameters\" target=\"_blank\"\u003eRFC 792\u003c/a\u003e.",
        "Computed": true
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_service_icmp6": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "icmp_code": {
        "Type": "Int",
        "Description": "As listed in: \u003ca href=\"http://www.iana.org/assignments/icmp-parameters\" target=\"_blank\"\u003eRFC 792\u003c/a\u003e.",
        "Computed": true
      },
      "icmp_type": {
        "Type": "Int",
        "Description": "As listed in: \u003ca href=\"http://www.iana.org/assignments/icmp-parameters\" target=\"_blank\"\u003eRFC 792\u003c/a\u003e.",
        "Computed": true
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_service_other": {
      "accept_replies": {
        "Type": "Bool",
        "Description": "Specifies whether Other Service replies are to be accepted.",
        "Computed": true
      },
      "action": {
        "Type": "String",
        "Description": "Contains an INSPECT expression that defines the action to take if a rule containing this service is matched. Example: set r_mhandler \u0026open_ssl_handler sets a handler on the connection.",
        "Computed": true
      },
      "aggressive_aging": {
        "Type": "Map",
        "Description": "Sets short (aggressive) timeouts for idle connections.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Optional": true,
        "Description": "Comments string."
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ip_protocol": {
        "Type": "Int",
        "Description": "IP protocol number.",
        "Computed": true
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Computed": true
      },
      "match": {
        "Type": "String",
        "Description": "Contains an INSPECT expression that defines the matching criteria. The connection is examined against the expression during the first packet. Example: tcp, dport = 21, direction = 0 matches incoming FTP control connections.",
        "Computed": true
      },
      "match_for_any": {
        "Type": "Bool",
        "Description": "Indicates whether this service is used when 'Any' is set as the rule's service and there are several service objects with the same source port and protocol.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "override_default_settings": {
        "Type": "Bool",
        "Description": "Indicates whether this service is a Data Domain service which has been overridden.",
        "Computed": true
      },
      "session_timeout": {
        "Type": "Int",
        "Description": "Time (in seconds) before the session times out.",
        "Computed": true
      },
      "sync_connections_on_cluster": {
        "Type": "Bool",
        "Description": "Enables state-synchronized High Availability or Load Sharing on a ClusterXL or OPSEC-certified cluster.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "use_default_session_timeout": {
        "Type": "Bool",
        "Description": "Use default virtual session timeout.",
        "Computed": true
      }
    },
    "checkpoint_management_data_service_rpc": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "program_number": {
        "Type": "Int",
        "Description": "N/A",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_service_sctp": {
      "aggressive_aging": {
        "Type": "Map",
        "Description": "Sets short (aggressive) timeouts for idle connections.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Computed": true
      },
      "match_for_any": {
        "Type": "Bool",
        "Description": "Indicates whether this service is used when 'Any' is set as the rule's service and there are several service objects with the same source port and protocol.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "port": {
        "Type": "String",
        "Description": "Port number. To specify a port range add a hyphen between the lowest and the highest port numbers, for example 44-45.",
        "Computed": true
      },
      "session_timeout": {
        "Type": "Int",
        "Description": "Time (in seconds) before the session times out.",
        "Computed": true
      },
      "source_port": {
        "Type": "String",
        "Description": "Source port number. To specify a port range add a hyphen between the lowest and the highest port numbers, for example 44-45.",
        "Computed": true
      },
      "sync_connections_on_cluster": {
        "Type": "Bool",
        "Description": "Enables state-synchronized High Availability or Load Sharing on a ClusterXL or OPSEC-certified cluster.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "use_default_session_timeout": {
        "Type": "Bool",
        "Description": "Use default virtual session timeout.",
        "Computed": true
      }
    },
    "checkpoint_management_data_service_tcp": {
      "aggressive_aging": {
        "Type": "Map",
        "Description": "Sets short (aggressive) timeouts for idle connections.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group name.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Computed": true
      },
      "match_by_protocol_signature": {
        "Type": "Bool",
        "Description": "A value of true enables matching by the selected protocol's signature - the signature identifies the protocol as genuine. Select this option to limit the port to the specified protocol. If the selected protocol does not support matching by signature, this field cannot be set to true.",
        "Computed": true
      },
      "match_for_any": {
        "Type": "Bool",
        "Description": "Indicates whether this service is used when 'Any' is set as the rule's service and there are several service objects with the same source port and protocol.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "override_default_settings": {
        "Type": "Bool",
        "Description": "Indicates whether this service is a Data Domain service which has been overridden.",
        "Computed": true
      },
      "port": {
        "Type": "String",
        "Description": "The number of the port used to provide this service. To specify a port range, place a hyphen between the lowest and highest port numbers, for example 44-55.",
        "Computed": true
      },
      "protocol": {
        "Type": "String",
        "Description": "Select the protocol type associated with the service, and by implication, the management server (if any) that enforces Content Security and Authentication for the service. Selecting a Protocol Type invokes the specific protocol handlers for each protocol type, thus enabling higher level of security by parsing the protocol, and higher level of connectivity by tracking dynamic actions (such as opening of ports).",
        "Computed": true
      },
      "session_timeout": {
        "Type": "Int",
        "Description": "Time (in seconds) before the session times out.",
        "Computed": true
      },
      "source_port": {
        "Type": "String",
        "Description": "Port number for the client side service. If specified, only those Source port Numbers will be Accepted, Dropped, or Rejected during packet inspection. Otherwise, the source port is not inspected.",
        "Computed": true
      },
      "sync_connections_on_cluster": {
        "Type": "Bool",
        "Description": "Enables state-synchronized High Availability or Load Sharing on a ClusterXL or OPSEC-certified cluster.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "use_default_session_timeout": {
        "Type": "Bool",
        "Description": "Use default virtual session timeout.",
        "Computed": true
      }
    },
    "checkpoint_management_data_service_udp": {
      "accept_replies": {
        "Type": "Bool",
        "Description": "N/A",
        "Computed": true
      },
      "aggressive_aging": {
        "Type": "Map",
        "Description": "Sets short (aggressive) timeouts for idle connections.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group name.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Computed": true
      },
      "match_by_protocol_signature": {
        "Type": "Bool",
        "Description": "A value of true enables matching by the selected protocol's signature - the signature identifies the protocol as genuine. Select this option to limit the port to the specified protocol. If the selected protocol does not support matching by signature, this field cannot be set to true.",
        "Computed": true
      },
      "match_for_any": {
        "Type": "Bool",
        "Description": "Indicates whether this service is used when 'Any' is set as the rule's service and there are several service objects with the same source port and protocol.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "override_default_settings": {
        "Type": "Bool",
        "Description": "Indicates whether this service is a Data Domain service which has been overridden.",
        "Computed": true
      },
      "port": {
        "Type": "String",
        "Description": "The number of the port used to provide this service. To specify a port range, place a hyphen between the lowest and highest port numbers, for example 44-55.",
        "Computed": true
      },
      "protocol": {
        "Type": "String",
        "Description": "Select the protocol type associated with the service, and by implication, the management server (if any) that enforces Content Security and Authentication for the service. Selecting a Protocol Type invokes the specific protocol handlers for each protocol type, thus enabling higher level of security by parsing the protocol, and higher level of connectivity by tracking dynamic actions (such as opening of ports).",
        "Computed": true
      },
      "session_timeout": {
        "Type": "Int",
        "Description": "Time (in seconds) before the session times out.",
        "Computed": true
      },
      "source_port": {
        "Type": "String",
        "Description": "Port number for the client side service. If specified, only those Source port Numbers will be Accepted, Dropped, or Rejected during packet inspection. Otherwise, the source port is not inspected.",
        "Computed": true
      },
      "sync_connections_on_cluster": {
        "Type": "Bool",
        "Description": "Enables state-synchronized High Availability or Load Sharing on a ClusterXL or OPSEC-certified cluster.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "use_default_session_timeout": {
        "Type": "Bool",
        "Description": "Use default virtual session timeout.",
        "Computed": true
      }
    },
    "checkpoint_management_data_threat_indicator": {
      "action": {
        "Type": "String",
        "Description": "The indicator's action.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "profile_overrides": {
        "Type": "List",
        "Description": "Profiles in which to override the indicator's default action.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Description": "The indicator's action in this profile.",
              "Computed": true
            },
            "profile": {
              "Type": "String",
              "Description": "The profile in which to override the indicator's action.",
              "Computed": true
            }
          }
        }
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_time_group": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "members": {
        "Type": "Set",
        "Description": "Collection of Time Group objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_data_vpn_community_meshed": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "encryption_method": {
        "Type": "String",
        "Description": "The encryption method to be used.",
        "Computed": true
      },
      "encryption_suite": {
        "Type": "String",
        "Description": "The encryption suite to be used.",
        "Computed": true
      },
      "gateways": {
        "Type": "Set",
        "Description": "Collection of Gateway objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ike_phase_1": {
        "Type": "Map",
        "Description": "Ike Phase 1 settings. Only applicable when the encryption-suite is set to [custom].",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ike_phase_2": {
        "Type": "Map",
        "Description": "Ike Phase 2 settings. Only applicable when the encryption-suite is set to [custom].",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "override_vpn_domains": {
        "Type": "List",
        "Description": "The Overrides VPN Domains of the participants GWs.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "gateway": {
              "Type": "String",
              "Description": "Participant gateway in override VPN domain identified by the name or UID.",
              "Computed": true
            },
            "vpn_domain": {
              "Type": "String",
              "Description": "VPN domain network identified by the name or UID.",
              "Computed": true
            }
          }
        }
      },
      "shared_secrets": {
        "Type": "List",
        "Description": "Shared secrets for external gateways.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "external_gateway": {
              "Type": "String",
              "Description": "External gateway identified by the name or UID.",
              "Computed": true
            },
            "shared_secret": {
              "Type": "String",
              "Description": "Shared secret.",
              "Computed": true
            }
          }
        }
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "use_shared_secret": {
        "Type": "Bool",
        "Description": "Indicates whether the shared secret should be used for all external gateways.",
        "Computed": true
      }
    },
    "checkpoint_management_data_vpn_community_star": {
      "center_gateways": {
        "Type": "Set",
        "Description": "Collection of Gateway objects representing center gateways identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "encryption_method": {
        "Type": "String",
        "Description": "The encryption method to be used.",
        "Computed": true
      },
      "encryption_suite": {
        "Type": "String",
        "Description": "The encryption suite to be used.",
        "Computed": true
      },
      "ike_phase_1": {
        "Type": "Map",
        "Description": "Ike Phase 1 settings. Only applicable when the encryption-suite is set to [custom].",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ike_phase_2": {
        "Type": "Map",
        "Description": "Ike Phase 2 settings. Only applicable when the encryption-suite is set to [custom].",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "mesh_center_gateways": {
        "Type": "Bool",
        "Description": "Indicates whether the meshed community is in center.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "override_vpn_domains": {
        "Type": "List",
        "Description": "The Overrides VPN Domains of the participants GWs.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "gateway": {
              "Type": "String",
              "Description": "Participant gateway in override VPN domain identified by the name or UID.",
              "Computed": true
            },
            "vpn_domain": {
              "Type": "String",
              "Description": "VPN domain network identified by the name or UID.",
              "Computed": true
            }
          }
        }
      },
      "satellite_gateways": {
        "Type": "Set",
        "Description": "Collection of Gateway objects representing satellite gateways identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "shared_secrets": {
        "Type": "List",
        "Description": "Shared secrets for external gateways.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "external_gateway": {
              "Type": "String",
              "Description": "External gateway identified by the name or UID.",
              "Computed": true
            },
            "shared_secret": {
              "Type": "String",
              "Description": "Shared secret.",
              "Computed": true
            }
          }
        }
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "use_shared_secret": {
        "Type": "Bool",
        "Description": "Indicates whether the shared secret should be used for all external gateways.",
        "Computed": true
      }
    },
    "checkpoint_management_data_wildcard": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "groups": {
        "Type": "Set",
        "Description": "Collection of group identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ipv4_address": {
        "Type": "String",
        "Description": "IPv4 address.",
        "Computed": true
      },
      "ipv4_mask_wildcard": {
        "Type": "String",
        "Description": "IPv4 mask wildcard.",
        "Computed": true
      },
      "ipv6_address": {
        "Type": "String",
        "Description": "IPv6 address.",
        "Computed": true
      },
      "ipv6_mask_wildcard": {
        "Type": "String",
        "Description": "IPv6 mask wildcard.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_gcp_data_center_server": {
      "authentication_method": {
        "Type": "String",
        "Description": "key-authentication\nUses the Service Account private key file to authenticate.\nvm-instance-authentication\nUses the Service Account VM Instance to authenticate.\nThis option requires the Security Management Server deployed in a GCP, and runs as a Service Account with the required permissions.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_generic_data_center_server": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Computed": true
      },
      "custom_header": {
        "Type": "Bool",
        "Description": "When set to false, The admin is not using Key and Value for a Custom Header in order to connect to the feed server.\n\nWhen set to true, The admin is using Key and Value for a Custom Header in order to connect to the feed server.",
        "Computed": true
      },
      "custom_key": {
        "Type": "String",
        "Description": "Key for the Custom Header, relevant and required only when custom_header set to true.",
        "Computed": true
      },
      "custom_value": {
        "Type": "String",
        "Description": "Value for the Custom Header, relevant and required only when custom_header set to true.",
        "Computed": true
      },
      "interval": {
        "Type": "String",
        "Description": "Update interval of the feed in seconds.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "url": {
        "Type": "String",
        "Description": "URL of the JSON feed (e.g. https://example.com/file.json).",
        "Computed": true
      }
    },
    "checkpoint_management_gsn_handover_group": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "enforce_gtp": {
        "Type": "Bool",
        "Description": "Enable enforce GTP signal packet rate limit from this group.",
        "Computed": true
      },
      "gtp_rate": {
        "Type": "Int",
        "Description": "Limit of the GTP rate in PDU/sec.",
        "Computed": true
      },
      "members": {
        "Type": "Set",
        "Description": "Collection of GSN handover group members identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_https_rulebase": {
      "dereference_group_members": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When true, the source, destination and services \u0026 applications parameters are displayed as ranges of IP addresses and port numbers rather than network objects.\nObjects that are not represented using IP addresses or port numbers are presented as objects.\nIn addition, the response of each rule does not contain the parameters: source, source-negate, destination, destination-negate, service and service-negate, but instead it contains the parameters: source-ranges, destination-ranges and service-ranges.\n\nNote: Requesting to show rules as ranges is limited up to 20 rules per request, otherwise an error is returned. If you wish to request more rules, use the offset and limit parameters to limit your request.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "filter": {
        "Type": "String",
        "Optional": true,
        "Description": "Search expression to filter the rulebase. The provided text should be exactly the same as it would be given in Smart Console. The logical operators in the expression ('AND', 'OR') should be provided in capital letters. If an operator is not used, the default OR operator applies."
      },
      "filter_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Sets filter preferences.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximal number of returned results.",
        "Default": {
          "Type": "int",
          "Value": "50"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Object name."
      },
      "offset": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of the results to initially skip.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "order": {
        "Type": "List",
        "Optional": true,
        "Description": "Sorts the results by search criteria. Automatically sorts the results by Name, in the ascending order.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "asc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in ascending order."
            },
            "desc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in descending order."
            }
          }
        }
      },
      "package": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the package."
      },
      "rulebase": {
        "Type": "List",
        "Description": "The show rulebase api reply",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "from": {
              "Type": "Int",
              "Description": "From which element number the query was done.",
              "Computed": true
            },
            "objects_dictionary": {
              "Type": "List",
              "Description": "Level of details in the output corresponds to the number of details for search. This table shows the level of details in the Standard level.",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Description": "Object name. Must be unique in the domain",
                    "Computed": true
                  },
                  "type": {
                    "Type": "String",
                    "Description": "Object type.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Object unique identifier.",
                    "Computed": true
                  }
                }
              }
            },
            "rulebase": {
              "Type": "List",
              "Description": "N/A",
              "Computed": true,
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action": {
                    "Type": "String",
                    "Description": "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User Auth\", \"Client Auth\", \"Apply Layer\".",
                    "Computed": true
                  },
                  "blade": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "certificate": {
                    "Type": "String",
                    "Description": "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User Auth\", \"Client Auth\", \"Apply Layer\".",
                    "Computed": true
                  },
                  "comments": {
                    "Type": "String",
                    "Description": "Comments string.",
                    "Computed": true
                  },
                  "destination": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "destination_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for destination.",
                    "Computed": true
                  },
                  "enabled": {
                    "Type": "Bool",
                    "Description": "Enable/Disable the rule.",
                    "Computed": true
                  },
                  "from": {
                    "Type": "Int",
                    "Description": "From which element number the query was done.",
                    "Computed": true
                  },
                  "install_on": {
                    "Type": "List",
                    "Description": "Which Gateways identified by the name or UID to install the policy on.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "layer": {
                    "Type": "String",
                    "Description": "Comments string.",
                    "Computed": true
                  },
                  "name": {
                    "Type": "String",
                    "Description": "Rules name.",
                    "Computed": true
                  },
                  "rule_number": {
                    "Type": "Int",
                    "Description": "Number of the rule.",
                    "Computed": true
                  },
                  "rulebase": {
                    "Type": "List",
                    "Description": "N/A",
                    "Computed": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "ComputedBlock",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "action": {
                          "Type": "String",
                          "Description": "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User Auth\", \"Client Auth\", \"Apply Layer\".",
                          "Computed": true
                        },
                        "blade": {
                          "Type": "List",
                          "Description": "Collection of Network objects identified by the name or UID.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        },
                        "certificate": {
                          "Type": "String",
                          "Description": "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User Auth\", \"Client Auth\", \"Apply Layer\".",
                          "Computed": true
                        },
                        "comments": {
                          "Type": "String",
                          "Description": "Comments string.",
                          "Computed": true
                        },
                        "destination": {
                          "Type": "List",
                          "Description": "Collection of Network objects identified by the name or UID.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        },
                        "destination_negate": {
                          "Type": "Bool",
                          "Description": "True if negate is set for destination.",
                          "Computed": true
                        },
                        "enabled": {
                          "Type": "Bool",
                          "Description": "Enable/Disable the rule.",
                          "Computed": true
                        },
                        "install_on": {
                          "Type": "List",
                          "Description": "Which Gateways identified by the name or UID to install the policy on.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        },
                        "layer": {
                          "Type": "String",
                          "Description": "Comments string.",
                          "Computed": true
                        },
                        "name": {
                          "Type": "String",
                          "Description": "Rules name.",
                          "Computed": true
                        },
                        "rule_number": {
                          "Type": "Int",
                          "Description": "Number of the rule.",
                          "Computed": true
                        },
                        "service": {
                          "Type": "List",
                          "Description": "Collection of Network objects identified by the name or UID.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        },
                        "service_negate": {
                          "Type": "Bool",
                          "Description": "True if negate is set for service.",
                          "Computed": true
                        },
                        "site_category": {
                          "Type": "List",
                          "Description": "Collection of Network objects identified by the name or UID.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        },
                        "site_category_negate": {
                          "Type": "Bool",
                          "Description": "True if negate is set for source.",
                          "Computed": true
                        },
                        "source": {
                          "Type": "List",
                          "Description": "Collection of Network objects identified by the name or UID.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        },
                        "source_negate": {
                          "Type": "Bool",
                          "Description": "True if negate is set for source.",
                          "Computed": true
                        },
                        "track": {
                          "Type": "String",
                          "Description": "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User Auth\", \"Client Auth\", \"Apply Layer\".",
                          "Computed": true
                        },
                        "type": {
                          "Type": "String",
                          "Description": "Rules type.",
                          "Computed": true
                        },
                        "uid": {
                          "Type": "String",
                          "Description": "Rules uid.",
                          "Computed": true
                        }
                      }
                    }
                  },
                  "service": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "service_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for service.",
                    "Computed": true
                  },
                  "site_category": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "site_category_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for source.",
                    "Computed": true
                  },
                  "source": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "source_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for source.",
                    "Computed": true
                  },
                  "to": {
                    "Type": "Int",
                    "Description": "To which element number the query was done.",
                    "Computed": true
                  },
                  "track": {
                    "Type": "String",
                    "Description": "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User Auth\", \"Client Auth\", \"Apply Layer\".",
                    "Computed": true
                  },
                  "type": {
                    "Type": "String",
                    "Description": "Rules type.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Rules uid.",
                    "Computed": true
                  }
                }
              }
            },
            "to": {
              "Type": "Int",
              "Description": "To which element number the query was done.",
              "Computed": true
            },
            "total": {
              "Type": "Int",
              "Description": "Total number of elements returned by the query.",
              "Computed": true
            }
          }
        }
      },
      "show_membership": {
        "Type": "Bool",
        "Optional": true,
        "Description": "N/A",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_identity_tag": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "external_identifier": {
        "Type": "String",
        "Description": "External identifier. For example: Cisco ISE security group tag.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_ise_data_center_server": {
      "certificate_fingerprint": {
        "Type": "String",
        "Description": "Specify the SHA-1 or SHA-256 fingerprint of the Data Center Server's certificate.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Computed": true
      },
      "hostnames": {
        "Type": "List",
        "Description": "Address of APIC cluster members.\nExample: http(s)://\u003chost1 ip/url\u003e.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Computed": true
      },
      "username": {
        "Type": "String",
        "Description": "User ID of the Cisco ISE administrator.\nWhen using commonLoginLogic Domains use the following syntax:\napic:\u003cdomain\u003e\\\u003cusername\u003e.",
        "Computed": true
      }
    },
    "checkpoint_management_kubernetes_data_center_server": {
      "ca_certificate": {
        "Type": "String",
        "Description": "The Kubernetes public certificate key encoded in base64.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Computed": true
      },
      "hostname": {
        "Type": "String",
        "Description": "IP address or hostname of the Kubernetes server.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "token_file": {
        "Type": "String",
        "Description": "Kubernetes access token encoded in base64.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Computed": true
      }
    },
    "checkpoint_management_mds": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "domains": {
        "Type": "Set",
        "Description": "Collection of Domain objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "global_domains": {
        "Type": "Set",
        "Description": "Collection of Global domain objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hardware": {
        "Type": "String",
        "Description": "Hardware name. For example: Open server, Smart-1, Other.",
        "Computed": true
      },
      "ip_pool_first": {
        "Type": "String",
        "Description": "First IP address in the range.",
        "Computed": true
      },
      "ip_pool_last": {
        "Type": "String",
        "Description": "Last IP address in the range.",
        "Computed": true
      },
      "ipv4_address": {
        "Type": "String",
        "Description": "IPv4 address.",
        "Computed": true
      },
      "ipv6_address": {
        "Type": "String",
        "Description": "IPv6 address.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "os": {
        "Type": "String",
        "Description": "Operating system name. For example: Gaia, Linux, SecurePlatform.",
        "Computed": true
      },
      "server_type": {
        "Type": "String",
        "Description": "Type of the management server.",
        "Computed": true
      },
      "sic_name": {
        "Type": "String",
        "Description": "Name of the Secure Internal Connection Trust.",
        "Computed": true
      },
      "sic_state": {
        "Type": "String",
        "Description": "State the Secure Internal Connection Trust.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "version": {
        "Type": "String",
        "Description": "System version.",
        "Computed": true
      }
    },
    "checkpoint_management_nat_rule": {
      "auto_generated": {
        "Type": "Bool",
        "Description": "Auto generated.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "enabled": {
        "Type": "Bool",
        "Description": "Enable/Disable the rule.",
        "Computed": true
      },
      "install_on": {
        "Type": "Set",
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "method": {
        "Type": "String",
        "Description": "Nat method.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Rule name."
      },
      "original_destination": {
        "Type": "String",
        "Description": "Original destination.",
        "Computed": true
      },
      "original_service": {
        "Type": "String",
        "Description": "Original service.",
        "Computed": true
      },
      "original_source": {
        "Type": "String",
        "Description": "Original source.",
        "Computed": true
      },
      "package": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the package."
      },
      "translated_destination": {
        "Type": "String",
        "Description": "Translated destination.",
        "Computed": true
      },
      "translated_service": {
        "Type": "String",
        "Description": "Translated service.",
        "Computed": true
      },
      "translated_source": {
        "Type": "String",
        "Description": "Translated source.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Rule UID."
      }
    },
    "checkpoint_management_nat_rulebase": {
      "dereference_group_members": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When true, the source, destination and services \u0026 applications parameters are displayed as ranges of IP addresses and port numbers rather than network objects.\nObjects that are not represented using IP addresses or port numbers are presented as objects.\nIn addition, the response of each rule does not contain the parameters: source, source-negate, destination, destination-negate, service and service-negate, but instead it contains the parameters: source-ranges, destination-ranges and service-ranges.\n\nNote: Requesting to show rules as ranges is limited up to 20 rules per request, otherwise an error is returned. If you wish to request more rules, use the offset and limit parameters to limit your request.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "filter": {
        "Type": "String",
        "Optional": true,
        "Description": "Search expression to filter the rulebase. The provided text should be exactly the same as it would be given in Smart Console. The logical operators in the expression ('AND', 'OR') should be provided in capital letters. If an operator is not used, the default OR operator applies."
      },
      "filter_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Sets filter preferences.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximal number of returned results.",
        "Default": {
          "Type": "int",
          "Value": "50"
        }
      },
      "offset": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of the results to initially skip.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "order": {
        "Type": "List",
        "Optional": true,
        "Description": "Sorts the results by search criteria. Automatically sorts the results by Name, in the ascending order.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "asc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in ascending order."
            },
            "desc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in descending order."
            }
          }
        }
      },
      "package": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the package."
      },
      "rulebase": {
        "Type": "List",
        "Description": "The show rulebase api reply",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "from": {
              "Type": "Int",
              "Description": "From which element number the query was done.",
              "Computed": true
            },
            "objects_dictionary": {
              "Type": "List",
              "Description": "Level of details in the output corresponds to the number of details for search. This table shows the level of details in the Standard level.",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Description": "Object name. Must be unique in the domain",
                    "Computed": true
                  },
                  "type": {
                    "Type": "String",
                    "Description": "Object type.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Object unique identifier.",
                    "Computed": true
                  }
                }
              }
            },
            "rulebase": {
              "Type": "List",
              "Description": "N/A",
              "Computed": true,
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "auto_generated": {
                    "Type": "Bool",
                    "Description": "service resource.",
                    "Computed": true
                  },
                  "comments": {
                    "Type": "String",
                    "Description": "Comments string.",
                    "Computed": true
                  },
                  "enabled": {
                    "Type": "Bool",
                    "Description": "Enable/Disable the rule.",
                    "Computed": true
                  },
                  "install_on": {
                    "Type": "List",
                    "Description": "Which Gateways identified by the name or UID to install the policy on.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "method": {
                    "Type": "String",
                    "Description": "Communities or Directional.",
                    "Computed": true
                  },
                  "name": {
                    "Type": "String",
                    "Description": "Rules name.",
                    "Computed": true
                  },
                  "original_destination": {
                    "Type": "String",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true
                  },
                  "original_service": {
                    "Type": "String",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true
                  },
                  "original_source": {
                    "Type": "String",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true
                  },
                  "rule_number": {
                    "Type": "Int",
                    "Description": "Number of the rule.",
                    "Computed": true
                  },
                  "rulebase": {
                    "Type": "List",
                    "Description": "N/A",
                    "Computed": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "ComputedBlock",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "auto_generated": {
                          "Type": "Bool",
                          "Description": "service resource.",
                          "Computed": true
                        },
                        "comments": {
                          "Type": "String",
                          "Description": "Comments string.",
                          "Computed": true
                        },
                        "enabled": {
                          "Type": "Bool",
                          "Description": "Enable/Disable the rule.",
                          "Computed": true
                        },
                        "install_on": {
                          "Type": "List",
                          "Description": "Which Gateways identified by the name or UID to install the policy on.",
                          "Computed": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Value": "String"
                          }
                        },
                        "method": {
                          "Type": "String",
                          "Description": "Communities or Directional.",
                          "Computed": true
                        },
                        "name": {
                          "Type": "String",
                          "Description": "Rules name.",
                          "Computed": true
                        },
                        "original_destination": {
                          "Type": "String",
                          "Description": "Collection of Network objects identified by the name or UID.",
                          "Computed": true
                        },
                        "original_service": {
                          "Type": "String",
                          "Description": "Collection of Network objects identified by the name or UID.",
                          "Computed": true
                        },
                        "original_source": {
                          "Type": "String",
                          "Description": "Collection of Network objects identified by the name or UID.",
                          "Computed": true
                        },
                        "rule_number": {
                          "Type": "Int",
                          "Description": "Number of the rule.",
                          "Computed": true
                        },
                        "translated_destination": {
                          "Type": "String",
                          "Description": "True if negate is set for destination.",
                          "Computed": true
                        },
                        "translated_service": {
                          "Type": "String",
                          "Description": "True if negate is set for service.",
                          "Computed": true
                        },
                        "translated_source": {
                          "Type": "String",
                          "Description": "True if negate is set for source.",
                          "Computed": true
                        },
                        "type": {
                          "Type": "String",
                          "Description": "Rules type.",
                          "Computed": true
                        },
                        "uid": {
                          "Type": "String",
                          "Description": "Rules uid.",
                          "Computed": true
                        }
                      }
                    }
                  },
                  "translated_destination": {
                    "Type": "String",
                    "Description": "True if negate is set for destination.",
                    "Computed": true
                  },
                  "translated_service": {
                    "Type": "String",
                    "Description": "True if negate is set for service.",
                    "Computed": true
                  },
                  "translated_source": {
                    "Type": "String",
                    "Description": "True if negate is set for source.",
                    "Computed": true
                  },
                  "type": {
                    "Type": "String",
                    "Description": "Rules type.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Rules uid.",
                    "Computed": true
                  }
                }
              }
            },
            "to": {
              "Type": "Int",
              "Description": "To which element number the query was done.",
              "Computed": true
            },
            "total": {
              "Type": "Int",
              "Description": "Total number of elements returned by the query.",
              "Computed": true
            }
          }
        }
      },
      "show_membership": {
        "Type": "Bool",
        "Optional": true,
        "Description": "N/A",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_nat_section": {
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "package": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the package."
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_nuage_data_center_server": {
      "certificate_fingerprint": {
        "Type": "String",
        "Description": "Specify the SHA-1 or SHA-256 fingerprint of the Data Center Server's certificate.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Computed": true
      },
      "hostname": {
        "Type": "String",
        "Description": "IP address or hostname of the Nuage server.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "organization": {
        "Type": "String",
        "Description": "Organization name or enterprise.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Computed": true
      },
      "username": {
        "Type": "String",
        "Description": "Username of the Nuage administrator.",
        "Computed": true
      }
    },
    "checkpoint_management_openstack_data_center_server": {
      "certificate_fingerprint": {
        "Type": "String",
        "Description": "Specify the SHA-1 or SHA-256 fingerprint of the Data Center Server's certificate.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Computed": true
      },
      "hostname": {
        "Type": "String",
        "Description": "URL of the OpenStack server.\nhttp(s)://\u003chost\u003e:\u003cport\u003e/\u003cversion\u003e\nExample: https://1.2.3.4:5000/v2.0",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Computed": true
      },
      "username": {
        "Type": "String",
        "Description": "Username of the OpenStack server.\nTo login to specific domain insert domain name before username.\nExample: \u003cdomain\u003e/\u003cusername\u003e",
        "Computed": true
      }
    },
    "checkpoint_management_service_citrix_tcp": {
      "application": {
        "Type": "String",
        "Description": "Citrix application name.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_service_compound_tcp": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "compound_service": {
        "Type": "String",
        "Description": "Compound service type.",
        "Computed": true
      },
      "keep_connections_open_after_policy_installation": {
        "Type": "Bool",
        "Description": "Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_show_objects": {
      "filter": {
        "Type": "String",
        "Optional": true,
        "Description": "Search expression to filter objects by. The provided text should be exactly the same as it would be given in Smart Console. The logical operators in the expression ('AND', 'OR') should be provided in capital letters. By default, the search involves both a textual search and a IP search. To use IP search only, set the \"ip-only\" parameter to true."
      },
      "from": {
        "Type": "Int",
        "Description": "From which element number the query was done.",
        "Computed": true
      },
      "ip_only": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If using \"filter\", use this field to search objects by their IP address only, without involving the textual search."
      },
      "limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximal number of returned results."
      },
      "objects": {
        "Type": "List",
        "Description": "Objects list",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "domain": {
              "Type": "Map",
              "Description": "Information about the domain that holds the Object.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Description": "Object name.",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Object type.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "Object unique identifier.",
              "Computed": true
            }
          }
        }
      },
      "offset": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of the results to initially skip."
      },
      "order": {
        "Type": "List",
        "Optional": true,
        "Description": "Sorts the results by search criteria. Automatically sorts the results by Name, in the ascending order.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "asc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in ascending order."
            },
            "desc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in descending order."
            }
          }
        }
      },
      "to": {
        "Type": "Int",
        "Description": "To which element number the query was done.",
        "Computed": true
      },
      "total": {
        "Type": "Int",
        "Description": "Total number of elements returned by the query.",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "The objects' type, e.g.: host, service-tcp, network, address-range...",
        "Default": {
          "Type": "string",
          "Value": "object"
        }
      }
    },
    "checkpoint_management_show_updatable_objects_repository_content": {
      "filter": {
        "Type": "Map",
        "Optional": true,
        "Description": "Return results matching the specified filter.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "from": {
        "Type": "Int",
        "Description": "From which element number the query was done.",
        "Computed": true
      },
      "limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximal number of returned results."
      },
      "objects": {
        "Type": "List",
        "Description": "Objects list",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "additional_properties": {
              "Type": "Map",
              "Description": "Additional properties on the object.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name_in_updatable_objects_repository": {
              "Type": "String",
              "Description": "Object name in the Updatable Objects Repository.",
              "Computed": true
            },
            "uid_in_updatable_objects_repository": {
              "Type": "String",
              "Description": "Unique identifier of the object in the Updatable Objects Repository.",
              "Computed": true
            },
            "updatable_object": {
              "Type": "Map",
              "Description": "The imported management object (if exists).",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "offset": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of the results to initially skip."
      },
      "order": {
        "Type": "List",
        "Optional": true,
        "Description": "Sorts the results by search criteria. Automatically sorts the results by Name, in the ascending order.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "asc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in ascending order."
            },
            "desc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in descending order."
            }
          }
        }
      },
      "to": {
        "Type": "Int",
        "Description": "To which element number the query was done.",
        "Computed": true
      },
      "total": {
        "Type": "Int",
        "Description": "Total number of elements returned by the query.",
        "Computed": true
      },
      "uid_in_updatable_objects_repository": {
        "Type": "String",
        "Optional": true,
        "Description": "The object's unique identifier in the Updatable Objects repository."
      }
    },
    "checkpoint_management_simple_cluster": {
      "anti_bot": {
        "Type": "Bool",
        "Description": "Anti-Bot blade enabled.",
        "Computed": true
      },
      "anti_virus": {
        "Type": "Bool",
        "Description": "Anti-Virus blade enabled.",
        "Computed": true
      },
      "application_control": {
        "Type": "Bool",
        "Description": "Application Control blade enabled.",
        "Computed": true
      },
      "cluster_mode": {
        "Type": "String",
        "Description": "Cluster mode.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "content_awareness": {
        "Type": "Bool",
        "Description": "Content Awareness blade enabled.",
        "Computed": true
      },
      "data_awareness": {
        "Type": "Bool",
        "Description": "Data Awareness blade enabled.",
        "Computed": true
      },
      "dynamic_ip": {
        "Type": "Bool",
        "Description": "Dynamic IP address.",
        "Computed": true
      },
      "firewall": {
        "Type": "Bool",
        "Description": "Firewall blade enabled.",
        "Computed": true
      },
      "firewall_settings": {
        "Type": "Map",
        "Description": "Firewall settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hardware": {
        "Type": "String",
        "Description": "Cluster platform hardware.",
        "Computed": true
      },
      "interfaces": {
        "Type": "List",
        "Description": "Network interfaces.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "anti_spoofing": {
              "Type": "Bool",
              "Description": "Anti spoofing.",
              "Computed": true
            },
            "anti_spoofing_settings": {
              "Type": "Map",
              "Description": "Anti spoofing settings",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "color": {
              "Type": "String",
              "Description": "Color of the object. Should be one of existing colors.",
              "Computed": true
            },
            "comments": {
              "Type": "String",
              "Description": "Comments string.",
              "Computed": true
            },
            "interface_type": {
              "Type": "String",
              "Description": "Cluster interface type.",
              "Computed": true
            },
            "ipv4_address": {
              "Type": "String",
              "Description": "IPv4 address.",
              "Computed": true
            },
            "ipv4_mask_length": {
              "Type": "String",
              "Description": "IPv4 network mask length.",
              "Computed": true
            },
            "ipv4_network_mask": {
              "Type": "String",
              "Description": "IPv4 network address.",
              "Computed": true
            },
            "ipv6_address": {
              "Type": "String",
              "Description": "IPv6 address.",
              "Computed": true
            },
            "ipv6_mask_length": {
              "Type": "String",
              "Description": "IPv6 network mask length.",
              "Computed": true
            },
            "ipv6_network_mask": {
              "Type": "String",
              "Description": "IPv6 network address.",
              "Computed": true
            },
            "multicast_address": {
              "Type": "String",
              "Description": "Multicast IP Address.",
              "Computed": true
            },
            "multicast_address_type": {
              "Type": "String",
              "Description": "Multicast Address Type.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Object name. Should be unique in the domain.",
              "Computed": true
            },
            "security_zone": {
              "Type": "Bool",
              "Description": "Security zone.",
              "Computed": true
            },
            "security_zone_settings": {
              "Type": "Map",
              "Description": "Security zone settings.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "topology": {
              "Type": "String",
              "Description": "Topology.",
              "Computed": true
            },
            "topology_automatic_calculation": {
              "Type": "String",
              "Description": "Shows the automatic topology calculation.",
              "Computed": true
            },
            "topology_settings": {
              "Type": "Map",
              "Description": "Topology settings.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "ips": {
        "Type": "Bool",
        "Description": "Intrusion Prevention System blade enabled.",
        "Computed": true
      },
      "ipv4_address": {
        "Type": "String",
        "Description": "IPv4 address.",
        "Computed": true
      },
      "ipv6_address": {
        "Type": "String",
        "Description": "IPv6 address.",
        "Computed": true
      },
      "logs_settings": {
        "Type": "Map",
        "Description": "Logs settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "members": {
        "Type": "List",
        "Description": "Cluster members.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "interfaces": {
              "Type": "List",
              "Description": "Network interfaces.",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "ipv4_address": {
                    "Type": "String",
                    "Description": "IPv4 address.",
                    "Computed": true
                  },
                  "ipv4_mask_length": {
                    "Type": "String",
                    "Description": "IPv4 network mask length.",
                    "Computed": true
                  },
                  "ipv4_network_mask": {
                    "Type": "String",
                    "Description": "IPv4 network address.",
                    "Computed": true
                  },
                  "ipv6_address": {
                    "Type": "String",
                    "Description": "IPv6 address.",
                    "Computed": true
                  },
                  "ipv6_mask_length": {
                    "Type": "String",
                    "Description": "IPv6 network mask length.",
                    "Computed": true
                  },
                  "ipv6_network_mask": {
                    "Type": "String",
                    "Description": "IPv6 network address.",
                    "Computed": true
                  },
                  "name": {
                    "Type": "String",
                    "Description": "Object name. Should be unique in the domain.",
                    "Computed": true
                  }
                }
              }
            },
            "ip_address": {
              "Type": "String",
              "Description": "IPv4 or IPv6 address.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Object name. Should be unique in the domain.",
              "Computed": true
            },
            "sic_message": {
              "Type": "String",
              "Description": "Secure Internal Communication state.",
              "Computed": true
            },
            "sic_state": {
              "Type": "String",
              "Description": "Secure Internal Communication name.",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "os_name": {
        "Type": "String",
        "Description": "OS name.",
        "Computed": true
      },
      "save_logs_locally": {
        "Type": "Bool",
        "Description": "Save logs locally.",
        "Computed": true
      },
      "send_alerts_to_server": {
        "Type": "Set",
        "Description": "Server(s) to send alerts to.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_backup_server": {
        "Type": "Set",
        "Description": "Backup server(s) to send logs to.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_server": {
        "Type": "Set",
        "Description": "Server(s) to send logs to.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "sic_name": {
        "Type": "String",
        "Description": "Secure Internal Communication name.",
        "Computed": true
      },
      "sic_state": {
        "Type": "String",
        "Description": "Secure Internal Communication state.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "threat_emulation": {
        "Type": "Bool",
        "Description": "Threat Emulation blade enabled.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "url_filtering": {
        "Type": "Bool",
        "Description": "URL Filtering blade enabled.",
        "Computed": true
      },
      "version": {
        "Type": "String",
        "Description": "Cluster platform version.",
        "Computed": true
      },
      "vpn": {
        "Type": "Bool",
        "Description": "VPN blade enabled.",
        "Computed": true
      },
      "vpn_settings": {
        "Type": "Map",
        "Description": "Gateway VPN settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_simple_gateway": {
      "anti_bot": {
        "Type": "Bool",
        "Description": "Anti-Bot blade enabled.",
        "Computed": true
      },
      "anti_virus": {
        "Type": "Bool",
        "Description": "Anti-Virus blade enabled.",
        "Computed": true
      },
      "application_control": {
        "Type": "Bool",
        "Description": "Application Control blade enabled.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "content_awareness": {
        "Type": "Bool",
        "Description": "Content Awareness blade enabled.",
        "Computed": true
      },
      "dynamic_ip": {
        "Type": "Bool",
        "Description": "Dynamic IP address.",
        "Computed": true
      },
      "firewall": {
        "Type": "Bool",
        "Description": "Firewall blade enabled.",
        "Computed": true
      },
      "firewall_settings": {
        "Type": "Map",
        "Description": "Firewall settings",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hardware": {
        "Type": "String",
        "Description": "Gateway platform hardware type.",
        "Computed": true
      },
      "icap_server": {
        "Type": "Bool",
        "Description": "ICAP Server enabled.",
        "Computed": true
      },
      "interfaces": {
        "Type": "List",
        "Description": "Network interfaces.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "anti_spoofing": {
              "Type": "Bool",
              "Description": "Anti spoofing.",
              "Computed": true
            },
            "anti_spoofing_settings": {
              "Type": "Map",
              "Description": "Anti spoofing settings",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "color": {
              "Type": "String",
              "Description": "Color of the object. Should be one of existing colors.",
              "Computed": true
            },
            "comments": {
              "Type": "String",
              "Description": "Comments string.",
              "Computed": true
            },
            "ipv4_address": {
              "Type": "String",
              "Description": "IPv4 address.",
              "Computed": true
            },
            "ipv4_mask_length": {
              "Type": "String",
              "Description": "IPv4 network mask length.",
              "Computed": true
            },
            "ipv4_network_mask": {
              "Type": "String",
              "Description": "IPv4 network address.",
              "Computed": true
            },
            "ipv6_address": {
              "Type": "String",
              "Description": "IPv6 address.",
              "Computed": true
            },
            "ipv6_mask_length": {
              "Type": "String",
              "Description": "IPv6 network mask length.",
              "Computed": true
            },
            "ipv6_network_mask": {
              "Type": "String",
              "Description": "IPv6 network address.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Object name. Should be unique in the domain.",
              "Computed": true
            },
            "security_zone": {
              "Type": "Bool",
              "Description": "Security zone.",
              "Computed": true
            },
            "security_zone_settings": {
              "Type": "Map",
              "Description": "Security zone settings.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "topology": {
              "Type": "String",
              "Description": "Topology.",
              "Computed": true
            },
            "topology_automatic_calculation": {
              "Type": "String",
              "Description": "Shows the automatic topology calculation.",
              "Computed": true
            },
            "topology_settings": {
              "Type": "Map",
              "Description": "Topology settings.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "ips": {
        "Type": "Bool",
        "Description": "Intrusion Prevention System blade enabled.",
        "Computed": true
      },
      "ipv4_address": {
        "Type": "String",
        "Description": "IPv4 address.",
        "Computed": true
      },
      "ipv6_address": {
        "Type": "String",
        "Description": "IPv6 address.",
        "Computed": true
      },
      "logs_settings": {
        "Type": "Map",
        "Description": "Logs settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "os_name": {
        "Type": "String",
        "Description": "OS name.",
        "Computed": true
      },
      "save_logs_locally": {
        "Type": "Bool",
        "Description": "Save logs locally.",
        "Computed": true
      },
      "send_alerts_to_server": {
        "Type": "Set",
        "Description": "Server(s) to send alerts to.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_backup_server": {
        "Type": "Set",
        "Description": "Backup server(s) to send logs to.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "send_logs_to_server": {
        "Type": "Set",
        "Description": "Server(s) to send logs to.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "sic_name": {
        "Type": "String",
        "Description": "Secure Internal Communication name.",
        "Computed": true
      },
      "sic_state": {
        "Type": "String",
        "Description": "Secure Internal Communication state.",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "threat_emulation": {
        "Type": "Bool",
        "Description": "Threat Emulation blade enabled.",
        "Computed": true
      },
      "threat_extraction": {
        "Type": "Bool",
        "Description": "Threat Extraction blade enabled.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "url_filtering": {
        "Type": "Bool",
        "Description": "URL Filtering blade enabled.",
        "Computed": true
      },
      "version": {
        "Type": "String",
        "Description": "Gateway platform version.",
        "Computed": true
      },
      "vpn": {
        "Type": "Bool",
        "Description": "VPN blade enabled.",
        "Computed": true
      },
      "vpn_settings": {
        "Type": "Map",
        "Description": "Gateway VPN settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "checkpoint_management_threat_exception": {
      "action": {
        "Type": "String",
        "Description": "Action-the enforced profile.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "destination": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "destination_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for destination.",
        "Computed": true
      },
      "enabled": {
        "Type": "Bool",
        "Description": "Enable/Disable the rule.",
        "Computed": true
      },
      "exception_group_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the exception-group."
      },
      "exception_group_uid": {
        "Type": "String",
        "Optional": true,
        "Description": "The UID of the exception-group."
      },
      "install_on": {
        "Type": "Set",
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that the rule belongs to identified by the name or UID."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the exception."
      },
      "owner": {
        "Type": "String",
        "Description": "Owner UID.",
        "Computed": true
      },
      "protected_scope": {
        "Type": "Set",
        "Description": "Collection of objects defining Protected Scope identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "protected_scope_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for Protected Scope.",
        "Computed": true
      },
      "protection_or_site": {
        "Type": "Set",
        "Description": "Name of the protection or site.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "rule_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the parent rule."
      },
      "rule_uid": {
        "Type": "String",
        "Optional": true,
        "Description": "The UID of the parent rule."
      },
      "service": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for service.",
        "Computed": true
      },
      "source": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "source_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for source.",
        "Computed": true
      },
      "track": {
        "Type": "String",
        "Description": "Packet tracking.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_threat_profile": {
      "activate_protections_by_extended_attributes": {
        "Type": "List",
        "Description": "Activate protections by these extended attributes.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "category": {
              "Type": "String",
              "Description": "IPS tag category name.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "IPS tag name.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "IPS tag unique identifier.",
              "Computed": true
            },
            "values": {
              "Type": "List",
              "Description": "IPS protection extended attribute values",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Description": "Object name.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Object unique identifier.",
                    "Computed": true
                  }
                }
              }
            }
          }
        }
      },
      "active_protections_performance_impact": {
        "Type": "String",
        "Description": "Protections with this performance impact only will be activated in the profile.",
        "Computed": true
      },
      "active_protections_severity": {
        "Type": "String",
        "Description": "Protections with this severity only will be activated in the profile.",
        "Computed": true
      },
      "anti_bot": {
        "Type": "Bool",
        "Description": "Is Anti-Bot blade activated.",
        "Computed": true
      },
      "anti_virus": {
        "Type": "Bool",
        "Description": "Is Anti-Virus blade activated.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "confidence_level_high": {
        "Type": "String",
        "Description": "Action for protections with high confidence level.",
        "Computed": true
      },
      "confidence_level_low": {
        "Type": "String",
        "Description": "Action for protections with low confidence level.",
        "Computed": true
      },
      "confidence_level_medium": {
        "Type": "String",
        "Description": "Action for protections with medium confidence level.",
        "Computed": true
      },
      "deactivate_protections_by_extended_attributes": {
        "Type": "List",
        "Description": "Deactivate protections by these extended attributes.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "category": {
              "Type": "String",
              "Description": "IPS tag category name.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "IPS tag name.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "IPS tag unique identifier.",
              "Computed": true
            },
            "values": {
              "Type": "List",
              "Description": "IPS protection extended attribute values",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Description": "Object name.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Object unique identifier.",
                    "Computed": true
                  }
                }
              }
            }
          }
        }
      },
      "indicator_overrides": {
        "Type": "List",
        "Description": "Indicators whose action will be overridden in this profile.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Description": "The indicator's action in this profile.",
              "Computed": true
            },
            "indicator": {
              "Type": "String",
              "Description": "The indicator whose action is to be overriden.",
              "Computed": true
            }
          }
        }
      },
      "ips": {
        "Type": "Bool",
        "Description": "Is IPS blade activated.",
        "Computed": true
      },
      "ips_settings": {
        "Type": "Map",
        "Description": "IPS blade settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "malicious_mail_policy_settings": {
        "Type": "Map",
        "Description": "Malicious Mail Policy for MTA Gateways.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Should be unique in the domain."
      },
      "overrides": {
        "Type": "List",
        "Description": "Overrides per profile for this protection.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Description": "Protection action.",
              "Computed": true
            },
            "capture_packets": {
              "Type": "Bool",
              "Description": "Capture packets.",
              "Computed": true
            },
            "default": {
              "Type": "Map",
              "Description": "Default settings.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "final": {
              "Type": "Map",
              "Description": "Final settings.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "protection": {
              "Type": "String",
              "Description": "IPS protection identified by name",
              "Computed": true
            },
            "protection_external_info": {
              "Type": "Set",
              "Description": "Collection of tag identifiers.",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "protection_uid": {
              "Type": "String",
              "Description": "IPS protection unique identifier.",
              "Computed": true
            },
            "track": {
              "Type": "String",
              "Description": "Tracking method for protection.",
              "Computed": true
            }
          }
        }
      },
      "scan_malicious_links": {
        "Type": "Map",
        "Description": "Scans malicious links (URLs) inside email messages.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "threat_emulation": {
        "Type": "Bool",
        "Description": "Is Threat Emulation blade activated.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "use_extended_attributes": {
        "Type": "Bool",
        "Description": "Whether to activate/deactivate IPS protections according to the extended attributes.",
        "Computed": true
      },
      "use_indicators": {
        "Type": "Bool",
        "Description": "Indicates whether the profile should make use of indicators.",
        "Computed": true
      }
    },
    "checkpoint_management_threat_rule": {
      "action": {
        "Type": "String",
        "Description": "Action-the enforced profile.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "destination": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "destination_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for destination.",
        "Computed": true
      },
      "enabled": {
        "Type": "Bool",
        "Description": "Enable/Disable the rule.",
        "Computed": true
      },
      "exceptions": {
        "Type": "Set",
        "Description": "Collection of rule's exceptions identified by UID",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "install_on": {
        "Type": "Set",
        "Description": "Which Gateways identified by the name or UID to install the policy on.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "layer": {
        "Type": "String",
        "Required": true,
        "Description": "Layer that the rule belongs to identified by the name or UID."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Rule name."
      },
      "protected_scope": {
        "Type": "Set",
        "Description": "Collection of objects defining Protected Scope identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "protected_scope_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for Protected Scope.",
        "Computed": true
      },
      "service": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for service.",
        "Computed": true
      },
      "source": {
        "Type": "Set",
        "Description": "Collection of Network objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "source_negate": {
        "Type": "Bool",
        "Description": "True if negate is set for source.",
        "Computed": true
      },
      "track": {
        "Type": "String",
        "Description": "Packet tracking.",
        "Computed": true
      },
      "track_settings": {
        "Type": "Map",
        "Description": "Threat rule track settings.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_threat_rulebase": {
      "dereference_group_members": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When true, the source, destination and services \u0026 applications parameters are displayed as ranges of IP addresses and port numbers rather than network objects.\nObjects that are not represented using IP addresses or port numbers are presented as objects.\nIn addition, the response of each rule does not contain the parameters: source, source-negate, destination, destination-negate, service and service-negate, but instead it contains the parameters: source-ranges, destination-ranges and service-ranges.\n\nNote: Requesting to show rules as ranges is limited up to 20 rules per request, otherwise an error is returned. If you wish to request more rules, use the offset and limit parameters to limit your request.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "filter": {
        "Type": "String",
        "Optional": true,
        "Description": "Search expression to filter the rulebase. The provided text should be exactly the same as it would be given in Smart Console. The logical operators in the expression ('AND', 'OR') should be provided in capital letters. If an operator is not used, the default OR operator applies."
      },
      "filter_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "Sets filter preferences.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "hits_settings": {
        "Type": "Map",
        "Optional": true,
        "Description": "N/A",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximal number of returned results.",
        "Default": {
          "Type": "int",
          "Value": "50"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "offset": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of the results to initially skip.",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "order": {
        "Type": "List",
        "Optional": true,
        "Description": "Sorts the results by search criteria. Automatically sorts the results by Name, in the ascending order.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "asc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in ascending order."
            },
            "desc": {
              "Type": "String",
              "Optional": true,
              "Description": "Sorts results by the given field in descending order."
            }
          }
        }
      },
      "package": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the package."
      },
      "rulebase": {
        "Type": "List",
        "Description": "The show rulebase api reply",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "from": {
              "Type": "Int",
              "Description": "From which element number the query was done.",
              "Computed": true
            },
            "objects_dictionary": {
              "Type": "List",
              "Description": "Level of details in the output corresponds to the number of details for search. This table shows the level of details in the Standard level.",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Description": "Object name. Must be unique in the domain",
                    "Computed": true
                  },
                  "type": {
                    "Type": "String",
                    "Description": "Object type.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Object unique identifier.",
                    "Computed": true
                  }
                }
              }
            },
            "rulebase": {
              "Type": "List",
              "Description": "N/A",
              "Computed": true,
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action": {
                    "Type": "String",
                    "Description": "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User Auth\", \"Client Auth\", \"Apply Layer\".",
                    "Computed": true
                  },
                  "comments": {
                    "Type": "String",
                    "Description": "Comments string.",
                    "Computed": true
                  },
                  "destination": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "destination_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for destination.",
                    "Computed": true
                  },
                  "enabled": {
                    "Type": "Bool",
                    "Description": "Enable/Disable the rule.",
                    "Computed": true
                  },
                  "exceptions": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "exceptions_layer": {
                    "Type": "String",
                    "Description": "Rules type.",
                    "Computed": true
                  },
                  "install_on": {
                    "Type": "List",
                    "Description": "Which Gateways identified by the name or UID to install the policy on.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "name": {
                    "Type": "String",
                    "Description": "Rules name.",
                    "Computed": true
                  },
                  "protected_scope": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "protected_scope_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for service.",
                    "Computed": true
                  },
                  "rule_number": {
                    "Type": "Int",
                    "Description": "Number of the rule.",
                    "Computed": true
                  },
                  "service": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "service_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for service.",
                    "Computed": true
                  },
                  "source": {
                    "Type": "List",
                    "Description": "Collection of Network objects identified by the name or UID.",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Value": "String"
                    }
                  },
                  "source_negate": {
                    "Type": "Bool",
                    "Description": "True if negate is set for source.",
                    "Computed": true
                  },
                  "track": {
                    "Type": "String",
                    "Description": "Track Settings.",
                    "Computed": true
                  },
                  "track_settings": {
                    "Type": "Map",
                    "Description": "track settings.",
                    "Computed": true,
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "type": {
                    "Type": "String",
                    "Description": "Rules type.",
                    "Computed": true
                  },
                  "uid": {
                    "Type": "String",
                    "Description": "Rules uid.",
                    "Computed": true
                  }
                }
              }
            },
            "to": {
              "Type": "Int",
              "Description": "To which element number the query was done.",
              "Computed": true
            },
            "total": {
              "Type": "Int",
              "Description": "Total number of elements returned by the query.",
              "Computed": true
            }
          }
        }
      },
      "show_as_ranges": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When true, the source, destination and services \u0026 applications parameters are displayed as ranges of IP addresses and port numbers rather than network objects.\nObjects that are not represented using IP addresses or port numbers are presented as objects.\nIn addition, the response of each rule does not contain the parameters: source, source-negate, destination, destination-negate, service and service-negate, but instead it contains the parameters: source-ranges, destination-ranges and service-ranges.\n\nNote: Requesting to show rules as ranges is limited up to 20 rules per request, otherwise an error is returned. If you wish to request more rules, use the offset and limit parameters to limit your request.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "show_hits": {
        "Type": "Bool",
        "Optional": true,
        "Description": "N/A"
      },
      "show_membership": {
        "Type": "Bool",
        "Optional": true,
        "Description": "N/A",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_user": {
      "allowed_locations": {
        "Type": "Map",
        "Description": "User allowed locations.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "authentication_method": {
        "Type": "String",
        "Description": "Authentication method.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "connect_daily": {
        "Type": "Bool",
        "Description": "Connect every day.",
        "Computed": true
      },
      "connect_on_days": {
        "Type": "Set",
        "Description": "Days users allow to connect.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "email": {
        "Type": "String",
        "Description": "User email.",
        "Computed": true
      },
      "encryption": {
        "Type": "Map",
        "Description": "User encryption.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "expiration_date": {
        "Type": "String",
        "Description": "Expiration date in format: yyyy-MM-dd.",
        "Computed": true
      },
      "from_hour": {
        "Type": "String",
        "Description": "Allow users connect from hour.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "phone_number": {
        "Type": "String",
        "Description": "User phone number.",
        "Computed": true
      },
      "radius_server": {
        "Type": "String",
        "Description": "RADIUS server object identified by the name or UID. Must be set when \"authentication-method\" was selected to be \"RADIUS\".",
        "Computed": true
      },
      "tacacs_server": {
        "Type": "String",
        "Description": "TACACS server object identified by the name or UID. Must be set when \"authentication-method\" was selected to be \"TACACS\".",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "to_hour": {
        "Type": "String",
        "Description": "Allow users connect until hour.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_user_group": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "email": {
        "Type": "String",
        "Description": "Email Address.",
        "Computed": true
      },
      "members": {
        "Type": "Set",
        "Description": "Collection of User Group objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_user_template": {
      "allowed_locations": {
        "Type": "Map",
        "Description": "User allowed locations.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "authentication_method": {
        "Type": "String",
        "Description": "Authentication method.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "connect_daily": {
        "Type": "Bool",
        "Description": "Connect every day.",
        "Computed": true
      },
      "connect_on_days": {
        "Type": "Set",
        "Description": "Days users allow to connect.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "encryption": {
        "Type": "Map",
        "Description": "User encryption.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "expiration_by_global_properties": {
        "Type": "Bool",
        "Description": "Expiration date according to global properties.",
        "Computed": true
      },
      "expiration_date": {
        "Type": "String",
        "Description": "Expiration date in format: yyyy-MM-dd.",
        "Computed": true
      },
      "from_hour": {
        "Type": "String",
        "Description": "Allow users connect from hour.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "radius_server": {
        "Type": "String",
        "Description": "RADIUS server object identified by the name or UID. Must be set when \"authentication-method\" was selected to be \"RADIUS\".",
        "Computed": true
      },
      "tacacs_server": {
        "Type": "String",
        "Description": "TACACS server object identified by the name or UID. Must be set when \"authentication-method\" was selected to be \"TACACS\".",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "to_hour": {
        "Type": "String",
        "Description": "Allow users connect until hour.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      }
    },
    "checkpoint_management_vmware_data_center_server": {
      "certificate_fingerprint": {
        "Type": "String",
        "Description": "Specify the SHA-1 or SHA-256 fingerprint of the Data Center Server's certificate.",
        "Computed": true
      },
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Computed": true
      },
      "hostname": {
        "Type": "String",
        "Description": "IP Address or hostname of the vCenter server.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name. Must be unique in the domain."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "type": {
        "Type": "String",
        "Description": "Object type. nsx or nsxt or vmware.",
        "Computed": true
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "unsafe_auto_accept": {
        "Type": "Bool",
        "Description": "When set to false, the current Data Center Server's certificate should be trusted, either by providing the certificate-fingerprint argument or by relying on a previously trusted certificate of this hostname.\n\nWhen set to true, trust the current Data Center Server's certificate as-is.",
        "Computed": true
      },
      "username": {
        "Type": "String",
        "Description": "Username of the vCenter server",
        "Computed": true
      }
    },
    "checkpoint_management_vpn_community_remote_access": {
      "color": {
        "Type": "String",
        "Description": "Color of the object. Should be one of existing colors.",
        "Computed": true
      },
      "comments": {
        "Type": "String",
        "Description": "Comments string.",
        "Computed": true
      },
      "gateways": {
        "Type": "Set",
        "Description": "Collection of Gateway objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Object name."
      },
      "tags": {
        "Type": "Set",
        "Description": "Collection of tag identifiers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "uid": {
        "Type": "String",
        "Optional": true,
        "Description": "Object unique identifier."
      },
      "user_groups": {
        "Type": "Set",
        "Description": "Collection of User group objects identified by the name or UID.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    }
  }
}