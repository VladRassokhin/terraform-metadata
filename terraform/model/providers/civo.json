{
  ".schema_version": "2",
  ".sdk_type": "terraform-plugin-sdk-v2",
  "name": "civo",
  "type": "provider",
  "version": "v1.0.9",
  "provider": {
    "region": {
      "Type": "String",
      "Optional": true,
      "Description": "If region is not set, then no region will be used and them you need expensify in every resource even if you expensify here you can overwrite in a resource.",
      "DefaultFunc": "ENV(CIVO_REGION)",
      "Default": {
        "Type": "string"
      }
    },
    "token": {
      "Type": "String",
      "Optional": true,
      "Description": "This is the Civo API token. Alternatively, this can also be specified using `CIVO_TOKEN` environment variable.",
      "DefaultFunc": "ENV(CIVO_TOKEN)"
    }
  },
  "resources": {
    "civo_dns_domain_name": {
      "account_id": {
        "Type": "String",
        "Description": "The account ID of the domain",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the domain"
      }
    },
    "civo_dns_domain_record": {
      "account_id": {
        "Type": "String",
        "Description": "The account ID of this resource",
        "Computed": true
      },
      "created_at": {
        "Type": "String",
        "Description": "Timestamp when this resource was created",
        "Computed": true
      },
      "domain_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID from domain name"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The portion before the domain name (e.g. www) or an @ for the apex/root domain (you cannot use an A record with an amex/root domain)"
      },
      "priority": {
        "Type": "Int",
        "Optional": true,
        "Description": "Useful for MX records only, the priority mail should be attempted it (defaults to 10)"
      },
      "ttl": {
        "Type": "Int",
        "Required": true,
        "Description": "How long caching DNS servers should cache this record for, in seconds (the minimum is 600 and the default if unspecified is 600)"
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The choice of RR type from a, cname, mx or txt"
      },
      "updated_at": {
        "Type": "String",
        "Description": "Timestamp when this resource was updated",
        "Computed": true
      },
      "value": {
        "Type": "String",
        "Required": true,
        "Description": "The IP address (A or MX), hostname (CNAME or MX) or text value (TXT) to serve for this record"
      }
    },
    "civo_firewall": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The firewall name"
      },
      "network_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The firewall network, if is not defined we use the default network",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The firewall region, if is not defined we use the global defined in the provider"
      }
    },
    "civo_firewall_rule": {
      "cidr": {
        "Type": "Set",
        "Required": true,
        "Description": "The CIDR notation of the other end to affect, or a valid network CIDR (e.g. 0.0.0.0/0 to open for everyone or 1.2.3.4/32 to open just for a specific IP address)",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "direction": {
        "Type": "String",
        "Optional": true,
        "Description": "Will this rule affect ingress traffic (only `ingress` is supported now)",
        "Computed": true
      },
      "end_port": {
        "Type": "String",
        "Optional": true,
        "Description": "The end of the port range (this is optional, by default it will only apply to the single port listed in start_port)",
        "Computed": true
      },
      "firewall_id": {
        "Type": "String",
        "Required": true,
        "Description": "The Firewall ID"
      },
      "label": {
        "Type": "String",
        "Optional": true,
        "Description": "A string that will be the displayed name/reference for this rule",
        "Computed": true
      },
      "protocol": {
        "Type": "String",
        "Optional": true,
        "Description": "The protocol choice from `tcp`, `udp` or `icmp` (the default if unspecified is `tcp`)",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region for this rule",
        "Computed": true
      },
      "start_port": {
        "Type": "String",
        "Optional": true,
        "Description": "The start of the port range to configure for this rule (or the single port if required)",
        "Computed": true
      }
    },
    "civo_instance": {
      "cpu_cores": {
        "Type": "Int",
        "Description": "Instance's CPU cores",
        "Computed": true
      },
      "created_at": {
        "Type": "String",
        "Description": "Timestamp when the instance was created",
        "Computed": true
      },
      "disk_gb": {
        "Type": "Int",
        "Description": "Instance's disk (GB)",
        "Computed": true
      },
      "disk_image": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID for the disk image to use to build the instance",
        "Computed": true
      },
      "firewall_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the firewall to use, from the current list. If left blank or not sent, the default firewall will be used (open to all)",
        "Computed": true
      },
      "hostname": {
        "Type": "String",
        "Optional": true,
        "Description": "A fully qualified domain name that should be set as the instance's hostname",
        "Computed": true
      },
      "initial_password": {
        "Type": "String",
        "Description": "Initial password for login",
        "Computed": true
      },
      "initial_user": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the initial user created on the server (optional; this will default to the template's default_username and fallback to civo)",
        "Default": {
          "Type": "string",
          "Value": "civo"
        }
      },
      "network_id": {
        "Type": "String",
        "Optional": true,
        "Description": "This must be the ID of the network from the network listing (optional; default network used when not specified)",
        "Computed": true
      },
      "notes": {
        "Type": "String",
        "Optional": true,
        "Description": "Add some notes to the instance"
      },
      "private_ip": {
        "Type": "String",
        "Description": "Instance's private IP address",
        "Computed": true
      },
      "public_ip": {
        "Type": "String",
        "Description": "Instance's public IP address",
        "Computed": true
      },
      "public_ip_required": {
        "Type": "String",
        "Optional": true,
        "Description": "This should be either 'none' or 'create' (default: 'create')",
        "Default": {
          "Type": "string",
          "Value": "create"
        }
      },
      "ram_mb": {
        "Type": "Int",
        "Description": "Instance's RAM (MB)",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region for the instance, if not declare we use the region in declared in the provider"
      },
      "reverse_dns": {
        "Type": "String",
        "Optional": true,
        "Description": "A fully qualified domain name that should be used as the instance's IP's reverse DNS (optional, uses the hostname if unspecified)"
      },
      "script": {
        "Type": "String",
        "Optional": true,
        "Description": "The contents of a script that will be uploaded to /usr/local/bin/civo-user-init-script on your instance, read/write/executable only by root and then will be executed at the end of the cloud initialization"
      },
      "size": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the size, from the current list, e.g. g3.xsmall",
        "Default": {
          "Type": "string",
          "Value": "g3.xsmall"
        }
      },
      "source_id": {
        "Type": "String",
        "Description": "Instance's source ID",
        "Computed": true
      },
      "source_type": {
        "Type": "String",
        "Description": "Instance's source type",
        "Computed": true
      },
      "sshkey_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of an already uploaded SSH public key to use for login to the default user (optional; if one isn't provided a random password will be set and returned in the initial_password field)"
      },
      "status": {
        "Type": "String",
        "Description": "Instance's status",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "An optional list of tags, represented as a key, value pair",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "template": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID for the template to use to build the instance",
        "Computed": true,
        "Deprecated": "\"template\" attribute is deprecated. Moving forward, please use \"disk_image\" attribute."
      }
    },
    "civo_kubernetes_cluster": {
      "api_endpoint": {
        "Type": "String",
        "Description": "The API server endpoint of the cluster",
        "Computed": true
      },
      "applications": {
        "Type": "String",
        "Optional": true,
        "Description": "Comma separated list of applications to install. Spaces within application names are fine, but shouldn't be either side of the comma. Application names are case-sensitive; the available applications can be listed with the Civo CLI: 'civo kubernetes applications ls'. If you want to remove a default installed application, prefix it with a '-', e.g. -Traefik. For application that supports plans, you can use 'app_name:app_plan' format e.g. 'Linkerd:Linkerd \u0026 Jaeger' or 'MariaDB:5GB'."
      },
      "cni": {
        "Type": "String",
        "Optional": true,
        "Description": "The cni for the k3s to install (the default is `flannel`) valid options are `cilium` or `flannel`",
        "Computed": true
      },
      "created_at": {
        "Type": "String",
        "Description": "The timestamp when the cluster was created",
        "Computed": true
      },
      "dns_entry": {
        "Type": "String",
        "Description": "The DNS name of the cluster",
        "Computed": true
      },
      "firewall_id": {
        "Type": "String",
        "Required": true,
        "Description": "The existing firewall ID to use for this cluster"
      },
      "installed_applications": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "application": {
              "Type": "String",
              "Description": "Name of application",
              "Computed": true
            },
            "category": {
              "Type": "String",
              "Description": "Category of the application",
              "Computed": true
            },
            "installed": {
              "Type": "Bool",
              "Description": "Application installation status (`true` if installed)",
              "Computed": true
            },
            "version": {
              "Type": "String",
              "Description": "Version of application",
              "Computed": true
            }
          }
        }
      },
      "instances": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cpu_cores": {
              "Type": "Int",
              "Description": "Instance's CPU cores",
              "Computed": true
            },
            "disk_gb": {
              "Type": "Int",
              "Description": "Instance's disk (GB)",
              "Computed": true
            },
            "hostname": {
              "Type": "String",
              "Description": "Instance's hostname",
              "Computed": true
            },
            "ram_mb": {
              "Type": "Int",
              "Description": "Instance's RAM (MB)",
              "Computed": true
            },
            "size": {
              "Type": "String",
              "Description": "Instance's size",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "Instance's status",
              "Computed": true
            },
            "tags": {
              "Type": "Set",
              "Description": "Instance's tags",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "kubeconfig": {
        "Type": "String",
        "Description": "The kubeconfig of the cluster",
        "Computed": true
      },
      "kubernetes_version": {
        "Type": "String",
        "Optional": true,
        "Description": "The version of k3s to install (optional, the default is currently the latest available)",
        "Computed": true
      },
      "master_ip": {
        "Type": "String",
        "Description": "The IP address of the master node",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name for your cluster, must be unique within your account",
        "Computed": true
      },
      "network_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The network for the cluster, if not declare we use the default one",
        "Computed": true
      },
      "num_target_nodes": {
        "Type": "Int",
        "Optional": true,
        "Description": "The number of instances to create (optional, the default at the time of writing is 3)",
        "Computed": true
      },
      "pools": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "count": {
              "Type": "Int",
              "Description": "Number of nodes in the nodepool",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Description": "Nodepool ID",
              "Computed": true
            },
            "instance_names": {
              "Type": "Set",
              "Description": "Instance names in the nodepool",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "instances": {
              "Type": "List",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "cpu_cores": {
                    "Type": "Int",
                    "Description": "Instance's CPU cores",
                    "Computed": true
                  },
                  "disk_gb": {
                    "Type": "Int",
                    "Description": "Instance's disk (GB)",
                    "Computed": true
                  },
                  "hostname": {
                    "Type": "String",
                    "Description": "Instance's hostname",
                    "Computed": true
                  },
                  "ram_mb": {
                    "Type": "Int",
                    "Description": "Instance's RAM (MB)",
                    "Computed": true
                  },
                  "size": {
                    "Type": "String",
                    "Description": "Instance's size",
                    "Computed": true
                  },
                  "status": {
                    "Type": "String",
                    "Description": "Instance's status",
                    "Computed": true
                  },
                  "tags": {
                    "Type": "Set",
                    "Description": "Instance's tags",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "size": {
              "Type": "String",
              "Description": "Size of the nodes in the nodepool",
              "Computed": true
            }
          }
        }
      },
      "ready": {
        "Type": "Bool",
        "Description": "When cluster is ready, this will return `true`",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region for the cluster, if not declare we use the region in declared in the provider",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "Status of the cluster",
        "Computed": true
      },
      "tags": {
        "Type": "String",
        "Optional": true,
        "Description": "Space separated list of tags, to be used freely as required"
      },
      "target_nodes_size": {
        "Type": "String",
        "Optional": true,
        "Description": "The size of each node (optional, the default is currently g4s.kube.medium)",
        "Computed": true
      }
    },
    "civo_kubernetes_node_pool": {
      "cluster_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of your cluster"
      },
      "num_target_nodes": {
        "Type": "Int",
        "Optional": true,
        "Description": "the number of instances to create (optional, the default at the time of writing is 3)",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Required": true,
        "Description": "The region of the node pool, has to match that of the cluster"
      },
      "target_nodes_size": {
        "Type": "String",
        "Optional": true,
        "Description": "the size of each node (optional, the default is currently g4s.kube.medium)",
        "Computed": true
      }
    },
    "civo_network": {
      "default": {
        "Type": "Bool",
        "Description": "If the network is default, this will be `true`",
        "Computed": true
      },
      "label": {
        "Type": "String",
        "Required": true,
        "Description": "Name for the network"
      },
      "name": {
        "Type": "String",
        "Description": "The name of the network",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region of the network"
      }
    },
    "civo_ssh_key": {
      "fingerprint": {
        "Type": "String",
        "Description": "a string containing the SSH finger print.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "a string that will be the reference for the SSH key."
      },
      "public_key": {
        "Type": "String",
        "Required": true,
        "Description": "a string containing the SSH public key."
      }
    },
    "civo_volume": {
      "id": {
        "Type": "String",
        "Description": "The ID of this resource.",
        "Computed": true
      },
      "mount_point": {
        "Type": "String",
        "Description": "The mount point of the volume (from instance's perspective)",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "A name that you wish to use to refer to this volume"
      },
      "network_id": {
        "Type": "String",
        "Required": true,
        "Description": "The network that the volume belongs to"
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region for the volume, if not declare we use the region in declared in the provider."
      },
      "size_gb": {
        "Type": "Int",
        "Required": true,
        "Description": "A minimum of 1 and a maximum of your available disk space from your quota specifies the size of the volume in gigabytes "
      }
    },
    "civo_volume_attachment": {
      "instance_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of target instance for attachment"
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region for the volume attachment"
      },
      "volume_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of target volume for attachment"
      }
    }
  },
  "data-sources": {
    "civo_disk_image": {
      "diskimages": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Description": "ID of disk image",
              "Computed": true
            },
            "label": {
              "Type": "String",
              "Description": "Label of disk image",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Name of disk image",
              "Computed": true
            },
            "version": {
              "Type": "String",
              "Description": "Version of disk image",
              "Computed": true
            }
          }
        }
      },
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "One or more key/value pairs on which to filter results",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "all": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "Filter diskimages by this key. This may be one of `id`, `label`, `name`, `version`."
            },
            "match_by": {
              "Type": "String",
              "Optional": true,
              "Description": "One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.",
              "Default": {
                "Type": "string",
                "Value": "exact"
              }
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "Only retrieves `diskimages` which keys has value that matches one of the values provided here",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "If is used, all disk image will be from this region. Required if no region is set in provider."
      },
      "sort": {
        "Type": "List",
        "Optional": true,
        "Description": "One or more key/direction pairs on which to sort results",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "direction": {
              "Type": "String",
              "Optional": true,
              "Description": "The sort direction. This may be either `asc` or `desc`."
            },
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "Sort diskimages by this key. This may be one of `id`, `label`, `name`, `version`."
            }
          }
        }
      }
    },
    "civo_dns_domain_name": {
      "id": {
        "Type": "String",
        "Optional": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the domain"
      }
    },
    "civo_dns_domain_record": {
      "account_id": {
        "Type": "String",
        "Description": "The ID account of the domain",
        "Computed": true
      },
      "created_at": {
        "Type": "String",
        "Description": "The date when it was created in UTC format",
        "Computed": true
      },
      "domain_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the domain"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the record"
      },
      "priority": {
        "Type": "Int",
        "Description": "The priority of the record",
        "Computed": true
      },
      "ttl": {
        "Type": "Int",
        "Description": "How long caching DNS servers should cache this record",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Description": "The choice of record type from A, CNAME, MX, SRV or TXT",
        "Computed": true
      },
      "updated_at": {
        "Type": "String",
        "Description": "The date when it was updated in UTC format",
        "Computed": true
      },
      "value": {
        "Type": "String",
        "Description": "The IP address (A or MX), hostname (CNAME or MX) or text value (TXT) to serve for this record",
        "Computed": true
      }
    },
    "civo_firewall": {
      "id": {
        "Type": "String",
        "Optional": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the firewall"
      },
      "network_id": {
        "Type": "String",
        "Description": "The id of the associated network",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region where the firewall is"
      }
    },
    "civo_instance": {
      "cpu_cores": {
        "Type": "Int",
        "Description": "Total cpu of the inatance",
        "Computed": true
      },
      "created_at": {
        "Type": "String",
        "Description": "The date of creation of the instance",
        "Computed": true
      },
      "disk_gb": {
        "Type": "Int",
        "Description": "The size of the disk",
        "Computed": true
      },
      "firewall_id": {
        "Type": "String",
        "Description": "The ID of the firewall used",
        "Computed": true
      },
      "hostname": {
        "Type": "String",
        "Optional": true,
        "Description": "The hostname of the Instance"
      },
      "id": {
        "Type": "String",
        "Optional": true
      },
      "initial_password": {
        "Type": "String",
        "Description": "Instance initial password",
        "Computed": true
      },
      "initial_user": {
        "Type": "String",
        "Description": "The name of the initial user created on the server",
        "Computed": true
      },
      "network_id": {
        "Type": "String",
        "Description": "his will be the ID of the network",
        "Computed": true
      },
      "notes": {
        "Type": "String",
        "Description": "The notes of the instance",
        "Computed": true
      },
      "private_ip": {
        "Type": "String",
        "Description": "The private IP",
        "Computed": true
      },
      "pseudo_ip": {
        "Type": "String",
        "Description": "Is the ip that is used to route the public ip from the internet to the instance using NAT",
        "Computed": true
      },
      "public_ip": {
        "Type": "String",
        "Description": "The public IP",
        "Computed": true
      },
      "ram_mb": {
        "Type": "Int",
        "Description": "Total ram of the instance",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region of an existing Instance"
      },
      "reverse_dns": {
        "Type": "String",
        "Description": "A fully qualified domain name",
        "Computed": true
      },
      "script": {
        "Type": "String",
        "Description": "The contents of a script uploaded",
        "Computed": true
      },
      "size": {
        "Type": "String",
        "Description": "The name of the size",
        "Computed": true
      },
      "sshkey_id": {
        "Type": "String",
        "Description": "The ID SSH key",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "The status of the instance",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Description": "An optional list of tags",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "template": {
        "Type": "String",
        "Description": "The ID for the disk image/template to used to build the instance",
        "Computed": true
      }
    },
    "civo_instances": {
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "One or more key/value pairs on which to filter results",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "all": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "Filter instances by this key. This may be one of `cpu_cores`, `created_at`, `disk_gb`, `firewall_id`, `hostname`, `id`, `initial_password`, `initial_user`, `network_id`, `notes`, `private_ip`, `pseudo_ip`, `public_ip`, `ram_mb`, `region`, `reverse_dns`, `script`, `size`, `sshkey_id`, `status`, `tags`, `template`."
            },
            "match_by": {
              "Type": "String",
              "Optional": true,
              "Description": "One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.",
              "Default": {
                "Type": "string",
                "Value": "exact"
              }
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "Only retrieves `instances` which keys has value that matches one of the values provided here",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "instances": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cpu_cores": {
              "Type": "Int",
              "Description": "CPU of the instance",
              "Computed": true
            },
            "created_at": {
              "Type": "String",
              "Description": "Creation date of the instance",
              "Computed": true
            },
            "disk_gb": {
              "Type": "Int",
              "Description": "SSD size of the instance",
              "Computed": true
            },
            "firewall_id": {
              "Type": "String",
              "Description": "Firewall ID of the instance",
              "Computed": true
            },
            "hostname": {
              "Type": "String",
              "Description": "Hostname of the instance",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Description": "ID of the instance",
              "Computed": true
            },
            "initial_password": {
              "Type": "String",
              "Description": "Initial password of the instance",
              "Computed": true
            },
            "initial_user": {
              "Type": "String",
              "Description": "Initial user of the instance",
              "Computed": true
            },
            "network_id": {
              "Type": "String",
              "Description": "Network id of the instance",
              "Computed": true
            },
            "notes": {
              "Type": "String",
              "Description": "Note of the instance",
              "Computed": true
            },
            "private_ip": {
              "Type": "String",
              "Description": "Private IP of the instance",
              "Computed": true
            },
            "pseudo_ip": {
              "Type": "String",
              "Description": "Pseudo IP of the instance",
              "Computed": true
            },
            "public_ip": {
              "Type": "String",
              "Description": "Public IP of the instance",
              "Computed": true
            },
            "ram_mb": {
              "Type": "Int",
              "Description": "RAM of the instance",
              "Computed": true
            },
            "region": {
              "Type": "String",
              "Description": "Region of the instance",
              "Computed": true
            },
            "reverse_dns": {
              "Type": "String",
              "Description": "Reverse DNS of the instance",
              "Computed": true
            },
            "script": {
              "Type": "String",
              "Description": "Script of the instance",
              "Computed": true
            },
            "size": {
              "Type": "String",
              "Description": "Size of the instance",
              "Computed": true
            },
            "sshkey_id": {
              "Type": "String",
              "Description": "SSH key id of the instance",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "Status of the instance",
              "Computed": true
            },
            "tags": {
              "Type": "Set",
              "Description": "Tags of the instance",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "template": {
              "Type": "String",
              "Description": "Disk image/template of the instance",
              "Computed": true
            }
          }
        }
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "If used, all instances will be from the provided region"
      },
      "sort": {
        "Type": "List",
        "Optional": true,
        "Description": "One or more key/direction pairs on which to sort results",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "direction": {
              "Type": "String",
              "Optional": true,
              "Description": "The sort direction. This may be either `asc` or `desc`."
            },
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "Sort instances by this key. This may be one of `cpu_cores`, `created_at`, `disk_gb`, `firewall_id`, `hostname`, `id`, `initial_password`, `initial_user`, `network_id`, `notes`, `private_ip`, `pseudo_ip`, `public_ip`, `ram_mb`, `region`, `reverse_dns`, `script`, `size`, `sshkey_id`, `status`, `template`."
            }
          }
        }
      }
    },
    "civo_instances_size": {
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "One or more key/value pairs on which to filter results",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "all": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "Filter sizes by this key. This may be one of `cpu`, `description`, `disk`, `name`, `ram`, `selectable`, `type`."
            },
            "match_by": {
              "Type": "String",
              "Optional": true,
              "Description": "One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.",
              "Default": {
                "Type": "string",
                "Value": "exact"
              }
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "Only retrieves `sizes` which keys has value that matches one of the values provided here",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "sizes": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cpu": {
              "Type": "Int",
              "Description": "Total of CPU in the instance",
              "Computed": true
            },
            "description": {
              "Type": "String",
              "Description": "A description of the instance size",
              "Computed": true
            },
            "disk": {
              "Type": "Int",
              "Description": "The instance size of SSD",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "The name of the instance size",
              "Computed": true
            },
            "ram": {
              "Type": "Int",
              "Description": "Total of RAM of the instance",
              "Computed": true
            },
            "selectable": {
              "Type": "Bool",
              "Description": "If can use the instance size",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "A human name of the instance size",
              "Computed": true
            }
          }
        }
      },
      "sort": {
        "Type": "List",
        "Optional": true,
        "Description": "One or more key/direction pairs on which to sort results",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "direction": {
              "Type": "String",
              "Optional": true,
              "Description": "The sort direction. This may be either `asc` or `desc`."
            },
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "Sort sizes by this key. This may be one of `cpu`, `description`, `disk`, `name`, `ram`, `selectable`, `type`."
            }
          }
        }
      }
    },
    "civo_kubernetes_cluster": {
      "api_endpoint": {
        "Type": "String",
        "Description": "The base URL of the API server on the Kubernetes master node",
        "Computed": true
      },
      "applications": {
        "Type": "String",
        "Description": "A list of application installed",
        "Computed": true
      },
      "cni": {
        "Type": "String",
        "Description": "The cni for the k3s to install (the default is `flannel`) valid options are `cilium` or `flannel`",
        "Computed": true
      },
      "created_at": {
        "Type": "String",
        "Description": "The date where the Kubernetes cluster was create",
        "Computed": true
      },
      "dns_entry": {
        "Type": "String",
        "Description": "The unique dns entry for the cluster in this case point to the master",
        "Computed": true
      },
      "id": {
        "Type": "String",
        "Optional": true
      },
      "installed_applications": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "application": {
              "Type": "String",
              "Description": "The name of the application",
              "Computed": true
            },
            "category": {
              "Type": "String",
              "Description": "The category of the application",
              "Computed": true
            },
            "installed": {
              "Type": "Bool",
              "Description": "If the application is installed, this will return `true`",
              "Computed": true
            },
            "version": {
              "Type": "String",
              "Description": "The version of the application",
              "Computed": true
            }
          }
        }
      },
      "instances": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cpu_cores": {
              "Type": "Int",
              "Description": "Total CPU of the instance",
              "Computed": true
            },
            "disk_gb": {
              "Type": "Int",
              "Description": "The size of the instance disk",
              "Computed": true
            },
            "hostname": {
              "Type": "String",
              "Description": "The hostname of the instance",
              "Computed": true
            },
            "ram_mb": {
              "Type": "Int",
              "Description": "Total RAM of the instance",
              "Computed": true
            },
            "size": {
              "Type": "String",
              "Description": "The size of the instance",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "The status of the instance",
              "Computed": true
            },
            "tags": {
              "Type": "Set",
              "Description": "The tag of the instance",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "kubeconfig": {
        "Type": "String",
        "Description": "A representation of the Kubernetes cluster's kubeconfig in yaml format",
        "Computed": true
      },
      "kubernetes_version": {
        "Type": "String",
        "Description": "The version of Kubernetes",
        "Computed": true
      },
      "master_ip": {
        "Type": "String",
        "Description": "The IP of the Kubernetes master node",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the Kubernetes Cluster"
      },
      "num_target_nodes": {
        "Type": "Int",
        "Description": "The size of the Kubernetes cluster",
        "Computed": true
      },
      "pools": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "count": {
              "Type": "Int",
              "Description": "The size of the pool",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Description": "The ID of the pool",
              "Computed": true
            },
            "instance_names": {
              "Type": "Set",
              "Description": "A list of the instance in the pool",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "instances": {
              "Type": "List",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "cpu_cores": {
                    "Type": "Int",
                    "Description": "Total CPU of the instance",
                    "Computed": true
                  },
                  "disk_gb": {
                    "Type": "Int",
                    "Description": "The size of the instance disk",
                    "Computed": true
                  },
                  "hostname": {
                    "Type": "String",
                    "Description": "The hostname of the instance",
                    "Computed": true
                  },
                  "ram_mb": {
                    "Type": "Int",
                    "Description": "Total RAM of the instance",
                    "Computed": true
                  },
                  "size": {
                    "Type": "String",
                    "Description": "The size of the instance",
                    "Computed": true
                  },
                  "status": {
                    "Type": "String",
                    "Description": "The status of the instance",
                    "Computed": true
                  },
                  "tags": {
                    "Type": "Set",
                    "Description": "The tag of the instance",
                    "Computed": true,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "size": {
              "Type": "String",
              "Description": "The size of each node inside the pool",
              "Computed": true
            }
          }
        }
      },
      "ready": {
        "Type": "Bool",
        "Description": "If the Kubernetes cluster is ready",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region where cluster is running"
      },
      "status": {
        "Type": "String",
        "Description": "The status of Kubernetes cluster",
        "Computed": true
      },
      "tags": {
        "Type": "String",
        "Description": "A list of tags",
        "Computed": true
      },
      "target_nodes_size": {
        "Type": "String",
        "Description": "The size of each node",
        "Computed": true
      }
    },
    "civo_kubernetes_version": {
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "One or more key/value pairs on which to filter results",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "all": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "Filter versions by this key. This may be one of `default`, `label`, `type`, `version`."
            },
            "match_by": {
              "Type": "String",
              "Optional": true,
              "Description": "One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.",
              "Default": {
                "Type": "string",
                "Value": "exact"
              }
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "Only retrieves `versions` which keys has value that matches one of the values provided here",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "sort": {
        "Type": "List",
        "Optional": true,
        "Description": "One or more key/direction pairs on which to sort results",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "direction": {
              "Type": "String",
              "Optional": true,
              "Description": "The sort direction. This may be either `asc` or `desc`."
            },
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "Sort versions by this key. This may be one of `default`, `label`, `type`, `version`."
            }
          }
        }
      },
      "versions": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "default": {
              "Type": "Bool",
              "Description": "If is the default version used in all cluster, this will return `true`",
              "Computed": true
            },
            "label": {
              "Type": "String",
              "Description": "The label of this version",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "The type of the version - can be `stable`, `legacy` \u0026 etc",
              "Computed": true
            },
            "version": {
              "Type": "String",
              "Description": "A version of the Kubernetes",
              "Computed": true
            }
          }
        }
      }
    },
    "civo_network": {
      "default": {
        "Type": "Bool",
        "Description": "If is the default network",
        "Computed": true
      },
      "id": {
        "Type": "String",
        "Optional": true
      },
      "label": {
        "Type": "String",
        "Optional": true,
        "Description": "The label of an existing network"
      },
      "name": {
        "Type": "String",
        "Description": "The name of the network",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region of an existing network"
      }
    },
    "civo_region": {
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "One or more key/value pairs on which to filter results",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "all": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "Filter regions by this key. This may be one of `code`, `country`, `default`, `name`."
            },
            "match_by": {
              "Type": "String",
              "Optional": true,
              "Description": "One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.",
              "Default": {
                "Type": "string",
                "Value": "exact"
              }
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "Only retrieves `regions` which keys has value that matches one of the values provided here",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "regions": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "code": {
              "Type": "String",
              "Description": "The code of the region",
              "Computed": true
            },
            "country": {
              "Type": "String",
              "Description": "The country of the region",
              "Computed": true
            },
            "default": {
              "Type": "Bool",
              "Description": "If the region is the default region, this will return `true`",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "A human name of the region",
              "Computed": true
            }
          }
        }
      },
      "sort": {
        "Type": "List",
        "Optional": true,
        "Description": "One or more key/direction pairs on which to sort results",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "direction": {
              "Type": "String",
              "Optional": true,
              "Description": "The sort direction. This may be either `asc` or `desc`."
            },
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "Sort regions by this key. This may be one of `code`, `country`, `default`, `name`."
            }
          }
        }
      }
    },
    "civo_size": {
      "filter": {
        "Type": "Set",
        "Optional": true,
        "Description": "One or more key/value pairs on which to filter results",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "all": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "Filter sizes by this key. This may be one of `cpu`, `description`, `disk`, `name`, `ram`, `selectable`, `type`."
            },
            "match_by": {
              "Type": "String",
              "Optional": true,
              "Description": "One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.",
              "Default": {
                "Type": "string",
                "Value": "exact"
              }
            },
            "values": {
              "Type": "List",
              "Required": true,
              "Description": "Only retrieves `sizes` which keys has value that matches one of the values provided here",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "sizes": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cpu": {
              "Type": "Int",
              "Description": "Total of CPU in the instance",
              "Computed": true
            },
            "description": {
              "Type": "String",
              "Description": "A description of the instance size",
              "Computed": true
            },
            "disk": {
              "Type": "Int",
              "Description": "The instance size of SSD",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "The name of the instance size",
              "Computed": true
            },
            "ram": {
              "Type": "Int",
              "Description": "Total of RAM of the instance",
              "Computed": true
            },
            "selectable": {
              "Type": "Bool",
              "Description": "If can use the instance size",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "A human name of the instance size",
              "Computed": true
            }
          }
        }
      },
      "sort": {
        "Type": "List",
        "Optional": true,
        "Description": "One or more key/direction pairs on which to sort results",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "direction": {
              "Type": "String",
              "Optional": true,
              "Description": "The sort direction. This may be either `asc` or `desc`."
            },
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "Sort sizes by this key. This may be one of `cpu`, `description`, `disk`, `name`, `ram`, `selectable`, `type`."
            }
          }
        }
      }
    },
    "civo_ssh_key": {
      "fingerprint": {
        "Type": "String",
        "Description": "The fingerprint of the public key of the SSH key",
        "Computed": true
      },
      "id": {
        "Type": "String",
        "Optional": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the SSH key"
      }
    },
    "civo_volume": {
      "created_at": {
        "Type": "String",
        "Description": "The date of the creation of the volume",
        "Computed": true
      },
      "id": {
        "Type": "String",
        "Optional": true
      },
      "mount_point": {
        "Type": "String",
        "Description": "The mount point of the volume",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the volume"
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region where volume is running"
      },
      "size_gb": {
        "Type": "Int",
        "Description": "The size of the volume (in GB)",
        "Computed": true
      }
    }
  }
}