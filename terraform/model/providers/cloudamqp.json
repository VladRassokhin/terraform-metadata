{
  ".schema_version": "1",
  "name": "cloudamqp",
  "type": "provider",
  "version": "",
  "provider": {
    "apikey": {
      "Type": "String",
      "Required": true,
      "Description": "Key used to authentication to the CloudAMQP Customer API",
      "DefaultFunc": "ENV(CLOUDAMQP_APIKEY)"
    },
    "baseurl": {
      "Type": "String",
      "Optional": true,
      "Description": "Base URL to CloudAMQP Customer website",
      "Default": {
        "Type": "string",
        "Value": "https://customer.cloudamqp.com"
      }
    }
  },
  "resources": {
    "cloudamqp_alarm": {
      "enabled": {
        "Type": "Bool",
        "Required": true,
        "Description": "Enable or disable an alarm"
      },
      "instance_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Instance identifier"
      },
      "message_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Message types (total, unacked, ready) of the queue to trigger the alarm"
      },
      "queue_regex": {
        "Type": "String",
        "Optional": true,
        "Description": "Regex for which queues to check"
      },
      "recipients": {
        "Type": "List",
        "Required": true,
        "Description": "Identifiers for recipients to be notified.",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "time_threshold": {
        "Type": "Int",
        "Optional": true,
        "Description": "For how long (in seconds) the value_threshold should be active before trigger alarm"
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "Type of the alarm, valid options are: cpu, memory, disk_usage, queue_length, connection_count, consumers_count, net_split"
      },
      "value_threshold": {
        "Type": "Int",
        "Optional": true,
        "Description": "What value to trigger the alarm for"
      },
      "vhost_regex": {
        "Type": "String",
        "Optional": true,
        "Description": "Regex for which vhost the queues are in"
      }
    },
    "cloudamqp_instance": {
      "apikey": {
        "Type": "String",
        "Description": "API key for the CloudAMQP instance",
        "Computed": true
      },
      "dedicated": {
        "Type": "Bool",
        "Description": "Is the instance hosted on a dedicated server",
        "Computed": true
      },
      "host": {
        "Type": "String",
        "Description": "Host name for the CloudAMQP instance",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the instance"
      },
      "no_default_alarms": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Set to true to not create default alarms"
      },
      "nodes": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of nodes in cluster (plan must support it)",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      },
      "plan": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the plan, valid options are: lemur, tiger, bunny, rabbit, panda, ape, hippo, lion"
      },
      "ready": {
        "Type": "Bool",
        "Description": "Flag describing if the resource is ready",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the region you want to create your instance in"
      },
      "rmq_version": {
        "Type": "String",
        "Optional": true,
        "Description": "RabbitMQ version"
      },
      "tags": {
        "Type": "List",
        "Optional": true,
        "Description": "Tag the instances with optional tags",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "url": {
        "Type": "String",
        "Description": "URL of the CloudAMQP instance",
        "Computed": true
      },
      "vhost": {
        "Type": "String",
        "Description": "The virtual host",
        "Computed": true
      },
      "vpc_subnet": {
        "Type": "String",
        "Optional": true,
        "Description": "Dedicated VPC subnet, shouldn't overlap with your current VPC's subnet"
      }
    },
    "cloudamqp_integration_log": {
      "access_key_id": {
        "Type": "String",
        "Optional": true,
        "Description": "AWS access key identifier. (Cloudwatch)"
      },
      "api_key": {
        "Type": "String",
        "Optional": true,
        "Description": "The API key for the integration service. (Datadog)"
      },
      "client_email": {
        "Type": "String",
        "Optional": true,
        "Description": "The client email. (Stackdriver)"
      },
      "host_port": {
        "Type": "String",
        "Optional": true,
        "Description": "Destination to send the logs. (Splunk)"
      },
      "instance_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Instance identifier used to make proxy calls"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of log integration"
      },
      "private_key": {
        "Type": "String",
        "Optional": true,
        "Description": "The private key. (Stackdriver)"
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Project ID. (Stackdriver)"
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "The region hosting integration service. (Cloudwatch, Datadog)"
      },
      "secret_access_key": {
        "Type": "String",
        "Optional": true,
        "Description": "AWS secret access key. (Cloudwatch)"
      },
      "tags": {
        "Type": "String",
        "Optional": true,
        "Description": "(optional) tags. E.g. env=prod,region=europe. (Datadog)"
      },
      "token": {
        "Type": "String",
        "Optional": true,
        "Description": "The token used for authentication. (Loggly, Logentries, Splunk)"
      },
      "url": {
        "Type": "String",
        "Optional": true,
        "Description": "The URL to push the logs to. (Papertrail)"
      }
    },
    "cloudamqp_integration_metric": {
      "access_key_id": {
        "Type": "String",
        "Optional": true,
        "Description": "AWS access key identifier. (Cloudwatch)"
      },
      "api_key": {
        "Type": "String",
        "Optional": true,
        "Description": "The API key for the integration service. (Librato)"
      },
      "client_email": {
        "Type": "String",
        "Optional": true,
        "Description": "The client email. (Stackdriver)"
      },
      "email": {
        "Type": "String",
        "Optional": true,
        "Description": "The email address registred for the integration service. (Librato)"
      },
      "instance_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Instance identifier"
      },
      "license_key": {
        "Type": "String",
        "Optional": true,
        "Description": "The license key registred for the integration service. (New Relic)"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of metrics integration"
      },
      "private_key": {
        "Type": "String",
        "Optional": true,
        "Description": "The private key. (Stackdriver)"
      },
      "project_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Project ID. (Stackdriver)"
      },
      "queue_whitelist": {
        "Type": "String",
        "Optional": true,
        "Description": "(optional) whitelist using regular expression"
      },
      "region": {
        "Type": "String",
        "Optional": true,
        "Description": "AWS region for Cloudwatch and [US/EU] for Data dog/New relic. (Cloudwatch, Data Dog, New Relic)"
      },
      "secret_access_key": {
        "Type": "String",
        "Optional": true,
        "Description": "AWS secret key. (Cloudwatch)"
      },
      "tags": {
        "Type": "String",
        "Optional": true,
        "Description": "(optional) tags. E.g. env=prod,region=europe"
      },
      "vhost_whitelist": {
        "Type": "String",
        "Optional": true,
        "Description": "(optional) whitelist using regular expression"
      }
    },
    "cloudamqp_notification": {
      "instance_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Instance identifier"
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Optional display name of the recipient"
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "Type of the notification, valid options are: email, webhook, pagerduty, victorops, opsgenie, opsgenie-eu, slack"
      },
      "value": {
        "Type": "String",
        "Required": true,
        "Description": "Notification endpoint, where to send the notifcation"
      }
    },
    "cloudamqp_plugin": {
      "enabled": {
        "Type": "Bool",
        "Required": true,
        "Description": "If the plugin is enabled"
      },
      "instance_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Instance identifier"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the plugin"
      }
    },
    "cloudamqp_plugin_community": {
      "enabled": {
        "Type": "Bool",
        "Required": true,
        "Description": "If the plugin is enabled"
      },
      "instance_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Instance identifier"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the plugin"
      }
    },
    "cloudamqp_security_firewall": {
      "instance_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Instance identifier"
      },
      "rules": {
        "Type": "Set",
        "Required": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "description": {
              "Type": "String",
              "Optional": true,
              "Description": "Naming descripton e.g. 'Default'"
            },
            "ip": {
              "Type": "String",
              "Required": true,
              "Description": "IP address together with netmask to allow acces"
            },
            "ports": {
              "Type": "List",
              "Optional": true,
              "Description": "Custom ports between 0 - 65554",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            },
            "services": {
              "Type": "List",
              "Optional": true,
              "Description": "Pre-defined services 'AMQP', 'AMQPS', 'MQTT', 'MQTTS', 'STOMP', 'STOMPS'",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      }
    },
    "cloudamqp_vpc_peering": {
      "instance_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Instance identifier"
      },
      "peering_id": {
        "Type": "String",
        "Required": true,
        "Description": "VPC peering identifier"
      },
      "status": {
        "Type": "String",
        "Description": "VPC peering status",
        "Computed": true
      }
    }
  },
  "data-sources": {
    "cloudamqp_alarm": {
      "alarm_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "Alarm identifier"
      },
      "enabled": {
        "Type": "Bool",
        "Description": "Enable or disable an alarm",
        "Computed": true
      },
      "instance_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Instance identifier"
      },
      "message_type": {
        "Type": "String",
        "Description": "Message types (total, unacked, ready) of the queue to trigger the alarm",
        "Computed": true
      },
      "queue_regex": {
        "Type": "String",
        "Description": "Regex for which queues to check",
        "Computed": true
      },
      "recipients": {
        "Type": "List",
        "Description": "Identifiers for recipients to be notified.",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "time_threshold": {
        "Type": "Int",
        "Description": "For how long (in seconds) the value_threshold should be active before trigger alarm",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "Type of the alarm"
      },
      "value_threshold": {
        "Type": "Int",
        "Description": "What value to trigger the alarm for",
        "Computed": true
      },
      "vhost_regex": {
        "Type": "String",
        "Description": "Regex for which vhost the queues are in",
        "Computed": true
      }
    },
    "cloudamqp_credentials": {
      "instance_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Instance identifier"
      },
      "password": {
        "Type": "String",
        "Optional": true
      },
      "username": {
        "Type": "String",
        "Optional": true
      }
    },
    "cloudamqp_instance": {
      "apikey": {
        "Type": "String",
        "Description": "API key for the CloudAMQP instance",
        "Computed": true
      },
      "dedicated": {
        "Type": "Bool",
        "Description": "Is the instance hosted on a dedicated server",
        "Computed": true
      },
      "host": {
        "Type": "String",
        "Description": "Host name for the CloudAMQP instance",
        "Computed": true
      },
      "instance_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Identifier for the instance"
      },
      "name": {
        "Type": "String",
        "Description": "Name of the instance",
        "Computed": true
      },
      "nodes": {
        "Type": "Int",
        "Description": "Number of nodes in cluster (plan must support it)",
        "Computed": true
      },
      "plan": {
        "Type": "String",
        "Description": "Name of the plan, valid options are: lemur, tiger, bunny, rabbit, panda, ape, hippo, lion",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Description": "Name of the region you want to create your instance in",
        "Computed": true
      },
      "rmq_version": {
        "Type": "String",
        "Description": "RabbitMQ version",
        "Computed": true
      },
      "tags": {
        "Type": "List",
        "Description": "Tag the instances with optional tags",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "url": {
        "Type": "String",
        "Description": "URL of the CloudAMQP instance",
        "Computed": true
      },
      "vhost": {
        "Type": "String",
        "Description": "The virtual host",
        "Computed": true
      },
      "vpc_subnet": {
        "Type": "String",
        "Optional": true,
        "Description": "Dedicated VPC subnet, shouldn't overlap with your current VPC's subnet"
      }
    },
    "cloudamqp_nodes": {
      "instance_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Instance identifier"
      },
      "nodes": {
        "Type": "List",
        "Optional": true,
        "Computed": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "erlang_version": {
              "Type": "String",
              "Optional": true,
              "Computed": true
            },
            "hipe": {
              "Type": "Bool",
              "Optional": true,
              "Computed": true
            },
            "hostname": {
              "Type": "String",
              "Optional": true,
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Computed": true
            },
            "rabbitmq_version": {
              "Type": "String",
              "Optional": true,
              "Computed": true
            },
            "running": {
              "Type": "Bool",
              "Optional": true,
              "Computed": true
            }
          }
        }
      }
    },
    "cloudamqp_notification": {
      "instance_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Instance identifier"
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Optional display name of the recipient"
      },
      "recipient_id": {
        "Type": "Int",
        "Optional": true,
        "Description": "Recipient identifier"
      },
      "type": {
        "Type": "String",
        "Description": "Type of the notification, valid options are: email, webhook, pagerduty, victorops, opsgenie, opsgenie-eu, slack",
        "Computed": true
      },
      "value": {
        "Type": "String",
        "Description": "Notification endpoint, where to send the notifcation",
        "Computed": true
      }
    },
    "cloudamqp_plugins": {
      "instance_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Instance identifier"
      },
      "plugins": {
        "Type": "List",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "description": {
              "Type": "String",
              "Optional": true
            },
            "enabled": {
              "Type": "Bool",
              "Optional": true
            },
            "name": {
              "Type": "String",
              "Optional": true
            },
            "version": {
              "Type": "String",
              "Optional": true
            }
          }
        }
      }
    },
    "cloudamqp_plugins_community": {
      "instance_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Instance identifier"
      },
      "plugins": {
        "Type": "List",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "description": {
              "Type": "String",
              "Optional": true
            },
            "name": {
              "Type": "String",
              "Optional": true
            },
            "require": {
              "Type": "String",
              "Optional": true
            }
          }
        }
      }
    },
    "cloudamqp_vpc_info": {
      "instance_id": {
        "Type": "Int",
        "Required": true,
        "Description": "Instance identifier"
      },
      "name": {
        "Type": "String",
        "Description": "VPC name",
        "Computed": true
      },
      "owner_id": {
        "Type": "String",
        "Description": "Owner identifier",
        "Computed": true
      },
      "security_group_id": {
        "Type": "String",
        "Description": "The security group identifier",
        "Computed": true
      },
      "vpc_subnet": {
        "Type": "String",
        "Description": "VPC subnet",
        "Computed": true
      }
    }
  }
}