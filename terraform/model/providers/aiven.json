{
  ".schema_version": "2",
  ".sdk_type": "terraform-plugin-sdk-v2",
  "name": "aiven",
  "type": "provider",
  "version": "v2.1.11",
  "provider": {
    "api_token": {
      "Type": "String",
      "Required": true,
      "Description": "Aiven Authentication Token",
      "DefaultFunc": "ENV(AIVEN_TOKEN)"
    }
  },
  "resources": {
    "aiven_account": {
      "account_id": {
        "Type": "String",
        "Description": "Account id",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of creation",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Account name"
      },
      "owner_team_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Owner team id",
        "Computed": true
      },
      "tenant_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Tenant id",
        "Computed": true
      },
      "update_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of last update",
        "Computed": true
      }
    },
    "aiven_account_authentication": {
      "account_id": {
        "Type": "String",
        "Required": true,
        "Description": "Account id"
      },
      "authentication_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Account authentication id",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of creation",
        "Computed": true
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Status of account authentication method",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Account team name"
      },
      "saml_acs_url": {
        "Type": "String",
        "Optional": true,
        "Description": "SAML Assertion Consumer Service URL",
        "Computed": true
      },
      "saml_certificate": {
        "Type": "String",
        "Optional": true,
        "Description": "SAML Certificate"
      },
      "saml_entity_id": {
        "Type": "String",
        "Optional": true,
        "Description": "SAML Entity id"
      },
      "saml_idp_url": {
        "Type": "String",
        "Optional": true,
        "Description": "SAML Idp URL"
      },
      "saml_metadata_url": {
        "Type": "String",
        "Optional": true,
        "Description": "SAML Metadata URL",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "Account authentication id"
      },
      "update_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of last update",
        "Computed": true
      }
    },
    "aiven_account_team": {
      "account_id": {
        "Type": "String",
        "Required": true,
        "Description": "Account id"
      },
      "create_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of creation",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Account team name"
      },
      "team_id": {
        "Type": "String",
        "Description": "Account team id",
        "Computed": true
      },
      "update_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of last update",
        "Computed": true
      }
    },
    "aiven_account_team_member": {
      "accepted": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Team member invitation status",
        "Computed": true
      },
      "account_id": {
        "Type": "String",
        "Required": true,
        "Description": "Account id"
      },
      "create_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of creation",
        "Computed": true
      },
      "invited_by_user_email": {
        "Type": "String",
        "Optional": true,
        "Description": "Team invited by user email",
        "Computed": true
      },
      "team_id": {
        "Type": "String",
        "Required": true,
        "Description": "Account team id"
      },
      "user_email": {
        "Type": "String",
        "Required": true,
        "Description": "Team invite user email"
      }
    },
    "aiven_account_team_project": {
      "account_id": {
        "Type": "String",
        "Required": true,
        "Description": "Account id"
      },
      "project_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Account team project name"
      },
      "team_id": {
        "Type": "String",
        "Required": true,
        "Description": "Account team id"
      },
      "team_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Account team project type, can one of the following values: admin, developer, operator and read_only"
      }
    },
    "aiven_aws_privatelink": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "aws_service_id": {
        "Type": "String",
        "Description": "AWS service ID",
        "Computed": true
      },
      "aws_service_name": {
        "Type": "String",
        "Description": "AWS service name",
        "Computed": true
      },
      "principals": {
        "Type": "Set",
        "Required": true,
        "Description": "List of principals",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project name"
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      }
    },
    "aiven_billing_group": {
      "account_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Account id"
      },
      "address_lines": {
        "Type": "Set",
        "Optional": true,
        "Description": "Address lines",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "billing_currency": {
        "Type": "String",
        "Optional": true,
        "Description": "Billing currency"
      },
      "billing_emails": {
        "Type": "Set",
        "Optional": true,
        "Description": "Billing contact emails",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "billing_extra_text": {
        "Type": "String",
        "Optional": true,
        "Description": "Billing extra text"
      },
      "card_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Credit card id"
      },
      "city": {
        "Type": "String",
        "Optional": true,
        "Description": "City"
      },
      "company": {
        "Type": "String",
        "Optional": true,
        "Description": "Company name"
      },
      "country_code": {
        "Type": "String",
        "Optional": true,
        "Description": "Country code"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Billing Group name"
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "State"
      },
      "vat_id": {
        "Type": "String",
        "Optional": true,
        "Description": "VAT id"
      },
      "zip_code": {
        "Type": "String",
        "Optional": true,
        "Description": "Zip Code"
      }
    },
    "aiven_cassandra": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cassandra": {
        "Type": "List",
        "Optional": true,
        "Description": "Cassandra server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "cassandra_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Cassandra user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cassandra": {
              "Type": "List",
              "Optional": true,
              "Description": "cassandra configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "batch_size_fail_threshold_in_kb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "batch_size_fail_threshold_in_kb",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "batch_size_warn_threshold_in_kb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "batch_size_warn_threshold_in_kb",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migrate_sstableloader": {
              "Type": "String",
              "Optional": true,
              "Description": "Migration mode for the sstableloader utility",
              "Default": {
                "Type": "string"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "service_host": {
        "Type": "String",
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_connection_pool": {
      "connection_uri": {
        "Type": "String",
        "Description": "URI for connecting to the pool",
        "Computed": true
      },
      "database_name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the database the pool connects to"
      },
      "pool_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "Mode the pool operates in (session, transaction, statement)",
        "Default": {
          "Type": "string",
          "Value": "transaction"
        }
      },
      "pool_name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the pool"
      },
      "pool_size": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of connections the pool may create towards the backend server",
        "Default": {
          "Type": "int",
          "Value": "10"
        }
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project to link the connection pool to"
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service to link the connection pool to"
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the service user used to connect to the database"
      }
    },
    "aiven_database": {
      "database_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service database name"
      },
      "lc_collate": {
        "Type": "String",
        "Optional": true,
        "Description": "Default string sort order (LC_COLLATE) of the database. Default value: en_US.UTF-8",
        "Default": {
          "Type": "string",
          "Value": "en_US.UTF-8"
        }
      },
      "lc_ctype": {
        "Type": "String",
        "Optional": true,
        "Description": "Default character classification (LC_CTYPE) of the database. Default value: en_US.UTF-8",
        "Default": {
          "Type": "string",
          "Value": "en_US.UTF-8"
        }
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project to link the database to"
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service to link the database to"
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "It is a Terraform client-side deletion protections, which prevents the database\n\t\t\tfrom being deleted by Terraform. It is recommended to enable this for any production\n\t\t\tdatabases containing critical data.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      }
    },
    "aiven_elasticsearch": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "elasticsearch": {
        "Type": "List",
        "Optional": true,
        "Description": "Elasticsearch server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "kibana_uri": {
              "Type": "String",
              "Description": "URI for Kibana frontend",
              "Computed": true
            }
          }
        }
      },
      "elasticsearch_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Elasticsearch user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain",
              "Default": {
                "Type": "string"
              }
            },
            "disable_replication_factor_adjustment": {
              "Type": "String",
              "Optional": true,
              "Description": "Disable replication factor adjustment",
              "Default": {
                "Type": "string"
              }
            },
            "elasticsearch": {
              "Type": "List",
              "Optional": true,
              "Description": "Elasticsearch settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action_auto_create_index_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "action.auto_create_index",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "action_destructive_requires_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Require explicit index names when deleting",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "cluster_max_shards_per_node": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "cluster.max_shards_per_node",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "http_max_content_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_content_length",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "http_max_header_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_header_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "http_max_initial_line_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_initial_line_length",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "indices_fielddata_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.fielddata.cache.size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "indices_memory_index_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.memory.index_buffer_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "indices_queries_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.queries.cache.size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "indices_query_bool_max_clause_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.query.bool.max_clause_count",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "reindex_remote_whitelist": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "reindex_remote_whitelist",
                    "MaxItems": 32,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "search_max_buckets": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search.max_buckets",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_analyze_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_analyze_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_force_merge_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "force_merge thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_get_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_get_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_index_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_index_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_search_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_search_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_search_throttled_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_search_throttled_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_write_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_write_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "elasticsearch_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch major version",
              "Default": {
                "Type": "string"
              }
            },
            "index_patterns": {
              "Type": "List",
              "Optional": true,
              "Description": "Index patterns",
              "MaxItems": 512,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_index_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Maximum number of indexes to keep",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pattern": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "fnmatch pattern",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sorting_algorithm": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Deletion sorting algorithm",
                    "Default": {
                      "Type": "string",
                      "Value": "creation_date"
                    }
                  }
                }
              }
            },
            "index_template": {
              "Type": "List",
              "Optional": true,
              "Description": "Template settings for all new indexes",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mapping_nested_objects_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.mapping.nested_objects.limit",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "number_of_replicas": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_replicas",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "number_of_shards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_shards",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kibana": {
              "Type": "List",
              "Optional": true,
              "Description": "Kibana settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch_request_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Timeout in milliseconds for requests made by Kibana towards Elasticsearch",
                    "Default": {
                      "Type": "float64",
                      "Value": "30000"
                    }
                  },
                  "enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable or disable Kibana",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "max_old_space_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_old_space_size",
                    "Default": {
                      "Type": "float64",
                      "Value": "128"
                    }
                  }
                }
              }
            },
            "max_index_count": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum index count",
              "Default": {
                "Type": "float64",
                "Value": "0"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to elasticsearch with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kibana with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable elasticsearch",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kibana",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to elasticsearch from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kibana from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service",
              "Default": {
                "Type": "string"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "service_host": {
        "Type": "String",
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_elasticsearch_acl": {
      "acl": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of Elasticsearch ACLs",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "rule": {
              "Type": "Set",
              "Required": true,
              "Description": "Elasticsearch rules",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "index": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Elasticsearch index pattern"
                  },
                  "permission": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Elasticsearch permission"
                  }
                }
              }
            },
            "username": {
              "Type": "String",
              "Required": true,
              "Description": "Username for the ACL entry"
            }
          }
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable Elasticsearch ACLs. When disabled authenticated service users have unrestricted access",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "extended_acl": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project to link the Elasticsearch ACLs to"
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service to link the Elasticsearch ACLs to"
      }
    },
    "aiven_grafana": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "grafana": {
        "Type": "List",
        "Optional": true,
        "Description": "Grafana server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "grafana_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Grafana user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "alerting_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable or disable Grafana alerting functionality",
              "Default": {
                "Type": "string"
              }
            },
            "alerting_error_or_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Default error or timeout setting for new alerting rules",
              "Default": {
                "Type": "string"
              }
            },
            "alerting_nodata_or_nullvalues": {
              "Type": "String",
              "Optional": true,
              "Description": "Default value for 'no data or null values' for new alerting rules",
              "Default": {
                "Type": "string"
              }
            },
            "allow_embedding": {
              "Type": "String",
              "Optional": true,
              "Description": "Allow embedding Grafana dashboards with iframe/frame/object/embed tags. Disabled by default to limit impact of clickjacking",
              "Default": {
                "Type": "string"
              }
            },
            "auth_basic_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable or disable basic authentication form, used by Grafana built-in login",
              "Default": {
                "Type": "string"
              }
            },
            "auth_generic_oauth": {
              "Type": "List",
              "Optional": true,
              "Description": "Generic OAuth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "allowed_domains": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Allowed domains",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "allowed_organizations": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require user to be member of one of the listed organizations",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "api_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "API URL",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "auth_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Authorization URL",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Name of the OAuth integration",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "scopes": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "OAuth scopes",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "token_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Token URL",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "auth_github": {
              "Type": "List",
              "Optional": true,
              "Description": "Github Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "allowed_organizations": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given organizations",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "team_ids": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given team IDs",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "auth_gitlab": {
              "Type": "List",
              "Optional": true,
              "Description": "GitLab Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "allowed_groups": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given groups",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "api_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "API URL. This only needs to be set when using self hosted GitLab",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "auth_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Authorization URL. This only needs to be set when using self hosted GitLab",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "token_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Token URL. This only needs to be set when using self hosted GitLab",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "auth_google": {
              "Type": "List",
              "Optional": true,
              "Description": "Google Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "allowed_domains": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Domains allowed to sign-in to this Grafana",
                    "MaxItems": 64,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "cookie_samesite": {
              "Type": "String",
              "Optional": true,
              "Description": "Cookie SameSite attribute: 'strict' prevents sending cookie for cross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value.",
              "Default": {
                "Type": "string"
              }
            },
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain",
              "Default": {
                "Type": "string"
              }
            },
            "dashboards_min_refresh_interval": {
              "Type": "String",
              "Optional": true,
              "Description": "Minimum refresh interval",
              "Default": {
                "Type": "string"
              }
            },
            "dashboards_versions_to_keep": {
              "Type": "String",
              "Optional": true,
              "Description": "Dashboard versions to keep per dashboard",
              "Default": {
                "Type": "string"
              }
            },
            "dataproxy_send_user_header": {
              "Type": "String",
              "Optional": true,
              "Description": "Send 'X-Grafana-User' header to data source",
              "Default": {
                "Type": "string"
              }
            },
            "dataproxy_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Timeout for data proxy requests in seconds",
              "Default": {
                "Type": "string"
              }
            },
            "disable_gravatar": {
              "Type": "String",
              "Optional": true,
              "Description": "Set to true to disable gravatar. Defaults to false (gravatar is enabled)",
              "Default": {
                "Type": "string"
              }
            },
            "editors_can_admin": {
              "Type": "String",
              "Optional": true,
              "Description": "Editors can manage folders, teams and dashboards created by them",
              "Default": {
                "Type": "string"
              }
            },
            "external_image_storage": {
              "Type": "List",
              "Optional": true,
              "Description": "External image store settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "access_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "S3 access key. Requires permissions to the S3 bucket for the s3:PutObject and s3:PutObjectAcl actions",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "bucket_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Bucket URL for S3",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "provider": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Provider type",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "secret_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "S3 secret key",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "google_analytics_ua_id": {
              "Type": "String",
              "Optional": true,
              "Description": "Google Analytics ID",
              "Default": {
                "Type": "string"
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "metrics_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Grafana /metrics endpoint",
              "Default": {
                "Type": "string"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to grafana with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable grafana",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to grafana from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service",
              "Default": {
                "Type": "string"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "smtp_server": {
              "Type": "List",
              "Optional": true,
              "Description": "SMTP server settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "from_address": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Address used for sending emails",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "from_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Name used in outgoing emails, defaults to Grafana",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Server hostname or IP",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for SMTP authentication",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "SMTP server port",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "skip_verify": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Skip verifying server certificate. Defaults to false",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "starttls_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS. Default is OpportunisticStartTLS.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Username for SMTP authentication",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "user_auto_assign_org": {
              "Type": "String",
              "Optional": true,
              "Description": "Auto-assign new users on signup to main organization. Defaults to false",
              "Default": {
                "Type": "string"
              }
            },
            "user_auto_assign_org_role": {
              "Type": "String",
              "Optional": true,
              "Description": "Set role for new signups. Defaults to Viewer",
              "Default": {
                "Type": "string"
              }
            },
            "viewers_can_edit": {
              "Type": "String",
              "Optional": true,
              "Description": "Users with view-only permission can edit but not save dashboards",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "service_host": {
        "Type": "String",
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_influxdb": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "influxdb": {
        "Type": "List",
        "Optional": true,
        "Description": "InfluxDB server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "database_name": {
              "Type": "String",
              "Description": "Name of the default InfluxDB database",
              "Computed": true
            }
          }
        }
      },
      "influxdb_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "InfluxDB user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain",
              "Default": {
                "Type": "string"
              }
            },
            "influxdb": {
              "Type": "List",
              "Optional": true,
              "Description": "influxdb.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "log_queries_after": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum duration in seconds before a query is logged as a slow query. Setting this to 0 (the default) will never log slow queries.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_row_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of rows returned in a non-chunked query. Setting this to 0 (the default) allows an unlimited number to be returned.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_select_buckets": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of 'GROUP BY time()' buckets that can be processed in a query. Setting this to 0 (the default) allows an unlimited number to be processed.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_select_point": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of points that can be processed in a SELECT statement. Setting this to 0 (the default) allows an unlimited number to be processed.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "query_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum duration in seconds before a query is killed. Setting this to 0 (the default) will never kill slow queries.",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to influxdb with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable influxdb",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to influxdb from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service",
              "Default": {
                "Type": "string"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "service_host": {
        "Type": "String",
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_kafka": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "default_acl": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Create default wildcard Kafka ACL",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "kafka": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka client certificate",
              "Computed": true
            },
            "access_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka client certificate key",
              "Computed": true
            },
            "connect_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka Connect URI, if any",
              "Computed": true
            },
            "rest_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka REST URI, if any",
              "Computed": true
            },
            "schema_registry_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Schema Registry URI, if any",
              "Computed": true
            }
          }
        }
      },
      "kafka_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain",
              "Default": {
                "Type": "string"
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka broker configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "auto_create_topics_enable": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "auto.create.topics.enable",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "compression_type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "compression.type",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "connections_max_idle_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "connections.max.idle.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "default_replication_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "default.replication.factor",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "group_initial_rebalance_delay_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.initial.rebalance.delay.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "group_max_session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.max.session.timeout.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "group_min_session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.min.session.timeout.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_cleaner_delete_retention_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.delete.retention.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_cleaner_max_compaction_lag_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.max.compaction.lag.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_cleaner_min_cleanable_ratio": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.min.cleanable.ratio",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_cleaner_min_compaction_lag_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.min.compaction.lag.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_cleanup_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleanup.policy",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_flush_interval_messages": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.flush.interval.messages",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.flush.interval.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_index_interval_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.index.interval.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_index_size_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.index.size.max.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_message_downconversion_enable": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.downconversion.enable",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_message_timestamp_difference_max_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.timestamp.difference.max.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_message_timestamp_type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.timestamp.type",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_preallocate": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.preallocate",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_retention_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_retention_hours": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.hours",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_retention_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_roll_jitter_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.roll.jitter.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_roll_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.roll.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_segment_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.segment.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_segment_delete_delay_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.segment.delete.delay.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_connections_per_ip": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max.connections.per.ip",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_incremental_fetch_session_cache_slots": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max.incremental.fetch.session.cache.slots",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "message_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "message.max.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "min_insync_replicas": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "min.insync.replicas",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "num_partitions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "num.partitions",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "offsets_retention_minutes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "offsets.retention.minutes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "producer_purgatory_purge_interval_requests": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.purgatory.purge.interval.requests",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "replica_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "replica.fetch.max.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "replica_fetch_response_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "replica.fetch.response.max.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "socket_request_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "socket.request.max.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "transaction_remove_expired_transaction_cleanup_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "transaction.remove.expired.transaction.cleanup.interval.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "transaction_state_log_segment_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "transaction.state.log.segment.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "kafka_authentication_methods": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka authentication methods",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "certificate": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable certificate/SSL authentication",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "sasl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable SASL authentication",
                    "Default": {
                      "Type": "bool",
                      "Value": "false"
                    }
                  }
                }
              }
            },
            "kafka_connect": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Kafka Connect service",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "kafka_connect_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka Connect configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connector_client_config_override_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client config override policy",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_auto_offset_reset": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer auto offset reset",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data the server should return for a fetch request",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_isolation_level": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer isolation level",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_partition_fetch_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data per-partition the server will return.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_poll_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum delay between polls when using consumer group management",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_poll_records": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of records returned by a single poll",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "offset_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The interval at which to try committing offsets for tasks",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "offset_flush_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Offset flush timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "producer_max_request_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum size of a request in bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The timeout used to detect failures when using Kafka’s group management facilities",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "kafka_rest": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Kafka-REST service",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "kafka_rest_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka REST configuration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "consumer_enable_auto_commit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.enable.auto.commit",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "consumer_request_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.request.max.bytes",
                    "Default": {
                      "Type": "float64",
                      "Value": "6.7108864e+07"
                    }
                  },
                  "consumer_request_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.request.timeout.ms",
                    "Default": {
                      "Type": "float64",
                      "Value": "1000"
                    }
                  },
                  "producer_acks": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.acks",
                    "Default": {
                      "Type": "string",
                      "Value": "1"
                    }
                  },
                  "producer_linger_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.linger.ms",
                    "Default": {
                      "Type": "float64",
                      "Value": "0"
                    }
                  },
                  "simpleconsumer_pool_size_max": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "simpleconsumer.pool.size.max",
                    "Default": {
                      "Type": "float64",
                      "Value": "25"
                    }
                  }
                }
              }
            },
            "kafka_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka major version",
              "Default": {
                "Type": "string"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_connect",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kafka_rest": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_rest",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "schema_registry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable schema_registry",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kafka_rest": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_rest from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "schema_registry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to schema_registry from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "schema_registry": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Schema-Registry service",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "schema_registry_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Schema Registry configuration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "leader_eligibility": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "leader_eligibility",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "topic_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "topic_name",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "service_host": {
        "Type": "String",
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_kafka_acl": {
      "permission": {
        "Type": "String",
        "Required": true,
        "Description": "Kafka permission to grant (admin, read, readwrite, write)"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project to link the Kafka ACL to"
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service to link the Kafka ACL to"
      },
      "topic": {
        "Type": "String",
        "Required": true,
        "Description": "Topic name pattern for the ACL entry"
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "Username pattern for the ACL entry"
      }
    },
    "aiven_kafka_connect": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "kafka_connect": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka Connect server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "kafka_connect_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka Connect user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka_connect": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka Connect configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connector_client_config_override_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client config override policy",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_auto_offset_reset": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer auto offset reset",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data the server should return for a fetch request",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_isolation_level": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer isolation level",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_partition_fetch_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data per-partition the server will return.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_poll_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum delay between polls when using consumer group management",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_poll_records": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of records returned by a single poll",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "offset_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The interval at which to try committing offsets for tasks",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "offset_flush_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Offset flush timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "producer_max_request_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum size of a request in bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The timeout used to detect failures when using Kafka’s group management facilities",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_connect",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "service_host": {
        "Type": "String",
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_kafka_connector": {
      "__timeouts__": [
        "read"
      ],
      "config": {
        "Type": "Map",
        "Required": true,
        "Description": "Kafka Connector configuration parameters",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "connector_name": {
        "Type": "String",
        "Required": true,
        "Description": "Kafka connector name"
      },
      "plugin_author": {
        "Type": "String",
        "Description": "Kafka connector author",
        "Computed": true
      },
      "plugin_class": {
        "Type": "String",
        "Description": "Kafka connector Java class",
        "Computed": true
      },
      "plugin_doc_url": {
        "Type": "String",
        "Description": "Kafka connector documentation URL",
        "Computed": true
      },
      "plugin_title": {
        "Type": "String",
        "Description": "Kafka connector title",
        "Computed": true
      },
      "plugin_type": {
        "Type": "String",
        "Description": "Kafka connector type",
        "Computed": true
      },
      "plugin_version": {
        "Type": "String",
        "Description": "Kafka connector version",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project to link the kafka connector to"
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service to link the kafka connector to"
      },
      "task": {
        "Type": "Set",
        "Description": "List of tasks of a connector",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "connector": {
              "Type": "String",
              "Description": "Related connector name",
              "Computed": true
            },
            "task": {
              "Type": "Int",
              "Description": "Task id / number",
              "Computed": true
            }
          }
        }
      }
    },
    "aiven_kafka_mirrormaker": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "kafka_mirrormaker": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka MirrorMaker 2 server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "kafka_mirrormaker_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka MirrorMaker 2 specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka_mirrormaker": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka MirrorMaker configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "emit_checkpoints_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Emit consumer group offset checkpoints",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "emit_checkpoints_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of consumer group offset checkpoints",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "refresh_groups_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Refresh consumer groups",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "refresh_groups_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of group refresh",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "refresh_topics_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Refresh topics and partitions",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "refresh_topics_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of topic and partitions refresh",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sync_group_offsets_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Sync consumer group offsets",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sync_group_offsets_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of consumer group offset sync",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "service_host": {
        "Type": "String",
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_kafka_schema": {
      "compatibility_level": {
        "Type": "String",
        "Optional": true,
        "Description": "Kafka Schemas compatibility level"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project to link the Kafka Schema to"
      },
      "schema": {
        "Type": "String",
        "Required": true,
        "Description": "Kafka Schema configuration should be a valid Avro Schema JSON format"
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service to link the Kafka Schema to"
      },
      "subject_name": {
        "Type": "String",
        "Required": true,
        "Description": "Kafka Schema Subject name"
      },
      "version": {
        "Type": "Int",
        "Description": "Kafka Schema configuration version",
        "Computed": true
      }
    },
    "aiven_kafka_schema_configuration": {
      "compatibility_level": {
        "Type": "String",
        "Required": true,
        "Description": "Kafka Schemas compatibility level"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project to link the Kafka Schemas Configuration to"
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service to link the Kafka Schemas Configuration to"
      }
    },
    "aiven_kafka_topic": {
      "__timeouts__": [
        "create",
        "read",
        "delete"
      ],
      "cleanup_policy": {
        "Type": "String",
        "Optional": true,
        "Description": "Topic cleanup policy. Allowed values: delete, compact",
        "Deprecated": "use config.cleanup_policy instead"
      },
      "config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka topic configuration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cleanup_policy": {
              "Type": "String",
              "Optional": true,
              "Description": "cleanup.policy value"
            },
            "compression_type": {
              "Type": "String",
              "Optional": true,
              "Description": "compression.type value"
            },
            "delete_retention_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "delete.retention.ms value"
            },
            "file_delete_delay_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "file.delete.delay.ms value"
            },
            "flush_messages": {
              "Type": "String",
              "Optional": true,
              "Description": "flush.messages value"
            },
            "flush_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "flush.ms value"
            },
            "index_interval_bytes": {
              "Type": "String",
              "Optional": true,
              "Description": "index.interval.bytes value"
            },
            "max_compaction_lag_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "max.compaction.lag.ms value"
            },
            "max_message_bytes": {
              "Type": "String",
              "Optional": true,
              "Description": "max.message.bytes value"
            },
            "message_downconversion_enable": {
              "Type": "String",
              "Optional": true,
              "Description": "message.downconversion.enable value"
            },
            "message_format_version": {
              "Type": "String",
              "Optional": true,
              "Description": "message.format.version value"
            },
            "message_timestamp_difference_max_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "message.timestamp.difference.max.ms value"
            },
            "message_timestamp_type": {
              "Type": "String",
              "Optional": true,
              "Description": "message.timestamp.type value"
            },
            "min_cleanable_dirty_ratio": {
              "Type": "String",
              "Optional": true,
              "Description": "min.cleanable.dirty.ratio value"
            },
            "min_compaction_lag_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "min.compaction.lag.ms value"
            },
            "min_insync_replicas": {
              "Type": "String",
              "Optional": true,
              "Description": "min.insync.replicas value"
            },
            "preallocate": {
              "Type": "String",
              "Optional": true,
              "Description": "preallocate value"
            },
            "retention_bytes": {
              "Type": "String",
              "Optional": true,
              "Description": "retention.bytes value"
            },
            "retention_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "retention.ms value"
            },
            "segment_bytes": {
              "Type": "String",
              "Optional": true,
              "Description": "segment.bytes value"
            },
            "segment_index_bytes": {
              "Type": "String",
              "Optional": true,
              "Description": "segment.index.bytes value"
            },
            "segment_jitter_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "segment.jitter.ms value"
            },
            "segment_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "segment.ms value"
            },
            "unclean_leader_election_enable": {
              "Type": "String",
              "Optional": true,
              "Description": "unclean.leader.election.enable value"
            }
          }
        }
      },
      "minimum_in_sync_replicas": {
        "Type": "Int",
        "Optional": true,
        "Description": "Minimum required nodes in-sync replicas (ISR) to produce to a partition",
        "Deprecated": "use config.min_insync_replicas instead"
      },
      "partitions": {
        "Type": "Int",
        "Required": true,
        "Description": "Number of partitions to create in the topic"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project to link the kafka topic to"
      },
      "replication": {
        "Type": "Int",
        "Required": true,
        "Description": "Replication factor for the topic"
      },
      "retention_bytes": {
        "Type": "Int",
        "Optional": true,
        "Description": "Retention bytes",
        "Deprecated": "use config.retention_bytes instead"
      },
      "retention_hours": {
        "Type": "Int",
        "Optional": true,
        "Description": "Retention period (hours)",
        "Deprecated": "use config.retention_ms instead"
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service to link the kafka topic to"
      },
      "tag": {
        "Type": "Set",
        "Optional": true,
        "Description": "Kafka Topic tag",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "Topic tag key"
            },
            "value": {
              "Type": "String",
              "Optional": true,
              "Description": "Topic tag value"
            }
          }
        }
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "It is a Terraform client-side deletion protection, which prevents a Kafka \n\t\t\ttopic from being deleted. It is recommended to enable this for any production Kafka \n\t\t\ttopic containing critical data.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "topic_name": {
        "Type": "String",
        "Required": true,
        "Description": "Topic name"
      }
    },
    "aiven_m3aggregator": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "m3aggregator": {
        "Type": "List",
        "Optional": true,
        "Description": "M3 aggregator specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "m3aggregator_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "M3 aggregator specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain",
              "Default": {
                "Type": "string"
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "m3_version": {
              "Type": "String",
              "Optional": true,
              "Description": "M3 major version (deprecated, use m3aggregator_version)",
              "Default": {
                "Type": "string"
              }
            },
            "m3aggregator_version": {
              "Type": "String",
              "Optional": true,
              "Description": "M3 major version (the minimum compatible version)",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "service_host": {
        "Type": "String",
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_m3db": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "m3db": {
        "Type": "List",
        "Optional": true,
        "Description": "M3 specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "m3db_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "M3 specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain",
              "Default": {
                "Type": "string"
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "limits": {
              "Type": "List",
              "Optional": true,
              "Description": "M3 limits",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "global_datapoints": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of data points fetched during request",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "query_datapoints": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of data points fetched in single query",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "query_require_exhaustive": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Require exhaustive result",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "query_series": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of series fetched in single query",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "m3_version": {
              "Type": "String",
              "Optional": true,
              "Description": "M3 major version (deprecated, use m3db_version)",
              "Default": {
                "Type": "string"
              }
            },
            "m3coordinator_enable_graphite_carbon_ingest": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Graphite ingestion using Carbon plaintext protocol",
              "Default": {
                "Type": "string"
              }
            },
            "m3db_version": {
              "Type": "String",
              "Optional": true,
              "Description": "M3 major version (the minimum compatible version)",
              "Default": {
                "Type": "string"
              }
            },
            "namespaces": {
              "Type": "List",
              "Optional": true,
              "Description": "List of M3 namespaces",
              "MaxItems": 2147483647,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The name of the namespace",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "options": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Namespace options",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "retention_options": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Retention options",
                          "MaxItems": 1,
                          "IsBlock": true,
                          "ConfigImplicitMode": "Block",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "block_data_expiry_duration": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Controls how long we wait before expiring stale data",
                                "Default": {
                                  "Type": "string"
                                }
                              },
                              "blocksize_duration": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Controls how long to keep a block in memory before flushing to a fileset on disk",
                                "Default": {
                                  "Type": "string"
                                }
                              },
                              "buffer_future_duration": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Controls how far into the future writes to the namespace will be accepted",
                                "Default": {
                                  "Type": "string"
                                }
                              },
                              "buffer_past_duration": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Controls how far into the past writes to the namespace will be accepted",
                                "Default": {
                                  "Type": "string"
                                }
                              },
                              "retention_period_duration": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Controls the duration of time that M3DB will retain data for the namespace",
                                "Default": {
                                  "Type": "string"
                                }
                              }
                            }
                          }
                        },
                        "snapshot_enabled": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Controls whether M3DB will create snapshot files for this namespace",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "writes_to_commitlog": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Controls whether M3DB will include writes to this namespace in the commitlog",
                          "Default": {
                            "Type": "string"
                          }
                        }
                      }
                    }
                  },
                  "resolution": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The resolution for an aggregated namespace",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The type of aggregation (aggregated/unaggregated)",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "m3coordinator": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to m3coordinator with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "m3coordinator": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to m3coordinator from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "rules": {
              "Type": "List",
              "Optional": true,
              "Description": "M3 rules",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mapping": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of M3 mapping rules",
                    "MaxItems": 10,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "aggregations": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of aggregations to be applied",
                          "MaxItems": 10,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "drop": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Drop the matching metric",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "filter": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The metrics to be used with this particular rule",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The (optional) name of the rule",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "tags": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of tags to be appended to matching metrics",
                          "MaxItems": 10,
                          "IsBlock": true,
                          "ConfigImplicitMode": "Block",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "name": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Name of the tag",
                                "Default": {
                                  "Type": "string"
                                }
                              },
                              "value": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Value of the tag",
                                "Default": {
                                  "Type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "service_host": {
        "Type": "String",
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_mirrormaker_replication_flow": {
      "enable": {
        "Type": "Bool",
        "Required": true,
        "Description": "Enable of disable replication flows for a service"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project to link the kafka topic to"
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service to link the kafka topic to"
      },
      "source_cluster": {
        "Type": "String",
        "Required": true,
        "Description": "Source cluster alias"
      },
      "target_cluster": {
        "Type": "String",
        "Required": true,
        "Description": "Target cluster alias"
      },
      "topics": {
        "Type": "List",
        "Optional": true,
        "Description": "List of topics and/or regular expressions to replicate",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "topics_blacklist": {
        "Type": "List",
        "Optional": true,
        "Description": "List of topics and/or regular expressions to not replicate.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "aiven_mysql": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "mysql": {
        "Type": "List",
        "Optional": true,
        "Description": "MySQL specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "mysql_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "MySQL specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "admin_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "admin_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom username for admin user. This must be set only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "backup_hour": {
              "Type": "String",
              "Optional": true,
              "Description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.",
              "Default": {
                "Type": "string"
              }
            },
            "backup_minute": {
              "Type": "String",
              "Optional": true,
              "Description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.",
              "Default": {
                "Type": "string"
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "mysql": {
              "Type": "List",
              "Optional": true,
              "Description": "mysql.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connect_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "connect_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "default_time_zone": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "default_time_zone",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "group_concat_max_len": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group_concat_max_len",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "information_schema_stats_expiry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "information_schema_stats_expiry",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_ft_min_token_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_ft_min_token_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_ft_server_stopword_table": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_ft_server_stopword_table",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_lock_wait_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_lock_wait_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_log_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_log_buffer_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_online_alter_log_max_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_online_alter_log_max_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_print_all_deadlocks": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_print_all_deadlocks",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_rollback_on_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_rollback_on_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "interactive_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "interactive_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "long_query_time": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "long_query_time",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_allowed_packet": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_allowed_packet",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_heap_table_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_heap_table_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "net_read_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "net_read_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "net_write_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "net_write_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "slow_query_log": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "slow_query_log",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sort_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sort_buffer_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sql_mode": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sql_mode",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sql_require_primary_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sql_require_primary_key",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "tmp_table_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "tmp_table_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "wait_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wait_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "mysql_version": {
              "Type": "String",
              "Optional": true,
              "Description": "MySQL major version",
              "Default": {
                "Type": "string"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysql with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable mysql",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysql from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_target_time": {
              "Type": "String",
              "Optional": true,
              "Description": "Recovery target time when forking a service. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "service_host": {
        "Type": "String",
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_pg": {
      "__timeouts__": [
        "create",
        "update",
        "default"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "pg": {
        "Type": "List",
        "Optional": true,
        "Description": "PostgreSQL specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dbname": {
              "Type": "String",
              "Description": "Primary PostgreSQL database name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "PostgreSQL master node host IP or name",
              "Computed": true
            },
            "password": {
              "Type": "String",
              "Description": "PostgreSQL admin user password",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "PostgreSQL port",
              "Computed": true
            },
            "replica_uri": {
              "Type": "String",
              "Description": "PostgreSQL replica URI for services with a replica",
              "Computed": true
            },
            "sslmode": {
              "Type": "String",
              "Description": "PostgreSQL sslmode setting (currently always \"require\")",
              "Computed": true
            },
            "uri": {
              "Type": "String",
              "Optional": true,
              "Description": "PostgreSQL master connection URI",
              "Computed": true
            },
            "user": {
              "Type": "String",
              "Description": "PostgreSQL admin user name",
              "Computed": true
            }
          }
        }
      },
      "pg_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "PostgreSQL specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "admin_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "admin_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom username for admin user. This must be set only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "backup_hour": {
              "Type": "String",
              "Optional": true,
              "Description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.",
              "Default": {
                "Type": "string"
              }
            },
            "backup_minute": {
              "Type": "String",
              "Optional": true,
              "Description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.",
              "Default": {
                "Type": "string"
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "pg": {
              "Type": "List",
              "Optional": true,
              "Description": "postgresql.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "autovacuum_analyze_scale_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_analyze_scale_factor",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_analyze_threshold": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_analyze_threshold",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_freeze_max_age": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_freeze_max_age",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_max_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_max_workers",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_naptime": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_naptime",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_vacuum_cost_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_cost_delay",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_vacuum_cost_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_cost_limit",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_vacuum_scale_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_scale_factor",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_vacuum_threshold": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_threshold",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "deadlock_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "deadlock_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "idle_in_transaction_session_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "idle_in_transaction_session_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "jit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "jit",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_autovacuum_min_duration": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_autovacuum_min_duration",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_error_verbosity": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_error_verbosity",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_line_prefix": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_line_prefix",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_min_duration_statement": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_min_duration_statement",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_files_per_process": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_files_per_process",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_locks_per_transaction": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_locks_per_transaction",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_logical_replication_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_logical_replication_workers",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_parallel_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_parallel_workers",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_parallel_workers_per_gather": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_parallel_workers_per_gather",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_pred_locks_per_transaction": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_pred_locks_per_transaction",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_prepared_transactions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_prepared_transactions",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_replication_slots": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_replication_slots",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_stack_depth": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_stack_depth",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_standby_archive_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_standby_archive_delay",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_standby_streaming_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_standby_streaming_delay",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_wal_senders": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_wal_senders",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_worker_processes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_worker_processes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pg_partman_bgw__dot__interval": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_partman_bgw.interval",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pg_partman_bgw__dot__role": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_partman_bgw.role",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pg_stat_statements__dot__track": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_stat_statements.track",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "temp_file_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "temp_file_limit",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "timezone": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "timezone",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "track_activity_query_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_activity_query_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "track_commit_timestamp": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_commit_timestamp",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "track_functions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_functions",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "wal_sender_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wal_sender_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "wal_writer_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wal_writer_delay",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "pg_read_replica": {
              "Type": "String",
              "Optional": true,
              "Description": "Should the service which is being forked be a read replica",
              "Default": {
                "Type": "string"
              }
            },
            "pg_service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the PG Service from which to fork (deprecated, use service_to_fork_from). This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "pg_version": {
              "Type": "String",
              "Optional": true,
              "Description": "PostgreSQL major version",
              "Default": {
                "Type": "string"
              }
            },
            "pgbouncer": {
              "Type": "List",
              "Optional": true,
              "Description": "PGBouncer connection pooling settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "autodb_idle_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If the automatically created database pools have been unused this many seconds, they are freed. If 0 then timeout is disabled. [seconds]",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autodb_max_db_connections": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Do not allow more than this many server connections per database (regardless of user). Setting it to 0 means unlimited.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autodb_pool_mode": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "PGBouncer pool mode",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autodb_pool_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If non-zero then create automatically a pool of that size per user when a pool doesn't exist.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ignore_startup_parameters": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of parameters to ignore when given in startup packet",
                    "MaxItems": 32,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "min_pool_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Add more server connections to pool if below this number. Improves behavior when usual load comes suddenly back after period of total inactivity. The value is effectively capped at the pool size.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "server_idle_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If a server connection has been idle more than this many seconds it will be dropped. If 0 then timeout is disabled. [seconds]",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "server_lifetime": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The pooler will close an unused server connection that has been connected longer than this. [seconds]",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "server_reset_query_always": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Run server_reset_query (DISCARD ALL) in all pooling modes",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "pglookout": {
              "Type": "List",
              "Optional": true,
              "Description": "PGLookout settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_failover_replication_time_lag": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_failover_replication_time_lag",
                    "Default": {
                      "Type": "float64",
                      "Value": "60"
                    }
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pg with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pgbouncer with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable pg",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable pgbouncer",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pg from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pgbouncer from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_target_time": {
              "Type": "String",
              "Optional": true,
              "Description": "Recovery target time when forking a service. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "shared_buffers_percentage": {
              "Type": "String",
              "Optional": true,
              "Description": "shared_buffers_percentage",
              "Default": {
                "Type": "string"
              }
            },
            "synchronous_replication": {
              "Type": "String",
              "Optional": true,
              "Description": "Synchronous replication type. Note that the service plan also needs to support synchronous replication.",
              "Default": {
                "Type": "string"
              }
            },
            "timescaledb": {
              "Type": "List",
              "Optional": true,
              "Description": "TimescaleDB extension configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_background_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "timescaledb.max_background_workers",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "variant": {
              "Type": "String",
              "Optional": true,
              "Description": "Variant of the PostgreSQL service, may affect the features that are exposed by default",
              "Default": {
                "Type": "string"
              }
            },
            "work_mem": {
              "Type": "String",
              "Optional": true,
              "Description": "work_mem",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "service_host": {
        "Type": "String",
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_project": {
      "account_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Account ID"
      },
      "available_credits": {
        "Type": "String",
        "Optional": true,
        "Description": "Available credits",
        "Computed": true
      },
      "billing_address": {
        "Type": "String",
        "Optional": true,
        "Description": "Billing name and address of the project",
        "Deprecated": "Please use aiven_billing_group resource to set this value."
      },
      "billing_currency": {
        "Type": "String",
        "Optional": true,
        "Description": "Billing currency",
        "Deprecated": "Please use aiven_billing_group resource to set this value."
      },
      "billing_emails": {
        "Type": "Set",
        "Optional": true,
        "Description": "Billing contact emails of the project",
        "Deprecated": "Please use aiven_billing_group resource to set this value.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "billing_extra_text": {
        "Type": "String",
        "Optional": true,
        "Description": "Extra text to be included in all project invoices, e.g. purchase order or cost center number",
        "Deprecated": "Please use aiven_billing_group resource to set this value."
      },
      "billing_group": {
        "Type": "String",
        "Optional": true,
        "Description": "Billing group Id"
      },
      "ca_cert": {
        "Type": "String",
        "Optional": true,
        "Description": "Project root CA. This is used by some services like Kafka to sign service certificate",
        "Computed": true
      },
      "card_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Credit card ID",
        "Deprecated": "Please use aiven_billing_group resource to set this value."
      },
      "copy_from_project": {
        "Type": "String",
        "Optional": true,
        "Description": "Copy properties from another project. Only has effect when a new project is created."
      },
      "country": {
        "Type": "String",
        "Description": "Billing country",
        "Computed": true,
        "Deprecated": "Please use aiven_billing_group resource to set this value."
      },
      "country_code": {
        "Type": "String",
        "Optional": true,
        "Description": "Billing country code of the project",
        "Deprecated": "Please use aiven_billing_group resource to set this value."
      },
      "default_cloud": {
        "Type": "String",
        "Optional": true,
        "Description": "Default cloud for new services"
      },
      "estimated_balance": {
        "Type": "String",
        "Description": "Estimated balance",
        "Computed": true
      },
      "payment_method": {
        "Type": "String",
        "Description": "Payment method",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project name"
      },
      "technical_emails": {
        "Type": "Set",
        "Optional": true,
        "Description": "Technical contact emails of the project",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "vat_id": {
        "Type": "String",
        "Optional": true,
        "Description": "EU VAT Identification Number",
        "Deprecated": "Please use aiven_billing_group resource to set this value."
      }
    },
    "aiven_project_user": {
      "accepted": {
        "Type": "Bool",
        "Description": "Whether the user has accepted project membership or not",
        "Computed": true
      },
      "email": {
        "Type": "String",
        "Required": true,
        "Description": "Email address of the user"
      },
      "member_type": {
        "Type": "String",
        "Required": true,
        "Description": "Project membership type. One of: admin, developer, operator"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "The project the user belongs to"
      }
    },
    "aiven_project_vpc": {
      "__timeouts__": [
        "create",
        "delete"
      ],
      "cloud_name": {
        "Type": "String",
        "Required": true,
        "Description": "Cloud the VPC is in"
      },
      "network_cidr": {
        "Type": "String",
        "Required": true,
        "Description": "Network address range used by the VPC like 192.168.0.0/24"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "The project the VPC belongs to"
      },
      "state": {
        "Type": "String",
        "Description": "State of the VPC (APPROVED, ACTIVE, DELETING, DELETED)",
        "Computed": true
      }
    },
    "aiven_redis": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "redis": {
        "Type": "List",
        "Optional": true,
        "Description": "Redis server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "redis_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Redis user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to redis with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable redis",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to redis from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service",
              "Default": {
                "Type": "string"
              }
            },
            "redis_io_threads": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis IO thread count",
              "Default": {
                "Type": "string"
              }
            },
            "redis_lfu_decay_time": {
              "Type": "String",
              "Optional": true,
              "Description": "LFU maxmemory-policy counter decay time in minutes",
              "Default": {
                "Type": "float64",
                "Value": "1"
              }
            },
            "redis_lfu_log_factor": {
              "Type": "String",
              "Optional": true,
              "Description": "Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies",
              "Default": {
                "Type": "float64",
                "Value": "10"
              }
            },
            "redis_maxmemory_policy": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis maxmemory-policy",
              "Default": {
                "Type": "string",
                "Value": "noeviction"
              }
            },
            "redis_notify_keyspace_events": {
              "Type": "String",
              "Optional": true,
              "Description": "Set notify-keyspace-events option",
              "Default": {
                "Type": "string"
              }
            },
            "redis_ssl": {
              "Type": "String",
              "Optional": true,
              "Description": "Require SSL to access Redis",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "redis_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis idle connection timeout",
              "Default": {
                "Type": "float64",
                "Value": "300"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "service_host": {
        "Type": "String",
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_service": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cassandra": {
        "Type": "List",
        "Optional": true,
        "Description": "Cassandra specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "cassandra_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Cassandra specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cassandra": {
              "Type": "List",
              "Optional": true,
              "Description": "cassandra configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "batch_size_fail_threshold_in_kb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "batch_size_fail_threshold_in_kb",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "batch_size_warn_threshold_in_kb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "batch_size_warn_threshold_in_kb",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migrate_sstableloader": {
              "Type": "String",
              "Optional": true,
              "Description": "Migration mode for the sstableloader utility",
              "Default": {
                "Type": "string"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "elasticsearch": {
        "Type": "List",
        "Optional": true,
        "Description": "Elasticsearch specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "kibana_uri": {
              "Type": "String",
              "Description": "URI for Kibana frontend",
              "Computed": true
            }
          }
        }
      },
      "elasticsearch_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Elasticsearch specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain",
              "Default": {
                "Type": "string"
              }
            },
            "disable_replication_factor_adjustment": {
              "Type": "String",
              "Optional": true,
              "Description": "Disable replication factor adjustment",
              "Default": {
                "Type": "string"
              }
            },
            "elasticsearch": {
              "Type": "List",
              "Optional": true,
              "Description": "Elasticsearch settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action_auto_create_index_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "action.auto_create_index",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "action_destructive_requires_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Require explicit index names when deleting",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "cluster_max_shards_per_node": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "cluster.max_shards_per_node",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "http_max_content_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_content_length",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "http_max_header_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_header_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "http_max_initial_line_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_initial_line_length",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "indices_fielddata_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.fielddata.cache.size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "indices_memory_index_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.memory.index_buffer_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "indices_queries_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.queries.cache.size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "indices_query_bool_max_clause_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.query.bool.max_clause_count",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "reindex_remote_whitelist": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "reindex_remote_whitelist",
                    "MaxItems": 32,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "search_max_buckets": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search.max_buckets",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_analyze_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_analyze_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_force_merge_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "force_merge thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_get_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_get_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_index_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_index_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_search_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_search_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_search_throttled_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_search_throttled_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_write_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_write_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "elasticsearch_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch major version",
              "Default": {
                "Type": "string"
              }
            },
            "index_patterns": {
              "Type": "List",
              "Optional": true,
              "Description": "Index patterns",
              "MaxItems": 512,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_index_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Maximum number of indexes to keep",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pattern": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "fnmatch pattern",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sorting_algorithm": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Deletion sorting algorithm",
                    "Default": {
                      "Type": "string",
                      "Value": "creation_date"
                    }
                  }
                }
              }
            },
            "index_template": {
              "Type": "List",
              "Optional": true,
              "Description": "Template settings for all new indexes",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mapping_nested_objects_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.mapping.nested_objects.limit",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "number_of_replicas": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_replicas",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "number_of_shards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_shards",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kibana": {
              "Type": "List",
              "Optional": true,
              "Description": "Kibana settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch_request_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Timeout in milliseconds for requests made by Kibana towards Elasticsearch",
                    "Default": {
                      "Type": "float64",
                      "Value": "30000"
                    }
                  },
                  "enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable or disable Kibana",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "max_old_space_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_old_space_size",
                    "Default": {
                      "Type": "float64",
                      "Value": "128"
                    }
                  }
                }
              }
            },
            "max_index_count": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum index count",
              "Default": {
                "Type": "float64",
                "Value": "0"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to elasticsearch with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kibana with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable elasticsearch",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kibana",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to elasticsearch from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kibana from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service",
              "Default": {
                "Type": "string"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "grafana": {
        "Type": "List",
        "Optional": true,
        "Description": "Grafana specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "grafana_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Grafana specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "alerting_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable or disable Grafana alerting functionality",
              "Default": {
                "Type": "string"
              }
            },
            "alerting_error_or_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Default error or timeout setting for new alerting rules",
              "Default": {
                "Type": "string"
              }
            },
            "alerting_nodata_or_nullvalues": {
              "Type": "String",
              "Optional": true,
              "Description": "Default value for 'no data or null values' for new alerting rules",
              "Default": {
                "Type": "string"
              }
            },
            "allow_embedding": {
              "Type": "String",
              "Optional": true,
              "Description": "Allow embedding Grafana dashboards with iframe/frame/object/embed tags. Disabled by default to limit impact of clickjacking",
              "Default": {
                "Type": "string"
              }
            },
            "auth_basic_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable or disable basic authentication form, used by Grafana built-in login",
              "Default": {
                "Type": "string"
              }
            },
            "auth_generic_oauth": {
              "Type": "List",
              "Optional": true,
              "Description": "Generic OAuth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "allowed_domains": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Allowed domains",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "allowed_organizations": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require user to be member of one of the listed organizations",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "api_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "API URL",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "auth_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Authorization URL",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Name of the OAuth integration",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "scopes": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "OAuth scopes",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "token_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Token URL",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "auth_github": {
              "Type": "List",
              "Optional": true,
              "Description": "Github Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "allowed_organizations": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given organizations",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "team_ids": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given team IDs",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "auth_gitlab": {
              "Type": "List",
              "Optional": true,
              "Description": "GitLab Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "allowed_groups": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given groups",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "api_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "API URL. This only needs to be set when using self hosted GitLab",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "auth_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Authorization URL. This only needs to be set when using self hosted GitLab",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "token_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Token URL. This only needs to be set when using self hosted GitLab",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "auth_google": {
              "Type": "List",
              "Optional": true,
              "Description": "Google Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "allowed_domains": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Domains allowed to sign-in to this Grafana",
                    "MaxItems": 64,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "cookie_samesite": {
              "Type": "String",
              "Optional": true,
              "Description": "Cookie SameSite attribute: 'strict' prevents sending cookie for cross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value.",
              "Default": {
                "Type": "string"
              }
            },
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain",
              "Default": {
                "Type": "string"
              }
            },
            "dashboards_min_refresh_interval": {
              "Type": "String",
              "Optional": true,
              "Description": "Minimum refresh interval",
              "Default": {
                "Type": "string"
              }
            },
            "dashboards_versions_to_keep": {
              "Type": "String",
              "Optional": true,
              "Description": "Dashboard versions to keep per dashboard",
              "Default": {
                "Type": "string"
              }
            },
            "dataproxy_send_user_header": {
              "Type": "String",
              "Optional": true,
              "Description": "Send 'X-Grafana-User' header to data source",
              "Default": {
                "Type": "string"
              }
            },
            "dataproxy_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Timeout for data proxy requests in seconds",
              "Default": {
                "Type": "string"
              }
            },
            "disable_gravatar": {
              "Type": "String",
              "Optional": true,
              "Description": "Set to true to disable gravatar. Defaults to false (gravatar is enabled)",
              "Default": {
                "Type": "string"
              }
            },
            "editors_can_admin": {
              "Type": "String",
              "Optional": true,
              "Description": "Editors can manage folders, teams and dashboards created by them",
              "Default": {
                "Type": "string"
              }
            },
            "external_image_storage": {
              "Type": "List",
              "Optional": true,
              "Description": "External image store settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "access_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "S3 access key. Requires permissions to the S3 bucket for the s3:PutObject and s3:PutObjectAcl actions",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "bucket_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Bucket URL for S3",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "provider": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Provider type",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "secret_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "S3 secret key",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "google_analytics_ua_id": {
              "Type": "String",
              "Optional": true,
              "Description": "Google Analytics ID",
              "Default": {
                "Type": "string"
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "metrics_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Grafana /metrics endpoint",
              "Default": {
                "Type": "string"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to grafana with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable grafana",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to grafana from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service",
              "Default": {
                "Type": "string"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "smtp_server": {
              "Type": "List",
              "Optional": true,
              "Description": "SMTP server settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "from_address": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Address used for sending emails",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "from_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Name used in outgoing emails, defaults to Grafana",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Server hostname or IP",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for SMTP authentication",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "SMTP server port",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "skip_verify": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Skip verifying server certificate. Defaults to false",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "starttls_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS. Default is OpportunisticStartTLS.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Username for SMTP authentication",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "user_auto_assign_org": {
              "Type": "String",
              "Optional": true,
              "Description": "Auto-assign new users on signup to main organization. Defaults to false",
              "Default": {
                "Type": "string"
              }
            },
            "user_auto_assign_org_role": {
              "Type": "String",
              "Optional": true,
              "Description": "Set role for new signups. Defaults to Viewer",
              "Default": {
                "Type": "string"
              }
            },
            "viewers_can_edit": {
              "Type": "String",
              "Optional": true,
              "Description": "Users with view-only permission can edit but not save dashboards",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "influxdb": {
        "Type": "List",
        "Optional": true,
        "Description": "InfluxDB specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "database_name": {
              "Type": "String",
              "Description": "Name of the default InfluxDB database",
              "Computed": true
            }
          }
        }
      },
      "influxdb_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "InfluxDB specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain",
              "Default": {
                "Type": "string"
              }
            },
            "influxdb": {
              "Type": "List",
              "Optional": true,
              "Description": "influxdb.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "log_queries_after": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum duration in seconds before a query is logged as a slow query. Setting this to 0 (the default) will never log slow queries.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_row_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of rows returned in a non-chunked query. Setting this to 0 (the default) allows an unlimited number to be returned.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_select_buckets": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of 'GROUP BY time()' buckets that can be processed in a query. Setting this to 0 (the default) allows an unlimited number to be processed.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_select_point": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of points that can be processed in a SELECT statement. Setting this to 0 (the default) allows an unlimited number to be processed.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "query_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum duration in seconds before a query is killed. Setting this to 0 (the default) will never kill slow queries.",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to influxdb with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable influxdb",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to influxdb from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service",
              "Default": {
                "Type": "string"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "kafka": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka client certificate",
              "Computed": true
            },
            "access_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka client certificate key",
              "Computed": true
            },
            "connect_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka Connect URI, if any",
              "Computed": true
            },
            "rest_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka REST URI, if any",
              "Computed": true
            },
            "schema_registry_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Schema Registry URI, if any",
              "Computed": true
            }
          }
        }
      },
      "kafka_connect": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka Connect specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "kafka_connect_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka Connect specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka_connect": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka Connect configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connector_client_config_override_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client config override policy",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_auto_offset_reset": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer auto offset reset",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data the server should return for a fetch request",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_isolation_level": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer isolation level",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_partition_fetch_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data per-partition the server will return.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_poll_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum delay between polls when using consumer group management",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_poll_records": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of records returned by a single poll",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "offset_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The interval at which to try committing offsets for tasks",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "offset_flush_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Offset flush timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "producer_max_request_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum size of a request in bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The timeout used to detect failures when using Kafka’s group management facilities",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_connect",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "kafka_mirrormaker": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka MirrorMaker 2 specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "kafka_mirrormaker_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka MirrorMaker 2 specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka_mirrormaker": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka MirrorMaker configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "emit_checkpoints_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Emit consumer group offset checkpoints",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "emit_checkpoints_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of consumer group offset checkpoints",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "refresh_groups_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Refresh consumer groups",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "refresh_groups_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of group refresh",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "refresh_topics_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Refresh topics and partitions",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "refresh_topics_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of topic and partitions refresh",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sync_group_offsets_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Sync consumer group offsets",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sync_group_offsets_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of consumer group offset sync",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "kafka_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain",
              "Default": {
                "Type": "string"
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka broker configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "auto_create_topics_enable": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "auto.create.topics.enable",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "compression_type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "compression.type",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "connections_max_idle_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "connections.max.idle.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "default_replication_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "default.replication.factor",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "group_initial_rebalance_delay_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.initial.rebalance.delay.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "group_max_session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.max.session.timeout.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "group_min_session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.min.session.timeout.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_cleaner_delete_retention_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.delete.retention.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_cleaner_max_compaction_lag_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.max.compaction.lag.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_cleaner_min_cleanable_ratio": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.min.cleanable.ratio",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_cleaner_min_compaction_lag_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.min.compaction.lag.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_cleanup_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleanup.policy",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_flush_interval_messages": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.flush.interval.messages",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.flush.interval.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_index_interval_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.index.interval.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_index_size_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.index.size.max.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_message_downconversion_enable": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.downconversion.enable",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_message_timestamp_difference_max_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.timestamp.difference.max.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_message_timestamp_type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.timestamp.type",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_preallocate": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.preallocate",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_retention_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_retention_hours": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.hours",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_retention_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_roll_jitter_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.roll.jitter.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_roll_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.roll.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_segment_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.segment.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_segment_delete_delay_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.segment.delete.delay.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_connections_per_ip": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max.connections.per.ip",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_incremental_fetch_session_cache_slots": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max.incremental.fetch.session.cache.slots",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "message_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "message.max.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "min_insync_replicas": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "min.insync.replicas",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "num_partitions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "num.partitions",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "offsets_retention_minutes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "offsets.retention.minutes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "producer_purgatory_purge_interval_requests": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.purgatory.purge.interval.requests",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "replica_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "replica.fetch.max.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "replica_fetch_response_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "replica.fetch.response.max.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "socket_request_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "socket.request.max.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "transaction_remove_expired_transaction_cleanup_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "transaction.remove.expired.transaction.cleanup.interval.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "transaction_state_log_segment_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "transaction.state.log.segment.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "kafka_authentication_methods": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka authentication methods",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "certificate": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable certificate/SSL authentication",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "sasl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable SASL authentication",
                    "Default": {
                      "Type": "bool",
                      "Value": "false"
                    }
                  }
                }
              }
            },
            "kafka_connect": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Kafka Connect service",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "kafka_connect_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka Connect configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connector_client_config_override_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client config override policy",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_auto_offset_reset": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer auto offset reset",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data the server should return for a fetch request",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_isolation_level": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer isolation level",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_partition_fetch_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data per-partition the server will return.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_poll_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum delay between polls when using consumer group management",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_poll_records": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of records returned by a single poll",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "offset_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The interval at which to try committing offsets for tasks",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "offset_flush_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Offset flush timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "producer_max_request_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum size of a request in bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The timeout used to detect failures when using Kafka’s group management facilities",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "kafka_rest": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Kafka-REST service",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "kafka_rest_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka REST configuration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "consumer_enable_auto_commit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.enable.auto.commit",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "consumer_request_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.request.max.bytes",
                    "Default": {
                      "Type": "float64",
                      "Value": "6.7108864e+07"
                    }
                  },
                  "consumer_request_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.request.timeout.ms",
                    "Default": {
                      "Type": "float64",
                      "Value": "1000"
                    }
                  },
                  "producer_acks": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.acks",
                    "Default": {
                      "Type": "string",
                      "Value": "1"
                    }
                  },
                  "producer_linger_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.linger.ms",
                    "Default": {
                      "Type": "float64",
                      "Value": "0"
                    }
                  },
                  "simpleconsumer_pool_size_max": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "simpleconsumer.pool.size.max",
                    "Default": {
                      "Type": "float64",
                      "Value": "25"
                    }
                  }
                }
              }
            },
            "kafka_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka major version",
              "Default": {
                "Type": "string"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_connect",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kafka_rest": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_rest",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "schema_registry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable schema_registry",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kafka_rest": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_rest from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "schema_registry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to schema_registry from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "schema_registry": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Schema-Registry service",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "schema_registry_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Schema Registry configuration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "leader_eligibility": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "leader_eligibility",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "topic_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "topic_name",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "mysql": {
        "Type": "List",
        "Optional": true,
        "Description": "MySQL specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "mysql_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "MySQL specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "admin_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "admin_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom username for admin user. This must be set only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "backup_hour": {
              "Type": "String",
              "Optional": true,
              "Description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.",
              "Default": {
                "Type": "string"
              }
            },
            "backup_minute": {
              "Type": "String",
              "Optional": true,
              "Description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.",
              "Default": {
                "Type": "string"
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "mysql": {
              "Type": "List",
              "Optional": true,
              "Description": "mysql.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connect_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "connect_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "default_time_zone": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "default_time_zone",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "group_concat_max_len": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group_concat_max_len",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "information_schema_stats_expiry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "information_schema_stats_expiry",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_ft_min_token_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_ft_min_token_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_ft_server_stopword_table": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_ft_server_stopword_table",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_lock_wait_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_lock_wait_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_log_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_log_buffer_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_online_alter_log_max_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_online_alter_log_max_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_print_all_deadlocks": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_print_all_deadlocks",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_rollback_on_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_rollback_on_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "interactive_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "interactive_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "long_query_time": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "long_query_time",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_allowed_packet": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_allowed_packet",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_heap_table_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_heap_table_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "net_read_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "net_read_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "net_write_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "net_write_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "slow_query_log": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "slow_query_log",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sort_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sort_buffer_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sql_mode": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sql_mode",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sql_require_primary_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sql_require_primary_key",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "tmp_table_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "tmp_table_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "wait_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wait_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "mysql_version": {
              "Type": "String",
              "Optional": true,
              "Description": "MySQL major version",
              "Default": {
                "Type": "string"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysql with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable mysql",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysql from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_target_time": {
              "Type": "String",
              "Optional": true,
              "Description": "Recovery target time when forking a service. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "pg": {
        "Type": "List",
        "Optional": true,
        "Description": "PostgreSQL specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dbname": {
              "Type": "String",
              "Description": "Primary PostgreSQL database name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "PostgreSQL master node host IP or name",
              "Computed": true
            },
            "password": {
              "Type": "String",
              "Description": "PostgreSQL admin user password",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "PostgreSQL port",
              "Computed": true
            },
            "replica_uri": {
              "Type": "String",
              "Description": "PostgreSQL replica URI for services with a replica",
              "Computed": true
            },
            "sslmode": {
              "Type": "String",
              "Description": "PostgreSQL sslmode setting (currently always \"require\")",
              "Computed": true
            },
            "uri": {
              "Type": "String",
              "Optional": true,
              "Description": "PostgreSQL master connection URI",
              "Computed": true
            },
            "user": {
              "Type": "String",
              "Description": "PostgreSQL admin user name",
              "Computed": true
            }
          }
        }
      },
      "pg_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "PostgreSQL specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "admin_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "admin_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom username for admin user. This must be set only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "backup_hour": {
              "Type": "String",
              "Optional": true,
              "Description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.",
              "Default": {
                "Type": "string"
              }
            },
            "backup_minute": {
              "Type": "String",
              "Optional": true,
              "Description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.",
              "Default": {
                "Type": "string"
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "pg": {
              "Type": "List",
              "Optional": true,
              "Description": "postgresql.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "autovacuum_analyze_scale_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_analyze_scale_factor",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_analyze_threshold": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_analyze_threshold",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_freeze_max_age": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_freeze_max_age",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_max_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_max_workers",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_naptime": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_naptime",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_vacuum_cost_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_cost_delay",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_vacuum_cost_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_cost_limit",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_vacuum_scale_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_scale_factor",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_vacuum_threshold": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_threshold",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "deadlock_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "deadlock_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "idle_in_transaction_session_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "idle_in_transaction_session_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "jit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "jit",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_autovacuum_min_duration": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_autovacuum_min_duration",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_error_verbosity": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_error_verbosity",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_line_prefix": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_line_prefix",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_min_duration_statement": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_min_duration_statement",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_files_per_process": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_files_per_process",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_locks_per_transaction": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_locks_per_transaction",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_logical_replication_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_logical_replication_workers",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_parallel_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_parallel_workers",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_parallel_workers_per_gather": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_parallel_workers_per_gather",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_pred_locks_per_transaction": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_pred_locks_per_transaction",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_prepared_transactions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_prepared_transactions",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_replication_slots": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_replication_slots",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_stack_depth": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_stack_depth",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_standby_archive_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_standby_archive_delay",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_standby_streaming_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_standby_streaming_delay",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_wal_senders": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_wal_senders",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_worker_processes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_worker_processes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pg_partman_bgw__dot__interval": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_partman_bgw.interval",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pg_partman_bgw__dot__role": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_partman_bgw.role",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pg_stat_statements__dot__track": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_stat_statements.track",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "temp_file_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "temp_file_limit",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "timezone": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "timezone",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "track_activity_query_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_activity_query_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "track_commit_timestamp": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_commit_timestamp",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "track_functions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_functions",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "wal_sender_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wal_sender_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "wal_writer_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wal_writer_delay",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "pg_read_replica": {
              "Type": "String",
              "Optional": true,
              "Description": "Should the service which is being forked be a read replica",
              "Default": {
                "Type": "string"
              }
            },
            "pg_service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the PG Service from which to fork (deprecated, use service_to_fork_from). This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "pg_version": {
              "Type": "String",
              "Optional": true,
              "Description": "PostgreSQL major version",
              "Default": {
                "Type": "string"
              }
            },
            "pgbouncer": {
              "Type": "List",
              "Optional": true,
              "Description": "PGBouncer connection pooling settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "autodb_idle_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If the automatically created database pools have been unused this many seconds, they are freed. If 0 then timeout is disabled. [seconds]",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autodb_max_db_connections": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Do not allow more than this many server connections per database (regardless of user). Setting it to 0 means unlimited.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autodb_pool_mode": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "PGBouncer pool mode",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autodb_pool_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If non-zero then create automatically a pool of that size per user when a pool doesn't exist.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ignore_startup_parameters": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of parameters to ignore when given in startup packet",
                    "MaxItems": 32,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "min_pool_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Add more server connections to pool if below this number. Improves behavior when usual load comes suddenly back after period of total inactivity. The value is effectively capped at the pool size.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "server_idle_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If a server connection has been idle more than this many seconds it will be dropped. If 0 then timeout is disabled. [seconds]",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "server_lifetime": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The pooler will close an unused server connection that has been connected longer than this. [seconds]",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "server_reset_query_always": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Run server_reset_query (DISCARD ALL) in all pooling modes",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "pglookout": {
              "Type": "List",
              "Optional": true,
              "Description": "PGLookout settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_failover_replication_time_lag": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_failover_replication_time_lag",
                    "Default": {
                      "Type": "float64",
                      "Value": "60"
                    }
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pg with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pgbouncer with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable pg",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable pgbouncer",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pg from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pgbouncer from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_target_time": {
              "Type": "String",
              "Optional": true,
              "Description": "Recovery target time when forking a service. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "shared_buffers_percentage": {
              "Type": "String",
              "Optional": true,
              "Description": "shared_buffers_percentage",
              "Default": {
                "Type": "string"
              }
            },
            "synchronous_replication": {
              "Type": "String",
              "Optional": true,
              "Description": "Synchronous replication type. Note that the service plan also needs to support synchronous replication.",
              "Default": {
                "Type": "string"
              }
            },
            "timescaledb": {
              "Type": "List",
              "Optional": true,
              "Description": "TimescaleDB extension configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_background_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "timescaledb.max_background_workers",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "variant": {
              "Type": "String",
              "Optional": true,
              "Description": "Variant of the PostgreSQL service, may affect the features that are exposed by default",
              "Default": {
                "Type": "string"
              }
            },
            "work_mem": {
              "Type": "String",
              "Optional": true,
              "Description": "work_mem",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "redis": {
        "Type": "List",
        "Optional": true,
        "Description": "Redis specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "redis_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Redis specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to redis with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable redis",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to redis from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service",
              "Default": {
                "Type": "string"
              }
            },
            "redis_io_threads": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis IO thread count",
              "Default": {
                "Type": "string"
              }
            },
            "redis_lfu_decay_time": {
              "Type": "String",
              "Optional": true,
              "Description": "LFU maxmemory-policy counter decay time in minutes",
              "Default": {
                "Type": "float64",
                "Value": "1"
              }
            },
            "redis_lfu_log_factor": {
              "Type": "String",
              "Optional": true,
              "Description": "Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies",
              "Default": {
                "Type": "float64",
                "Value": "10"
              }
            },
            "redis_maxmemory_policy": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis maxmemory-policy",
              "Default": {
                "Type": "string",
                "Value": "noeviction"
              }
            },
            "redis_notify_keyspace_events": {
              "Type": "String",
              "Optional": true,
              "Description": "Set notify-keyspace-events option",
              "Default": {
                "Type": "string"
              }
            },
            "redis_ssl": {
              "Type": "String",
              "Optional": true,
              "Description": "Require SSL to access Redis",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "redis_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis idle connection timeout",
              "Default": {
                "Type": "float64",
                "Value": "300"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "service_host": {
        "Type": "String",
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Required": true,
        "Description": "Service type code"
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_service_integration": {
      "dashboard_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Dashboard specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "datadog_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Dashboard specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "datadog_tags": {
              "Type": "List",
              "Optional": true,
              "Description": "Custom tags provided by user",
              "MaxItems": 32,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "comment": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Optional tag explanation",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "tag": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Tag value",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "exclude_consumer_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "List of custom metrics",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "exclude_topics": {
              "Type": "List",
              "Optional": true,
              "Description": "List of topics to exclude",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "include_consumer_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "List of custom metrics",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "include_topics": {
              "Type": "List",
              "Optional": true,
              "Description": "List of topics to include",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka_custom_metrics": {
              "Type": "List",
              "Optional": true,
              "Description": "List of custom metrics",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "destination_endpoint_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Destination endpoint for the integration (if any)"
      },
      "destination_service_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Destination service for the integration (if any)"
      },
      "external_aws_cloudwatch_logs_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "External AWS Cloudwatch logs specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "external_aws_cloudwatch_metrics_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "External AWS cloudwatch metrics specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "external_elasticsearch_logs_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "External Elasticsearch logs specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "external_google_cloud_logging_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "External Google Cloud Logging specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "integration_type": {
        "Type": "String",
        "Required": true,
        "Description": "Type of the service integration"
      },
      "kafka_connect_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka Connect specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "kafka_connect": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka Connect service configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "config_storage_topic": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The name of the topic where connector and task configuration data are stored.This must be the same for all workers with the same group_id.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "group_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "A unique string that identifies the Connect cluster group this worker belongs to.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "offset_storage_topic": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The name of the topic where connector and task configuration offsets are stored.This must be the same for all workers with the same group_id.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "status_storage_topic": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The name of the topic where connector and task configuration status updates are stored.This must be the same for all workers with the same group_id.",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "kafka_logs_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka Logs specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "kafka_topic": {
              "Type": "String",
              "Optional": true,
              "Description": "Topic name",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "kafka_mirrormaker_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Mirrormaker 2 integration specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cluster_alias": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka cluster alias",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "logs_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Log integration specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "elasticsearch_index_days_max": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch index retention limit",
              "Default": {
                "Type": "float64",
                "Value": "3"
              }
            },
            "elasticsearch_index_prefix": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch index prefix",
              "Default": {
                "Type": "string",
                "Value": "logs"
              }
            }
          }
        }
      },
      "m3aggregator_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "M3 aggregator specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "m3coordinator_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "M3 coordinator specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "metrics_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Metrics specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "database": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the database where to store metric datapoints. Only affects PostgreSQL destinations. Defaults to 'metrics'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.",
              "Default": {
                "Type": "string"
              }
            },
            "retention_days": {
              "Type": "String",
              "Optional": true,
              "Description": "Number of days to keep old metrics. Only affects PostgreSQL destinations. Set to 0 for no automatic cleanup. Defaults to 30 days.",
              "Default": {
                "Type": "string"
              }
            },
            "ro_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of a user that can be used to read metrics. This will be used for Grafana integration (if enabled) to prevent Grafana users from making undesired changes. Only affects PostgreSQL destinations. Defaults to 'metrics_reader'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.",
              "Default": {
                "Type": "string"
              }
            },
            "source_mysql": {
              "Type": "List",
              "Optional": true,
              "Description": "Configuration options for metrics where source service is MySQL",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "telegraf": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Configuration options for Telegraf MySQL input plugin",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "gather_event_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.EVENT_WAITS",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_file_events_stats": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "gather metrics from PERFORMANCE_SCHEMA.FILE_SUMMARY_BY_EVENT_NAME",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_index_io_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_INDEX_USAGE",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_info_schema_auto_inc": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather auto_increment columns and max values from information schema",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_innodb_metrics": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from INFORMATION_SCHEMA.INNODB_METRICS",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_perf_events_statements": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.EVENTS_STATEMENTS_SUMMARY_BY_DIGEST",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_process_list": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather thread state counts from INFORMATION_SCHEMA.PROCESSLIST",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_slave_status": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from SHOW SLAVE STATUS command output",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_table_io_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_TABLE",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_table_lock_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_LOCK_WAITS",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_table_schema": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from INFORMATION_SCHEMA.TABLES",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "perf_events_statements_digest_text_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Truncates digest text from perf_events_statements into this many characters",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "perf_events_statements_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Limits metrics from perf_events_statements",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "perf_events_statements_time_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Only include perf_events_statements whose last seen is less than this many seconds",
                          "Default": {
                            "Type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "username": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the user used to write metrics. Only affects PostgreSQL destinations. Defaults to 'metrics_writer'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "mirrormaker_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Mirrormaker 1 integration specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "mirrormaker_whitelist": {
              "Type": "String",
              "Optional": true,
              "Description": "Mirrormaker topic whitelist",
              "Default": {
                "Type": "string",
                "Value": ".*"
              }
            }
          }
        }
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project the integration belongs to"
      },
      "prometheus_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Prometheus coordinator specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "source_mysql": {
              "Type": "List",
              "Optional": true,
              "Description": "Configuration options for metrics where source service is MySQL",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "telegraf": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Configuration options for Telegraf MySQL input plugin",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "gather_event_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.EVENT_WAITS",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_file_events_stats": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "gather metrics from PERFORMANCE_SCHEMA.FILE_SUMMARY_BY_EVENT_NAME",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_index_io_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_INDEX_USAGE",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_info_schema_auto_inc": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather auto_increment columns and max values from information schema",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_innodb_metrics": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from INFORMATION_SCHEMA.INNODB_METRICS",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_perf_events_statements": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.EVENTS_STATEMENTS_SUMMARY_BY_DIGEST",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_process_list": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather thread state counts from INFORMATION_SCHEMA.PROCESSLIST",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_slave_status": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from SHOW SLAVE STATUS command output",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_table_io_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_TABLE",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_table_lock_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_LOCK_WAITS",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_table_schema": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from INFORMATION_SCHEMA.TABLES",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "perf_events_statements_digest_text_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Truncates digest text from perf_events_statements into this many characters",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "perf_events_statements_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Limits metrics from perf_events_statements",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "perf_events_statements_time_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Only include perf_events_statements whose last seen is less than this many seconds",
                          "Default": {
                            "Type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "read_replica_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "PG Read replica specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "rsyslog_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "RSyslog specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "schema_registry_proxy_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Schema registry proxy specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "signalfx_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Signalfx specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "source_endpoint_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Source endpoint for the integration (if any)"
      },
      "source_service_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Source service for the integration (if any)"
      }
    },
    "aiven_service_integration_endpoint": {
      "datadog_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Datadog specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "datadog_api_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Datadog API key",
              "Default": {
                "Type": "string"
              }
            },
            "datadog_tags": {
              "Type": "List",
              "Optional": true,
              "Description": "Custom tags provided by user",
              "MaxItems": 32,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "comment": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Optional tag explanation",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "tag": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Tag value",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "disable_consumer_stats": {
              "Type": "String",
              "Optional": true,
              "Description": "Disable consumer group metrics",
              "Default": {
                "Type": "string"
              }
            },
            "max_partition_contexts": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum number of partition contexts to send",
              "Default": {
                "Type": "string"
              }
            },
            "site": {
              "Type": "String",
              "Optional": true,
              "Description": "Datadog intake site. Defaults to datadoghq.com",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "endpoint_config": {
        "Type": "Map",
        "Description": "Integration endpoint specific backend configuration",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "endpoint_name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the service integration endpoint"
      },
      "endpoint_type": {
        "Type": "String",
        "Required": true,
        "Description": "Type of the service integration endpoint"
      },
      "external_aws_cloudwatch_logs_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "external AWS CloudWatch Logs specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_key": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS access key. Required permissions are logs:CreateLogGroup, logs:CreateLogStream, logs:PutLogEvents and logs:DescribeLogStreams",
              "Default": {
                "Type": "string"
              }
            },
            "log_group_name": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS CloudWatch log group name",
              "Default": {
                "Type": "string"
              }
            },
            "region": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS region",
              "Default": {
                "Type": "string"
              }
            },
            "secret_key": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS secret key",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "external_aws_cloudwatch_metrics_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "External AWS cloudwatch mertrics specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_key": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS access key. Required permissions are cloudwatch:PutMetricData",
              "Default": {
                "Type": "string"
              }
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS CloudWatch Metrics Namespace",
              "Default": {
                "Type": "string"
              }
            },
            "region": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS region",
              "Default": {
                "Type": "string"
              }
            },
            "secret_key": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS secret key",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "external_elasticsearch_logs_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "external elasticsearch specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ca": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM encoded CA certificate",
              "Default": {
                "Type": "string"
              }
            },
            "index_days_max": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum number of days of logs to keep",
              "Default": {
                "Type": "float64",
                "Value": "3"
              }
            },
            "index_prefix": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch index prefix",
              "Default": {
                "Type": "string",
                "Value": "logs"
              }
            },
            "timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch request timeout limit",
              "Default": {
                "Type": "float64",
                "Value": "10"
              }
            },
            "url": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch connection URL",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "external_google_cloud_logging_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "external Google Cloud Logginig specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "log_id": {
              "Type": "String",
              "Optional": true,
              "Description": "Google Cloud Logging log id",
              "Default": {
                "Type": "string"
              }
            },
            "project_id": {
              "Type": "String",
              "Optional": true,
              "Description": "GCP project id.",
              "Default": {
                "Type": "string"
              }
            },
            "service_account_credentials": {
              "Type": "String",
              "Optional": true,
              "Description": "Google Service Account Credentials",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "external_kafka_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "external Kafka specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bootstrap_servers": {
              "Type": "String",
              "Optional": true,
              "Description": "Bootstrap servers",
              "Default": {
                "Type": "string"
              }
            },
            "sasl_mechanism": {
              "Type": "String",
              "Optional": true,
              "Description": "The list of SASL mechanisms enabled in the Kafka server.",
              "Default": {
                "Type": "string"
              }
            },
            "sasl_plain_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for SASL PLAIN mechanism in the Kafka server.",
              "Default": {
                "Type": "string"
              }
            },
            "sasl_plain_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Username for SASL PLAIN mechanism in the Kafka server.",
              "Default": {
                "Type": "string"
              }
            },
            "security_protocol": {
              "Type": "String",
              "Optional": true,
              "Description": "Security protocol",
              "Default": {
                "Type": "string"
              }
            },
            "ssl_ca_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM-encoded CA certificate",
              "Default": {
                "Type": "string"
              }
            },
            "ssl_client_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM-encoded client certificate",
              "Default": {
                "Type": "string"
              }
            },
            "ssl_client_key": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM-encoded client key",
              "Default": {
                "Type": "string"
              }
            },
            "ssl_endpoint_identification_algorithm": {
              "Type": "String",
              "Optional": true,
              "Description": "The endpoint identification algorithm to validate server hostname using server certificate.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "external_schema_registry_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "External schema registry specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "authentication": {
              "Type": "String",
              "Optional": true,
              "Description": "Authentication method",
              "Default": {
                "Type": "string"
              }
            },
            "basic_auth_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Basic authentication password",
              "Default": {
                "Type": "string"
              }
            },
            "basic_auth_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Basic authentication user name",
              "Default": {
                "Type": "string"
              }
            },
            "url": {
              "Type": "String",
              "Optional": true,
              "Description": "Schema Registry URL",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "jolokia_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Jolokia specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "basic_auth_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Jolokia basic authentication password",
              "Default": {
                "Type": "string"
              }
            },
            "basic_auth_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Jolokia basic authentication username",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project the service integration endpoint belongs to"
      },
      "prometheus_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Prometheus specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "basic_auth_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Prometheus basic authentication password",
              "Default": {
                "Type": "string"
              }
            },
            "basic_auth_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Prometheus basic authentication username",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "rsyslog_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "rsyslog specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ca": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM encoded CA certificate",
              "Default": {
                "Type": "string"
              }
            },
            "cert": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM encoded client certificate",
              "Default": {
                "Type": "string"
              }
            },
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "message format",
              "Default": {
                "Type": "string",
                "Value": "rfc5424"
              }
            },
            "key": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM encoded client key",
              "Default": {
                "Type": "string"
              }
            },
            "logline": {
              "Type": "String",
              "Optional": true,
              "Description": "custom syslog message format",
              "Default": {
                "Type": "string"
              }
            },
            "port": {
              "Type": "String",
              "Optional": true,
              "Description": "rsyslog server port",
              "Default": {
                "Type": "float64",
                "Value": "514"
              }
            },
            "sd": {
              "Type": "String",
              "Optional": true,
              "Description": "Structured data block for log message",
              "Default": {
                "Type": "string"
              }
            },
            "server": {
              "Type": "String",
              "Optional": true,
              "Description": "rsyslog server IP address or hostname",
              "Default": {
                "Type": "string"
              }
            },
            "tls": {
              "Type": "String",
              "Optional": true,
              "Description": "Require TLS",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            }
          }
        }
      },
      "signalfx_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Signalfx specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "enabled_metrics": {
              "Type": "List",
              "Optional": true,
              "Description": "list of metrics to send",
              "MaxItems": 256,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "signalfx_api_key": {
              "Type": "String",
              "Optional": true,
              "Description": "SignalFX API key",
              "Default": {
                "Type": "string"
              }
            },
            "signalfx_realm": {
              "Type": "String",
              "Optional": true,
              "Description": "SignalFX realm",
              "Default": {
                "Type": "string",
                "Value": "us0"
              }
            }
          }
        }
      }
    },
    "aiven_service_user": {
      "access_cert": {
        "Type": "String",
        "Description": "Access certificate for the user if applicable for the service in question",
        "Computed": true
      },
      "access_key": {
        "Type": "String",
        "Description": "Access certificate key for the user if applicable for the service in question",
        "Computed": true
      },
      "authentication": {
        "Type": "String",
        "Optional": true,
        "Description": "Authentication details"
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the user",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project to link the user to"
      },
      "redis_acl_categories": {
        "Type": "List",
        "Optional": true,
        "Description": "Command category rules",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "redis_acl_commands": {
        "Type": "List",
        "Optional": true,
        "Description": "Rules for individual commands",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "redis_acl_keys": {
        "Type": "List",
        "Optional": true,
        "Description": "Key access rules",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service to link the user to"
      },
      "type": {
        "Type": "String",
        "Description": "Type of the user account",
        "Computed": true
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the user account"
      }
    },
    "aiven_transit_gateway_vpc_attachment": {
      "__timeouts__": [
        "create"
      ],
      "peer_cloud_account": {
        "Type": "String",
        "Required": true,
        "Description": "AWS account ID or GCP project ID of the peered VPC"
      },
      "peer_region": {
        "Type": "String",
        "Required": true,
        "Description": "AWS region of the peered VPC (if not in the same region as Aiven VPC)"
      },
      "peer_vpc": {
        "Type": "String",
        "Required": true,
        "Description": "Transit gateway ID"
      },
      "peering_connection_id": {
        "Type": "String",
        "Description": "Cloud provider identifier for the peering connection if available",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "State of the peering connection",
        "Computed": true
      },
      "state_info": {
        "Type": "Map",
        "Description": "State-specific help or error information",
        "Computed": true
      },
      "user_peer_network_cidrs": {
        "Type": "List",
        "Required": true,
        "Description": "List of private IPv4 ranges to route through the peering connection",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "vpc_id": {
        "Type": "String",
        "Required": true,
        "Description": "The VPC the peering connection belongs to"
      }
    },
    "aiven_vpc_peering_connection": {
      "__timeouts__": [
        "create"
      ],
      "peer_azure_app_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet"
      },
      "peer_azure_tenant_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Azure tenant id in UUID4 form"
      },
      "peer_cloud_account": {
        "Type": "String",
        "Required": true,
        "Description": "AWS account ID or GCP project ID of the peered VPC"
      },
      "peer_region": {
        "Type": "String",
        "Optional": true,
        "Description": "AWS region of the peered VPC (if not in the same region as Aiven VPC)"
      },
      "peer_resource_group": {
        "Type": "String",
        "Optional": true,
        "Description": "Azure resource group name of the peered VPC"
      },
      "peer_vpc": {
        "Type": "String",
        "Required": true,
        "Description": "AWS VPC ID or GCP VPC network name of the peered VPC"
      },
      "peering_connection_id": {
        "Type": "String",
        "Description": "Cloud provider identifier for the peering connection if available",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "State of the peering connection",
        "Computed": true
      },
      "state_info": {
        "Type": "Map",
        "Description": "State-specific help or error information",
        "Computed": true
      },
      "vpc_id": {
        "Type": "String",
        "Required": true,
        "Description": "The VPC the peering connection belongs to"
      }
    }
  },
  "data-sources": {
    "aiven_account": {
      "account_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Account id",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of creation",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Account name"
      },
      "owner_team_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Owner team id",
        "Computed": true
      },
      "tenant_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Tenant id",
        "Computed": true
      },
      "update_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of last update",
        "Computed": true
      }
    },
    "aiven_account_authentication": {
      "account_id": {
        "Type": "String",
        "Required": true,
        "Description": "Account id"
      },
      "authentication_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Account authentication id",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of creation",
        "Computed": true
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Status of account authentication method"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Account team name"
      },
      "saml_acs_url": {
        "Type": "String",
        "Optional": true,
        "Description": "SAML Assertion Consumer Service URL",
        "Computed": true
      },
      "saml_certificate": {
        "Type": "String",
        "Optional": true,
        "Description": "SAML Certificate"
      },
      "saml_entity_id": {
        "Type": "String",
        "Optional": true,
        "Description": "SAML Entity id"
      },
      "saml_idp_url": {
        "Type": "String",
        "Optional": true,
        "Description": "SAML Idp URL"
      },
      "saml_metadata_url": {
        "Type": "String",
        "Optional": true,
        "Description": "SAML Metadata URL",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "Account authentication id"
      },
      "update_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of last update",
        "Computed": true
      }
    },
    "aiven_account_team": {
      "account_id": {
        "Type": "String",
        "Required": true,
        "Description": "Account id"
      },
      "create_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of creation",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Account team name"
      },
      "team_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Account team id",
        "Computed": true
      },
      "update_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of last update",
        "Computed": true
      }
    },
    "aiven_account_team_member": {
      "accepted": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Team member invitation status",
        "Computed": true
      },
      "account_id": {
        "Type": "String",
        "Required": true,
        "Description": "Account id"
      },
      "create_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of creation",
        "Computed": true
      },
      "invited_by_user_email": {
        "Type": "String",
        "Optional": true,
        "Description": "Team invited by user email",
        "Computed": true
      },
      "team_id": {
        "Type": "String",
        "Required": true,
        "Description": "Account team id"
      },
      "user_email": {
        "Type": "String",
        "Required": true,
        "Description": "Team invite user email"
      }
    },
    "aiven_account_team_project": {
      "account_id": {
        "Type": "String",
        "Required": true,
        "Description": "Account id"
      },
      "project_name": {
        "Type": "String",
        "Required": true,
        "Description": "Account team project name"
      },
      "team_id": {
        "Type": "String",
        "Required": true,
        "Description": "Account team id"
      },
      "team_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Account team project type, can one of the following values: admin, developer, operator and read_only"
      }
    },
    "aiven_aws_privatelink": {
      "aws_service_id": {
        "Type": "String",
        "Optional": true,
        "Description": "AWS service ID",
        "Computed": true
      },
      "aws_service_name": {
        "Type": "String",
        "Optional": true,
        "Description": "AWS service name",
        "Computed": true
      },
      "principals": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of principals",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project name"
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      }
    },
    "aiven_cassandra": {
      "cassandra": {
        "Type": "List",
        "Optional": true,
        "Description": "Cassandra server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "cassandra_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Cassandra user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cassandra": {
              "Type": "List",
              "Optional": true,
              "Description": "cassandra configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "batch_size_fail_threshold_in_kb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "batch_size_fail_threshold_in_kb",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "batch_size_warn_threshold_in_kb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "batch_size_warn_threshold_in_kb",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migrate_sstableloader": {
              "Type": "String",
              "Optional": true,
              "Description": "Migration mode for the sstableloader utility",
              "Default": {
                "Type": "string"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Optional": true,
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "service_host": {
        "Type": "String",
        "Optional": true,
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Optional": true,
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Optional": true,
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_connection_pool": {
      "connection_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI for connecting to the pool",
        "Computed": true
      },
      "database_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the database the pool connects to"
      },
      "pool_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "Mode the pool operates in (session, transaction, statement)"
      },
      "pool_name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the pool"
      },
      "pool_size": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of connections the pool may create towards the backend server"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project to link the connection pool to"
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service to link the connection pool to"
      },
      "username": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the service user used to connect to the database"
      }
    },
    "aiven_database": {
      "database_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service database name"
      },
      "lc_collate": {
        "Type": "String",
        "Optional": true,
        "Description": "Default string sort order (LC_COLLATE) of the database. Default value: en_US.UTF-8"
      },
      "lc_ctype": {
        "Type": "String",
        "Optional": true,
        "Description": "Default character classification (LC_CTYPE) of the database. Default value: en_US.UTF-8"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project to link the database to"
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service to link the database to"
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "It is a Terraform client-side deletion protections, which prevents the database\n\t\t\tfrom being deleted by Terraform. It is recommended to enable this for any production\n\t\t\tdatabases containing critical data."
      }
    },
    "aiven_elasticsearch": {
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Optional": true,
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "elasticsearch": {
        "Type": "List",
        "Optional": true,
        "Description": "Elasticsearch server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "kibana_uri": {
              "Type": "String",
              "Description": "URI for Kibana frontend",
              "Computed": true
            }
          }
        }
      },
      "elasticsearch_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Elasticsearch user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain",
              "Default": {
                "Type": "string"
              }
            },
            "disable_replication_factor_adjustment": {
              "Type": "String",
              "Optional": true,
              "Description": "Disable replication factor adjustment",
              "Default": {
                "Type": "string"
              }
            },
            "elasticsearch": {
              "Type": "List",
              "Optional": true,
              "Description": "Elasticsearch settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action_auto_create_index_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "action.auto_create_index",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "action_destructive_requires_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Require explicit index names when deleting",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "cluster_max_shards_per_node": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "cluster.max_shards_per_node",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "http_max_content_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_content_length",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "http_max_header_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_header_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "http_max_initial_line_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_initial_line_length",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "indices_fielddata_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.fielddata.cache.size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "indices_memory_index_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.memory.index_buffer_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "indices_queries_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.queries.cache.size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "indices_query_bool_max_clause_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.query.bool.max_clause_count",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "reindex_remote_whitelist": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "reindex_remote_whitelist",
                    "MaxItems": 32,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "search_max_buckets": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search.max_buckets",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_analyze_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_analyze_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_force_merge_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "force_merge thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_get_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_get_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_index_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_index_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_search_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_search_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_search_throttled_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_search_throttled_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_write_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_write_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "elasticsearch_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch major version",
              "Default": {
                "Type": "string"
              }
            },
            "index_patterns": {
              "Type": "List",
              "Optional": true,
              "Description": "Index patterns",
              "MaxItems": 512,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_index_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Maximum number of indexes to keep",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pattern": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "fnmatch pattern",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sorting_algorithm": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Deletion sorting algorithm",
                    "Default": {
                      "Type": "string",
                      "Value": "creation_date"
                    }
                  }
                }
              }
            },
            "index_template": {
              "Type": "List",
              "Optional": true,
              "Description": "Template settings for all new indexes",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mapping_nested_objects_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.mapping.nested_objects.limit",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "number_of_replicas": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_replicas",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "number_of_shards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_shards",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kibana": {
              "Type": "List",
              "Optional": true,
              "Description": "Kibana settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch_request_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Timeout in milliseconds for requests made by Kibana towards Elasticsearch",
                    "Default": {
                      "Type": "float64",
                      "Value": "30000"
                    }
                  },
                  "enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable or disable Kibana",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "max_old_space_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_old_space_size",
                    "Default": {
                      "Type": "float64",
                      "Value": "128"
                    }
                  }
                }
              }
            },
            "max_index_count": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum index count",
              "Default": {
                "Type": "float64",
                "Value": "0"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to elasticsearch with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kibana with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable elasticsearch",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kibana",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to elasticsearch from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kibana from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service",
              "Default": {
                "Type": "string"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "service_host": {
        "Type": "String",
        "Optional": true,
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Optional": true,
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Optional": true,
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_elasticsearch_acl": {
      "acl": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of Elasticsearch ACLs",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "rule": {
              "Type": "Set",
              "Required": true,
              "Description": "Elasticsearch rules",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "index": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Elasticsearch index pattern"
                  },
                  "permission": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Elasticsearch permission"
                  }
                }
              }
            },
            "username": {
              "Type": "String",
              "Required": true,
              "Description": "Username for the ACL entry"
            }
          }
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable Elasticsearch ACLs. When disabled authenticated service users have unrestricted access"
      },
      "extended_acl": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project to link the Elasticsearch ACLs to"
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service to link the Elasticsearch ACLs to"
      }
    },
    "aiven_grafana": {
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Optional": true,
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "grafana": {
        "Type": "List",
        "Optional": true,
        "Description": "Grafana server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "grafana_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Grafana user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "alerting_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable or disable Grafana alerting functionality",
              "Default": {
                "Type": "string"
              }
            },
            "alerting_error_or_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Default error or timeout setting for new alerting rules",
              "Default": {
                "Type": "string"
              }
            },
            "alerting_nodata_or_nullvalues": {
              "Type": "String",
              "Optional": true,
              "Description": "Default value for 'no data or null values' for new alerting rules",
              "Default": {
                "Type": "string"
              }
            },
            "allow_embedding": {
              "Type": "String",
              "Optional": true,
              "Description": "Allow embedding Grafana dashboards with iframe/frame/object/embed tags. Disabled by default to limit impact of clickjacking",
              "Default": {
                "Type": "string"
              }
            },
            "auth_basic_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable or disable basic authentication form, used by Grafana built-in login",
              "Default": {
                "Type": "string"
              }
            },
            "auth_generic_oauth": {
              "Type": "List",
              "Optional": true,
              "Description": "Generic OAuth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "allowed_domains": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Allowed domains",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "allowed_organizations": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require user to be member of one of the listed organizations",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "api_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "API URL",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "auth_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Authorization URL",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Name of the OAuth integration",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "scopes": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "OAuth scopes",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "token_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Token URL",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "auth_github": {
              "Type": "List",
              "Optional": true,
              "Description": "Github Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "allowed_organizations": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given organizations",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "team_ids": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given team IDs",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "auth_gitlab": {
              "Type": "List",
              "Optional": true,
              "Description": "GitLab Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "allowed_groups": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given groups",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "api_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "API URL. This only needs to be set when using self hosted GitLab",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "auth_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Authorization URL. This only needs to be set when using self hosted GitLab",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "token_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Token URL. This only needs to be set when using self hosted GitLab",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "auth_google": {
              "Type": "List",
              "Optional": true,
              "Description": "Google Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "allowed_domains": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Domains allowed to sign-in to this Grafana",
                    "MaxItems": 64,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "cookie_samesite": {
              "Type": "String",
              "Optional": true,
              "Description": "Cookie SameSite attribute: 'strict' prevents sending cookie for cross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value.",
              "Default": {
                "Type": "string"
              }
            },
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain",
              "Default": {
                "Type": "string"
              }
            },
            "dashboards_min_refresh_interval": {
              "Type": "String",
              "Optional": true,
              "Description": "Minimum refresh interval",
              "Default": {
                "Type": "string"
              }
            },
            "dashboards_versions_to_keep": {
              "Type": "String",
              "Optional": true,
              "Description": "Dashboard versions to keep per dashboard",
              "Default": {
                "Type": "string"
              }
            },
            "dataproxy_send_user_header": {
              "Type": "String",
              "Optional": true,
              "Description": "Send 'X-Grafana-User' header to data source",
              "Default": {
                "Type": "string"
              }
            },
            "dataproxy_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Timeout for data proxy requests in seconds",
              "Default": {
                "Type": "string"
              }
            },
            "disable_gravatar": {
              "Type": "String",
              "Optional": true,
              "Description": "Set to true to disable gravatar. Defaults to false (gravatar is enabled)",
              "Default": {
                "Type": "string"
              }
            },
            "editors_can_admin": {
              "Type": "String",
              "Optional": true,
              "Description": "Editors can manage folders, teams and dashboards created by them",
              "Default": {
                "Type": "string"
              }
            },
            "external_image_storage": {
              "Type": "List",
              "Optional": true,
              "Description": "External image store settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "access_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "S3 access key. Requires permissions to the S3 bucket for the s3:PutObject and s3:PutObjectAcl actions",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "bucket_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Bucket URL for S3",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "provider": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Provider type",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "secret_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "S3 secret key",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "google_analytics_ua_id": {
              "Type": "String",
              "Optional": true,
              "Description": "Google Analytics ID",
              "Default": {
                "Type": "string"
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "metrics_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Grafana /metrics endpoint",
              "Default": {
                "Type": "string"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to grafana with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable grafana",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to grafana from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service",
              "Default": {
                "Type": "string"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "smtp_server": {
              "Type": "List",
              "Optional": true,
              "Description": "SMTP server settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "from_address": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Address used for sending emails",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "from_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Name used in outgoing emails, defaults to Grafana",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Server hostname or IP",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for SMTP authentication",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "SMTP server port",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "skip_verify": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Skip verifying server certificate. Defaults to false",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "starttls_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS. Default is OpportunisticStartTLS.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Username for SMTP authentication",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "user_auto_assign_org": {
              "Type": "String",
              "Optional": true,
              "Description": "Auto-assign new users on signup to main organization. Defaults to false",
              "Default": {
                "Type": "string"
              }
            },
            "user_auto_assign_org_role": {
              "Type": "String",
              "Optional": true,
              "Description": "Set role for new signups. Defaults to Viewer",
              "Default": {
                "Type": "string"
              }
            },
            "viewers_can_edit": {
              "Type": "String",
              "Optional": true,
              "Description": "Users with view-only permission can edit but not save dashboards",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "service_host": {
        "Type": "String",
        "Optional": true,
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Optional": true,
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Optional": true,
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_influxdb": {
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Optional": true,
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "influxdb": {
        "Type": "List",
        "Optional": true,
        "Description": "InfluxDB server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "database_name": {
              "Type": "String",
              "Description": "Name of the default InfluxDB database",
              "Computed": true
            }
          }
        }
      },
      "influxdb_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "InfluxDB user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain",
              "Default": {
                "Type": "string"
              }
            },
            "influxdb": {
              "Type": "List",
              "Optional": true,
              "Description": "influxdb.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "log_queries_after": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum duration in seconds before a query is logged as a slow query. Setting this to 0 (the default) will never log slow queries.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_row_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of rows returned in a non-chunked query. Setting this to 0 (the default) allows an unlimited number to be returned.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_select_buckets": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of 'GROUP BY time()' buckets that can be processed in a query. Setting this to 0 (the default) allows an unlimited number to be processed.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_select_point": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of points that can be processed in a SELECT statement. Setting this to 0 (the default) allows an unlimited number to be processed.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "query_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum duration in seconds before a query is killed. Setting this to 0 (the default) will never kill slow queries.",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to influxdb with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable influxdb",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to influxdb from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service",
              "Default": {
                "Type": "string"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "service_host": {
        "Type": "String",
        "Optional": true,
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Optional": true,
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Optional": true,
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_kafka": {
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Optional": true,
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "default_acl": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Create default wildcard Kafka ACL"
      },
      "kafka": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka client certificate",
              "Computed": true
            },
            "access_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka client certificate key",
              "Computed": true
            },
            "connect_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka Connect URI, if any",
              "Computed": true
            },
            "rest_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka REST URI, if any",
              "Computed": true
            },
            "schema_registry_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Schema Registry URI, if any",
              "Computed": true
            }
          }
        }
      },
      "kafka_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain",
              "Default": {
                "Type": "string"
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka broker configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "auto_create_topics_enable": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "auto.create.topics.enable",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "compression_type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "compression.type",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "connections_max_idle_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "connections.max.idle.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "default_replication_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "default.replication.factor",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "group_initial_rebalance_delay_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.initial.rebalance.delay.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "group_max_session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.max.session.timeout.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "group_min_session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.min.session.timeout.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_cleaner_delete_retention_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.delete.retention.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_cleaner_max_compaction_lag_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.max.compaction.lag.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_cleaner_min_cleanable_ratio": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.min.cleanable.ratio",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_cleaner_min_compaction_lag_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.min.compaction.lag.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_cleanup_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleanup.policy",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_flush_interval_messages": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.flush.interval.messages",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.flush.interval.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_index_interval_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.index.interval.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_index_size_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.index.size.max.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_message_downconversion_enable": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.downconversion.enable",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_message_timestamp_difference_max_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.timestamp.difference.max.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_message_timestamp_type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.timestamp.type",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_preallocate": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.preallocate",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_retention_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_retention_hours": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.hours",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_retention_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_roll_jitter_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.roll.jitter.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_roll_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.roll.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_segment_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.segment.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_segment_delete_delay_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.segment.delete.delay.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_connections_per_ip": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max.connections.per.ip",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_incremental_fetch_session_cache_slots": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max.incremental.fetch.session.cache.slots",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "message_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "message.max.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "min_insync_replicas": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "min.insync.replicas",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "num_partitions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "num.partitions",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "offsets_retention_minutes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "offsets.retention.minutes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "producer_purgatory_purge_interval_requests": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.purgatory.purge.interval.requests",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "replica_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "replica.fetch.max.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "replica_fetch_response_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "replica.fetch.response.max.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "socket_request_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "socket.request.max.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "transaction_remove_expired_transaction_cleanup_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "transaction.remove.expired.transaction.cleanup.interval.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "transaction_state_log_segment_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "transaction.state.log.segment.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "kafka_authentication_methods": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka authentication methods",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "certificate": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable certificate/SSL authentication",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "sasl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable SASL authentication",
                    "Default": {
                      "Type": "bool",
                      "Value": "false"
                    }
                  }
                }
              }
            },
            "kafka_connect": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Kafka Connect service",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "kafka_connect_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka Connect configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connector_client_config_override_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client config override policy",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_auto_offset_reset": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer auto offset reset",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data the server should return for a fetch request",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_isolation_level": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer isolation level",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_partition_fetch_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data per-partition the server will return.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_poll_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum delay between polls when using consumer group management",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_poll_records": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of records returned by a single poll",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "offset_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The interval at which to try committing offsets for tasks",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "offset_flush_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Offset flush timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "producer_max_request_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum size of a request in bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The timeout used to detect failures when using Kafka’s group management facilities",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "kafka_rest": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Kafka-REST service",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "kafka_rest_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka REST configuration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "consumer_enable_auto_commit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.enable.auto.commit",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "consumer_request_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.request.max.bytes",
                    "Default": {
                      "Type": "float64",
                      "Value": "6.7108864e+07"
                    }
                  },
                  "consumer_request_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.request.timeout.ms",
                    "Default": {
                      "Type": "float64",
                      "Value": "1000"
                    }
                  },
                  "producer_acks": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.acks",
                    "Default": {
                      "Type": "string",
                      "Value": "1"
                    }
                  },
                  "producer_linger_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.linger.ms",
                    "Default": {
                      "Type": "float64",
                      "Value": "0"
                    }
                  },
                  "simpleconsumer_pool_size_max": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "simpleconsumer.pool.size.max",
                    "Default": {
                      "Type": "float64",
                      "Value": "25"
                    }
                  }
                }
              }
            },
            "kafka_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka major version",
              "Default": {
                "Type": "string"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_connect",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kafka_rest": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_rest",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "schema_registry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable schema_registry",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kafka_rest": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_rest from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "schema_registry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to schema_registry from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "schema_registry": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Schema-Registry service",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "schema_registry_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Schema Registry configuration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "leader_eligibility": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "leader_eligibility",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "topic_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "topic_name",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "service_host": {
        "Type": "String",
        "Optional": true,
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Optional": true,
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Optional": true,
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_kafka_acl": {
      "permission": {
        "Type": "String",
        "Required": true,
        "Description": "Kafka permission to grant (admin, read, readwrite, write)"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project to link the Kafka ACL to"
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service to link the Kafka ACL to"
      },
      "topic": {
        "Type": "String",
        "Required": true,
        "Description": "Topic name pattern for the ACL entry"
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "Username pattern for the ACL entry"
      }
    },
    "aiven_kafka_connect": {
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Optional": true,
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "kafka_connect": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka Connect server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "kafka_connect_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka Connect user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka_connect": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka Connect configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connector_client_config_override_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client config override policy",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_auto_offset_reset": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer auto offset reset",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data the server should return for a fetch request",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_isolation_level": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer isolation level",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_partition_fetch_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data per-partition the server will return.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_poll_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum delay between polls when using consumer group management",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_poll_records": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of records returned by a single poll",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "offset_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The interval at which to try committing offsets for tasks",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "offset_flush_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Offset flush timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "producer_max_request_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum size of a request in bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The timeout used to detect failures when using Kafka’s group management facilities",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_connect",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "service_host": {
        "Type": "String",
        "Optional": true,
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Optional": true,
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Optional": true,
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_kafka_connector": {
      "config": {
        "Type": "Map",
        "Optional": true,
        "Description": "Kafka Connector configuration parameters",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "connector_name": {
        "Type": "String",
        "Required": true,
        "Description": "Kafka connector name"
      },
      "plugin_author": {
        "Type": "String",
        "Optional": true,
        "Description": "Kafka connector author",
        "Computed": true
      },
      "plugin_class": {
        "Type": "String",
        "Optional": true,
        "Description": "Kafka connector Java class",
        "Computed": true
      },
      "plugin_doc_url": {
        "Type": "String",
        "Optional": true,
        "Description": "Kafka connector documentation URL",
        "Computed": true
      },
      "plugin_title": {
        "Type": "String",
        "Optional": true,
        "Description": "Kafka connector title",
        "Computed": true
      },
      "plugin_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Kafka connector type",
        "Computed": true
      },
      "plugin_version": {
        "Type": "String",
        "Optional": true,
        "Description": "Kafka connector version",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project to link the kafka connector to"
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service to link the kafka connector to"
      },
      "task": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of tasks of a connector",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "connector": {
              "Type": "String",
              "Description": "Related connector name",
              "Computed": true
            },
            "task": {
              "Type": "Int",
              "Description": "Task id / number",
              "Computed": true
            }
          }
        }
      }
    },
    "aiven_kafka_mirrormaker": {
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Optional": true,
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "kafka_mirrormaker": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka MirrorMaker 2 server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "kafka_mirrormaker_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka MirrorMaker 2 specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka_mirrormaker": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka MirrorMaker configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "emit_checkpoints_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Emit consumer group offset checkpoints",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "emit_checkpoints_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of consumer group offset checkpoints",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "refresh_groups_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Refresh consumer groups",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "refresh_groups_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of group refresh",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "refresh_topics_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Refresh topics and partitions",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "refresh_topics_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of topic and partitions refresh",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sync_group_offsets_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Sync consumer group offsets",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sync_group_offsets_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of consumer group offset sync",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "service_host": {
        "Type": "String",
        "Optional": true,
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Optional": true,
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Optional": true,
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_kafka_schema": {
      "compatibility_level": {
        "Type": "String",
        "Optional": true,
        "Description": "Kafka Schemas compatibility level"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project to link the Kafka Schema to"
      },
      "schema": {
        "Type": "String",
        "Optional": true,
        "Description": "Kafka Schema configuration should be a valid Avro Schema JSON format"
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service to link the Kafka Schema to"
      },
      "subject_name": {
        "Type": "String",
        "Required": true,
        "Description": "Kafka Schema Subject name"
      },
      "version": {
        "Type": "Int",
        "Optional": true,
        "Description": "Kafka Schema configuration version",
        "Computed": true
      }
    },
    "aiven_kafka_schema_configuration": {
      "compatibility_level": {
        "Type": "String",
        "Optional": true,
        "Description": "Kafka Schemas compatibility level"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project to link the Kafka Schema to"
      },
      "schema": {
        "Type": "String",
        "Optional": true,
        "Description": "Kafka Schema configuration should be a valid Avro Schema JSON format"
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service to link the Kafka Schema to"
      },
      "subject_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Kafka Schema Subject name"
      },
      "version": {
        "Type": "Int",
        "Optional": true,
        "Description": "Kafka Schema configuration version",
        "Computed": true
      }
    },
    "aiven_kafka_topic": {
      "cleanup_policy": {
        "Type": "String",
        "Optional": true,
        "Description": "Topic cleanup policy. Allowed values: delete, compact"
      },
      "config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka topic configuration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cleanup_policy": {
              "Type": "String",
              "Optional": true,
              "Description": "cleanup.policy value"
            },
            "compression_type": {
              "Type": "String",
              "Optional": true,
              "Description": "compression.type value"
            },
            "delete_retention_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "delete.retention.ms value"
            },
            "file_delete_delay_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "file.delete.delay.ms value"
            },
            "flush_messages": {
              "Type": "String",
              "Optional": true,
              "Description": "flush.messages value"
            },
            "flush_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "flush.ms value"
            },
            "index_interval_bytes": {
              "Type": "String",
              "Optional": true,
              "Description": "index.interval.bytes value"
            },
            "max_compaction_lag_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "max.compaction.lag.ms value"
            },
            "max_message_bytes": {
              "Type": "String",
              "Optional": true,
              "Description": "max.message.bytes value"
            },
            "message_downconversion_enable": {
              "Type": "String",
              "Optional": true,
              "Description": "message.downconversion.enable value"
            },
            "message_format_version": {
              "Type": "String",
              "Optional": true,
              "Description": "message.format.version value"
            },
            "message_timestamp_difference_max_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "message.timestamp.difference.max.ms value"
            },
            "message_timestamp_type": {
              "Type": "String",
              "Optional": true,
              "Description": "message.timestamp.type value"
            },
            "min_cleanable_dirty_ratio": {
              "Type": "String",
              "Optional": true,
              "Description": "min.cleanable.dirty.ratio value"
            },
            "min_compaction_lag_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "min.compaction.lag.ms value"
            },
            "min_insync_replicas": {
              "Type": "String",
              "Optional": true,
              "Description": "min.insync.replicas value"
            },
            "preallocate": {
              "Type": "String",
              "Optional": true,
              "Description": "preallocate value"
            },
            "retention_bytes": {
              "Type": "String",
              "Optional": true,
              "Description": "retention.bytes value"
            },
            "retention_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "retention.ms value"
            },
            "segment_bytes": {
              "Type": "String",
              "Optional": true,
              "Description": "segment.bytes value"
            },
            "segment_index_bytes": {
              "Type": "String",
              "Optional": true,
              "Description": "segment.index.bytes value"
            },
            "segment_jitter_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "segment.jitter.ms value"
            },
            "segment_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "segment.ms value"
            },
            "unclean_leader_election_enable": {
              "Type": "String",
              "Optional": true,
              "Description": "unclean.leader.election.enable value"
            }
          }
        }
      },
      "minimum_in_sync_replicas": {
        "Type": "Int",
        "Optional": true,
        "Description": "Minimum required nodes in-sync replicas (ISR) to produce to a partition"
      },
      "partitions": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of partitions to create in the topic"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project to link the kafka topic to"
      },
      "replication": {
        "Type": "Int",
        "Optional": true,
        "Description": "Replication factor for the topic"
      },
      "retention_bytes": {
        "Type": "Int",
        "Optional": true,
        "Description": "Retention bytes"
      },
      "retention_hours": {
        "Type": "Int",
        "Optional": true,
        "Description": "Retention period (hours)"
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service to link the kafka topic to"
      },
      "tag": {
        "Type": "Set",
        "Optional": true,
        "Description": "Kafka Topic tag",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "Topic tag key"
            },
            "value": {
              "Type": "String",
              "Optional": true,
              "Description": "Topic tag value"
            }
          }
        }
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "It is a Terraform client-side deletion protection, which prevents a Kafka \n\t\t\ttopic from being deleted. It is recommended to enable this for any production Kafka \n\t\t\ttopic containing critical data."
      },
      "topic_name": {
        "Type": "String",
        "Required": true,
        "Description": "Topic name"
      }
    },
    "aiven_m3aggregator": {
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Optional": true,
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "m3aggregator": {
        "Type": "List",
        "Optional": true,
        "Description": "M3 aggregator specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "m3aggregator_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "M3 aggregator specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain",
              "Default": {
                "Type": "string"
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "m3_version": {
              "Type": "String",
              "Optional": true,
              "Description": "M3 major version (deprecated, use m3aggregator_version)",
              "Default": {
                "Type": "string"
              }
            },
            "m3aggregator_version": {
              "Type": "String",
              "Optional": true,
              "Description": "M3 major version (the minimum compatible version)",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "service_host": {
        "Type": "String",
        "Optional": true,
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Optional": true,
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Optional": true,
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_m3db": {
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Optional": true,
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "m3db": {
        "Type": "List",
        "Optional": true,
        "Description": "M3 specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "m3db_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "M3 specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain",
              "Default": {
                "Type": "string"
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "limits": {
              "Type": "List",
              "Optional": true,
              "Description": "M3 limits",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "global_datapoints": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of data points fetched during request",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "query_datapoints": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of data points fetched in single query",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "query_require_exhaustive": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Require exhaustive result",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "query_series": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of series fetched in single query",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "m3_version": {
              "Type": "String",
              "Optional": true,
              "Description": "M3 major version (deprecated, use m3db_version)",
              "Default": {
                "Type": "string"
              }
            },
            "m3coordinator_enable_graphite_carbon_ingest": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Graphite ingestion using Carbon plaintext protocol",
              "Default": {
                "Type": "string"
              }
            },
            "m3db_version": {
              "Type": "String",
              "Optional": true,
              "Description": "M3 major version (the minimum compatible version)",
              "Default": {
                "Type": "string"
              }
            },
            "namespaces": {
              "Type": "List",
              "Optional": true,
              "Description": "List of M3 namespaces",
              "MaxItems": 2147483647,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The name of the namespace",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "options": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Namespace options",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "retention_options": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Retention options",
                          "MaxItems": 1,
                          "IsBlock": true,
                          "ConfigImplicitMode": "Block",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "block_data_expiry_duration": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Controls how long we wait before expiring stale data",
                                "Default": {
                                  "Type": "string"
                                }
                              },
                              "blocksize_duration": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Controls how long to keep a block in memory before flushing to a fileset on disk",
                                "Default": {
                                  "Type": "string"
                                }
                              },
                              "buffer_future_duration": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Controls how far into the future writes to the namespace will be accepted",
                                "Default": {
                                  "Type": "string"
                                }
                              },
                              "buffer_past_duration": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Controls how far into the past writes to the namespace will be accepted",
                                "Default": {
                                  "Type": "string"
                                }
                              },
                              "retention_period_duration": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Controls the duration of time that M3DB will retain data for the namespace",
                                "Default": {
                                  "Type": "string"
                                }
                              }
                            }
                          }
                        },
                        "snapshot_enabled": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Controls whether M3DB will create snapshot files for this namespace",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "writes_to_commitlog": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Controls whether M3DB will include writes to this namespace in the commitlog",
                          "Default": {
                            "Type": "string"
                          }
                        }
                      }
                    }
                  },
                  "resolution": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The resolution for an aggregated namespace",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The type of aggregation (aggregated/unaggregated)",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "m3coordinator": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to m3coordinator with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "m3coordinator": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to m3coordinator from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "rules": {
              "Type": "List",
              "Optional": true,
              "Description": "M3 rules",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mapping": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of M3 mapping rules",
                    "MaxItems": 10,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "aggregations": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of aggregations to be applied",
                          "MaxItems": 10,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "drop": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Drop the matching metric",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "filter": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The metrics to be used with this particular rule",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The (optional) name of the rule",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "tags": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of tags to be appended to matching metrics",
                          "MaxItems": 10,
                          "IsBlock": true,
                          "ConfigImplicitMode": "Block",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "name": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Name of the tag",
                                "Default": {
                                  "Type": "string"
                                }
                              },
                              "value": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Value of the tag",
                                "Default": {
                                  "Type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "service_host": {
        "Type": "String",
        "Optional": true,
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Optional": true,
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Optional": true,
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_mirrormaker_replication_flow": {
      "enable": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable of disable replication flows for a service"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project to link the kafka topic to"
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service to link the kafka topic to"
      },
      "source_cluster": {
        "Type": "String",
        "Required": true,
        "Description": "Source cluster alias"
      },
      "target_cluster": {
        "Type": "String",
        "Required": true,
        "Description": "Target cluster alias"
      },
      "topics": {
        "Type": "List",
        "Optional": true,
        "Description": "List of topics and/or regular expressions to replicate",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "topics_blacklist": {
        "Type": "List",
        "Optional": true,
        "Description": "List of topics and/or regular expressions to not replicate.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "aiven_mysql": {
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Optional": true,
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "mysql": {
        "Type": "List",
        "Optional": true,
        "Description": "MySQL specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "mysql_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "MySQL specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "admin_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "admin_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom username for admin user. This must be set only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "backup_hour": {
              "Type": "String",
              "Optional": true,
              "Description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.",
              "Default": {
                "Type": "string"
              }
            },
            "backup_minute": {
              "Type": "String",
              "Optional": true,
              "Description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.",
              "Default": {
                "Type": "string"
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "mysql": {
              "Type": "List",
              "Optional": true,
              "Description": "mysql.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connect_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "connect_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "default_time_zone": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "default_time_zone",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "group_concat_max_len": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group_concat_max_len",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "information_schema_stats_expiry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "information_schema_stats_expiry",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_ft_min_token_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_ft_min_token_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_ft_server_stopword_table": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_ft_server_stopword_table",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_lock_wait_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_lock_wait_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_log_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_log_buffer_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_online_alter_log_max_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_online_alter_log_max_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_print_all_deadlocks": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_print_all_deadlocks",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_rollback_on_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_rollback_on_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "interactive_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "interactive_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "long_query_time": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "long_query_time",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_allowed_packet": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_allowed_packet",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_heap_table_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_heap_table_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "net_read_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "net_read_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "net_write_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "net_write_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "slow_query_log": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "slow_query_log",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sort_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sort_buffer_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sql_mode": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sql_mode",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sql_require_primary_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sql_require_primary_key",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "tmp_table_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "tmp_table_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "wait_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wait_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "mysql_version": {
              "Type": "String",
              "Optional": true,
              "Description": "MySQL major version",
              "Default": {
                "Type": "string"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysql with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable mysql",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysql from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_target_time": {
              "Type": "String",
              "Optional": true,
              "Description": "Recovery target time when forking a service. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "service_host": {
        "Type": "String",
        "Optional": true,
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Optional": true,
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Optional": true,
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_pg": {
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Optional": true,
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "pg": {
        "Type": "List",
        "Optional": true,
        "Description": "PostgreSQL specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dbname": {
              "Type": "String",
              "Description": "Primary PostgreSQL database name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "PostgreSQL master node host IP or name",
              "Computed": true
            },
            "password": {
              "Type": "String",
              "Description": "PostgreSQL admin user password",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "PostgreSQL port",
              "Computed": true
            },
            "replica_uri": {
              "Type": "String",
              "Description": "PostgreSQL replica URI for services with a replica",
              "Computed": true
            },
            "sslmode": {
              "Type": "String",
              "Description": "PostgreSQL sslmode setting (currently always \"require\")",
              "Computed": true
            },
            "uri": {
              "Type": "String",
              "Optional": true,
              "Description": "PostgreSQL master connection URI",
              "Computed": true
            },
            "user": {
              "Type": "String",
              "Description": "PostgreSQL admin user name",
              "Computed": true
            }
          }
        }
      },
      "pg_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "PostgreSQL specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "admin_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "admin_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom username for admin user. This must be set only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "backup_hour": {
              "Type": "String",
              "Optional": true,
              "Description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.",
              "Default": {
                "Type": "string"
              }
            },
            "backup_minute": {
              "Type": "String",
              "Optional": true,
              "Description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.",
              "Default": {
                "Type": "string"
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "pg": {
              "Type": "List",
              "Optional": true,
              "Description": "postgresql.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "autovacuum_analyze_scale_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_analyze_scale_factor",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_analyze_threshold": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_analyze_threshold",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_freeze_max_age": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_freeze_max_age",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_max_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_max_workers",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_naptime": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_naptime",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_vacuum_cost_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_cost_delay",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_vacuum_cost_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_cost_limit",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_vacuum_scale_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_scale_factor",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_vacuum_threshold": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_threshold",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "deadlock_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "deadlock_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "idle_in_transaction_session_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "idle_in_transaction_session_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "jit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "jit",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_autovacuum_min_duration": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_autovacuum_min_duration",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_error_verbosity": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_error_verbosity",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_line_prefix": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_line_prefix",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_min_duration_statement": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_min_duration_statement",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_files_per_process": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_files_per_process",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_locks_per_transaction": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_locks_per_transaction",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_logical_replication_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_logical_replication_workers",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_parallel_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_parallel_workers",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_parallel_workers_per_gather": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_parallel_workers_per_gather",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_pred_locks_per_transaction": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_pred_locks_per_transaction",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_prepared_transactions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_prepared_transactions",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_replication_slots": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_replication_slots",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_stack_depth": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_stack_depth",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_standby_archive_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_standby_archive_delay",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_standby_streaming_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_standby_streaming_delay",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_wal_senders": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_wal_senders",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_worker_processes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_worker_processes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pg_partman_bgw__dot__interval": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_partman_bgw.interval",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pg_partman_bgw__dot__role": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_partman_bgw.role",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pg_stat_statements__dot__track": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_stat_statements.track",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "temp_file_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "temp_file_limit",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "timezone": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "timezone",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "track_activity_query_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_activity_query_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "track_commit_timestamp": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_commit_timestamp",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "track_functions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_functions",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "wal_sender_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wal_sender_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "wal_writer_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wal_writer_delay",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "pg_read_replica": {
              "Type": "String",
              "Optional": true,
              "Description": "Should the service which is being forked be a read replica",
              "Default": {
                "Type": "string"
              }
            },
            "pg_service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the PG Service from which to fork (deprecated, use service_to_fork_from). This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "pg_version": {
              "Type": "String",
              "Optional": true,
              "Description": "PostgreSQL major version",
              "Default": {
                "Type": "string"
              }
            },
            "pgbouncer": {
              "Type": "List",
              "Optional": true,
              "Description": "PGBouncer connection pooling settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "autodb_idle_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If the automatically created database pools have been unused this many seconds, they are freed. If 0 then timeout is disabled. [seconds]",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autodb_max_db_connections": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Do not allow more than this many server connections per database (regardless of user). Setting it to 0 means unlimited.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autodb_pool_mode": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "PGBouncer pool mode",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autodb_pool_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If non-zero then create automatically a pool of that size per user when a pool doesn't exist.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ignore_startup_parameters": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of parameters to ignore when given in startup packet",
                    "MaxItems": 32,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "min_pool_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Add more server connections to pool if below this number. Improves behavior when usual load comes suddenly back after period of total inactivity. The value is effectively capped at the pool size.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "server_idle_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If a server connection has been idle more than this many seconds it will be dropped. If 0 then timeout is disabled. [seconds]",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "server_lifetime": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The pooler will close an unused server connection that has been connected longer than this. [seconds]",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "server_reset_query_always": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Run server_reset_query (DISCARD ALL) in all pooling modes",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "pglookout": {
              "Type": "List",
              "Optional": true,
              "Description": "PGLookout settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_failover_replication_time_lag": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_failover_replication_time_lag",
                    "Default": {
                      "Type": "float64",
                      "Value": "60"
                    }
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pg with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pgbouncer with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable pg",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable pgbouncer",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pg from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pgbouncer from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_target_time": {
              "Type": "String",
              "Optional": true,
              "Description": "Recovery target time when forking a service. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "shared_buffers_percentage": {
              "Type": "String",
              "Optional": true,
              "Description": "shared_buffers_percentage",
              "Default": {
                "Type": "string"
              }
            },
            "synchronous_replication": {
              "Type": "String",
              "Optional": true,
              "Description": "Synchronous replication type. Note that the service plan also needs to support synchronous replication.",
              "Default": {
                "Type": "string"
              }
            },
            "timescaledb": {
              "Type": "List",
              "Optional": true,
              "Description": "TimescaleDB extension configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_background_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "timescaledb.max_background_workers",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "variant": {
              "Type": "String",
              "Optional": true,
              "Description": "Variant of the PostgreSQL service, may affect the features that are exposed by default",
              "Default": {
                "Type": "string"
              }
            },
            "work_mem": {
              "Type": "String",
              "Optional": true,
              "Description": "work_mem",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "service_host": {
        "Type": "String",
        "Optional": true,
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Optional": true,
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Optional": true,
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_project": {
      "account_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Account ID"
      },
      "available_credits": {
        "Type": "String",
        "Optional": true,
        "Description": "Available credits",
        "Computed": true
      },
      "billing_address": {
        "Type": "String",
        "Optional": true,
        "Description": "Billing name and address of the project"
      },
      "billing_currency": {
        "Type": "String",
        "Optional": true,
        "Description": "Billing currency"
      },
      "billing_emails": {
        "Type": "Set",
        "Optional": true,
        "Description": "Billing contact emails of the project",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "billing_extra_text": {
        "Type": "String",
        "Optional": true,
        "Description": "Extra text to be included in all project invoices, e.g. purchase order or cost center number"
      },
      "billing_group": {
        "Type": "String",
        "Optional": true,
        "Description": "Billing group Id"
      },
      "ca_cert": {
        "Type": "String",
        "Optional": true,
        "Description": "Project root CA. This is used by some services like Kafka to sign service certificate",
        "Computed": true
      },
      "card_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Credit card ID"
      },
      "copy_from_project": {
        "Type": "String",
        "Optional": true,
        "Description": "Copy properties from another project. Only has effect when a new project is created."
      },
      "country": {
        "Type": "String",
        "Optional": true,
        "Description": "Billing country",
        "Computed": true
      },
      "country_code": {
        "Type": "String",
        "Optional": true,
        "Description": "Billing country code of the project"
      },
      "default_cloud": {
        "Type": "String",
        "Optional": true,
        "Description": "Default cloud for new services"
      },
      "estimated_balance": {
        "Type": "String",
        "Optional": true,
        "Description": "Estimated balance",
        "Computed": true
      },
      "payment_method": {
        "Type": "String",
        "Optional": true,
        "Description": "Payment method",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project name"
      },
      "technical_emails": {
        "Type": "Set",
        "Optional": true,
        "Description": "Technical contact emails of the project",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "vat_id": {
        "Type": "String",
        "Optional": true,
        "Description": "EU VAT Identification Number"
      }
    },
    "aiven_project_user": {
      "accepted": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether the user has accepted project membership or not",
        "Computed": true
      },
      "email": {
        "Type": "String",
        "Required": true,
        "Description": "Email address of the user"
      },
      "member_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Project membership type. One of: admin, developer, operator"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "The project the user belongs to"
      }
    },
    "aiven_project_vpc": {
      "cloud_name": {
        "Type": "String",
        "Required": true,
        "Description": "Cloud the VPC is in"
      },
      "network_cidr": {
        "Type": "String",
        "Optional": true,
        "Description": "Network address range used by the VPC like 192.168.0.0/24"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "The project the VPC belongs to"
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "State of the VPC (APPROVED, ACTIVE, DELETING, DELETED)",
        "Computed": true
      }
    },
    "aiven_redis": {
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Optional": true,
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "redis": {
        "Type": "List",
        "Optional": true,
        "Description": "Redis server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "redis_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Redis user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to redis with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable redis",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to redis from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service",
              "Default": {
                "Type": "string"
              }
            },
            "redis_io_threads": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis IO thread count",
              "Default": {
                "Type": "string"
              }
            },
            "redis_lfu_decay_time": {
              "Type": "String",
              "Optional": true,
              "Description": "LFU maxmemory-policy counter decay time in minutes",
              "Default": {
                "Type": "float64",
                "Value": "1"
              }
            },
            "redis_lfu_log_factor": {
              "Type": "String",
              "Optional": true,
              "Description": "Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies",
              "Default": {
                "Type": "float64",
                "Value": "10"
              }
            },
            "redis_maxmemory_policy": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis maxmemory-policy",
              "Default": {
                "Type": "string",
                "Value": "noeviction"
              }
            },
            "redis_notify_keyspace_events": {
              "Type": "String",
              "Optional": true,
              "Description": "Set notify-keyspace-events option",
              "Default": {
                "Type": "string"
              }
            },
            "redis_ssl": {
              "Type": "String",
              "Optional": true,
              "Description": "Require SSL to access Redis",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "redis_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis idle connection timeout",
              "Default": {
                "Type": "float64",
                "Value": "300"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "service_host": {
        "Type": "String",
        "Optional": true,
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Optional": true,
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Optional": true,
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_service": {
      "cassandra": {
        "Type": "List",
        "Optional": true,
        "Description": "Cassandra specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "cassandra_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Cassandra specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cassandra": {
              "Type": "List",
              "Optional": true,
              "Description": "cassandra configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "batch_size_fail_threshold_in_kb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "batch_size_fail_threshold_in_kb",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "batch_size_warn_threshold_in_kb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "batch_size_warn_threshold_in_kb",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migrate_sstableloader": {
              "Type": "String",
              "Optional": true,
              "Description": "Migration mode for the sstableloader utility",
              "Default": {
                "Type": "string"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Optional": true,
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "elasticsearch": {
        "Type": "List",
        "Optional": true,
        "Description": "Elasticsearch specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "kibana_uri": {
              "Type": "String",
              "Description": "URI for Kibana frontend",
              "Computed": true
            }
          }
        }
      },
      "elasticsearch_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Elasticsearch specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain",
              "Default": {
                "Type": "string"
              }
            },
            "disable_replication_factor_adjustment": {
              "Type": "String",
              "Optional": true,
              "Description": "Disable replication factor adjustment",
              "Default": {
                "Type": "string"
              }
            },
            "elasticsearch": {
              "Type": "List",
              "Optional": true,
              "Description": "Elasticsearch settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action_auto_create_index_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "action.auto_create_index",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "action_destructive_requires_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Require explicit index names when deleting",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "cluster_max_shards_per_node": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "cluster.max_shards_per_node",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "http_max_content_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_content_length",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "http_max_header_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_header_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "http_max_initial_line_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_initial_line_length",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "indices_fielddata_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.fielddata.cache.size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "indices_memory_index_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.memory.index_buffer_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "indices_queries_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.queries.cache.size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "indices_query_bool_max_clause_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.query.bool.max_clause_count",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "reindex_remote_whitelist": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "reindex_remote_whitelist",
                    "MaxItems": 32,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "search_max_buckets": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search.max_buckets",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_analyze_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_analyze_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_force_merge_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "force_merge thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_get_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_get_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_index_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_index_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_search_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_search_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_search_throttled_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_search_throttled_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_write_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool queue size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "thread_pool_write_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool size",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "elasticsearch_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch major version",
              "Default": {
                "Type": "string"
              }
            },
            "index_patterns": {
              "Type": "List",
              "Optional": true,
              "Description": "Index patterns",
              "MaxItems": 512,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_index_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Maximum number of indexes to keep",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pattern": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "fnmatch pattern",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sorting_algorithm": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Deletion sorting algorithm",
                    "Default": {
                      "Type": "string",
                      "Value": "creation_date"
                    }
                  }
                }
              }
            },
            "index_template": {
              "Type": "List",
              "Optional": true,
              "Description": "Template settings for all new indexes",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mapping_nested_objects_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.mapping.nested_objects.limit",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "number_of_replicas": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_replicas",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "number_of_shards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_shards",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kibana": {
              "Type": "List",
              "Optional": true,
              "Description": "Kibana settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch_request_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Timeout in milliseconds for requests made by Kibana towards Elasticsearch",
                    "Default": {
                      "Type": "float64",
                      "Value": "30000"
                    }
                  },
                  "enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable or disable Kibana",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "max_old_space_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_old_space_size",
                    "Default": {
                      "Type": "float64",
                      "Value": "128"
                    }
                  }
                }
              }
            },
            "max_index_count": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum index count",
              "Default": {
                "Type": "float64",
                "Value": "0"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to elasticsearch with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kibana with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable elasticsearch",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kibana",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to elasticsearch from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kibana from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service",
              "Default": {
                "Type": "string"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "grafana": {
        "Type": "List",
        "Optional": true,
        "Description": "Grafana specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "grafana_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Grafana specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "alerting_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable or disable Grafana alerting functionality",
              "Default": {
                "Type": "string"
              }
            },
            "alerting_error_or_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Default error or timeout setting for new alerting rules",
              "Default": {
                "Type": "string"
              }
            },
            "alerting_nodata_or_nullvalues": {
              "Type": "String",
              "Optional": true,
              "Description": "Default value for 'no data or null values' for new alerting rules",
              "Default": {
                "Type": "string"
              }
            },
            "allow_embedding": {
              "Type": "String",
              "Optional": true,
              "Description": "Allow embedding Grafana dashboards with iframe/frame/object/embed tags. Disabled by default to limit impact of clickjacking",
              "Default": {
                "Type": "string"
              }
            },
            "auth_basic_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable or disable basic authentication form, used by Grafana built-in login",
              "Default": {
                "Type": "string"
              }
            },
            "auth_generic_oauth": {
              "Type": "List",
              "Optional": true,
              "Description": "Generic OAuth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "allowed_domains": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Allowed domains",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "allowed_organizations": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require user to be member of one of the listed organizations",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "api_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "API URL",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "auth_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Authorization URL",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Name of the OAuth integration",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "scopes": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "OAuth scopes",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "token_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Token URL",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "auth_github": {
              "Type": "List",
              "Optional": true,
              "Description": "Github Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "allowed_organizations": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given organizations",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "team_ids": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given team IDs",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "auth_gitlab": {
              "Type": "List",
              "Optional": true,
              "Description": "GitLab Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "allowed_groups": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given groups",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "api_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "API URL. This only needs to be set when using self hosted GitLab",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "auth_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Authorization URL. This only needs to be set when using self hosted GitLab",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "token_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Token URL. This only needs to be set when using self hosted GitLab",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "auth_google": {
              "Type": "List",
              "Optional": true,
              "Description": "Google Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "allowed_domains": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Domains allowed to sign-in to this Grafana",
                    "MaxItems": 64,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "cookie_samesite": {
              "Type": "String",
              "Optional": true,
              "Description": "Cookie SameSite attribute: 'strict' prevents sending cookie for cross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value.",
              "Default": {
                "Type": "string"
              }
            },
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain",
              "Default": {
                "Type": "string"
              }
            },
            "dashboards_min_refresh_interval": {
              "Type": "String",
              "Optional": true,
              "Description": "Minimum refresh interval",
              "Default": {
                "Type": "string"
              }
            },
            "dashboards_versions_to_keep": {
              "Type": "String",
              "Optional": true,
              "Description": "Dashboard versions to keep per dashboard",
              "Default": {
                "Type": "string"
              }
            },
            "dataproxy_send_user_header": {
              "Type": "String",
              "Optional": true,
              "Description": "Send 'X-Grafana-User' header to data source",
              "Default": {
                "Type": "string"
              }
            },
            "dataproxy_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Timeout for data proxy requests in seconds",
              "Default": {
                "Type": "string"
              }
            },
            "disable_gravatar": {
              "Type": "String",
              "Optional": true,
              "Description": "Set to true to disable gravatar. Defaults to false (gravatar is enabled)",
              "Default": {
                "Type": "string"
              }
            },
            "editors_can_admin": {
              "Type": "String",
              "Optional": true,
              "Description": "Editors can manage folders, teams and dashboards created by them",
              "Default": {
                "Type": "string"
              }
            },
            "external_image_storage": {
              "Type": "List",
              "Optional": true,
              "Description": "External image store settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "access_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "S3 access key. Requires permissions to the S3 bucket for the s3:PutObject and s3:PutObjectAcl actions",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "bucket_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Bucket URL for S3",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "provider": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Provider type",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "secret_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "S3 secret key",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "google_analytics_ua_id": {
              "Type": "String",
              "Optional": true,
              "Description": "Google Analytics ID",
              "Default": {
                "Type": "string"
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "metrics_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Grafana /metrics endpoint",
              "Default": {
                "Type": "string"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to grafana with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable grafana",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to grafana from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service",
              "Default": {
                "Type": "string"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "smtp_server": {
              "Type": "List",
              "Optional": true,
              "Description": "SMTP server settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "from_address": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Address used for sending emails",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "from_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Name used in outgoing emails, defaults to Grafana",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Server hostname or IP",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for SMTP authentication",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "SMTP server port",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "skip_verify": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Skip verifying server certificate. Defaults to false",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "starttls_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS. Default is OpportunisticStartTLS.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Username for SMTP authentication",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "user_auto_assign_org": {
              "Type": "String",
              "Optional": true,
              "Description": "Auto-assign new users on signup to main organization. Defaults to false",
              "Default": {
                "Type": "string"
              }
            },
            "user_auto_assign_org_role": {
              "Type": "String",
              "Optional": true,
              "Description": "Set role for new signups. Defaults to Viewer",
              "Default": {
                "Type": "string"
              }
            },
            "viewers_can_edit": {
              "Type": "String",
              "Optional": true,
              "Description": "Users with view-only permission can edit but not save dashboards",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "influxdb": {
        "Type": "List",
        "Optional": true,
        "Description": "InfluxDB specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "database_name": {
              "Type": "String",
              "Description": "Name of the default InfluxDB database",
              "Computed": true
            }
          }
        }
      },
      "influxdb_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "InfluxDB specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain",
              "Default": {
                "Type": "string"
              }
            },
            "influxdb": {
              "Type": "List",
              "Optional": true,
              "Description": "influxdb.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "log_queries_after": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum duration in seconds before a query is logged as a slow query. Setting this to 0 (the default) will never log slow queries.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_row_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of rows returned in a non-chunked query. Setting this to 0 (the default) allows an unlimited number to be returned.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_select_buckets": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of 'GROUP BY time()' buckets that can be processed in a query. Setting this to 0 (the default) allows an unlimited number to be processed.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_select_point": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of points that can be processed in a SELECT statement. Setting this to 0 (the default) allows an unlimited number to be processed.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "query_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum duration in seconds before a query is killed. Setting this to 0 (the default) will never kill slow queries.",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to influxdb with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable influxdb",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to influxdb from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service",
              "Default": {
                "Type": "string"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "kafka": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka client certificate",
              "Computed": true
            },
            "access_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka client certificate key",
              "Computed": true
            },
            "connect_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka Connect URI, if any",
              "Computed": true
            },
            "rest_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka REST URI, if any",
              "Computed": true
            },
            "schema_registry_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Schema Registry URI, if any",
              "Computed": true
            }
          }
        }
      },
      "kafka_connect": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka Connect specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "kafka_connect_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka Connect specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka_connect": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka Connect configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connector_client_config_override_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client config override policy",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_auto_offset_reset": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer auto offset reset",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data the server should return for a fetch request",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_isolation_level": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer isolation level",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_partition_fetch_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data per-partition the server will return.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_poll_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum delay between polls when using consumer group management",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_poll_records": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of records returned by a single poll",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "offset_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The interval at which to try committing offsets for tasks",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "offset_flush_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Offset flush timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "producer_max_request_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum size of a request in bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The timeout used to detect failures when using Kafka’s group management facilities",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_connect",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "kafka_mirrormaker": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka MirrorMaker 2 specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "kafka_mirrormaker_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka MirrorMaker 2 specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka_mirrormaker": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka MirrorMaker configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "emit_checkpoints_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Emit consumer group offset checkpoints",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "emit_checkpoints_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of consumer group offset checkpoints",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "refresh_groups_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Refresh consumer groups",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "refresh_groups_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of group refresh",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "refresh_topics_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Refresh topics and partitions",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "refresh_topics_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of topic and partitions refresh",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sync_group_offsets_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Sync consumer group offsets",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sync_group_offsets_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of consumer group offset sync",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "kafka_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain",
              "Default": {
                "Type": "string"
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka broker configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "auto_create_topics_enable": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "auto.create.topics.enable",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "compression_type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "compression.type",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "connections_max_idle_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "connections.max.idle.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "default_replication_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "default.replication.factor",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "group_initial_rebalance_delay_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.initial.rebalance.delay.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "group_max_session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.max.session.timeout.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "group_min_session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.min.session.timeout.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_cleaner_delete_retention_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.delete.retention.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_cleaner_max_compaction_lag_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.max.compaction.lag.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_cleaner_min_cleanable_ratio": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.min.cleanable.ratio",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_cleaner_min_compaction_lag_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.min.compaction.lag.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_cleanup_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleanup.policy",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_flush_interval_messages": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.flush.interval.messages",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.flush.interval.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_index_interval_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.index.interval.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_index_size_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.index.size.max.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_message_downconversion_enable": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.downconversion.enable",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_message_timestamp_difference_max_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.timestamp.difference.max.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_message_timestamp_type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.timestamp.type",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_preallocate": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.preallocate",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_retention_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_retention_hours": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.hours",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_retention_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_roll_jitter_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.roll.jitter.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_roll_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.roll.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_segment_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.segment.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_segment_delete_delay_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.segment.delete.delay.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_connections_per_ip": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max.connections.per.ip",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_incremental_fetch_session_cache_slots": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max.incremental.fetch.session.cache.slots",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "message_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "message.max.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "min_insync_replicas": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "min.insync.replicas",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "num_partitions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "num.partitions",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "offsets_retention_minutes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "offsets.retention.minutes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "producer_purgatory_purge_interval_requests": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.purgatory.purge.interval.requests",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "replica_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "replica.fetch.max.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "replica_fetch_response_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "replica.fetch.response.max.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "socket_request_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "socket.request.max.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "transaction_remove_expired_transaction_cleanup_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "transaction.remove.expired.transaction.cleanup.interval.ms",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "transaction_state_log_segment_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "transaction.state.log.segment.bytes",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "kafka_authentication_methods": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka authentication methods",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "certificate": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable certificate/SSL authentication",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "sasl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable SASL authentication",
                    "Default": {
                      "Type": "bool",
                      "Value": "false"
                    }
                  }
                }
              }
            },
            "kafka_connect": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Kafka Connect service",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "kafka_connect_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka Connect configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connector_client_config_override_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client config override policy",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_auto_offset_reset": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer auto offset reset",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data the server should return for a fetch request",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_isolation_level": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer isolation level",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_partition_fetch_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data per-partition the server will return.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_poll_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum delay between polls when using consumer group management",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "consumer_max_poll_records": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of records returned by a single poll",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "offset_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The interval at which to try committing offsets for tasks",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "offset_flush_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Offset flush timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "producer_max_request_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum size of a request in bytes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The timeout used to detect failures when using Kafka’s group management facilities",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "kafka_rest": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Kafka-REST service",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "kafka_rest_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka REST configuration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "consumer_enable_auto_commit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.enable.auto.commit",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "consumer_request_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.request.max.bytes",
                    "Default": {
                      "Type": "float64",
                      "Value": "6.7108864e+07"
                    }
                  },
                  "consumer_request_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.request.timeout.ms",
                    "Default": {
                      "Type": "float64",
                      "Value": "1000"
                    }
                  },
                  "producer_acks": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.acks",
                    "Default": {
                      "Type": "string",
                      "Value": "1"
                    }
                  },
                  "producer_linger_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.linger.ms",
                    "Default": {
                      "Type": "float64",
                      "Value": "0"
                    }
                  },
                  "simpleconsumer_pool_size_max": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "simpleconsumer.pool.size.max",
                    "Default": {
                      "Type": "float64",
                      "Value": "25"
                    }
                  }
                }
              }
            },
            "kafka_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka major version",
              "Default": {
                "Type": "string"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_connect",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kafka_rest": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_rest",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "schema_registry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable schema_registry",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "kafka_rest": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_rest from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "schema_registry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to schema_registry from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "schema_registry": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Schema-Registry service",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "schema_registry_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Schema Registry configuration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "leader_eligibility": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "leader_eligibility",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "topic_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "topic_name",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "mysql": {
        "Type": "List",
        "Optional": true,
        "Description": "MySQL specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "mysql_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "MySQL specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "admin_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "admin_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom username for admin user. This must be set only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "backup_hour": {
              "Type": "String",
              "Optional": true,
              "Description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.",
              "Default": {
                "Type": "string"
              }
            },
            "backup_minute": {
              "Type": "String",
              "Optional": true,
              "Description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.",
              "Default": {
                "Type": "string"
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "mysql": {
              "Type": "List",
              "Optional": true,
              "Description": "mysql.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connect_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "connect_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "default_time_zone": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "default_time_zone",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "group_concat_max_len": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group_concat_max_len",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "information_schema_stats_expiry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "information_schema_stats_expiry",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_ft_min_token_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_ft_min_token_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_ft_server_stopword_table": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_ft_server_stopword_table",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_lock_wait_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_lock_wait_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_log_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_log_buffer_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_online_alter_log_max_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_online_alter_log_max_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_print_all_deadlocks": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_print_all_deadlocks",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "innodb_rollback_on_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_rollback_on_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "interactive_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "interactive_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "long_query_time": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "long_query_time",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_allowed_packet": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_allowed_packet",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_heap_table_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_heap_table_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "net_read_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "net_read_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "net_write_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "net_write_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "slow_query_log": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "slow_query_log",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sort_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sort_buffer_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sql_mode": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sql_mode",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "sql_require_primary_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sql_require_primary_key",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "tmp_table_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "tmp_table_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "wait_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wait_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "mysql_version": {
              "Type": "String",
              "Optional": true,
              "Description": "MySQL major version",
              "Default": {
                "Type": "string"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysql with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable mysql",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysql from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_target_time": {
              "Type": "String",
              "Optional": true,
              "Description": "Recovery target time when forking a service. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "pg": {
        "Type": "List",
        "Optional": true,
        "Description": "PostgreSQL specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dbname": {
              "Type": "String",
              "Description": "Primary PostgreSQL database name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "PostgreSQL master node host IP or name",
              "Computed": true
            },
            "password": {
              "Type": "String",
              "Description": "PostgreSQL admin user password",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "PostgreSQL port",
              "Computed": true
            },
            "replica_uri": {
              "Type": "String",
              "Description": "PostgreSQL replica URI for services with a replica",
              "Computed": true
            },
            "sslmode": {
              "Type": "String",
              "Description": "PostgreSQL sslmode setting (currently always \"require\")",
              "Computed": true
            },
            "uri": {
              "Type": "String",
              "Optional": true,
              "Description": "PostgreSQL master connection URI",
              "Computed": true
            },
            "user": {
              "Type": "String",
              "Description": "PostgreSQL admin user name",
              "Computed": true
            }
          }
        }
      },
      "pg_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "PostgreSQL specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "admin_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "admin_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom username for admin user. This must be set only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "backup_hour": {
              "Type": "String",
              "Optional": true,
              "Description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.",
              "Default": {
                "Type": "string"
              }
            },
            "backup_minute": {
              "Type": "String",
              "Optional": true,
              "Description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.",
              "Default": {
                "Type": "string"
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "pg": {
              "Type": "List",
              "Optional": true,
              "Description": "postgresql.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "autovacuum_analyze_scale_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_analyze_scale_factor",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_analyze_threshold": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_analyze_threshold",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_freeze_max_age": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_freeze_max_age",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_max_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_max_workers",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_naptime": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_naptime",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_vacuum_cost_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_cost_delay",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_vacuum_cost_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_cost_limit",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_vacuum_scale_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_scale_factor",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autovacuum_vacuum_threshold": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_threshold",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "deadlock_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "deadlock_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "idle_in_transaction_session_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "idle_in_transaction_session_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "jit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "jit",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_autovacuum_min_duration": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_autovacuum_min_duration",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_error_verbosity": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_error_verbosity",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_line_prefix": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_line_prefix",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "log_min_duration_statement": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_min_duration_statement",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_files_per_process": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_files_per_process",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_locks_per_transaction": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_locks_per_transaction",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_logical_replication_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_logical_replication_workers",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_parallel_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_parallel_workers",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_parallel_workers_per_gather": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_parallel_workers_per_gather",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_pred_locks_per_transaction": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_pred_locks_per_transaction",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_prepared_transactions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_prepared_transactions",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_replication_slots": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_replication_slots",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_stack_depth": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_stack_depth",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_standby_archive_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_standby_archive_delay",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_standby_streaming_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_standby_streaming_delay",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_wal_senders": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_wal_senders",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "max_worker_processes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_worker_processes",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pg_partman_bgw__dot__interval": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_partman_bgw.interval",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pg_partman_bgw__dot__role": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_partman_bgw.role",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pg_stat_statements__dot__track": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_stat_statements.track",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "temp_file_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "temp_file_limit",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "timezone": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "timezone",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "track_activity_query_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_activity_query_size",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "track_commit_timestamp": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_commit_timestamp",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "track_functions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_functions",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "wal_sender_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wal_sender_timeout",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "wal_writer_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wal_writer_delay",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "pg_read_replica": {
              "Type": "String",
              "Optional": true,
              "Description": "Should the service which is being forked be a read replica",
              "Default": {
                "Type": "string"
              }
            },
            "pg_service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the PG Service from which to fork (deprecated, use service_to_fork_from). This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "pg_version": {
              "Type": "String",
              "Optional": true,
              "Description": "PostgreSQL major version",
              "Default": {
                "Type": "string"
              }
            },
            "pgbouncer": {
              "Type": "List",
              "Optional": true,
              "Description": "PGBouncer connection pooling settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "autodb_idle_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If the automatically created database pools have been unused this many seconds, they are freed. If 0 then timeout is disabled. [seconds]",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autodb_max_db_connections": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Do not allow more than this many server connections per database (regardless of user). Setting it to 0 means unlimited.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autodb_pool_mode": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "PGBouncer pool mode",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "autodb_pool_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If non-zero then create automatically a pool of that size per user when a pool doesn't exist.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ignore_startup_parameters": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of parameters to ignore when given in startup packet",
                    "MaxItems": 32,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "min_pool_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Add more server connections to pool if below this number. Improves behavior when usual load comes suddenly back after period of total inactivity. The value is effectively capped at the pool size.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "server_idle_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If a server connection has been idle more than this many seconds it will be dropped. If 0 then timeout is disabled. [seconds]",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "server_lifetime": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The pooler will close an unused server connection that has been connected longer than this. [seconds]",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "server_reset_query_always": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Run server_reset_query (DISCARD ALL) in all pooling modes",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "pglookout": {
              "Type": "List",
              "Optional": true,
              "Description": "PGLookout settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_failover_replication_time_lag": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_failover_replication_time_lag",
                    "Default": {
                      "Type": "float64",
                      "Value": "60"
                    }
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pg with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pgbouncer with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable pg",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable pgbouncer",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pg from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pgbouncer from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_target_time": {
              "Type": "String",
              "Optional": true,
              "Description": "Recovery target time when forking a service. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "shared_buffers_percentage": {
              "Type": "String",
              "Optional": true,
              "Description": "shared_buffers_percentage",
              "Default": {
                "Type": "string"
              }
            },
            "synchronous_replication": {
              "Type": "String",
              "Optional": true,
              "Description": "Synchronous replication type. Note that the service plan also needs to support synchronous replication.",
              "Default": {
                "Type": "string"
              }
            },
            "timescaledb": {
              "Type": "List",
              "Optional": true,
              "Description": "TimescaleDB extension configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_background_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "timescaledb.max_background_workers",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "variant": {
              "Type": "String",
              "Optional": true,
              "Description": "Variant of the PostgreSQL service, may affect the features that are exposed by default",
              "Default": {
                "Type": "string"
              }
            },
            "work_mem": {
              "Type": "String",
              "Optional": true,
              "Description": "work_mem",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "redis": {
        "Type": "List",
        "Optional": true,
        "Description": "Redis specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "redis_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Redis specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL",
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to redis with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable redis",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to redis from the public internet for service nodes that are in a project VPC or another type of private network",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service",
              "Default": {
                "Type": "string"
              }
            },
            "redis_io_threads": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis IO thread count",
              "Default": {
                "Type": "string"
              }
            },
            "redis_lfu_decay_time": {
              "Type": "String",
              "Optional": true,
              "Description": "LFU maxmemory-policy counter decay time in minutes",
              "Default": {
                "Type": "float64",
                "Value": "1"
              }
            },
            "redis_lfu_log_factor": {
              "Type": "String",
              "Optional": true,
              "Description": "Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies",
              "Default": {
                "Type": "float64",
                "Value": "10"
              }
            },
            "redis_maxmemory_policy": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis maxmemory-policy",
              "Default": {
                "Type": "string",
                "Value": "noeviction"
              }
            },
            "redis_notify_keyspace_events": {
              "Type": "String",
              "Optional": true,
              "Description": "Set notify-keyspace-events option",
              "Default": {
                "Type": "string"
              }
            },
            "redis_ssl": {
              "Type": "String",
              "Optional": true,
              "Description": "Require SSL to access Redis",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "redis_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis idle connection timeout",
              "Default": {
                "Type": "float64",
                "Value": "300"
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "service_host": {
        "Type": "String",
        "Optional": true,
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Optional": true,
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Service type code"
      },
      "service_uri": {
        "Type": "String",
        "Optional": true,
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Optional": true,
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "Service state",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_service_component": {
      "component": {
        "Type": "String",
        "Required": true,
        "Description": "Service component name"
      },
      "host": {
        "Type": "String",
        "Description": "DNS name for connecting to the service component",
        "Computed": true
      },
      "kafka_authentication_method": {
        "Type": "String",
        "Optional": true,
        "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component"
      },
      "port": {
        "Type": "Int",
        "Description": "Port number for connecting to the service component",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project name"
      },
      "route": {
        "Type": "String",
        "Optional": true,
        "Description": "Network access route"
      },
      "service_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Service name"
      },
      "ssl": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components that may disable encryption"
      },
      "usage": {
        "Type": "String",
        "Optional": true,
        "Description": "DNS usage name",
        "Default": {
          "Type": "string",
          "Value": "primary"
        }
      }
    },
    "aiven_service_integration": {
      "dashboard_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Dashboard specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "datadog_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Dashboard specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "datadog_tags": {
              "Type": "List",
              "Optional": true,
              "Description": "Custom tags provided by user",
              "MaxItems": 32,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "comment": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Optional tag explanation",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "tag": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Tag value",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "exclude_consumer_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "List of custom metrics",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "exclude_topics": {
              "Type": "List",
              "Optional": true,
              "Description": "List of topics to exclude",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "include_consumer_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "List of custom metrics",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "include_topics": {
              "Type": "List",
              "Optional": true,
              "Description": "List of topics to include",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka_custom_metrics": {
              "Type": "List",
              "Optional": true,
              "Description": "List of custom metrics",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "destination_endpoint_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Destination endpoint for the integration (if any)"
      },
      "destination_service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Destination service for the integration (if any)"
      },
      "external_aws_cloudwatch_logs_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "External AWS Cloudwatch logs specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "external_aws_cloudwatch_metrics_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "External AWS cloudwatch metrics specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "external_elasticsearch_logs_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "External Elasticsearch logs specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "external_google_cloud_logging_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "External Google Cloud Logging specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "integration_type": {
        "Type": "String",
        "Required": true,
        "Description": "Type of the service integration"
      },
      "kafka_connect_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka Connect specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "kafka_connect": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka Connect service configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "config_storage_topic": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The name of the topic where connector and task configuration data are stored.This must be the same for all workers with the same group_id.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "group_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "A unique string that identifies the Connect cluster group this worker belongs to.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "offset_storage_topic": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The name of the topic where connector and task configuration offsets are stored.This must be the same for all workers with the same group_id.",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "status_storage_topic": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The name of the topic where connector and task configuration status updates are stored.This must be the same for all workers with the same group_id.",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "kafka_logs_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka Logs specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "kafka_topic": {
              "Type": "String",
              "Optional": true,
              "Description": "Topic name",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "kafka_mirrormaker_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Mirrormaker 2 integration specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cluster_alias": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka cluster alias",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "logs_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Log integration specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "elasticsearch_index_days_max": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch index retention limit",
              "Default": {
                "Type": "float64",
                "Value": "3"
              }
            },
            "elasticsearch_index_prefix": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch index prefix",
              "Default": {
                "Type": "string",
                "Value": "logs"
              }
            }
          }
        }
      },
      "m3aggregator_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "M3 aggregator specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "m3coordinator_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "M3 coordinator specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "metrics_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Metrics specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "database": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the database where to store metric datapoints. Only affects PostgreSQL destinations. Defaults to 'metrics'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.",
              "Default": {
                "Type": "string"
              }
            },
            "retention_days": {
              "Type": "String",
              "Optional": true,
              "Description": "Number of days to keep old metrics. Only affects PostgreSQL destinations. Set to 0 for no automatic cleanup. Defaults to 30 days.",
              "Default": {
                "Type": "string"
              }
            },
            "ro_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of a user that can be used to read metrics. This will be used for Grafana integration (if enabled) to prevent Grafana users from making undesired changes. Only affects PostgreSQL destinations. Defaults to 'metrics_reader'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.",
              "Default": {
                "Type": "string"
              }
            },
            "source_mysql": {
              "Type": "List",
              "Optional": true,
              "Description": "Configuration options for metrics where source service is MySQL",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "telegraf": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Configuration options for Telegraf MySQL input plugin",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "gather_event_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.EVENT_WAITS",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_file_events_stats": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "gather metrics from PERFORMANCE_SCHEMA.FILE_SUMMARY_BY_EVENT_NAME",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_index_io_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_INDEX_USAGE",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_info_schema_auto_inc": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather auto_increment columns and max values from information schema",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_innodb_metrics": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from INFORMATION_SCHEMA.INNODB_METRICS",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_perf_events_statements": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.EVENTS_STATEMENTS_SUMMARY_BY_DIGEST",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_process_list": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather thread state counts from INFORMATION_SCHEMA.PROCESSLIST",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_slave_status": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from SHOW SLAVE STATUS command output",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_table_io_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_TABLE",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_table_lock_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_LOCK_WAITS",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_table_schema": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from INFORMATION_SCHEMA.TABLES",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "perf_events_statements_digest_text_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Truncates digest text from perf_events_statements into this many characters",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "perf_events_statements_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Limits metrics from perf_events_statements",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "perf_events_statements_time_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Only include perf_events_statements whose last seen is less than this many seconds",
                          "Default": {
                            "Type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "username": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the user used to write metrics. Only affects PostgreSQL destinations. Defaults to 'metrics_writer'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "mirrormaker_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Mirrormaker 1 integration specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "mirrormaker_whitelist": {
              "Type": "String",
              "Optional": true,
              "Description": "Mirrormaker topic whitelist",
              "Default": {
                "Type": "string",
                "Value": ".*"
              }
            }
          }
        }
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project the integration belongs to"
      },
      "prometheus_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Prometheus coordinator specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "source_mysql": {
              "Type": "List",
              "Optional": true,
              "Description": "Configuration options for metrics where source service is MySQL",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "telegraf": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Configuration options for Telegraf MySQL input plugin",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "gather_event_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.EVENT_WAITS",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_file_events_stats": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "gather metrics from PERFORMANCE_SCHEMA.FILE_SUMMARY_BY_EVENT_NAME",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_index_io_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_INDEX_USAGE",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_info_schema_auto_inc": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather auto_increment columns and max values from information schema",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_innodb_metrics": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from INFORMATION_SCHEMA.INNODB_METRICS",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_perf_events_statements": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.EVENTS_STATEMENTS_SUMMARY_BY_DIGEST",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_process_list": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather thread state counts from INFORMATION_SCHEMA.PROCESSLIST",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_slave_status": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from SHOW SLAVE STATUS command output",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_table_io_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_TABLE",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_table_lock_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_LOCK_WAITS",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "gather_table_schema": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from INFORMATION_SCHEMA.TABLES",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "perf_events_statements_digest_text_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Truncates digest text from perf_events_statements into this many characters",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "perf_events_statements_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Limits metrics from perf_events_statements",
                          "Default": {
                            "Type": "string"
                          }
                        },
                        "perf_events_statements_time_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Only include perf_events_statements whose last seen is less than this many seconds",
                          "Default": {
                            "Type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "read_replica_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "PG Read replica specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "rsyslog_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "RSyslog specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "schema_registry_proxy_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Schema registry proxy specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "signalfx_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Signalfx specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "source_endpoint_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Source endpoint for the integration (if any)"
      },
      "source_service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Source service for the integration (if any)"
      }
    },
    "aiven_service_integration_endpoint": {
      "datadog_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Datadog specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "datadog_api_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Datadog API key",
              "Default": {
                "Type": "string"
              }
            },
            "datadog_tags": {
              "Type": "List",
              "Optional": true,
              "Description": "Custom tags provided by user",
              "MaxItems": 32,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "comment": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Optional tag explanation",
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "tag": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Tag value",
                    "Default": {
                      "Type": "string"
                    }
                  }
                }
              }
            },
            "disable_consumer_stats": {
              "Type": "String",
              "Optional": true,
              "Description": "Disable consumer group metrics",
              "Default": {
                "Type": "string"
              }
            },
            "max_partition_contexts": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum number of partition contexts to send",
              "Default": {
                "Type": "string"
              }
            },
            "site": {
              "Type": "String",
              "Optional": true,
              "Description": "Datadog intake site. Defaults to datadoghq.com",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "endpoint_config": {
        "Type": "Map",
        "Optional": true,
        "Description": "Integration endpoint specific backend configuration",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "endpoint_name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the service integration endpoint"
      },
      "endpoint_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Type of the service integration endpoint"
      },
      "external_aws_cloudwatch_logs_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "external AWS CloudWatch Logs specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_key": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS access key. Required permissions are logs:CreateLogGroup, logs:CreateLogStream, logs:PutLogEvents and logs:DescribeLogStreams",
              "Default": {
                "Type": "string"
              }
            },
            "log_group_name": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS CloudWatch log group name",
              "Default": {
                "Type": "string"
              }
            },
            "region": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS region",
              "Default": {
                "Type": "string"
              }
            },
            "secret_key": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS secret key",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "external_aws_cloudwatch_metrics_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "External AWS cloudwatch mertrics specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_key": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS access key. Required permissions are cloudwatch:PutMetricData",
              "Default": {
                "Type": "string"
              }
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS CloudWatch Metrics Namespace",
              "Default": {
                "Type": "string"
              }
            },
            "region": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS region",
              "Default": {
                "Type": "string"
              }
            },
            "secret_key": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS secret key",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "external_elasticsearch_logs_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "external elasticsearch specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ca": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM encoded CA certificate",
              "Default": {
                "Type": "string"
              }
            },
            "index_days_max": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum number of days of logs to keep",
              "Default": {
                "Type": "float64",
                "Value": "3"
              }
            },
            "index_prefix": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch index prefix",
              "Default": {
                "Type": "string",
                "Value": "logs"
              }
            },
            "timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch request timeout limit",
              "Default": {
                "Type": "float64",
                "Value": "10"
              }
            },
            "url": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch connection URL",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "external_google_cloud_logging_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "external Google Cloud Logginig specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "log_id": {
              "Type": "String",
              "Optional": true,
              "Description": "Google Cloud Logging log id",
              "Default": {
                "Type": "string"
              }
            },
            "project_id": {
              "Type": "String",
              "Optional": true,
              "Description": "GCP project id.",
              "Default": {
                "Type": "string"
              }
            },
            "service_account_credentials": {
              "Type": "String",
              "Optional": true,
              "Description": "Google Service Account Credentials",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "external_kafka_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "external Kafka specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bootstrap_servers": {
              "Type": "String",
              "Optional": true,
              "Description": "Bootstrap servers",
              "Default": {
                "Type": "string"
              }
            },
            "sasl_mechanism": {
              "Type": "String",
              "Optional": true,
              "Description": "The list of SASL mechanisms enabled in the Kafka server.",
              "Default": {
                "Type": "string"
              }
            },
            "sasl_plain_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for SASL PLAIN mechanism in the Kafka server.",
              "Default": {
                "Type": "string"
              }
            },
            "sasl_plain_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Username for SASL PLAIN mechanism in the Kafka server.",
              "Default": {
                "Type": "string"
              }
            },
            "security_protocol": {
              "Type": "String",
              "Optional": true,
              "Description": "Security protocol",
              "Default": {
                "Type": "string"
              }
            },
            "ssl_ca_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM-encoded CA certificate",
              "Default": {
                "Type": "string"
              }
            },
            "ssl_client_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM-encoded client certificate",
              "Default": {
                "Type": "string"
              }
            },
            "ssl_client_key": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM-encoded client key",
              "Default": {
                "Type": "string"
              }
            },
            "ssl_endpoint_identification_algorithm": {
              "Type": "String",
              "Optional": true,
              "Description": "The endpoint identification algorithm to validate server hostname using server certificate.",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "external_schema_registry_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "External schema registry specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "authentication": {
              "Type": "String",
              "Optional": true,
              "Description": "Authentication method",
              "Default": {
                "Type": "string"
              }
            },
            "basic_auth_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Basic authentication password",
              "Default": {
                "Type": "string"
              }
            },
            "basic_auth_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Basic authentication user name",
              "Default": {
                "Type": "string"
              }
            },
            "url": {
              "Type": "String",
              "Optional": true,
              "Description": "Schema Registry URL",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "jolokia_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Jolokia specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "basic_auth_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Jolokia basic authentication password",
              "Default": {
                "Type": "string"
              }
            },
            "basic_auth_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Jolokia basic authentication username",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project the service integration endpoint belongs to"
      },
      "prometheus_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Prometheus specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "basic_auth_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Prometheus basic authentication password",
              "Default": {
                "Type": "string"
              }
            },
            "basic_auth_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Prometheus basic authentication username",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "rsyslog_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "rsyslog specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ca": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM encoded CA certificate",
              "Default": {
                "Type": "string"
              }
            },
            "cert": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM encoded client certificate",
              "Default": {
                "Type": "string"
              }
            },
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "message format",
              "Default": {
                "Type": "string",
                "Value": "rfc5424"
              }
            },
            "key": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM encoded client key",
              "Default": {
                "Type": "string"
              }
            },
            "logline": {
              "Type": "String",
              "Optional": true,
              "Description": "custom syslog message format",
              "Default": {
                "Type": "string"
              }
            },
            "port": {
              "Type": "String",
              "Optional": true,
              "Description": "rsyslog server port",
              "Default": {
                "Type": "float64",
                "Value": "514"
              }
            },
            "sd": {
              "Type": "String",
              "Optional": true,
              "Description": "Structured data block for log message",
              "Default": {
                "Type": "string"
              }
            },
            "server": {
              "Type": "String",
              "Optional": true,
              "Description": "rsyslog server IP address or hostname",
              "Default": {
                "Type": "string"
              }
            },
            "tls": {
              "Type": "String",
              "Optional": true,
              "Description": "Require TLS",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            }
          }
        }
      },
      "signalfx_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Signalfx specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "enabled_metrics": {
              "Type": "List",
              "Optional": true,
              "Description": "list of metrics to send",
              "MaxItems": 256,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "signalfx_api_key": {
              "Type": "String",
              "Optional": true,
              "Description": "SignalFX API key",
              "Default": {
                "Type": "string"
              }
            },
            "signalfx_realm": {
              "Type": "String",
              "Optional": true,
              "Description": "SignalFX realm",
              "Default": {
                "Type": "string",
                "Value": "us0"
              }
            }
          }
        }
      }
    },
    "aiven_service_user": {
      "access_cert": {
        "Type": "String",
        "Optional": true,
        "Description": "Access certificate for the user if applicable for the service in question",
        "Computed": true
      },
      "access_key": {
        "Type": "String",
        "Optional": true,
        "Description": "Access certificate key for the user if applicable for the service in question",
        "Computed": true
      },
      "authentication": {
        "Type": "String",
        "Optional": true,
        "Description": "Authentication details"
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "Password of the user",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project to link the user to"
      },
      "redis_acl_categories": {
        "Type": "List",
        "Optional": true,
        "Description": "Command category rules",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "redis_acl_commands": {
        "Type": "List",
        "Optional": true,
        "Description": "Rules for individual commands",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "redis_acl_keys": {
        "Type": "List",
        "Optional": true,
        "Description": "Key access rules",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service to link the user to"
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "Type of the user account",
        "Computed": true
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the user account"
      }
    },
    "aiven_transit_gateway_vpc_attachment": {
      "peer_cloud_account": {
        "Type": "String",
        "Required": true,
        "Description": "AWS account ID or GCP project ID of the peered VPC"
      },
      "peer_region": {
        "Type": "String",
        "Optional": true,
        "Description": "AWS region of the peered VPC (if not in the same region as Aiven VPC)"
      },
      "peer_vpc": {
        "Type": "String",
        "Required": true,
        "Description": "Transit gateway ID"
      },
      "peering_connection_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud provider identifier for the peering connection if available",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "State of the peering connection",
        "Computed": true
      },
      "state_info": {
        "Type": "Map",
        "Optional": true,
        "Description": "State-specific help or error information",
        "Computed": true
      },
      "user_peer_network_cidrs": {
        "Type": "List",
        "Optional": true,
        "Description": "List of private IPv4 ranges to route through the peering connection",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "vpc_id": {
        "Type": "String",
        "Required": true,
        "Description": "The VPC the peering connection belongs to"
      }
    },
    "aiven_vpc_peering_connection": {
      "peer_azure_app_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet"
      },
      "peer_azure_tenant_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Azure tenant id in UUID4 form"
      },
      "peer_cloud_account": {
        "Type": "String",
        "Required": true,
        "Description": "AWS account ID or GCP project ID of the peered VPC"
      },
      "peer_region": {
        "Type": "String",
        "Optional": true,
        "Description": "AWS region of the peered VPC (if not in the same region as Aiven VPC)"
      },
      "peer_resource_group": {
        "Type": "String",
        "Optional": true,
        "Description": "Azure resource group name of the peered VPC"
      },
      "peer_vpc": {
        "Type": "String",
        "Required": true,
        "Description": "AWS VPC ID or GCP VPC network name of the peered VPC"
      },
      "peering_connection_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud provider identifier for the peering connection if available",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "State of the peering connection",
        "Computed": true
      },
      "state_info": {
        "Type": "Map",
        "Optional": true,
        "Description": "State-specific help or error information",
        "Computed": true
      },
      "vpc_id": {
        "Type": "String",
        "Required": true,
        "Description": "The VPC the peering connection belongs to"
      }
    }
  }
}