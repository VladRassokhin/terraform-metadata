{
  ".schema_version": "2",
  ".sdk_type": "terraform-plugin-sdk-v2",
  "name": "aiven",
  "type": "provider",
  "version": "v2.5.0",
  "provider": {
    "api_token": {
      "Type": "String",
      "Required": true,
      "Description": "Aiven Authentication Token",
      "DefaultFunc": "ENV(AIVEN_TOKEN)"
    }
  },
  "resources": {
    "aiven_account": {
      "account_id": {
        "Type": "String",
        "Description": "Account id",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "Time of creation",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Account name"
      },
      "owner_team_id": {
        "Type": "String",
        "Description": "Owner team id",
        "Computed": true
      },
      "tenant_id": {
        "Type": "String",
        "Description": "Tenant id",
        "Computed": true
      },
      "update_time": {
        "Type": "String",
        "Description": "Time of last update",
        "Computed": true
      }
    },
    "aiven_account_authentication": {
      "account_id": {
        "Type": "String",
        "Required": true,
        "Description": "The unique id of the account."
      },
      "authentication_id": {
        "Type": "String",
        "Description": "Account authentication id",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "Time of creation",
        "Computed": true
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Status of account authentication method. The default value is `false`.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the account authentication."
      },
      "saml_acs_url": {
        "Type": "String",
        "Description": "SAML Assertion Consumer Service URL",
        "Computed": true
      },
      "saml_certificate": {
        "Type": "String",
        "Optional": true,
        "Description": "SAML Certificate"
      },
      "saml_entity_id": {
        "Type": "String",
        "Optional": true,
        "Description": "SAML Entity id"
      },
      "saml_idp_url": {
        "Type": "String",
        "Optional": true,
        "Description": "SAML Idp URL"
      },
      "saml_metadata_url": {
        "Type": "String",
        "Description": "SAML Metadata URL",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The account authentication type. The possible values are `internal` and `saml`."
      },
      "update_time": {
        "Type": "String",
        "Description": "Time of last update",
        "Computed": true
      }
    },
    "aiven_account_team": {
      "account_id": {
        "Type": "String",
        "Required": true,
        "Description": "The unique account id"
      },
      "create_time": {
        "Type": "String",
        "Description": "Time of creation",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The account team name"
      },
      "team_id": {
        "Type": "String",
        "Description": "The auto-generated unique account team id",
        "Computed": true
      },
      "update_time": {
        "Type": "String",
        "Description": "Time of last update",
        "Computed": true
      }
    },
    "aiven_account_team_member": {
      "accepted": {
        "Type": "Bool",
        "Description": "is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an account team.",
        "Computed": true
      },
      "account_id": {
        "Type": "String",
        "Required": true,
        "Description": "The unique account id This property cannot be changed, doing so forces recreation of the resource."
      },
      "create_time": {
        "Type": "String",
        "Description": "Time of creation",
        "Computed": true
      },
      "invited_by_user_email": {
        "Type": "String",
        "Description": "The email address that invited this user.",
        "Computed": true
      },
      "team_id": {
        "Type": "String",
        "Required": true,
        "Description": "An account team id This property cannot be changed, doing so forces recreation of the resource."
      },
      "user_email": {
        "Type": "String",
        "Required": true,
        "Description": "Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_account_team_project": {
      "account_id": {
        "Type": "String",
        "Required": true,
        "Description": "The unique account id"
      },
      "project_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of an already existing project"
      },
      "team_id": {
        "Type": "String",
        "Required": true,
        "Description": "An account team id"
      },
      "team_type": {
        "Type": "String",
        "Optional": true,
        "Description": "The Account team project type The possible values are `admin`, `developer`, `operator` and `read_only`."
      }
    },
    "aiven_aws_privatelink": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "aws_service_id": {
        "Type": "String",
        "Description": "AWS service ID",
        "Computed": true
      },
      "aws_service_name": {
        "Type": "String",
        "Description": "AWS service name",
        "Computed": true
      },
      "principals": {
        "Type": "Set",
        "Required": true,
        "Description": "List of allowed principals",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_azure_privatelink": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "azure_service_alias": {
        "Type": "String",
        "Description": "Azure Privatelink service alias",
        "Computed": true
      },
      "azure_service_id": {
        "Type": "String",
        "Description": "Azure Privatelink service ID",
        "Computed": true
      },
      "message": {
        "Type": "String",
        "Description": "Printable result of the Azure Privatelink request",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "state": {
        "Type": "String",
        "Description": "Privatelink resource state",
        "Computed": true
      },
      "user_subscription_ids": {
        "Type": "Set",
        "Required": true,
        "Description": "A List of allowed Subscription IDs Maximum Length: `16`.",
        "MaxItems": 16,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "aiven_billing_group": {
      "account_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Account id"
      },
      "address_lines": {
        "Type": "Set",
        "Optional": true,
        "Description": "Address lines",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "billing_currency": {
        "Type": "String",
        "Optional": true,
        "Description": "Billing currency"
      },
      "billing_emails": {
        "Type": "Set",
        "Optional": true,
        "Description": "Billing contact emails",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "billing_extra_text": {
        "Type": "String",
        "Optional": true,
        "Description": "Billing extra text"
      },
      "card_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Credit card id"
      },
      "city": {
        "Type": "String",
        "Optional": true,
        "Description": "City"
      },
      "company": {
        "Type": "String",
        "Optional": true,
        "Description": "Company name"
      },
      "country_code": {
        "Type": "String",
        "Optional": true,
        "Description": "Country code"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Billing Group name"
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "State"
      },
      "vat_id": {
        "Type": "String",
        "Optional": true,
        "Description": "VAT id"
      },
      "zip_code": {
        "Type": "String",
        "Optional": true,
        "Description": "Zip Code"
      }
    },
    "aiven_cassandra": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cassandra": {
        "Type": "List",
        "Description": "Cassandra server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "cassandra_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Cassandra user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cassandra": {
              "Type": "List",
              "Optional": true,
              "Description": "cassandra configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "batch_size_fail_threshold_in_kb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "batch_size_fail_threshold_in_kb"
                  },
                  "batch_size_warn_threshold_in_kb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "batch_size_warn_threshold_in_kb"
                  }
                }
              }
            },
            "cassandra_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Cassandra major version"
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migrate_sstableloader": {
              "Type": "String",
              "Optional": true,
              "Description": "Migration mode for the sstableloader utility"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html)."
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Optional": true,
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing."
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing)."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data."
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done."
      }
    },
    "aiven_clickhouse": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "clickhouse": {
        "Type": "List",
        "Description": "Clickhouse server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "clickhouse_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Clickhouse user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            }
          }
        }
      },
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html)."
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Optional": true,
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing."
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing)."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data."
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done."
      }
    },
    "aiven_connection_pool": {
      "connection_uri": {
        "Type": "String",
        "Description": "The URI for connecting to the pool",
        "Computed": true
      },
      "database_name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the database the pool connects to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "pool_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "The mode the pool operates in The possible values are `session`, `transaction` and `statement`. The default value is `transaction`.",
        "Default": {
          "Type": "string",
          "Value": "transaction"
        }
      },
      "pool_name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the created pool. This property cannot be changed, doing so forces recreation of the resource."
      },
      "pool_size": {
        "Type": "Int",
        "Optional": true,
        "Description": "The number of connections the pool may create towards the backend server. This does not affect the number of incoming connections, which is always a much larger number. The default value is `10`.",
        "Default": {
          "Type": "int",
          "Value": "10"
        }
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "username": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the service user used to connect to the database. To set up proper dependencies please refer to this variable as a reference."
      }
    },
    "aiven_database": {
      "__timeouts__": [
        "delete"
      ],
      "database_name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the service database. This property cannot be changed, doing so forces recreation of the resource."
      },
      "lc_collate": {
        "Type": "String",
        "Optional": true,
        "Description": "Default string sort order (`LC_COLLATE`) of the database. The default value is `en_US.UTF-8`. This property cannot be changed, doing so forces recreation of the resource.",
        "Default": {
          "Type": "string",
          "Value": "en_US.UTF-8"
        }
      },
      "lc_ctype": {
        "Type": "String",
        "Optional": true,
        "Description": "Default character classification (`LC_CTYPE`) of the database. The default value is `en_US.UTF-8`. This property cannot be changed, doing so forces recreation of the resource.",
        "Default": {
          "Type": "string",
          "Value": "en_US.UTF-8"
        }
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is recommended to enable this for any production databases containing critical data. The default value is `false`.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      }
    },
    "aiven_elasticsearch": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html)."
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Optional": true,
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing."
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "elasticsearch": {
        "Type": "List",
        "Description": "Elasticsearch server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "kibana_uri": {
              "Type": "String",
              "Description": "URI for Kibana frontend",
              "Computed": true
            }
          }
        }
      },
      "elasticsearch_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Elasticsearch user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "disable_replication_factor_adjustment": {
              "Type": "String",
              "Optional": true,
              "Description": "Disable replication factor adjustment"
            },
            "elasticsearch": {
              "Type": "List",
              "Optional": true,
              "Description": "Elasticsearch settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action_auto_create_index_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "action.auto_create_index"
                  },
                  "action_destructive_requires_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Require explicit index names when deleting"
                  },
                  "cluster_max_shards_per_node": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "cluster.max_shards_per_node"
                  },
                  "http_max_content_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_content_length"
                  },
                  "http_max_header_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_header_size"
                  },
                  "http_max_initial_line_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_initial_line_length"
                  },
                  "indices_fielddata_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.fielddata.cache.size"
                  },
                  "indices_memory_index_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.memory.index_buffer_size"
                  },
                  "indices_queries_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.queries.cache.size"
                  },
                  "indices_query_bool_max_clause_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.query.bool.max_clause_count"
                  },
                  "override_main_response_version": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "compatibility.override_main_response_version"
                  },
                  "reindex_remote_whitelist": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "reindex_remote_whitelist",
                    "MaxItems": 32,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "search_max_buckets": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search.max_buckets"
                  },
                  "thread_pool_analyze_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool queue size"
                  },
                  "thread_pool_analyze_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool size"
                  },
                  "thread_pool_force_merge_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "force_merge thread pool size"
                  },
                  "thread_pool_get_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool queue size"
                  },
                  "thread_pool_get_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool size"
                  },
                  "thread_pool_index_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index thread pool queue size"
                  },
                  "thread_pool_index_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index thread pool size"
                  },
                  "thread_pool_search_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool queue size"
                  },
                  "thread_pool_search_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool size"
                  },
                  "thread_pool_search_throttled_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool queue size"
                  },
                  "thread_pool_search_throttled_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool size"
                  },
                  "thread_pool_write_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool queue size"
                  },
                  "thread_pool_write_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool size"
                  }
                }
              }
            },
            "elasticsearch_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch major version"
            },
            "index_patterns": {
              "Type": "List",
              "Optional": true,
              "Description": "Index patterns",
              "MaxItems": 512,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_index_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Maximum number of indexes to keep"
                  },
                  "pattern": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "fnmatch pattern"
                  },
                  "sorting_algorithm": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Deletion sorting algorithm"
                  }
                }
              }
            },
            "index_template": {
              "Type": "List",
              "Optional": true,
              "Description": "Template settings for all new indexes",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mapping_nested_objects_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.mapping.nested_objects.limit"
                  },
                  "number_of_replicas": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_replicas"
                  },
                  "number_of_shards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_shards"
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "keep_index_refresh_interval": {
              "Type": "String",
              "Optional": true,
              "Description": "Don't reset index.refresh_interval to the default value"
            },
            "kibana": {
              "Type": "List",
              "Optional": true,
              "Description": "Kibana settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch_request_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Timeout in milliseconds for requests made by Kibana towards Elasticsearch"
                  },
                  "enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable or disable Kibana"
                  },
                  "max_old_space_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_old_space_size"
                  }
                }
              }
            },
            "max_index_count": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum index count"
            },
            "opensearch_version": {
              "Type": "String",
              "Optional": true,
              "Description": "OpenSearch major version"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to elasticsearch with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kibana with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable elasticsearch"
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kibana"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to elasticsearch from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kibana from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service"
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing)."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data."
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done."
      }
    },
    "aiven_elasticsearch_acl": {
      "acl": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of Elasticsearch ACLs",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "rule": {
              "Type": "Set",
              "Required": true,
              "Description": "Elasticsearch rules.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "index": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Elasticsearch index pattern. Maximum Length: `249`."
                  },
                  "permission": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Elasticsearch permission. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`."
                  }
                }
              }
            },
            "username": {
              "Type": "String",
              "Required": true,
              "Description": "Username for the ACL entry. Maximum Length: `40`."
            }
          }
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable Elasticsearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "extended_acl": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is `true`.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_elasticsearch_acl_config": {
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable Elasticsearch ACLs. When disabled authenticated service users have unrestricted access The default value is `true`.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "extended_acl": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to The default value is `10`.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_elasticsearch_acl_rule": {
      "index": {
        "Type": "String",
        "Required": true,
        "Description": "The index pattern for the ACL entry. Maximum Length: `249`. This property cannot be changed, doing so forces recreation of the resource."
      },
      "permission": {
        "Type": "String",
        "Required": true,
        "Description": "The permission for the ACL entry. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "The username for the ACL entry. Maximum Length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_flink": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html)."
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Optional": true,
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing."
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "flink": {
        "Type": "List",
        "Optional": true,
        "Description": "Flink server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "host_ports": {
              "Type": "List",
              "Optional": true,
              "Description": "Host and Port of a Flink server",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "flink_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Flink user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "execution_checkpointing_interval_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink execution.checkpointing.interval in milliseconds"
            },
            "execution_checkpointing_timeout_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink execution.checkpointing.timeout in milliseconds"
            },
            "flink_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink major version"
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "number_of_task_slots": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink taskmanager.numberOfTaskSlots"
            },
            "parallelism_default": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink parallelism.default"
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "flink": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable flink"
                  }
                }
              }
            },
            "restart_strategy": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink restart-strategy"
            },
            "restart_strategy_delay_sec": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink restart-strategy.failure-rate.delay in seconds"
            },
            "restart_strategy_failure_rate_interval_min": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink restart-strategy.failure-rate.failure-rate-interval in minutes"
            },
            "restart_strategy_max_failures": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink restart-strategy.failure-rate.max-failures-per-interval"
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing)."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data."
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done."
      }
    },
    "aiven_flink_job": {
      "__timeouts__": [
        "read",
        "delete"
      ],
      "job_id": {
        "Type": "String",
        "Description": "The Job ID of the flink job in the flink service.",
        "Computed": true
      },
      "job_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this job is submitted to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "state": {
        "Type": "String",
        "Description": "The current state of the flink job in the flink service",
        "Computed": true
      },
      "statement": {
        "Type": "String",
        "Required": true,
        "Description": "The SQL statement to define the job. This property cannot be changed, doing so forces recreation of the resource."
      },
      "table_ids": {
        "Type": "List",
        "Required": true,
        "Description": "A list of table ids that are required in the job runtime. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "aiven_flink_table": {
      "integration_id": {
        "Type": "String",
        "Required": true,
        "Description": "The id of the service integration that is used with this table. It must have the service integration type `flink`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "jdbc_table": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the jdbc table that is to be connected to this table. Valid if the service integration id refers to a mysql or postgres service. This property cannot be changed, doing so forces recreation of the resource.",
        "ConflictsWith": [
          "kafka_connector_type",
          "kafka_topic",
          "kafka_key_format",
          "kafka_value_format",
          "kafka_key_fields"
        ]
      },
      "kafka_connector_type": {
        "Type": "String",
        "Optional": true,
        "Description": "When used as a source, upsert Kafka connectors update values that use an existing key and delete values that are null. For sinks, the connector correspondingly writes update or delete messages in a compacted topic. If no matching key is found, the values are added as new entries. For more information, see the Apache Flink documentation The possible values are `kafka` and `upsert-kafka`. This property cannot be changed, doing so forces recreation of the resource.",
        "ConflictsWith": [
          "jdbc_table"
        ]
      },
      "kafka_key_fields": {
        "Type": "List",
        "Optional": true,
        "Description": "Defines an explicit list of physical columns from the table schema that configure the data type for the key format. This property cannot be changed, doing so forces recreation of the resource.",
        "ConflictsWith": [
          "jdbc_table"
        ],
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "kafka_key_format": {
        "Type": "String",
        "Optional": true,
        "Description": "Kafka Key Format The possible values are `avro`, `avro-confluent`, `debezium-avro-confluent`, `debezium-json` and `json`. This property cannot be changed, doing so forces recreation of the resource.",
        "ConflictsWith": [
          "jdbc_table"
        ]
      },
      "kafka_startup_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "Startup mode The possible values are `earliest-offset`, `largest-offset`, `group-offsets` and `timestamp`. This property cannot be changed, doing so forces recreation of the resource.",
        "ConflictsWith": [
          "jdbc_table"
        ]
      },
      "kafka_topic": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the kafka topic that is to be connected to this table. Valid if the service integration id refers to a kafka service. This property cannot be changed, doing so forces recreation of the resource.",
        "ConflictsWith": [
          "jdbc_table"
        ]
      },
      "kafka_value_format": {
        "Type": "String",
        "Optional": true,
        "Description": "Kafka Value Format The possible values are `avro`, `avro-confluent`, `debezium-avro-confluent`, `debezium-json` and `json`. This property cannot be changed, doing so forces recreation of the resource.",
        "ConflictsWith": [
          "jdbc_table"
        ]
      },
      "like_options": {
        "Type": "String",
        "Optional": true,
        "Description": "[LIKE](https://nightlies.apache.org/flink/flink-docs-master/docs/dev/table/sql/create/#like) statement for table creation. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "schema_sql": {
        "Type": "String",
        "Required": true,
        "Description": "The SQL statement to create the table. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "table_id": {
        "Type": "String",
        "Description": "The Table ID of the flink table in the flink service.",
        "Computed": true
      },
      "table_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the table. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_grafana": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html)."
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Optional": true,
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing."
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "grafana": {
        "Type": "List",
        "Description": "Grafana server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "grafana_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Grafana user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "alerting_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable or disable Grafana alerting functionality"
            },
            "alerting_error_or_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Default error or timeout setting for new alerting rules"
            },
            "alerting_max_annotations_to_keep": {
              "Type": "String",
              "Optional": true,
              "Description": "Max number of alert annotations that Grafana stores. 0 (default) keeps all alert annotations."
            },
            "alerting_nodata_or_nullvalues": {
              "Type": "String",
              "Optional": true,
              "Description": "Default value for 'no data or null values' for new alerting rules"
            },
            "allow_embedding": {
              "Type": "String",
              "Optional": true,
              "Description": "Allow embedding Grafana dashboards with iframe/frame/object/embed tags. Disabled by default to limit impact of clickjacking"
            },
            "auth_azuread": {
              "Type": "List",
              "Optional": true,
              "Description": "Azure AD OAuth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in"
                  },
                  "allowed_domains": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Allowed domains",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "allowed_groups": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given groups",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "auth_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Authorization URL"
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider"
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider"
                  },
                  "token_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Token URL"
                  }
                }
              }
            },
            "auth_basic_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable or disable basic authentication form, used by Grafana built-in login"
            },
            "auth_generic_oauth": {
              "Type": "List",
              "Optional": true,
              "Description": "Generic OAuth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in"
                  },
                  "allowed_domains": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Allowed domains",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "allowed_organizations": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require user to be member of one of the listed organizations",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "api_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "API URL"
                  },
                  "auth_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Authorization URL"
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider"
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider"
                  },
                  "name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Name of the OAuth integration"
                  },
                  "scopes": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "OAuth scopes",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "token_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Token URL"
                  }
                }
              }
            },
            "auth_github": {
              "Type": "List",
              "Optional": true,
              "Description": "Github Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in"
                  },
                  "allowed_organizations": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given organizations",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider"
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider"
                  },
                  "team_ids": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given team IDs",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "auth_gitlab": {
              "Type": "List",
              "Optional": true,
              "Description": "GitLab Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in"
                  },
                  "allowed_groups": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given groups",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "api_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "API URL. This only needs to be set when using self hosted GitLab"
                  },
                  "auth_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Authorization URL. This only needs to be set when using self hosted GitLab"
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider"
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider"
                  },
                  "token_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Token URL. This only needs to be set when using self hosted GitLab"
                  }
                }
              }
            },
            "auth_google": {
              "Type": "List",
              "Optional": true,
              "Description": "Google Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in"
                  },
                  "allowed_domains": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Domains allowed to sign-in to this Grafana",
                    "MaxItems": 64,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider"
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider"
                  }
                }
              }
            },
            "cookie_samesite": {
              "Type": "String",
              "Optional": true,
              "Description": "Cookie SameSite attribute: 'strict' prevents sending cookie for cross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value."
            },
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "dashboards_min_refresh_interval": {
              "Type": "String",
              "Optional": true,
              "Description": "Minimum refresh interval"
            },
            "dashboards_versions_to_keep": {
              "Type": "String",
              "Optional": true,
              "Description": "Dashboard versions to keep per dashboard"
            },
            "dataproxy_send_user_header": {
              "Type": "String",
              "Optional": true,
              "Description": "Send 'X-Grafana-User' header to data source"
            },
            "dataproxy_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Timeout for data proxy requests in seconds"
            },
            "date_formats": {
              "Type": "List",
              "Optional": true,
              "Description": "Grafana date format specifications",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "default_timezone": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Default time zone for user preferences. Value 'browser' uses browser local time zone."
                  },
                  "full_date": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string for cases where full date is shown"
                  },
                  "interval_day": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring day accuracy is shown"
                  },
                  "interval_hour": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring hour accuracy is shown"
                  },
                  "interval_minute": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring minute accuracy is shown"
                  },
                  "interval_month": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring month accuracy is shown"
                  },
                  "interval_second": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring second accuracy is shown"
                  },
                  "interval_year": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring year accuracy is shown"
                  }
                }
              }
            },
            "disable_gravatar": {
              "Type": "String",
              "Optional": true,
              "Description": "Set to true to disable gravatar. Defaults to false (gravatar is enabled)"
            },
            "editors_can_admin": {
              "Type": "String",
              "Optional": true,
              "Description": "Editors can manage folders, teams and dashboards created by them"
            },
            "external_image_storage": {
              "Type": "List",
              "Optional": true,
              "Description": "External image store settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "access_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "S3 access key. Requires permissions to the S3 bucket for the s3:PutObject and s3:PutObjectAcl actions"
                  },
                  "bucket_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Bucket URL for S3"
                  },
                  "provider": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Provider type"
                  },
                  "secret_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "S3 secret key"
                  }
                }
              }
            },
            "google_analytics_ua_id": {
              "Type": "String",
              "Optional": true,
              "Description": "Google Analytics ID"
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "metrics_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Grafana /metrics endpoint"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to grafana with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable grafana"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to grafana from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service"
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "smtp_server": {
              "Type": "List",
              "Optional": true,
              "Description": "SMTP server settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "from_address": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Address used for sending emails"
                  },
                  "from_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Name used in outgoing emails, defaults to Grafana"
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Server hostname or IP"
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for SMTP authentication"
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "SMTP server port"
                  },
                  "skip_verify": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Skip verifying server certificate. Defaults to false"
                  },
                  "starttls_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS. Default is OpportunisticStartTLS."
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Username for SMTP authentication"
                  }
                }
              }
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            },
            "user_auto_assign_org": {
              "Type": "String",
              "Optional": true,
              "Description": "Auto-assign new users on signup to main organization. Defaults to false"
            },
            "user_auto_assign_org_role": {
              "Type": "String",
              "Optional": true,
              "Description": "Set role for new signups. Defaults to Viewer"
            },
            "viewers_can_edit": {
              "Type": "String",
              "Optional": true,
              "Description": "Users with view-only permission can edit but not save dashboards"
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing)."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data."
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done."
      }
    },
    "aiven_influxdb": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html)."
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Optional": true,
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing."
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "influxdb": {
        "Type": "List",
        "Description": "InfluxDB server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "database_name": {
              "Type": "String",
              "Description": "Name of the default InfluxDB database",
              "Computed": true
            }
          }
        }
      },
      "influxdb_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Influxdb user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "influxdb": {
              "Type": "List",
              "Optional": true,
              "Description": "influxdb.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "log_queries_after": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum duration in seconds before a query is logged as a slow query. Setting this to 0 (the default) will never log slow queries."
                  },
                  "max_connection_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Maximum number of connections to InfluxDB. Setting this to 0 (default) means no limit. If using max_connection_limit, it is recommended to set the value to be large enough in order to not block clients unnecessarily."
                  },
                  "max_row_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of rows returned in a non-chunked query. Setting this to 0 (the default) allows an unlimited number to be returned."
                  },
                  "max_select_buckets": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of 'GROUP BY time()' buckets that can be processed in a query. Setting this to 0 (the default) allows an unlimited number to be processed."
                  },
                  "max_select_point": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of points that can be processed in a SELECT statement. Setting this to 0 (the default) allows an unlimited number to be processed."
                  },
                  "query_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum duration in seconds before a query is killed. Setting this to 0 (the default) will never kill slow queries."
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to influxdb with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable influxdb"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to influxdb from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service"
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing)."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data."
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done."
      }
    },
    "aiven_kafka": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html)."
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "default_acl": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Create default wildcard Kafka ACL",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "disk_space": {
        "Type": "String",
        "Optional": true,
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing."
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "kafka": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka client certificate",
              "Computed": true
            },
            "access_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka client certificate key",
              "Computed": true
            },
            "connect_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka Connect URI, if any",
              "Computed": true
            },
            "rest_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka REST URI, if any",
              "Computed": true
            },
            "schema_registry_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Schema Registry URI, if any",
              "Computed": true
            }
          }
        }
      },
      "kafka_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka broker configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "auto_create_topics_enable": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "auto.create.topics.enable"
                  },
                  "compression_type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "compression.type"
                  },
                  "connections_max_idle_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "connections.max.idle.ms"
                  },
                  "default_replication_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "default.replication.factor"
                  },
                  "group_initial_rebalance_delay_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.initial.rebalance.delay.ms"
                  },
                  "group_max_session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.max.session.timeout.ms"
                  },
                  "group_min_session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.min.session.timeout.ms"
                  },
                  "log_cleaner_delete_retention_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.delete.retention.ms"
                  },
                  "log_cleaner_max_compaction_lag_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.max.compaction.lag.ms"
                  },
                  "log_cleaner_min_cleanable_ratio": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.min.cleanable.ratio"
                  },
                  "log_cleaner_min_compaction_lag_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.min.compaction.lag.ms"
                  },
                  "log_cleanup_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleanup.policy"
                  },
                  "log_flush_interval_messages": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.flush.interval.messages"
                  },
                  "log_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.flush.interval.ms"
                  },
                  "log_index_interval_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.index.interval.bytes"
                  },
                  "log_index_size_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.index.size.max.bytes"
                  },
                  "log_message_downconversion_enable": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.downconversion.enable"
                  },
                  "log_message_timestamp_difference_max_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.timestamp.difference.max.ms"
                  },
                  "log_message_timestamp_type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.timestamp.type"
                  },
                  "log_preallocate": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.preallocate"
                  },
                  "log_retention_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.bytes"
                  },
                  "log_retention_hours": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.hours"
                  },
                  "log_retention_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.ms"
                  },
                  "log_roll_jitter_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.roll.jitter.ms"
                  },
                  "log_roll_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.roll.ms"
                  },
                  "log_segment_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.segment.bytes"
                  },
                  "log_segment_delete_delay_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.segment.delete.delay.ms"
                  },
                  "max_connections_per_ip": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max.connections.per.ip"
                  },
                  "max_incremental_fetch_session_cache_slots": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max.incremental.fetch.session.cache.slots"
                  },
                  "message_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "message.max.bytes"
                  },
                  "min_insync_replicas": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "min.insync.replicas"
                  },
                  "num_partitions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "num.partitions"
                  },
                  "offsets_retention_minutes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "offsets.retention.minutes"
                  },
                  "producer_purgatory_purge_interval_requests": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.purgatory.purge.interval.requests"
                  },
                  "replica_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "replica.fetch.max.bytes"
                  },
                  "replica_fetch_response_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "replica.fetch.response.max.bytes"
                  },
                  "socket_request_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "socket.request.max.bytes"
                  },
                  "transaction_remove_expired_transaction_cleanup_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "transaction.remove.expired.transaction.cleanup.interval.ms"
                  },
                  "transaction_state_log_segment_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "transaction.state.log.segment.bytes"
                  }
                }
              }
            },
            "kafka_authentication_methods": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka authentication methods",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "certificate": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable certificate/SSL authentication"
                  },
                  "sasl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable SASL authentication"
                  }
                }
              }
            },
            "kafka_connect": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Kafka Connect service"
            },
            "kafka_connect_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka Connect configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connector_client_config_override_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client config override policy"
                  },
                  "consumer_auto_offset_reset": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer auto offset reset"
                  },
                  "consumer_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data the server should return for a fetch request"
                  },
                  "consumer_isolation_level": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer isolation level"
                  },
                  "consumer_max_partition_fetch_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data per-partition the server will return."
                  },
                  "consumer_max_poll_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum delay between polls when using consumer group management"
                  },
                  "consumer_max_poll_records": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of records returned by a single poll"
                  },
                  "offset_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The interval at which to try committing offsets for tasks"
                  },
                  "offset_flush_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Offset flush timeout"
                  },
                  "producer_max_request_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum size of a request in bytes"
                  },
                  "session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The timeout used to detect failures when using Kafka’s group management facilities"
                  }
                }
              }
            },
            "kafka_rest": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Kafka-REST service"
            },
            "kafka_rest_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka REST configuration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "consumer_enable_auto_commit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.enable.auto.commit"
                  },
                  "consumer_request_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.request.max.bytes"
                  },
                  "consumer_request_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.request.timeout.ms"
                  },
                  "producer_acks": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.acks"
                  },
                  "producer_linger_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.linger.ms"
                  },
                  "simpleconsumer_pool_size_max": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "simpleconsumer.pool.size.max"
                  }
                }
              }
            },
            "kafka_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka major version"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka"
                  },
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_connect"
                  },
                  "kafka_rest": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_rest"
                  },
                  "schema_registry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable schema_registry"
                  }
                }
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "kafka_rest": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_rest from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "schema_registry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to schema_registry from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "schema_registry": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Schema-Registry service"
            },
            "schema_registry_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Schema Registry configuration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "leader_eligibility": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "leader_eligibility"
                  },
                  "topic_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "topic_name"
                  }
                }
              }
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "karapace": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Switch the service to use Karapace for schema registry and REST proxy"
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing)."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data."
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done."
      }
    },
    "aiven_kafka_acl": {
      "permission": {
        "Type": "String",
        "Required": true,
        "Description": "Kafka permission to grant. The possible values are `admin`, `read`, `readwrite` and `write`. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "topic": {
        "Type": "String",
        "Required": true,
        "Description": "Topic name pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource."
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "Username pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_kafka_connect": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html)."
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Optional": true,
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing."
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "kafka_connect": {
        "Type": "List",
        "Description": "Kafka Connect server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "kafka_connect_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka_connect user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka_connect": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka Connect configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connector_client_config_override_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client config override policy"
                  },
                  "consumer_auto_offset_reset": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer auto offset reset"
                  },
                  "consumer_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data the server should return for a fetch request"
                  },
                  "consumer_isolation_level": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer isolation level"
                  },
                  "consumer_max_partition_fetch_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data per-partition the server will return."
                  },
                  "consumer_max_poll_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum delay between polls when using consumer group management"
                  },
                  "consumer_max_poll_records": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of records returned by a single poll"
                  },
                  "offset_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The interval at which to try committing offsets for tasks"
                  },
                  "offset_flush_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Offset flush timeout"
                  },
                  "producer_max_request_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum size of a request in bytes"
                  },
                  "session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The timeout used to detect failures when using Kafka’s group management facilities"
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_connect"
                  }
                }
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing)."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data."
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done."
      }
    },
    "aiven_kafka_connector": {
      "__timeouts__": [
        "read"
      ],
      "config": {
        "Type": "Map",
        "Required": true,
        "Description": "The Kafka Connector configuration parameters.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "connector_name": {
        "Type": "String",
        "Required": true,
        "Description": "The kafka connector name. This property cannot be changed, doing so forces recreation of the resource."
      },
      "plugin_author": {
        "Type": "String",
        "Description": "The Kafka connector author.",
        "Computed": true
      },
      "plugin_class": {
        "Type": "String",
        "Description": "The Kafka connector Java class.",
        "Computed": true
      },
      "plugin_doc_url": {
        "Type": "String",
        "Description": "The Kafka connector documentation URL.",
        "Computed": true
      },
      "plugin_title": {
        "Type": "String",
        "Description": "The Kafka connector title.",
        "Computed": true
      },
      "plugin_type": {
        "Type": "String",
        "Description": "The Kafka connector type.",
        "Computed": true
      },
      "plugin_version": {
        "Type": "String",
        "Description": "The version of the kafka connector.",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "task": {
        "Type": "Set",
        "Description": "List of tasks of a connector.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "connector": {
              "Type": "String",
              "Description": "The name of the related connector.",
              "Computed": true
            },
            "task": {
              "Type": "Int",
              "Description": "The task id of the task.",
              "Computed": true
            }
          }
        }
      }
    },
    "aiven_kafka_mirrormaker": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html)."
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Optional": true,
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing."
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "kafka_mirrormaker": {
        "Type": "List",
        "Description": "Kafka MirrorMaker 2 server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "kafka_mirrormaker_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka_mirrormaker user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka_mirrormaker": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka MirrorMaker configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "emit_checkpoints_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Emit consumer group offset checkpoints"
                  },
                  "emit_checkpoints_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of consumer group offset checkpoints"
                  },
                  "refresh_groups_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Refresh consumer groups"
                  },
                  "refresh_groups_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of group refresh"
                  },
                  "refresh_topics_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Refresh topics and partitions"
                  },
                  "refresh_topics_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of topic and partitions refresh"
                  },
                  "sync_group_offsets_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Sync consumer group offsets"
                  },
                  "sync_group_offsets_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of consumer group offset sync"
                  },
                  "sync_topic_configs_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Sync remote topics"
                  },
                  "tasks_max_per_cpu": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Maximum number of MirrorMaker tasks (of each type) per service CPU"
                  }
                }
              }
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing)."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data."
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done."
      }
    },
    "aiven_kafka_schema": {
      "compatibility_level": {
        "Type": "String",
        "Optional": true,
        "Description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "schema": {
        "Type": "String",
        "Required": true,
        "Description": "Kafka Schema configuration should be a valid Avro Schema JSON format."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "subject_name": {
        "Type": "String",
        "Required": true,
        "Description": "The Kafka Schema Subject name. This property cannot be changed, doing so forces recreation of the resource."
      },
      "version": {
        "Type": "Int",
        "Description": "Kafka Schema configuration version.",
        "Computed": true
      }
    },
    "aiven_kafka_schema_configuration": {
      "compatibility_level": {
        "Type": "String",
        "Optional": true,
        "Description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_kafka_topic": {
      "__timeouts__": [
        "create",
        "read",
        "delete"
      ],
      "cleanup_policy": {
        "Type": "String",
        "Optional": true,
        "Description": "**DEPRECATED use config.cleanup_policy instead** Topic cleanup policy. The possible values are `delete` and `compact`.",
        "Deprecated": "use config.cleanup_policy instead"
      },
      "config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka topic configuration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cleanup_policy": {
              "Type": "String",
              "Optional": true,
              "Description": "cleanup.policy value"
            },
            "compression_type": {
              "Type": "String",
              "Optional": true,
              "Description": "compression.type value"
            },
            "delete_retention_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "delete.retention.ms value"
            },
            "file_delete_delay_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "file.delete.delay.ms value"
            },
            "flush_messages": {
              "Type": "String",
              "Optional": true,
              "Description": "flush.messages value"
            },
            "flush_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "flush.ms value"
            },
            "index_interval_bytes": {
              "Type": "String",
              "Optional": true,
              "Description": "index.interval.bytes value"
            },
            "max_compaction_lag_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "max.compaction.lag.ms value"
            },
            "max_message_bytes": {
              "Type": "String",
              "Optional": true,
              "Description": "max.message.bytes value"
            },
            "message_downconversion_enable": {
              "Type": "String",
              "Optional": true,
              "Description": "message.downconversion.enable value"
            },
            "message_format_version": {
              "Type": "String",
              "Optional": true,
              "Description": "message.format.version value"
            },
            "message_timestamp_difference_max_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "message.timestamp.difference.max.ms value"
            },
            "message_timestamp_type": {
              "Type": "String",
              "Optional": true,
              "Description": "message.timestamp.type value"
            },
            "min_cleanable_dirty_ratio": {
              "Type": "String",
              "Optional": true,
              "Description": "min.cleanable.dirty.ratio value"
            },
            "min_compaction_lag_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "min.compaction.lag.ms value"
            },
            "min_insync_replicas": {
              "Type": "String",
              "Optional": true,
              "Description": "min.insync.replicas value"
            },
            "preallocate": {
              "Type": "String",
              "Optional": true,
              "Description": "preallocate value"
            },
            "retention_bytes": {
              "Type": "String",
              "Optional": true,
              "Description": "retention.bytes value"
            },
            "retention_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "retention.ms value"
            },
            "segment_bytes": {
              "Type": "String",
              "Optional": true,
              "Description": "segment.bytes value"
            },
            "segment_index_bytes": {
              "Type": "String",
              "Optional": true,
              "Description": "segment.index.bytes value"
            },
            "segment_jitter_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "segment.jitter.ms value"
            },
            "segment_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "segment.ms value"
            },
            "unclean_leader_election_enable": {
              "Type": "String",
              "Optional": true,
              "Description": "unclean.leader.election.enable value"
            }
          }
        }
      },
      "minimum_in_sync_replicas": {
        "Type": "Int",
        "Optional": true,
        "Description": "**DEPRECATED use config.min_insync_replicas instead** Minimum required nodes in-sync replicas (ISR) to produce to a partition.",
        "Deprecated": "use config.min_insync_replicas instead"
      },
      "partitions": {
        "Type": "Int",
        "Required": true,
        "Description": "The number of partitions to create in the topic."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "replication": {
        "Type": "Int",
        "Required": true,
        "Description": "The replication factor for the topic."
      },
      "retention_bytes": {
        "Type": "Int",
        "Optional": true,
        "Description": "**DEPRECATED use config.retention_bytes instead** Retention bytes.",
        "Deprecated": "use config.retention_bytes instead"
      },
      "retention_hours": {
        "Type": "Int",
        "Optional": true,
        "Description": "**DEPRECATED use config.retention_ms instead** Retention period (hours).",
        "Deprecated": "use config.retention_ms instead"
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "tag": {
        "Type": "Set",
        "Optional": true,
        "Description": "Kafka Topic tag.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "Topic tag key. Maximum Length: `64`."
            },
            "value": {
              "Type": "String",
              "Optional": true,
              "Description": "Topic tag value. Maximum Length: `256`."
            }
          }
        }
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "It is a Terraform client-side deletion protection, which prevents a Kafka topic from being deleted. It is recommended to enable this for any production Kafka topic containing critical data.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "topic_name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the topic. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_m3aggregator": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html)."
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Optional": true,
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing."
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "m3aggregator": {
        "Type": "List",
        "Description": "M3 aggregator specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "m3aggregator_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "M3aggregator user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "m3_version": {
              "Type": "String",
              "Optional": true,
              "Description": "M3 major version (deprecated, use m3aggregator_version)"
            },
            "m3aggregator_version": {
              "Type": "String",
              "Optional": true,
              "Description": "M3 major version (the minimum compatible version)"
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing)."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data."
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done."
      }
    },
    "aiven_m3db": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html)."
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Optional": true,
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing."
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "m3db": {
        "Type": "List",
        "Description": "M3 specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "m3db_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "M3db user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "limits": {
              "Type": "List",
              "Optional": true,
              "Description": "M3 limits",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "query_require_exhaustive": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Require exhaustive result"
                  },
                  "query_series": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of series fetched in single query"
                  }
                }
              }
            },
            "m3_version": {
              "Type": "String",
              "Optional": true,
              "Description": "M3 major version (deprecated, use m3db_version)"
            },
            "m3coordinator_enable_graphite_carbon_ingest": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Graphite ingestion using Carbon plaintext protocol"
            },
            "m3db_version": {
              "Type": "String",
              "Optional": true,
              "Description": "M3 major version (the minimum compatible version)"
            },
            "namespaces": {
              "Type": "List",
              "Optional": true,
              "Description": "List of M3 namespaces",
              "MaxItems": 2147483647,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The name of the namespace"
                  },
                  "options": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Namespace options",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "retention_options": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Retention options",
                          "MaxItems": 1,
                          "IsBlock": true,
                          "ConfigImplicitMode": "Block",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "block_data_expiry_duration": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Controls how long we wait before expiring stale data"
                              },
                              "blocksize_duration": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Controls how long to keep a block in memory before flushing to a fileset on disk"
                              },
                              "buffer_future_duration": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Controls how far into the future writes to the namespace will be accepted"
                              },
                              "buffer_past_duration": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Controls how far into the past writes to the namespace will be accepted"
                              },
                              "retention_period_duration": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Controls the duration of time that M3DB will retain data for the namespace"
                              }
                            }
                          }
                        },
                        "snapshot_enabled": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Controls whether M3DB will create snapshot files for this namespace"
                        },
                        "writes_to_commitlog": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Controls whether M3DB will include writes to this namespace in the commitlog"
                        }
                      }
                    }
                  },
                  "resolution": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The resolution for an aggregated namespace"
                  },
                  "type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The type of aggregation (aggregated/unaggregated)"
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "m3coordinator": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to m3coordinator with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "m3coordinator": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to m3coordinator from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "rules": {
              "Type": "List",
              "Optional": true,
              "Description": "M3 rules",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mapping": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of M3 mapping rules",
                    "MaxItems": 10,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "aggregations": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of aggregations to be applied",
                          "MaxItems": 10,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "drop": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Drop the matching metric"
                        },
                        "filter": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The metrics to be used with this particular rule"
                        },
                        "name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The (optional) name of the rule"
                        },
                        "namespaces": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Namespace filters for this particular rule",
                          "MaxItems": 10,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "tags": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of tags to be appended to matching metrics",
                          "MaxItems": 10,
                          "IsBlock": true,
                          "ConfigImplicitMode": "Block",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "name": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Name of the tag"
                              },
                              "value": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Value of the tag"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing)."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data."
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done."
      }
    },
    "aiven_mirrormaker_replication_flow": {
      "emit_heartbeats_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Emit heartbeats enabled. The default value is `false`.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "enable": {
        "Type": "Bool",
        "Required": true,
        "Description": "Enable of disable replication flows for a service."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "replication_policy_class": {
        "Type": "String",
        "Optional": true,
        "Description": "Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.",
        "Default": {
          "Type": "string",
          "Value": "org.apache.kafka.connect.mirror.DefaultReplicationPolicy"
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "source_cluster": {
        "Type": "String",
        "Required": true,
        "Description": "Source cluster alias. Maximum Length: `128`."
      },
      "sync_group_offsets_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Sync consumer group offsets. The default value is `false`.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "sync_group_offsets_interval_seconds": {
        "Type": "Int",
        "Optional": true,
        "Description": "Frequency of consumer group offset sync. The default value is `1`.",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      },
      "target_cluster": {
        "Type": "String",
        "Required": true,
        "Description": "Target cluster alias. Maximum Length: `128`."
      },
      "topics": {
        "Type": "List",
        "Optional": true,
        "Description": "List of topics and/or regular expressions to replicate",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "topics_blacklist": {
        "Type": "List",
        "Optional": true,
        "Description": "List of topics and/or regular expressions to not replicate.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "aiven_mysql": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html)."
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Optional": true,
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing."
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "mysql": {
        "Type": "List",
        "Description": "MySQL specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "mysql_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Mysql user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "admin_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created."
            },
            "admin_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom username for admin user. This must be set only when a new service is being created."
            },
            "backup_hour": {
              "Type": "String",
              "Optional": true,
              "Description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed."
            },
            "backup_minute": {
              "Type": "String",
              "Optional": true,
              "Description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed."
            },
            "binlog_retention_period": {
              "Type": "String",
              "Optional": true,
              "Description": "The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended for services that require binlog entries for longer than the default for example if using the MySQL Debezium Kafka connector."
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection"
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from"
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)"
                  },
                  "method": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The migration method to be used"
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from"
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from"
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL"
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from"
                  }
                }
              }
            },
            "mysql": {
              "Type": "List",
              "Optional": true,
              "Description": "mysql.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connect_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "connect_timeout"
                  },
                  "default_time_zone": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "default_time_zone"
                  },
                  "group_concat_max_len": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group_concat_max_len"
                  },
                  "information_schema_stats_expiry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "information_schema_stats_expiry"
                  },
                  "innodb_ft_min_token_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_ft_min_token_size"
                  },
                  "innodb_ft_server_stopword_table": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_ft_server_stopword_table"
                  },
                  "innodb_lock_wait_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_lock_wait_timeout"
                  },
                  "innodb_log_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_log_buffer_size"
                  },
                  "innodb_online_alter_log_max_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_online_alter_log_max_size"
                  },
                  "innodb_print_all_deadlocks": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_print_all_deadlocks"
                  },
                  "innodb_rollback_on_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_rollback_on_timeout"
                  },
                  "interactive_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "interactive_timeout"
                  },
                  "internal_tmp_mem_storage_engine": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "internal_tmp_mem_storage_engine"
                  },
                  "long_query_time": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "long_query_time"
                  },
                  "max_allowed_packet": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_allowed_packet"
                  },
                  "max_heap_table_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_heap_table_size"
                  },
                  "net_read_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "net_read_timeout"
                  },
                  "net_write_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "net_write_timeout"
                  },
                  "slow_query_log": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "slow_query_log"
                  },
                  "sort_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sort_buffer_size"
                  },
                  "sql_mode": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sql_mode"
                  },
                  "sql_require_primary_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sql_require_primary_key"
                  },
                  "tmp_table_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "tmp_table_size"
                  },
                  "wait_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wait_timeout"
                  }
                }
              }
            },
            "mysql_version": {
              "Type": "String",
              "Optional": true,
              "Description": "MySQL major version"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysql with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "mysqlx": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysqlx with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable mysql"
                  },
                  "mysqlx": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable mysqlx"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysql from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "mysqlx": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysqlx from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_target_time": {
              "Type": "String",
              "Optional": true,
              "Description": "Recovery target time when forking a service. This has effect only when a new service is being created."
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing)."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data."
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done."
      }
    },
    "aiven_opensearch": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html)."
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Optional": true,
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing."
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "opensearch": {
        "Type": "List",
        "Description": "Opensearch server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "opensearch_dashboards_uri": {
              "Type": "String",
              "Description": "URI for Opensearch dashboard frontend",
              "Computed": true
            }
          }
        }
      },
      "opensearch_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Opensearch user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "disable_replication_factor_adjustment": {
              "Type": "String",
              "Optional": true,
              "Description": "Disable replication factor adjustment"
            },
            "index_patterns": {
              "Type": "List",
              "Optional": true,
              "Description": "Index patterns",
              "MaxItems": 512,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_index_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Maximum number of indexes to keep"
                  },
                  "pattern": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "fnmatch pattern"
                  },
                  "sorting_algorithm": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Deletion sorting algorithm"
                  }
                }
              }
            },
            "index_template": {
              "Type": "List",
              "Optional": true,
              "Description": "Template settings for all new indexes",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mapping_nested_objects_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.mapping.nested_objects.limit"
                  },
                  "number_of_replicas": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_replicas"
                  },
                  "number_of_shards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_shards"
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "keep_index_refresh_interval": {
              "Type": "String",
              "Optional": true,
              "Description": "Don't reset index.refresh_interval to the default value"
            },
            "max_index_count": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum index count"
            },
            "opensearch": {
              "Type": "List",
              "Optional": true,
              "Description": "OpenSearch settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action_auto_create_index_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "action.auto_create_index"
                  },
                  "action_destructive_requires_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Require explicit index names when deleting"
                  },
                  "cluster_max_shards_per_node": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "cluster.max_shards_per_node"
                  },
                  "http_max_content_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_content_length"
                  },
                  "http_max_header_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_header_size"
                  },
                  "http_max_initial_line_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_initial_line_length"
                  },
                  "indices_fielddata_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.fielddata.cache.size"
                  },
                  "indices_memory_index_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.memory.index_buffer_size"
                  },
                  "indices_queries_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.queries.cache.size"
                  },
                  "indices_query_bool_max_clause_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.query.bool.max_clause_count"
                  },
                  "override_main_response_version": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "compatibility.override_main_response_version"
                  },
                  "reindex_remote_whitelist": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "reindex_remote_whitelist",
                    "MaxItems": 32,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "search_max_buckets": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search.max_buckets"
                  },
                  "thread_pool_analyze_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool queue size"
                  },
                  "thread_pool_analyze_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool size"
                  },
                  "thread_pool_force_merge_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "force_merge thread pool size"
                  },
                  "thread_pool_get_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool queue size"
                  },
                  "thread_pool_get_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool size"
                  },
                  "thread_pool_index_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index thread pool size"
                  },
                  "thread_pool_search_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool queue size"
                  },
                  "thread_pool_search_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool size"
                  },
                  "thread_pool_search_throttled_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool queue size"
                  },
                  "thread_pool_search_throttled_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool size"
                  },
                  "thread_pool_write_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool queue size"
                  },
                  "thread_pool_write_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool size"
                  }
                }
              }
            },
            "opensearch_dashboards": {
              "Type": "List",
              "Optional": true,
              "Description": "OpenSearch Dashboards settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable or disable OpenSearch Dashboards"
                  },
                  "max_old_space_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_old_space_size"
                  },
                  "opensearch_request_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch"
                  }
                }
              }
            },
            "opensearch_version": {
              "Type": "String",
              "Optional": true,
              "Description": "OpenSearch major version"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "opensearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to opensearch with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "opensearch_dashboards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to opensearch_dashboards with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "opensearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable opensearch"
                  },
                  "opensearch_dashboards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable opensearch_dashboards"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "opensearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to opensearch from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "opensearch_dashboards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to opensearch_dashboards from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service"
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing)."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data."
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done."
      }
    },
    "aiven_opensearch_acl_config": {
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable Opensearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "extended_acl": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is `true`.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_opensearch_acl_rule": {
      "index": {
        "Type": "String",
        "Required": true,
        "Description": "The index pattern for this ACL entry. Maximum Length: `249`. This property cannot be changed, doing so forces recreation of the resource."
      },
      "permission": {
        "Type": "String",
        "Required": true,
        "Description": "The permissions for this ACL entry The possible values are `deny`, `admin`, `read`, `readwrite` and `write`."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "The username for the ACL entry Maximum Length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_pg": {
      "__timeouts__": [
        "create",
        "update",
        "default"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html)."
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Optional": true,
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing."
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "pg": {
        "Type": "List",
        "Optional": true,
        "Description": "PostgreSQL specific server provided values",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dbname": {
              "Type": "String",
              "Description": "Primary PostgreSQL database name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "PostgreSQL master node host IP or name",
              "Computed": true
            },
            "password": {
              "Type": "String",
              "Description": "PostgreSQL admin user password",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "PostgreSQL port",
              "Computed": true
            },
            "replica_uri": {
              "Type": "String",
              "Description": "PostgreSQL replica URI for services with a replica",
              "Computed": true
            },
            "sslmode": {
              "Type": "String",
              "Description": "PostgreSQL sslmode setting (currently always \"require\")",
              "Computed": true
            },
            "uri": {
              "Type": "String",
              "Optional": true,
              "Description": "PostgreSQL master connection URI",
              "Computed": true
            },
            "user": {
              "Type": "String",
              "Description": "PostgreSQL admin user name",
              "Computed": true
            }
          }
        }
      },
      "pg_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Pg user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "admin_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created."
            },
            "admin_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom username for admin user. This must be set only when a new service is being created."
            },
            "backup_hour": {
              "Type": "String",
              "Optional": true,
              "Description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed."
            },
            "backup_minute": {
              "Type": "String",
              "Optional": true,
              "Description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed."
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection"
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from"
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)"
                  },
                  "method": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The migration method to be used"
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from"
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from"
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL"
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from"
                  }
                }
              }
            },
            "pg": {
              "Type": "List",
              "Optional": true,
              "Description": "postgresql.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "autovacuum_analyze_scale_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_analyze_scale_factor"
                  },
                  "autovacuum_analyze_threshold": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_analyze_threshold"
                  },
                  "autovacuum_freeze_max_age": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_freeze_max_age"
                  },
                  "autovacuum_max_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_max_workers"
                  },
                  "autovacuum_naptime": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_naptime"
                  },
                  "autovacuum_vacuum_cost_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_cost_delay"
                  },
                  "autovacuum_vacuum_cost_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_cost_limit"
                  },
                  "autovacuum_vacuum_scale_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_scale_factor"
                  },
                  "autovacuum_vacuum_threshold": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_threshold"
                  },
                  "bgwriter_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "bgwriter_delay"
                  },
                  "bgwriter_flush_after": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "bgwriter_flush_after"
                  },
                  "bgwriter_lru_maxpages": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "bgwriter_lru_maxpages"
                  },
                  "bgwriter_lru_multiplier": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "bgwriter_lru_multiplier"
                  },
                  "deadlock_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "deadlock_timeout"
                  },
                  "default_toast_compression": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "default_toast_compression"
                  },
                  "idle_in_transaction_session_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "idle_in_transaction_session_timeout"
                  },
                  "jit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "jit"
                  },
                  "log_autovacuum_min_duration": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_autovacuum_min_duration"
                  },
                  "log_error_verbosity": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_error_verbosity"
                  },
                  "log_line_prefix": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_line_prefix"
                  },
                  "log_min_duration_statement": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_min_duration_statement"
                  },
                  "max_files_per_process": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_files_per_process"
                  },
                  "max_locks_per_transaction": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_locks_per_transaction"
                  },
                  "max_logical_replication_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_logical_replication_workers"
                  },
                  "max_parallel_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_parallel_workers"
                  },
                  "max_parallel_workers_per_gather": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_parallel_workers_per_gather"
                  },
                  "max_pred_locks_per_transaction": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_pred_locks_per_transaction"
                  },
                  "max_prepared_transactions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_prepared_transactions"
                  },
                  "max_replication_slots": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_replication_slots"
                  },
                  "max_slot_wal_keep_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_slot_wal_keep_size"
                  },
                  "max_stack_depth": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_stack_depth"
                  },
                  "max_standby_archive_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_standby_archive_delay"
                  },
                  "max_standby_streaming_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_standby_streaming_delay"
                  },
                  "max_wal_senders": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_wal_senders"
                  },
                  "max_worker_processes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_worker_processes"
                  },
                  "pg_partman_bgw__dot__interval": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_partman_bgw.interval"
                  },
                  "pg_partman_bgw__dot__role": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_partman_bgw.role"
                  },
                  "pg_stat_statements__dot__track": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_stat_statements.track"
                  },
                  "temp_file_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "temp_file_limit"
                  },
                  "timezone": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "timezone"
                  },
                  "track_activity_query_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_activity_query_size"
                  },
                  "track_commit_timestamp": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_commit_timestamp"
                  },
                  "track_functions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_functions"
                  },
                  "track_io_timing": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_io_timing"
                  },
                  "wal_sender_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wal_sender_timeout"
                  },
                  "wal_writer_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wal_writer_delay"
                  }
                }
              }
            },
            "pg_read_replica": {
              "Type": "String",
              "Optional": true,
              "Description": "Should the service which is being forked be a read replica (deprecated, use read_replica service integration instead)."
            },
            "pg_service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the PG Service from which to fork (deprecated, use service_to_fork_from). This has effect only when a new service is being created."
            },
            "pg_version": {
              "Type": "String",
              "Optional": true,
              "Description": "PostgreSQL major version"
            },
            "pgbouncer": {
              "Type": "List",
              "Optional": true,
              "Description": "PGBouncer connection pooling settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "autodb_idle_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If the automatically created database pools have been unused this many seconds, they are freed. If 0 then timeout is disabled. [seconds]"
                  },
                  "autodb_max_db_connections": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Do not allow more than this many server connections per database (regardless of user). Setting it to 0 means unlimited."
                  },
                  "autodb_pool_mode": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "PGBouncer pool mode"
                  },
                  "autodb_pool_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If non-zero then create automatically a pool of that size per user when a pool doesn't exist."
                  },
                  "ignore_startup_parameters": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of parameters to ignore when given in startup packet",
                    "MaxItems": 32,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "min_pool_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Add more server connections to pool if below this number. Improves behavior when usual load comes suddenly back after period of total inactivity. The value is effectively capped at the pool size."
                  },
                  "server_idle_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If a server connection has been idle more than this many seconds it will be dropped. If 0 then timeout is disabled. [seconds]"
                  },
                  "server_lifetime": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The pooler will close an unused server connection that has been connected longer than this. [seconds]"
                  },
                  "server_reset_query_always": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Run server_reset_query (DISCARD ALL) in all pooling modes"
                  }
                }
              }
            },
            "pglookout": {
              "Type": "List",
              "Optional": true,
              "Description": "PGLookout settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_failover_replication_time_lag": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_failover_replication_time_lag"
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pg with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pgbouncer with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable pg"
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable pgbouncer"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pg from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pgbouncer from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_target_time": {
              "Type": "String",
              "Optional": true,
              "Description": "Recovery target time when forking a service. This has effect only when a new service is being created."
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "shared_buffers_percentage": {
              "Type": "String",
              "Optional": true,
              "Description": "shared_buffers_percentage"
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            },
            "synchronous_replication": {
              "Type": "String",
              "Optional": true,
              "Description": "Synchronous replication type. Note that the service plan also needs to support synchronous replication."
            },
            "timescaledb": {
              "Type": "List",
              "Optional": true,
              "Description": "TimescaleDB extension configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_background_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "timescaledb.max_background_workers"
                  }
                }
              }
            },
            "variant": {
              "Type": "String",
              "Optional": true,
              "Description": "Variant of the PostgreSQL service, may affect the features that are exposed by default"
            },
            "work_mem": {
              "Type": "String",
              "Optional": true,
              "Description": "work_mem"
            }
          }
        }
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing)."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data."
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done."
      }
    },
    "aiven_project": {
      "account_id": {
        "Type": "String",
        "Optional": true,
        "Description": "An optional property to link a project to already an existing account by using account ID. To set up proper dependencies please refer to this variable as a reference."
      },
      "add_account_owners_admin_access": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If account_id is set, grant account owner team admin access to the new project. The default value is `true`.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "available_credits": {
        "Type": "String",
        "Optional": true,
        "Description": "The amount of platform credits available to the project. This could be your free trial or other promotional credits.",
        "Computed": true
      },
      "billing_address": {
        "Type": "String",
        "Optional": true,
        "Description": "**DEPRECATED Please use aiven_billing_group resource to set this value.** Billing name and address of the project.",
        "Deprecated": "Please use aiven_billing_group resource to set this value."
      },
      "billing_currency": {
        "Type": "String",
        "Optional": true,
        "Description": "**DEPRECATED Please use aiven_billing_group resource to set this value.** Billing currency.",
        "Deprecated": "Please use aiven_billing_group resource to set this value."
      },
      "billing_emails": {
        "Type": "Set",
        "Optional": true,
        "Description": "**DEPRECATED Please use aiven_billing_group resource to set this value.** Billing contact emails of the project.",
        "Deprecated": "Please use aiven_billing_group resource to set this value.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "billing_extra_text": {
        "Type": "String",
        "Optional": true,
        "Description": "**DEPRECATED Please use aiven_billing_group resource to set this value.** Extra text to be included in all project invoices, e.g. purchase order or cost center number.",
        "Deprecated": "Please use aiven_billing_group resource to set this value."
      },
      "billing_group": {
        "Type": "String",
        "Optional": true,
        "Description": "The id of the billing group that is linked to this project. To set up proper dependencies please refer to this variable as a reference."
      },
      "ca_cert": {
        "Type": "String",
        "Description": "The CA certificate of the project. This is required for configuring clients that connect to certain services like Kafka.",
        "Computed": true
      },
      "card_id": {
        "Type": "String",
        "Optional": true,
        "Description": "**DEPRECATED Please use aiven_billing_group resource to set this value.** Either the full card UUID or the last 4 digits of the card. As the full UUID is not shown in the UI it is typically easier to use the last 4 digits to identify the card. This can be omitted if `copy_from_project` is used to copy billing info from another project.",
        "Deprecated": "Please use aiven_billing_group resource to set this value."
      },
      "copy_from_project": {
        "Type": "String",
        "Optional": true,
        "Description": "is the name of another project used to copy billing information and some other project attributes like technical contacts from. This is mostly relevant when an existing project has billing type set to invoice and that needs to be copied over to a new project. (Setting billing is otherwise not allowed over the API.) This only has effect when the project is created. To set up proper dependencies please refer to this variable as a reference."
      },
      "country_code": {
        "Type": "String",
        "Optional": true,
        "Description": "**DEPRECATED Please use aiven_billing_group resource to set this value.** Billing country code of the project.",
        "Deprecated": "Please use aiven_billing_group resource to set this value."
      },
      "default_cloud": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines the default cloud provider and region where services are hosted. This can be changed freely after the project is created. This will not affect existing services."
      },
      "estimated_balance": {
        "Type": "String",
        "Description": "The current accumulated bill for this project in the current billing period.",
        "Computed": true
      },
      "payment_method": {
        "Type": "String",
        "Description": "The method of invoicing used for payments for this project, e.g. `card`.",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later without destroying and re-creating the project, including all sub-resources."
      },
      "technical_emails": {
        "Type": "Set",
        "Optional": true,
        "Description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability. It is  good practice to keep this up-to-date to be aware of any potential issues with your project.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "use_source_project_billing_group": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Use the same billing group that is used in source project."
      },
      "vat_id": {
        "Type": "String",
        "Optional": true,
        "Description": "**DEPRECATED Please use aiven_billing_group resource to set this value.** EU VAT Identification Number.",
        "Deprecated": "Please use aiven_billing_group resource to set this value."
      }
    },
    "aiven_project_user": {
      "accepted": {
        "Type": "Bool",
        "Description": "Whether the user has accepted the request to join the project; adding user to a project sends an invitation to the target user and the actual membership is only created once the user accepts the invitation.",
        "Computed": true
      },
      "email": {
        "Type": "String",
        "Required": true,
        "Description": "Email address of the user. This property cannot be changed, doing so forces recreation of the resource."
      },
      "member_type": {
        "Type": "String",
        "Required": true,
        "Description": "Project membership type. The possible values are `admin`, `developer` and `operator`."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_project_vpc": {
      "__timeouts__": [
        "create",
        "delete"
      ],
      "cloud_name": {
        "Type": "String",
        "Required": true,
        "Description": "Defines where the cloud provider and region where the service is hosted in. See the Service resource for additional information. This property cannot be changed, doing so forces recreation of the resource."
      },
      "network_cidr": {
        "Type": "String",
        "Required": true,
        "Description": "Network address range used by the VPC like 192.168.0.0/24"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "state": {
        "Type": "String",
        "Description": "State of the VPC. The possible values are `APPROVED`, `ACTIVE`, `DELETING` and `DELETED`.",
        "Computed": true
      }
    },
    "aiven_redis": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html)."
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Optional": true,
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing."
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing)."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data."
      },
      "redis": {
        "Type": "List",
        "Description": "Redis server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "redis_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Redis user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection"
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from"
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)"
                  },
                  "method": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The migration method to be used"
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from"
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from"
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL"
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from"
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to redis with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable redis"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to redis from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service"
            },
            "redis_acl_channels_default": {
              "Type": "String",
              "Optional": true,
              "Description": "Default ACL for pub/sub channels used when Redis user is created"
            },
            "redis_io_threads": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis IO thread count"
            },
            "redis_lfu_decay_time": {
              "Type": "String",
              "Optional": true,
              "Description": "LFU maxmemory-policy counter decay time in minutes"
            },
            "redis_lfu_log_factor": {
              "Type": "String",
              "Optional": true,
              "Description": "Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies"
            },
            "redis_maxmemory_policy": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis maxmemory-policy"
            },
            "redis_notify_keyspace_events": {
              "Type": "String",
              "Optional": true,
              "Description": "Set notify-keyspace-events option"
            },
            "redis_number_of_databases": {
              "Type": "String",
              "Optional": true,
              "Description": "Number of redis databases"
            },
            "redis_persistence": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis persistence"
            },
            "redis_pubsub_client_output_buffer_limit": {
              "Type": "String",
              "Optional": true,
              "Description": "Pub/sub client output buffer hard limit in MB"
            },
            "redis_ssl": {
              "Type": "String",
              "Optional": true,
              "Description": "Require SSL to access Redis"
            },
            "redis_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis idle connection timeout"
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done."
      }
    },
    "aiven_service": {
      "__timeouts__": [
        "create",
        "update"
      ],
      "cassandra": {
        "Type": "List",
        "Description": "Cassandra specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "cassandra_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Cassandra user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cassandra": {
              "Type": "List",
              "Optional": true,
              "Description": "cassandra configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "batch_size_fail_threshold_in_kb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "batch_size_fail_threshold_in_kb"
                  },
                  "batch_size_warn_threshold_in_kb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "batch_size_warn_threshold_in_kb"
                  }
                }
              }
            },
            "cassandra_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Cassandra major version"
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migrate_sstableloader": {
              "Type": "String",
              "Optional": true,
              "Description": "Migration mode for the sstableloader utility"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "clickhouse": {
        "Type": "List",
        "Description": "Clickhouse specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "clickhouse_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Clickhouse user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            }
          }
        }
      },
      "cloud_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Cloud the service runs in"
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Optional": true,
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing."
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "elasticsearch": {
        "Type": "List",
        "Description": "Elasticsearch specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "kibana_uri": {
              "Type": "String",
              "Description": "URI for Kibana frontend",
              "Computed": true
            }
          }
        }
      },
      "elasticsearch_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Elasticsearch user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "disable_replication_factor_adjustment": {
              "Type": "String",
              "Optional": true,
              "Description": "Disable replication factor adjustment"
            },
            "elasticsearch": {
              "Type": "List",
              "Optional": true,
              "Description": "Elasticsearch settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action_auto_create_index_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "action.auto_create_index"
                  },
                  "action_destructive_requires_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Require explicit index names when deleting"
                  },
                  "cluster_max_shards_per_node": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "cluster.max_shards_per_node"
                  },
                  "http_max_content_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_content_length"
                  },
                  "http_max_header_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_header_size"
                  },
                  "http_max_initial_line_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_initial_line_length"
                  },
                  "indices_fielddata_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.fielddata.cache.size"
                  },
                  "indices_memory_index_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.memory.index_buffer_size"
                  },
                  "indices_queries_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.queries.cache.size"
                  },
                  "indices_query_bool_max_clause_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.query.bool.max_clause_count"
                  },
                  "override_main_response_version": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "compatibility.override_main_response_version"
                  },
                  "reindex_remote_whitelist": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "reindex_remote_whitelist",
                    "MaxItems": 32,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "search_max_buckets": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search.max_buckets"
                  },
                  "thread_pool_analyze_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool queue size"
                  },
                  "thread_pool_analyze_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool size"
                  },
                  "thread_pool_force_merge_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "force_merge thread pool size"
                  },
                  "thread_pool_get_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool queue size"
                  },
                  "thread_pool_get_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool size"
                  },
                  "thread_pool_index_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index thread pool queue size"
                  },
                  "thread_pool_index_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index thread pool size"
                  },
                  "thread_pool_search_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool queue size"
                  },
                  "thread_pool_search_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool size"
                  },
                  "thread_pool_search_throttled_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool queue size"
                  },
                  "thread_pool_search_throttled_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool size"
                  },
                  "thread_pool_write_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool queue size"
                  },
                  "thread_pool_write_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool size"
                  }
                }
              }
            },
            "elasticsearch_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch major version"
            },
            "index_patterns": {
              "Type": "List",
              "Optional": true,
              "Description": "Index patterns",
              "MaxItems": 512,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_index_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Maximum number of indexes to keep"
                  },
                  "pattern": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "fnmatch pattern"
                  },
                  "sorting_algorithm": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Deletion sorting algorithm"
                  }
                }
              }
            },
            "index_template": {
              "Type": "List",
              "Optional": true,
              "Description": "Template settings for all new indexes",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mapping_nested_objects_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.mapping.nested_objects.limit"
                  },
                  "number_of_replicas": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_replicas"
                  },
                  "number_of_shards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_shards"
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "keep_index_refresh_interval": {
              "Type": "String",
              "Optional": true,
              "Description": "Don't reset index.refresh_interval to the default value"
            },
            "kibana": {
              "Type": "List",
              "Optional": true,
              "Description": "Kibana settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch_request_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Timeout in milliseconds for requests made by Kibana towards Elasticsearch"
                  },
                  "enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable or disable Kibana"
                  },
                  "max_old_space_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_old_space_size"
                  }
                }
              }
            },
            "max_index_count": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum index count"
            },
            "opensearch_version": {
              "Type": "String",
              "Optional": true,
              "Description": "OpenSearch major version"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to elasticsearch with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kibana with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable elasticsearch"
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kibana"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to elasticsearch from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kibana from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service"
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "flink": {
        "Type": "List",
        "Optional": true,
        "Description": "Flink specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "host_ports": {
              "Type": "List",
              "Optional": true,
              "Description": "Host and Port of a Flink server",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "flink_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Flink user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "execution_checkpointing_interval_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink execution.checkpointing.interval in milliseconds"
            },
            "execution_checkpointing_timeout_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink execution.checkpointing.timeout in milliseconds"
            },
            "flink_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink major version"
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "number_of_task_slots": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink taskmanager.numberOfTaskSlots"
            },
            "parallelism_default": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink parallelism.default"
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "flink": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable flink"
                  }
                }
              }
            },
            "restart_strategy": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink restart-strategy"
            },
            "restart_strategy_delay_sec": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink restart-strategy.failure-rate.delay in seconds"
            },
            "restart_strategy_failure_rate_interval_min": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink restart-strategy.failure-rate.failure-rate-interval in minutes"
            },
            "restart_strategy_max_failures": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink restart-strategy.failure-rate.max-failures-per-interval"
            }
          }
        }
      },
      "grafana": {
        "Type": "List",
        "Description": "Grafana specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "grafana_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Grafana user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "alerting_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable or disable Grafana alerting functionality"
            },
            "alerting_error_or_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Default error or timeout setting for new alerting rules"
            },
            "alerting_max_annotations_to_keep": {
              "Type": "String",
              "Optional": true,
              "Description": "Max number of alert annotations that Grafana stores. 0 (default) keeps all alert annotations."
            },
            "alerting_nodata_or_nullvalues": {
              "Type": "String",
              "Optional": true,
              "Description": "Default value for 'no data or null values' for new alerting rules"
            },
            "allow_embedding": {
              "Type": "String",
              "Optional": true,
              "Description": "Allow embedding Grafana dashboards with iframe/frame/object/embed tags. Disabled by default to limit impact of clickjacking"
            },
            "auth_azuread": {
              "Type": "List",
              "Optional": true,
              "Description": "Azure AD OAuth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in"
                  },
                  "allowed_domains": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Allowed domains",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "allowed_groups": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given groups",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "auth_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Authorization URL"
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider"
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider"
                  },
                  "token_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Token URL"
                  }
                }
              }
            },
            "auth_basic_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable or disable basic authentication form, used by Grafana built-in login"
            },
            "auth_generic_oauth": {
              "Type": "List",
              "Optional": true,
              "Description": "Generic OAuth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in"
                  },
                  "allowed_domains": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Allowed domains",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "allowed_organizations": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require user to be member of one of the listed organizations",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "api_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "API URL"
                  },
                  "auth_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Authorization URL"
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider"
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider"
                  },
                  "name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Name of the OAuth integration"
                  },
                  "scopes": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "OAuth scopes",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "token_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Token URL"
                  }
                }
              }
            },
            "auth_github": {
              "Type": "List",
              "Optional": true,
              "Description": "Github Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in"
                  },
                  "allowed_organizations": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given organizations",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider"
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider"
                  },
                  "team_ids": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given team IDs",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "auth_gitlab": {
              "Type": "List",
              "Optional": true,
              "Description": "GitLab Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in"
                  },
                  "allowed_groups": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given groups",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "api_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "API URL. This only needs to be set when using self hosted GitLab"
                  },
                  "auth_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Authorization URL. This only needs to be set when using self hosted GitLab"
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider"
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider"
                  },
                  "token_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Token URL. This only needs to be set when using self hosted GitLab"
                  }
                }
              }
            },
            "auth_google": {
              "Type": "List",
              "Optional": true,
              "Description": "Google Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in"
                  },
                  "allowed_domains": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Domains allowed to sign-in to this Grafana",
                    "MaxItems": 64,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider"
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider"
                  }
                }
              }
            },
            "cookie_samesite": {
              "Type": "String",
              "Optional": true,
              "Description": "Cookie SameSite attribute: 'strict' prevents sending cookie for cross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value."
            },
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "dashboards_min_refresh_interval": {
              "Type": "String",
              "Optional": true,
              "Description": "Minimum refresh interval"
            },
            "dashboards_versions_to_keep": {
              "Type": "String",
              "Optional": true,
              "Description": "Dashboard versions to keep per dashboard"
            },
            "dataproxy_send_user_header": {
              "Type": "String",
              "Optional": true,
              "Description": "Send 'X-Grafana-User' header to data source"
            },
            "dataproxy_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Timeout for data proxy requests in seconds"
            },
            "date_formats": {
              "Type": "List",
              "Optional": true,
              "Description": "Grafana date format specifications",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "default_timezone": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Default time zone for user preferences. Value 'browser' uses browser local time zone."
                  },
                  "full_date": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string for cases where full date is shown"
                  },
                  "interval_day": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring day accuracy is shown"
                  },
                  "interval_hour": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring hour accuracy is shown"
                  },
                  "interval_minute": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring minute accuracy is shown"
                  },
                  "interval_month": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring month accuracy is shown"
                  },
                  "interval_second": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring second accuracy is shown"
                  },
                  "interval_year": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring year accuracy is shown"
                  }
                }
              }
            },
            "disable_gravatar": {
              "Type": "String",
              "Optional": true,
              "Description": "Set to true to disable gravatar. Defaults to false (gravatar is enabled)"
            },
            "editors_can_admin": {
              "Type": "String",
              "Optional": true,
              "Description": "Editors can manage folders, teams and dashboards created by them"
            },
            "external_image_storage": {
              "Type": "List",
              "Optional": true,
              "Description": "External image store settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "access_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "S3 access key. Requires permissions to the S3 bucket for the s3:PutObject and s3:PutObjectAcl actions"
                  },
                  "bucket_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Bucket URL for S3"
                  },
                  "provider": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Provider type"
                  },
                  "secret_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "S3 secret key"
                  }
                }
              }
            },
            "google_analytics_ua_id": {
              "Type": "String",
              "Optional": true,
              "Description": "Google Analytics ID"
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "metrics_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Grafana /metrics endpoint"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to grafana with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable grafana"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to grafana from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service"
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "smtp_server": {
              "Type": "List",
              "Optional": true,
              "Description": "SMTP server settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "from_address": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Address used for sending emails"
                  },
                  "from_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Name used in outgoing emails, defaults to Grafana"
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Server hostname or IP"
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for SMTP authentication"
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "SMTP server port"
                  },
                  "skip_verify": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Skip verifying server certificate. Defaults to false"
                  },
                  "starttls_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS. Default is OpportunisticStartTLS."
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Username for SMTP authentication"
                  }
                }
              }
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            },
            "user_auto_assign_org": {
              "Type": "String",
              "Optional": true,
              "Description": "Auto-assign new users on signup to main organization. Defaults to false"
            },
            "user_auto_assign_org_role": {
              "Type": "String",
              "Optional": true,
              "Description": "Set role for new signups. Defaults to Viewer"
            },
            "viewers_can_edit": {
              "Type": "String",
              "Optional": true,
              "Description": "Users with view-only permission can edit but not save dashboards"
            }
          }
        }
      },
      "influxdb": {
        "Type": "List",
        "Description": "InfluxDB specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "database_name": {
              "Type": "String",
              "Description": "Name of the default InfluxDB database",
              "Computed": true
            }
          }
        }
      },
      "influxdb_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Influxdb user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "influxdb": {
              "Type": "List",
              "Optional": true,
              "Description": "influxdb.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "log_queries_after": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum duration in seconds before a query is logged as a slow query. Setting this to 0 (the default) will never log slow queries."
                  },
                  "max_connection_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Maximum number of connections to InfluxDB. Setting this to 0 (default) means no limit. If using max_connection_limit, it is recommended to set the value to be large enough in order to not block clients unnecessarily."
                  },
                  "max_row_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of rows returned in a non-chunked query. Setting this to 0 (the default) allows an unlimited number to be returned."
                  },
                  "max_select_buckets": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of 'GROUP BY time()' buckets that can be processed in a query. Setting this to 0 (the default) allows an unlimited number to be processed."
                  },
                  "max_select_point": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of points that can be processed in a SELECT statement. Setting this to 0 (the default) allows an unlimited number to be processed."
                  },
                  "query_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum duration in seconds before a query is killed. Setting this to 0 (the default) will never kill slow queries."
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to influxdb with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable influxdb"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to influxdb from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service"
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "kafka": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka client certificate",
              "Computed": true
            },
            "access_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka client certificate key",
              "Computed": true
            },
            "connect_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka Connect URI, if any",
              "Computed": true
            },
            "rest_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka REST URI, if any",
              "Computed": true
            },
            "schema_registry_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Schema Registry URI, if any",
              "Computed": true
            }
          }
        }
      },
      "kafka_connect": {
        "Type": "List",
        "Description": "Kafka Connect specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "kafka_connect_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka_connect user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka_connect": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka Connect configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connector_client_config_override_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client config override policy"
                  },
                  "consumer_auto_offset_reset": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer auto offset reset"
                  },
                  "consumer_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data the server should return for a fetch request"
                  },
                  "consumer_isolation_level": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer isolation level"
                  },
                  "consumer_max_partition_fetch_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data per-partition the server will return."
                  },
                  "consumer_max_poll_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum delay between polls when using consumer group management"
                  },
                  "consumer_max_poll_records": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of records returned by a single poll"
                  },
                  "offset_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The interval at which to try committing offsets for tasks"
                  },
                  "offset_flush_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Offset flush timeout"
                  },
                  "producer_max_request_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum size of a request in bytes"
                  },
                  "session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The timeout used to detect failures when using Kafka’s group management facilities"
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_connect"
                  }
                }
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "kafka_mirrormaker": {
        "Type": "List",
        "Description": "Kafka MirrorMaker 2 specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "kafka_mirrormaker_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka_mirrormaker user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka_mirrormaker": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka MirrorMaker configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "emit_checkpoints_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Emit consumer group offset checkpoints"
                  },
                  "emit_checkpoints_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of consumer group offset checkpoints"
                  },
                  "refresh_groups_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Refresh consumer groups"
                  },
                  "refresh_groups_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of group refresh"
                  },
                  "refresh_topics_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Refresh topics and partitions"
                  },
                  "refresh_topics_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of topic and partitions refresh"
                  },
                  "sync_group_offsets_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Sync consumer group offsets"
                  },
                  "sync_group_offsets_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of consumer group offset sync"
                  },
                  "sync_topic_configs_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Sync remote topics"
                  },
                  "tasks_max_per_cpu": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Maximum number of MirrorMaker tasks (of each type) per service CPU"
                  }
                }
              }
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "kafka_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka broker configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "auto_create_topics_enable": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "auto.create.topics.enable"
                  },
                  "compression_type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "compression.type"
                  },
                  "connections_max_idle_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "connections.max.idle.ms"
                  },
                  "default_replication_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "default.replication.factor"
                  },
                  "group_initial_rebalance_delay_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.initial.rebalance.delay.ms"
                  },
                  "group_max_session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.max.session.timeout.ms"
                  },
                  "group_min_session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.min.session.timeout.ms"
                  },
                  "log_cleaner_delete_retention_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.delete.retention.ms"
                  },
                  "log_cleaner_max_compaction_lag_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.max.compaction.lag.ms"
                  },
                  "log_cleaner_min_cleanable_ratio": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.min.cleanable.ratio"
                  },
                  "log_cleaner_min_compaction_lag_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.min.compaction.lag.ms"
                  },
                  "log_cleanup_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleanup.policy"
                  },
                  "log_flush_interval_messages": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.flush.interval.messages"
                  },
                  "log_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.flush.interval.ms"
                  },
                  "log_index_interval_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.index.interval.bytes"
                  },
                  "log_index_size_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.index.size.max.bytes"
                  },
                  "log_message_downconversion_enable": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.downconversion.enable"
                  },
                  "log_message_timestamp_difference_max_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.timestamp.difference.max.ms"
                  },
                  "log_message_timestamp_type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.timestamp.type"
                  },
                  "log_preallocate": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.preallocate"
                  },
                  "log_retention_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.bytes"
                  },
                  "log_retention_hours": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.hours"
                  },
                  "log_retention_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.ms"
                  },
                  "log_roll_jitter_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.roll.jitter.ms"
                  },
                  "log_roll_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.roll.ms"
                  },
                  "log_segment_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.segment.bytes"
                  },
                  "log_segment_delete_delay_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.segment.delete.delay.ms"
                  },
                  "max_connections_per_ip": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max.connections.per.ip"
                  },
                  "max_incremental_fetch_session_cache_slots": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max.incremental.fetch.session.cache.slots"
                  },
                  "message_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "message.max.bytes"
                  },
                  "min_insync_replicas": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "min.insync.replicas"
                  },
                  "num_partitions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "num.partitions"
                  },
                  "offsets_retention_minutes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "offsets.retention.minutes"
                  },
                  "producer_purgatory_purge_interval_requests": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.purgatory.purge.interval.requests"
                  },
                  "replica_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "replica.fetch.max.bytes"
                  },
                  "replica_fetch_response_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "replica.fetch.response.max.bytes"
                  },
                  "socket_request_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "socket.request.max.bytes"
                  },
                  "transaction_remove_expired_transaction_cleanup_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "transaction.remove.expired.transaction.cleanup.interval.ms"
                  },
                  "transaction_state_log_segment_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "transaction.state.log.segment.bytes"
                  }
                }
              }
            },
            "kafka_authentication_methods": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka authentication methods",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "certificate": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable certificate/SSL authentication"
                  },
                  "sasl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable SASL authentication"
                  }
                }
              }
            },
            "kafka_connect": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Kafka Connect service"
            },
            "kafka_connect_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka Connect configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connector_client_config_override_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client config override policy"
                  },
                  "consumer_auto_offset_reset": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer auto offset reset"
                  },
                  "consumer_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data the server should return for a fetch request"
                  },
                  "consumer_isolation_level": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer isolation level"
                  },
                  "consumer_max_partition_fetch_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data per-partition the server will return."
                  },
                  "consumer_max_poll_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum delay between polls when using consumer group management"
                  },
                  "consumer_max_poll_records": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of records returned by a single poll"
                  },
                  "offset_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The interval at which to try committing offsets for tasks"
                  },
                  "offset_flush_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Offset flush timeout"
                  },
                  "producer_max_request_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum size of a request in bytes"
                  },
                  "session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The timeout used to detect failures when using Kafka’s group management facilities"
                  }
                }
              }
            },
            "kafka_rest": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Kafka-REST service"
            },
            "kafka_rest_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka REST configuration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "consumer_enable_auto_commit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.enable.auto.commit"
                  },
                  "consumer_request_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.request.max.bytes"
                  },
                  "consumer_request_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.request.timeout.ms"
                  },
                  "producer_acks": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.acks"
                  },
                  "producer_linger_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.linger.ms"
                  },
                  "simpleconsumer_pool_size_max": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "simpleconsumer.pool.size.max"
                  }
                }
              }
            },
            "kafka_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka major version"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka"
                  },
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_connect"
                  },
                  "kafka_rest": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_rest"
                  },
                  "schema_registry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable schema_registry"
                  }
                }
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "kafka_rest": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_rest from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "schema_registry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to schema_registry from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "schema_registry": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Schema-Registry service"
            },
            "schema_registry_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Schema Registry configuration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "leader_eligibility": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "leader_eligibility"
                  },
                  "topic_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "topic_name"
                  }
                }
              }
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Optional": true,
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc."
      },
      "maintenance_window_time": {
        "Type": "String",
        "Optional": true,
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format."
      },
      "mysql": {
        "Type": "List",
        "Description": "MySQL specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "mysql_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Mysql user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "admin_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created."
            },
            "admin_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom username for admin user. This must be set only when a new service is being created."
            },
            "backup_hour": {
              "Type": "String",
              "Optional": true,
              "Description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed."
            },
            "backup_minute": {
              "Type": "String",
              "Optional": true,
              "Description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed."
            },
            "binlog_retention_period": {
              "Type": "String",
              "Optional": true,
              "Description": "The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended for services that require binlog entries for longer than the default for example if using the MySQL Debezium Kafka connector."
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection"
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from"
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)"
                  },
                  "method": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The migration method to be used"
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from"
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from"
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL"
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from"
                  }
                }
              }
            },
            "mysql": {
              "Type": "List",
              "Optional": true,
              "Description": "mysql.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connect_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "connect_timeout"
                  },
                  "default_time_zone": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "default_time_zone"
                  },
                  "group_concat_max_len": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group_concat_max_len"
                  },
                  "information_schema_stats_expiry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "information_schema_stats_expiry"
                  },
                  "innodb_ft_min_token_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_ft_min_token_size"
                  },
                  "innodb_ft_server_stopword_table": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_ft_server_stopword_table"
                  },
                  "innodb_lock_wait_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_lock_wait_timeout"
                  },
                  "innodb_log_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_log_buffer_size"
                  },
                  "innodb_online_alter_log_max_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_online_alter_log_max_size"
                  },
                  "innodb_print_all_deadlocks": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_print_all_deadlocks"
                  },
                  "innodb_rollback_on_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_rollback_on_timeout"
                  },
                  "interactive_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "interactive_timeout"
                  },
                  "internal_tmp_mem_storage_engine": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "internal_tmp_mem_storage_engine"
                  },
                  "long_query_time": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "long_query_time"
                  },
                  "max_allowed_packet": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_allowed_packet"
                  },
                  "max_heap_table_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_heap_table_size"
                  },
                  "net_read_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "net_read_timeout"
                  },
                  "net_write_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "net_write_timeout"
                  },
                  "slow_query_log": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "slow_query_log"
                  },
                  "sort_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sort_buffer_size"
                  },
                  "sql_mode": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sql_mode"
                  },
                  "sql_require_primary_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sql_require_primary_key"
                  },
                  "tmp_table_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "tmp_table_size"
                  },
                  "wait_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wait_timeout"
                  }
                }
              }
            },
            "mysql_version": {
              "Type": "String",
              "Optional": true,
              "Description": "MySQL major version"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysql with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "mysqlx": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysqlx with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable mysql"
                  },
                  "mysqlx": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable mysqlx"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysql from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "mysqlx": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysqlx from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_target_time": {
              "Type": "String",
              "Optional": true,
              "Description": "Recovery target time when forking a service. This has effect only when a new service is being created."
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "opensearch": {
        "Type": "List",
        "Description": "Opensearch specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "opensearch_dashboards_uri": {
              "Type": "String",
              "Description": "URI for Opensearch dashboard frontend",
              "Computed": true
            }
          }
        }
      },
      "opensearch_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Opensearch user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "disable_replication_factor_adjustment": {
              "Type": "String",
              "Optional": true,
              "Description": "Disable replication factor adjustment"
            },
            "index_patterns": {
              "Type": "List",
              "Optional": true,
              "Description": "Index patterns",
              "MaxItems": 512,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_index_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Maximum number of indexes to keep"
                  },
                  "pattern": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "fnmatch pattern"
                  },
                  "sorting_algorithm": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Deletion sorting algorithm"
                  }
                }
              }
            },
            "index_template": {
              "Type": "List",
              "Optional": true,
              "Description": "Template settings for all new indexes",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mapping_nested_objects_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.mapping.nested_objects.limit"
                  },
                  "number_of_replicas": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_replicas"
                  },
                  "number_of_shards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_shards"
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "keep_index_refresh_interval": {
              "Type": "String",
              "Optional": true,
              "Description": "Don't reset index.refresh_interval to the default value"
            },
            "max_index_count": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum index count"
            },
            "opensearch": {
              "Type": "List",
              "Optional": true,
              "Description": "OpenSearch settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action_auto_create_index_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "action.auto_create_index"
                  },
                  "action_destructive_requires_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Require explicit index names when deleting"
                  },
                  "cluster_max_shards_per_node": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "cluster.max_shards_per_node"
                  },
                  "http_max_content_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_content_length"
                  },
                  "http_max_header_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_header_size"
                  },
                  "http_max_initial_line_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_initial_line_length"
                  },
                  "indices_fielddata_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.fielddata.cache.size"
                  },
                  "indices_memory_index_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.memory.index_buffer_size"
                  },
                  "indices_queries_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.queries.cache.size"
                  },
                  "indices_query_bool_max_clause_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.query.bool.max_clause_count"
                  },
                  "override_main_response_version": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "compatibility.override_main_response_version"
                  },
                  "reindex_remote_whitelist": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "reindex_remote_whitelist",
                    "MaxItems": 32,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "search_max_buckets": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search.max_buckets"
                  },
                  "thread_pool_analyze_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool queue size"
                  },
                  "thread_pool_analyze_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool size"
                  },
                  "thread_pool_force_merge_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "force_merge thread pool size"
                  },
                  "thread_pool_get_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool queue size"
                  },
                  "thread_pool_get_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool size"
                  },
                  "thread_pool_index_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index thread pool size"
                  },
                  "thread_pool_search_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool queue size"
                  },
                  "thread_pool_search_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool size"
                  },
                  "thread_pool_search_throttled_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool queue size"
                  },
                  "thread_pool_search_throttled_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool size"
                  },
                  "thread_pool_write_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool queue size"
                  },
                  "thread_pool_write_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool size"
                  }
                }
              }
            },
            "opensearch_dashboards": {
              "Type": "List",
              "Optional": true,
              "Description": "OpenSearch Dashboards settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable or disable OpenSearch Dashboards"
                  },
                  "max_old_space_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_old_space_size"
                  },
                  "opensearch_request_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch"
                  }
                }
              }
            },
            "opensearch_version": {
              "Type": "String",
              "Optional": true,
              "Description": "OpenSearch major version"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "opensearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to opensearch with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "opensearch_dashboards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to opensearch_dashboards with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "opensearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable opensearch"
                  },
                  "opensearch_dashboards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable opensearch_dashboards"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "opensearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to opensearch from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "opensearch_dashboards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to opensearch_dashboards from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service"
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "pg": {
        "Type": "List",
        "Description": "PostgreSQL specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dbname": {
              "Type": "String",
              "Description": "Primary PostgreSQL database name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "PostgreSQL master node host IP or name",
              "Computed": true
            },
            "password": {
              "Type": "String",
              "Description": "PostgreSQL admin user password",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "PostgreSQL port",
              "Computed": true
            },
            "replica_uri": {
              "Type": "String",
              "Description": "PostgreSQL replica URI for services with a replica",
              "Computed": true
            },
            "sslmode": {
              "Type": "String",
              "Description": "PostgreSQL sslmode setting (currently always \"require\")",
              "Computed": true
            },
            "uri": {
              "Type": "String",
              "Optional": true,
              "Description": "PostgreSQL master connection URI",
              "Computed": true
            },
            "user": {
              "Type": "String",
              "Description": "PostgreSQL admin user name",
              "Computed": true
            }
          }
        }
      },
      "pg_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Pg user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "admin_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created."
            },
            "admin_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom username for admin user. This must be set only when a new service is being created."
            },
            "backup_hour": {
              "Type": "String",
              "Optional": true,
              "Description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed."
            },
            "backup_minute": {
              "Type": "String",
              "Optional": true,
              "Description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed."
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection"
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from"
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)"
                  },
                  "method": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The migration method to be used"
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from"
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from"
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL"
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from"
                  }
                }
              }
            },
            "pg": {
              "Type": "List",
              "Optional": true,
              "Description": "postgresql.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "autovacuum_analyze_scale_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_analyze_scale_factor"
                  },
                  "autovacuum_analyze_threshold": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_analyze_threshold"
                  },
                  "autovacuum_freeze_max_age": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_freeze_max_age"
                  },
                  "autovacuum_max_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_max_workers"
                  },
                  "autovacuum_naptime": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_naptime"
                  },
                  "autovacuum_vacuum_cost_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_cost_delay"
                  },
                  "autovacuum_vacuum_cost_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_cost_limit"
                  },
                  "autovacuum_vacuum_scale_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_scale_factor"
                  },
                  "autovacuum_vacuum_threshold": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_threshold"
                  },
                  "bgwriter_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "bgwriter_delay"
                  },
                  "bgwriter_flush_after": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "bgwriter_flush_after"
                  },
                  "bgwriter_lru_maxpages": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "bgwriter_lru_maxpages"
                  },
                  "bgwriter_lru_multiplier": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "bgwriter_lru_multiplier"
                  },
                  "deadlock_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "deadlock_timeout"
                  },
                  "default_toast_compression": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "default_toast_compression"
                  },
                  "idle_in_transaction_session_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "idle_in_transaction_session_timeout"
                  },
                  "jit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "jit"
                  },
                  "log_autovacuum_min_duration": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_autovacuum_min_duration"
                  },
                  "log_error_verbosity": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_error_verbosity"
                  },
                  "log_line_prefix": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_line_prefix"
                  },
                  "log_min_duration_statement": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_min_duration_statement"
                  },
                  "max_files_per_process": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_files_per_process"
                  },
                  "max_locks_per_transaction": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_locks_per_transaction"
                  },
                  "max_logical_replication_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_logical_replication_workers"
                  },
                  "max_parallel_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_parallel_workers"
                  },
                  "max_parallel_workers_per_gather": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_parallel_workers_per_gather"
                  },
                  "max_pred_locks_per_transaction": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_pred_locks_per_transaction"
                  },
                  "max_prepared_transactions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_prepared_transactions"
                  },
                  "max_replication_slots": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_replication_slots"
                  },
                  "max_slot_wal_keep_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_slot_wal_keep_size"
                  },
                  "max_stack_depth": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_stack_depth"
                  },
                  "max_standby_archive_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_standby_archive_delay"
                  },
                  "max_standby_streaming_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_standby_streaming_delay"
                  },
                  "max_wal_senders": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_wal_senders"
                  },
                  "max_worker_processes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_worker_processes"
                  },
                  "pg_partman_bgw__dot__interval": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_partman_bgw.interval"
                  },
                  "pg_partman_bgw__dot__role": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_partman_bgw.role"
                  },
                  "pg_stat_statements__dot__track": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_stat_statements.track"
                  },
                  "temp_file_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "temp_file_limit"
                  },
                  "timezone": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "timezone"
                  },
                  "track_activity_query_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_activity_query_size"
                  },
                  "track_commit_timestamp": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_commit_timestamp"
                  },
                  "track_functions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_functions"
                  },
                  "track_io_timing": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_io_timing"
                  },
                  "wal_sender_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wal_sender_timeout"
                  },
                  "wal_writer_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wal_writer_delay"
                  }
                }
              }
            },
            "pg_read_replica": {
              "Type": "String",
              "Optional": true,
              "Description": "Should the service which is being forked be a read replica (deprecated, use read_replica service integration instead)."
            },
            "pg_service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the PG Service from which to fork (deprecated, use service_to_fork_from). This has effect only when a new service is being created."
            },
            "pg_version": {
              "Type": "String",
              "Optional": true,
              "Description": "PostgreSQL major version"
            },
            "pgbouncer": {
              "Type": "List",
              "Optional": true,
              "Description": "PGBouncer connection pooling settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "autodb_idle_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If the automatically created database pools have been unused this many seconds, they are freed. If 0 then timeout is disabled. [seconds]"
                  },
                  "autodb_max_db_connections": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Do not allow more than this many server connections per database (regardless of user). Setting it to 0 means unlimited."
                  },
                  "autodb_pool_mode": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "PGBouncer pool mode"
                  },
                  "autodb_pool_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If non-zero then create automatically a pool of that size per user when a pool doesn't exist."
                  },
                  "ignore_startup_parameters": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of parameters to ignore when given in startup packet",
                    "MaxItems": 32,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "min_pool_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Add more server connections to pool if below this number. Improves behavior when usual load comes suddenly back after period of total inactivity. The value is effectively capped at the pool size."
                  },
                  "server_idle_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If a server connection has been idle more than this many seconds it will be dropped. If 0 then timeout is disabled. [seconds]"
                  },
                  "server_lifetime": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The pooler will close an unused server connection that has been connected longer than this. [seconds]"
                  },
                  "server_reset_query_always": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Run server_reset_query (DISCARD ALL) in all pooling modes"
                  }
                }
              }
            },
            "pglookout": {
              "Type": "List",
              "Optional": true,
              "Description": "PGLookout settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_failover_replication_time_lag": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_failover_replication_time_lag"
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pg with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pgbouncer with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable pg"
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable pgbouncer"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pg from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pgbouncer from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_target_time": {
              "Type": "String",
              "Optional": true,
              "Description": "Recovery target time when forking a service. This has effect only when a new service is being created."
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "shared_buffers_percentage": {
              "Type": "String",
              "Optional": true,
              "Description": "shared_buffers_percentage"
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            },
            "synchronous_replication": {
              "Type": "String",
              "Optional": true,
              "Description": "Synchronous replication type. Note that the service plan also needs to support synchronous replication."
            },
            "timescaledb": {
              "Type": "List",
              "Optional": true,
              "Description": "TimescaleDB extension configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_background_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "timescaledb.max_background_workers"
                  }
                }
              }
            },
            "variant": {
              "Type": "String",
              "Optional": true,
              "Description": "Variant of the PostgreSQL service, may affect the features that are exposed by default"
            },
            "work_mem": {
              "Type": "String",
              "Optional": true,
              "Description": "work_mem"
            }
          }
        }
      },
      "plan": {
        "Type": "String",
        "Optional": true,
        "Description": "Subscription plan"
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Identifier of the VPC the service should be in, if any"
      },
      "redis": {
        "Type": "List",
        "Description": "Redis specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "redis_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Redis user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection"
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from"
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)"
                  },
                  "method": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The migration method to be used"
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from"
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from"
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL"
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from"
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to redis with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable redis"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to redis from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service"
            },
            "redis_acl_channels_default": {
              "Type": "String",
              "Optional": true,
              "Description": "Default ACL for pub/sub channels used when Redis user is created"
            },
            "redis_io_threads": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis IO thread count"
            },
            "redis_lfu_decay_time": {
              "Type": "String",
              "Optional": true,
              "Description": "LFU maxmemory-policy counter decay time in minutes"
            },
            "redis_lfu_log_factor": {
              "Type": "String",
              "Optional": true,
              "Description": "Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies"
            },
            "redis_maxmemory_policy": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis maxmemory-policy"
            },
            "redis_notify_keyspace_events": {
              "Type": "String",
              "Optional": true,
              "Description": "Set notify-keyspace-events option"
            },
            "redis_number_of_databases": {
              "Type": "String",
              "Optional": true,
              "Description": "Number of redis databases"
            },
            "redis_persistence": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis persistence"
            },
            "redis_pubsub_client_output_buffer_limit": {
              "Type": "String",
              "Optional": true,
              "Description": "Pub/sub client output buffer hard limit in MB"
            },
            "redis_ssl": {
              "Type": "String",
              "Optional": true,
              "Description": "Require SSL to access Redis"
            },
            "redis_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis idle connection timeout"
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "service_host": {
        "Type": "String",
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Optional": true,
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Required": true,
        "Description": "Service type code"
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` and `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services."
      }
    },
    "aiven_service_integration": {
      "__timeouts__": [
        "create"
      ],
      "datadog_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Dashboard specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "datadog_tags": {
              "Type": "List",
              "Optional": true,
              "Description": "Custom tags provided by user",
              "MaxItems": 32,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "comment": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Optional tag explanation"
                  },
                  "tag": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Tag value"
                  }
                }
              }
            },
            "exclude_consumer_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "List of custom metrics",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "exclude_topics": {
              "Type": "List",
              "Optional": true,
              "Description": "List of topics to exclude",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "include_consumer_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "List of custom metrics",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "include_topics": {
              "Type": "List",
              "Optional": true,
              "Description": "List of topics to include",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka_custom_metrics": {
              "Type": "List",
              "Optional": true,
              "Description": "List of custom metrics",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "max_jmx_metrics": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum number of JMX metrics to send"
            }
          }
        }
      },
      "destination_endpoint_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Destination endpoint for the integration (if any)"
      },
      "destination_service_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Destination service for the integration (if any)"
      },
      "integration_id": {
        "Type": "String",
        "Description": "Service Integration Id at aiven",
        "Computed": true
      },
      "integration_type": {
        "Type": "String",
        "Required": true,
        "Description": "Type of the service integration"
      },
      "kafka_connect_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka Connect specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "kafka_connect": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka Connect service configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "config_storage_topic": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The name of the topic where connector and task configuration data are stored.This must be the same for all workers with the same group_id."
                  },
                  "group_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "A unique string that identifies the Connect cluster group this worker belongs to."
                  },
                  "offset_storage_topic": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The name of the topic where connector and task configuration offsets are stored.This must be the same for all workers with the same group_id."
                  },
                  "status_storage_topic": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The name of the topic where connector and task configuration status updates are stored.This must be the same for all workers with the same group_id."
                  }
                }
              }
            }
          }
        }
      },
      "kafka_logs_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Kafka Logs specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "kafka_topic": {
              "Type": "String",
              "Optional": true,
              "Description": "Topic name"
            }
          }
        }
      },
      "kafka_mirrormaker_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Mirrormaker 2 integration specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cluster_alias": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka cluster alias"
            },
            "kafka_mirrormaker": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka MirrorMaker configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "consumer_fetch_min_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.fetch.min.bytes"
                  },
                  "producer_batch_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.batch.size"
                  },
                  "producer_buffer_memory": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.buffer.memory"
                  },
                  "producer_linger_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.linger.ms"
                  },
                  "producer_max_request_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.max.request.size"
                  }
                }
              }
            }
          }
        }
      },
      "logs_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Log integration specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "elasticsearch_index_days_max": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch index retention limit"
            },
            "elasticsearch_index_prefix": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch index prefix"
            }
          }
        }
      },
      "metrics_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Metrics specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "database": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the database where to store metric datapoints. Only affects PostgreSQL destinations. Defaults to 'metrics'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service."
            },
            "retention_days": {
              "Type": "String",
              "Optional": true,
              "Description": "Number of days to keep old metrics. Only affects PostgreSQL destinations. Set to 0 for no automatic cleanup. Defaults to 30 days."
            },
            "ro_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of a user that can be used to read metrics. This will be used for Grafana integration (if enabled) to prevent Grafana users from making undesired changes. Only affects PostgreSQL destinations. Defaults to 'metrics_reader'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service."
            },
            "source_mysql": {
              "Type": "List",
              "Optional": true,
              "Description": "Configuration options for metrics where source service is MySQL",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "telegraf": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Configuration options for Telegraf MySQL input plugin",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "gather_event_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.EVENT_WAITS"
                        },
                        "gather_file_events_stats": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "gather metrics from PERFORMANCE_SCHEMA.FILE_SUMMARY_BY_EVENT_NAME"
                        },
                        "gather_index_io_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_INDEX_USAGE"
                        },
                        "gather_info_schema_auto_inc": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather auto_increment columns and max values from information schema"
                        },
                        "gather_innodb_metrics": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from INFORMATION_SCHEMA.INNODB_METRICS"
                        },
                        "gather_perf_events_statements": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.EVENTS_STATEMENTS_SUMMARY_BY_DIGEST"
                        },
                        "gather_process_list": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather thread state counts from INFORMATION_SCHEMA.PROCESSLIST"
                        },
                        "gather_slave_status": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from SHOW SLAVE STATUS command output"
                        },
                        "gather_table_io_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_TABLE"
                        },
                        "gather_table_lock_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_LOCK_WAITS"
                        },
                        "gather_table_schema": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from INFORMATION_SCHEMA.TABLES"
                        },
                        "perf_events_statements_digest_text_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Truncates digest text from perf_events_statements into this many characters"
                        },
                        "perf_events_statements_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Limits metrics from perf_events_statements"
                        },
                        "perf_events_statements_time_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Only include perf_events_statements whose last seen is less than this many seconds"
                        }
                      }
                    }
                  }
                }
              }
            },
            "username": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the user used to write metrics. Only affects PostgreSQL destinations. Defaults to 'metrics_writer'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service."
            }
          }
        }
      },
      "mirrormaker_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Mirrormaker 1 integration specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "mirrormaker_whitelist": {
              "Type": "String",
              "Optional": true,
              "Description": "Mirrormaker topic whitelist"
            }
          }
        }
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project the integration belongs to"
      },
      "prometheus_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Prometheus coordinator specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "source_mysql": {
              "Type": "List",
              "Optional": true,
              "Description": "Configuration options for metrics where source service is MySQL",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "telegraf": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Configuration options for Telegraf MySQL input plugin",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "gather_event_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.EVENT_WAITS"
                        },
                        "gather_file_events_stats": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "gather metrics from PERFORMANCE_SCHEMA.FILE_SUMMARY_BY_EVENT_NAME"
                        },
                        "gather_index_io_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_INDEX_USAGE"
                        },
                        "gather_info_schema_auto_inc": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather auto_increment columns and max values from information schema"
                        },
                        "gather_innodb_metrics": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from INFORMATION_SCHEMA.INNODB_METRICS"
                        },
                        "gather_perf_events_statements": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.EVENTS_STATEMENTS_SUMMARY_BY_DIGEST"
                        },
                        "gather_process_list": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather thread state counts from INFORMATION_SCHEMA.PROCESSLIST"
                        },
                        "gather_slave_status": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from SHOW SLAVE STATUS command output"
                        },
                        "gather_table_io_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_TABLE"
                        },
                        "gather_table_lock_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_LOCK_WAITS"
                        },
                        "gather_table_schema": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from INFORMATION_SCHEMA.TABLES"
                        },
                        "perf_events_statements_digest_text_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Truncates digest text from perf_events_statements into this many characters"
                        },
                        "perf_events_statements_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Limits metrics from perf_events_statements"
                        },
                        "perf_events_statements_time_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Only include perf_events_statements whose last seen is less than this many seconds"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "source_endpoint_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Source endpoint for the integration (if any)"
      },
      "source_service_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Source service for the integration (if any)"
      }
    },
    "aiven_service_integration_endpoint": {
      "datadog_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Datadog specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "datadog_api_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Datadog API key"
            },
            "datadog_tags": {
              "Type": "List",
              "Optional": true,
              "Description": "Custom tags provided by user",
              "MaxItems": 32,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "comment": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Optional tag explanation"
                  },
                  "tag": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Tag value"
                  }
                }
              }
            },
            "disable_consumer_stats": {
              "Type": "String",
              "Optional": true,
              "Description": "Disable consumer group metrics"
            },
            "kafka_consumer_check_instances": {
              "Type": "String",
              "Optional": true,
              "Description": "Number of separate instances to fetch kafka consumer statistics with"
            },
            "kafka_consumer_stats_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Number of seconds that datadog will wait to get consumer statistics from brokers"
            },
            "max_partition_contexts": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum number of partition contexts to send"
            },
            "site": {
              "Type": "String",
              "Optional": true,
              "Description": "Datadog intake site. Defaults to datadoghq.com"
            }
          }
        }
      },
      "endpoint_config": {
        "Type": "Map",
        "Description": "Integration endpoint specific backend configuration",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "endpoint_name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the service integration endpoint"
      },
      "endpoint_type": {
        "Type": "String",
        "Required": true,
        "Description": "Type of the service integration endpoint"
      },
      "external_aws_cloudwatch_logs_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "external AWS CloudWatch Logs specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_key": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS access key. Required permissions are logs:CreateLogGroup, logs:CreateLogStream, logs:PutLogEvents and logs:DescribeLogStreams"
            },
            "log_group_name": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS CloudWatch log group name"
            },
            "region": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS region"
            },
            "secret_key": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS secret key"
            }
          }
        }
      },
      "external_aws_cloudwatch_metrics_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "External AWS cloudwatch mertrics specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_key": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS access key. Required permissions are cloudwatch:PutMetricData"
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS CloudWatch Metrics Namespace"
            },
            "region": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS region"
            },
            "secret_key": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS secret key"
            }
          }
        }
      },
      "external_elasticsearch_logs_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "external elasticsearch specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ca": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM encoded CA certificate"
            },
            "index_days_max": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum number of days of logs to keep"
            },
            "index_prefix": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch index prefix"
            },
            "timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch request timeout limit"
            },
            "url": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch connection URL"
            }
          }
        }
      },
      "external_google_cloud_logging_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "external Google Cloud Logginig specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "log_id": {
              "Type": "String",
              "Optional": true,
              "Description": "Google Cloud Logging log id"
            },
            "project_id": {
              "Type": "String",
              "Optional": true,
              "Description": "GCP project id."
            },
            "service_account_credentials": {
              "Type": "String",
              "Optional": true,
              "Description": "Google Service Account Credentials"
            }
          }
        }
      },
      "external_kafka_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "external Kafka specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bootstrap_servers": {
              "Type": "String",
              "Optional": true,
              "Description": "Bootstrap servers"
            },
            "sasl_mechanism": {
              "Type": "String",
              "Optional": true,
              "Description": "The list of SASL mechanisms enabled in the Kafka server."
            },
            "sasl_plain_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for SASL PLAIN mechanism in the Kafka server."
            },
            "sasl_plain_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Username for SASL PLAIN mechanism in the Kafka server."
            },
            "security_protocol": {
              "Type": "String",
              "Optional": true,
              "Description": "Security protocol"
            },
            "ssl_ca_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM-encoded CA certificate"
            },
            "ssl_client_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM-encoded client certificate"
            },
            "ssl_client_key": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM-encoded client key"
            },
            "ssl_endpoint_identification_algorithm": {
              "Type": "String",
              "Optional": true,
              "Description": "The endpoint identification algorithm to validate server hostname using server certificate."
            }
          }
        }
      },
      "external_schema_registry_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "External schema registry specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "authentication": {
              "Type": "String",
              "Optional": true,
              "Description": "Authentication method"
            },
            "basic_auth_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Basic authentication password"
            },
            "basic_auth_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Basic authentication user name"
            },
            "url": {
              "Type": "String",
              "Optional": true,
              "Description": "Schema Registry URL"
            }
          }
        }
      },
      "jolokia_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Jolokia specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "basic_auth_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Jolokia basic authentication password"
            },
            "basic_auth_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Jolokia basic authentication username"
            }
          }
        }
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project the service integration endpoint belongs to"
      },
      "prometheus_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Prometheus specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "basic_auth_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Prometheus basic authentication password"
            },
            "basic_auth_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Prometheus basic authentication username"
            }
          }
        }
      },
      "rsyslog_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "rsyslog specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ca": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM encoded CA certificate"
            },
            "cert": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM encoded client certificate"
            },
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "message format"
            },
            "key": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM encoded client key"
            },
            "logline": {
              "Type": "String",
              "Optional": true,
              "Description": "custom syslog message format"
            },
            "port": {
              "Type": "String",
              "Optional": true,
              "Description": "rsyslog server port"
            },
            "sd": {
              "Type": "String",
              "Optional": true,
              "Description": "Structured data block for log message"
            },
            "server": {
              "Type": "String",
              "Optional": true,
              "Description": "rsyslog server IP address or hostname"
            },
            "tls": {
              "Type": "String",
              "Optional": true,
              "Description": "Require TLS"
            }
          }
        }
      },
      "signalfx_user_config": {
        "Type": "List",
        "Optional": true,
        "Description": "Signalfx specific user configurable settings",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "enabled_metrics": {
              "Type": "List",
              "Optional": true,
              "Description": "list of metrics to send",
              "MaxItems": 256,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "signalfx_api_key": {
              "Type": "String",
              "Optional": true,
              "Description": "SignalFX API key"
            },
            "signalfx_realm": {
              "Type": "String",
              "Optional": true,
              "Description": "SignalFX realm"
            }
          }
        }
      }
    },
    "aiven_service_user": {
      "access_cert": {
        "Type": "String",
        "Description": "Access certificate for the user if applicable for the service in question",
        "Computed": true
      },
      "access_key": {
        "Type": "String",
        "Description": "Access certificate key for the user if applicable for the service in question",
        "Computed": true
      },
      "authentication": {
        "Type": "String",
        "Optional": true,
        "Description": "Authentication details. The possible values are `caching_sha2_password` and `mysql_native_password`."
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "The password of the service user ( not applicable for all services ).",
        "Computed": true
      },
      "pg_allow_replication": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Postgres specific field, defines whether replication is allowed. This property cannot be changed, doing so forces recreation of the resource.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Bool"
        }
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "redis_acl_categories": {
        "Type": "List",
        "Optional": true,
        "Description": "Redis specific field, defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "redis_acl_channels": {
        "Type": "List",
        "Optional": true,
        "Description": "Redis specific field, defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces recreation of the resource.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "redis_acl_commands": {
        "Type": "List",
        "Optional": true,
        "Description": "Redis specific field, defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "redis_acl_keys": {
        "Type": "List",
        "Optional": true,
        "Description": "Redis specific field, defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "type": {
        "Type": "String",
        "Description": "Type of the user account. Tells wether the user is the primary account or a regular account.",
        "Computed": true
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "The actual name of the service user. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_transit_gateway_vpc_attachment": {
      "__timeouts__": [
        "create"
      ],
      "peer_cloud_account": {
        "Type": "String",
        "Required": true,
        "Description": "AWS account ID or GCP project ID of the peered VPC This property cannot be changed, doing so forces recreation of the resource."
      },
      "peer_region": {
        "Type": "String",
        "Required": true,
        "Description": "AWS region of the peered VPC (if not in the same region as Aiven VPC)"
      },
      "peer_vpc": {
        "Type": "String",
        "Required": true,
        "Description": "Transit gateway ID This property cannot be changed, doing so forces recreation of the resource."
      },
      "peering_connection_id": {
        "Type": "String",
        "Description": "Cloud provider identifier for the peering connection if available",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "State of the peering connection",
        "Computed": true
      },
      "state_info": {
        "Type": "Map",
        "Description": "State-specific help or error information",
        "Computed": true
      },
      "user_peer_network_cidrs": {
        "Type": "List",
        "Required": true,
        "Description": "List of private IPv4 ranges to route through the peering connection",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "vpc_id": {
        "Type": "String",
        "Required": true,
        "Description": "The VPC the peering connection belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_vpc_peering_connection": {
      "__timeouts__": [
        "create",
        "delete"
      ],
      "peer_azure_app_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet This property cannot be changed, doing so forces recreation of the resource."
      },
      "peer_azure_tenant_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Azure tenant id in UUID4 form. This property cannot be changed, doing so forces recreation of the resource."
      },
      "peer_cloud_account": {
        "Type": "String",
        "Required": true,
        "Description": "AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the resource."
      },
      "peer_region": {
        "Type": "String",
        "Optional": true,
        "Description": "AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces recreation of the resource."
      },
      "peer_resource_group": {
        "Type": "String",
        "Optional": true,
        "Description": "Azure resource group name of the peered VPC This property cannot be changed, doing so forces recreation of the resource."
      },
      "peer_vpc": {
        "Type": "String",
        "Required": true,
        "Description": "AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the resource."
      },
      "peering_connection_id": {
        "Type": "String",
        "Description": "Cloud provider identifier for the peering connection if available",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "State of the peering connection",
        "Computed": true
      },
      "state_info": {
        "Type": "Map",
        "Description": "State-specific help or error information",
        "Computed": true
      },
      "vpc_id": {
        "Type": "String",
        "Required": true,
        "Description": "The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource."
      }
    }
  },
  "data-sources": {
    "aiven_account": {
      "account_id": {
        "Type": "String",
        "Description": "Account id",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "Time of creation",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Account name"
      },
      "owner_team_id": {
        "Type": "String",
        "Description": "Owner team id",
        "Computed": true
      },
      "tenant_id": {
        "Type": "String",
        "Description": "Tenant id",
        "Computed": true
      },
      "update_time": {
        "Type": "String",
        "Description": "Time of last update",
        "Computed": true
      }
    },
    "aiven_account_authentication": {
      "account_id": {
        "Type": "String",
        "Required": true,
        "Description": "The unique id of the account."
      },
      "authentication_id": {
        "Type": "String",
        "Description": "Account authentication id",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "Time of creation",
        "Computed": true
      },
      "enabled": {
        "Type": "Bool",
        "Description": "Status of account authentication method. The default value is `false`.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the account authentication."
      },
      "saml_acs_url": {
        "Type": "String",
        "Description": "SAML Assertion Consumer Service URL",
        "Computed": true
      },
      "saml_certificate": {
        "Type": "String",
        "Description": "SAML Certificate",
        "Computed": true
      },
      "saml_entity_id": {
        "Type": "String",
        "Description": "SAML Entity id",
        "Computed": true
      },
      "saml_idp_url": {
        "Type": "String",
        "Description": "SAML Idp URL",
        "Computed": true
      },
      "saml_metadata_url": {
        "Type": "String",
        "Description": "SAML Metadata URL",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Description": "The account authentication type. The possible values are `internal` and `saml`.",
        "Computed": true
      },
      "update_time": {
        "Type": "String",
        "Description": "Time of last update",
        "Computed": true
      }
    },
    "aiven_account_team": {
      "account_id": {
        "Type": "String",
        "Required": true,
        "Description": "The unique account id"
      },
      "create_time": {
        "Type": "String",
        "Description": "Time of creation",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The account team name"
      },
      "team_id": {
        "Type": "String",
        "Description": "The auto-generated unique account team id",
        "Computed": true
      },
      "update_time": {
        "Type": "String",
        "Description": "Time of last update",
        "Computed": true
      }
    },
    "aiven_account_team_member": {
      "accepted": {
        "Type": "Bool",
        "Description": "is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an account team.",
        "Computed": true
      },
      "account_id": {
        "Type": "String",
        "Required": true,
        "Description": "The unique account id This property cannot be changed, doing so forces recreation of the resource."
      },
      "create_time": {
        "Type": "String",
        "Description": "Time of creation",
        "Computed": true
      },
      "invited_by_user_email": {
        "Type": "String",
        "Description": "The email address that invited this user.",
        "Computed": true
      },
      "team_id": {
        "Type": "String",
        "Required": true,
        "Description": "An account team id This property cannot be changed, doing so forces recreation of the resource."
      },
      "user_email": {
        "Type": "String",
        "Required": true,
        "Description": "Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_account_team_project": {
      "account_id": {
        "Type": "String",
        "Required": true,
        "Description": "The unique account id"
      },
      "project_name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of an already existing project"
      },
      "team_id": {
        "Type": "String",
        "Required": true,
        "Description": "An account team id"
      },
      "team_type": {
        "Type": "String",
        "Description": "The Account team project type The possible values are `admin`, `developer`, `operator` and `read_only`.",
        "Computed": true
      }
    },
    "aiven_aws_privatelink": {
      "aws_service_id": {
        "Type": "String",
        "Description": "AWS service ID",
        "Computed": true
      },
      "aws_service_name": {
        "Type": "String",
        "Description": "AWS service name",
        "Computed": true
      },
      "principals": {
        "Type": "Set",
        "Description": "List of allowed principals",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_azure_privatelink": {
      "azure_service_alias": {
        "Type": "String",
        "Description": "Azure Privatelink service alias",
        "Computed": true
      },
      "azure_service_id": {
        "Type": "String",
        "Description": "Azure Privatelink service ID",
        "Computed": true
      },
      "message": {
        "Type": "String",
        "Description": "Printable result of the Azure Privatelink request",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "state": {
        "Type": "String",
        "Description": "Privatelink resource state",
        "Computed": true
      },
      "user_subscription_ids": {
        "Type": "Set",
        "Description": "A List of allowed Subscription IDs Maximum Length: `16`.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "aiven_billing_group": {
      "account_id": {
        "Type": "String",
        "Description": "Account id",
        "Computed": true
      },
      "address_lines": {
        "Type": "Set",
        "Description": "Address lines",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "billing_currency": {
        "Type": "String",
        "Description": "Billing currency",
        "Computed": true
      },
      "billing_emails": {
        "Type": "Set",
        "Description": "Billing contact emails",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "billing_extra_text": {
        "Type": "String",
        "Description": "Billing extra text",
        "Computed": true
      },
      "card_id": {
        "Type": "String",
        "Description": "Credit card id",
        "Computed": true
      },
      "city": {
        "Type": "String",
        "Description": "City",
        "Computed": true
      },
      "company": {
        "Type": "String",
        "Description": "Company name",
        "Computed": true
      },
      "country_code": {
        "Type": "String",
        "Description": "Country code",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Billing Group name"
      },
      "state": {
        "Type": "String",
        "Description": "State",
        "Computed": true
      },
      "vat_id": {
        "Type": "String",
        "Description": "VAT id",
        "Computed": true
      },
      "zip_code": {
        "Type": "String",
        "Description": "Zip Code",
        "Computed": true
      }
    },
    "aiven_cassandra": {
      "cassandra": {
        "Type": "List",
        "Description": "Cassandra server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "cassandra_user_config": {
        "Type": "List",
        "Description": "Cassandra user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cassandra": {
              "Type": "List",
              "Optional": true,
              "Description": "cassandra configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "batch_size_fail_threshold_in_kb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "batch_size_fail_threshold_in_kb"
                  },
                  "batch_size_warn_threshold_in_kb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "batch_size_warn_threshold_in_kb"
                  }
                }
              }
            },
            "cassandra_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Cassandra major version"
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migrate_sstableloader": {
              "Type": "String",
              "Optional": true,
              "Description": "Migration mode for the sstableloader utility"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "cloud_name": {
        "Type": "String",
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).",
        "Computed": true
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.",
        "Computed": true
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.",
        "Computed": true
      },
      "maintenance_window_time": {
        "Type": "String",
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.",
        "Computed": true
      },
      "plan": {
        "Type": "String",
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.",
        "Computed": true
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.",
        "Computed": true
      }
    },
    "aiven_clickhouse": {
      "clickhouse": {
        "Type": "List",
        "Description": "Clickhouse server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "clickhouse_user_config": {
        "Type": "List",
        "Description": "Clickhouse user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            }
          }
        }
      },
      "cloud_name": {
        "Type": "String",
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).",
        "Computed": true
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.",
        "Computed": true
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.",
        "Computed": true
      },
      "maintenance_window_time": {
        "Type": "String",
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.",
        "Computed": true
      },
      "plan": {
        "Type": "String",
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.",
        "Computed": true
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.",
        "Computed": true
      }
    },
    "aiven_connection_pool": {
      "connection_uri": {
        "Type": "String",
        "Description": "The URI for connecting to the pool",
        "Computed": true
      },
      "database_name": {
        "Type": "String",
        "Description": "The name of the database the pool connects to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.",
        "Computed": true
      },
      "pool_mode": {
        "Type": "String",
        "Description": "The mode the pool operates in The possible values are `session`, `transaction` and `statement`. The default value is `transaction`.",
        "Computed": true
      },
      "pool_name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the created pool. This property cannot be changed, doing so forces recreation of the resource."
      },
      "pool_size": {
        "Type": "Int",
        "Description": "The number of connections the pool may create towards the backend server. This does not affect the number of incoming connections, which is always a much larger number. The default value is `10`.",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "username": {
        "Type": "String",
        "Description": "The name of the service user used to connect to the database. To set up proper dependencies please refer to this variable as a reference.",
        "Computed": true
      }
    },
    "aiven_database": {
      "database_name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the service database. This property cannot be changed, doing so forces recreation of the resource."
      },
      "lc_collate": {
        "Type": "String",
        "Description": "Default string sort order (`LC_COLLATE`) of the database. The default value is `en_US.UTF-8`. This property cannot be changed, doing so forces recreation of the resource.",
        "Computed": true
      },
      "lc_ctype": {
        "Type": "String",
        "Description": "Default character classification (`LC_CTYPE`) of the database. The default value is `en_US.UTF-8`. This property cannot be changed, doing so forces recreation of the resource.",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "termination_protection": {
        "Type": "Bool",
        "Description": "It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is recommended to enable this for any production databases containing critical data. The default value is `false`.",
        "Computed": true
      }
    },
    "aiven_elasticsearch": {
      "cloud_name": {
        "Type": "String",
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).",
        "Computed": true
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.",
        "Computed": true
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "elasticsearch": {
        "Type": "List",
        "Description": "Elasticsearch server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "kibana_uri": {
              "Type": "String",
              "Description": "URI for Kibana frontend",
              "Computed": true
            }
          }
        }
      },
      "elasticsearch_user_config": {
        "Type": "List",
        "Description": "Elasticsearch user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "disable_replication_factor_adjustment": {
              "Type": "String",
              "Optional": true,
              "Description": "Disable replication factor adjustment"
            },
            "elasticsearch": {
              "Type": "List",
              "Optional": true,
              "Description": "Elasticsearch settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action_auto_create_index_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "action.auto_create_index"
                  },
                  "action_destructive_requires_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Require explicit index names when deleting"
                  },
                  "cluster_max_shards_per_node": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "cluster.max_shards_per_node"
                  },
                  "http_max_content_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_content_length"
                  },
                  "http_max_header_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_header_size"
                  },
                  "http_max_initial_line_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_initial_line_length"
                  },
                  "indices_fielddata_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.fielddata.cache.size"
                  },
                  "indices_memory_index_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.memory.index_buffer_size"
                  },
                  "indices_queries_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.queries.cache.size"
                  },
                  "indices_query_bool_max_clause_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.query.bool.max_clause_count"
                  },
                  "override_main_response_version": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "compatibility.override_main_response_version"
                  },
                  "reindex_remote_whitelist": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "reindex_remote_whitelist",
                    "MaxItems": 32,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "search_max_buckets": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search.max_buckets"
                  },
                  "thread_pool_analyze_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool queue size"
                  },
                  "thread_pool_analyze_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool size"
                  },
                  "thread_pool_force_merge_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "force_merge thread pool size"
                  },
                  "thread_pool_get_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool queue size"
                  },
                  "thread_pool_get_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool size"
                  },
                  "thread_pool_index_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index thread pool queue size"
                  },
                  "thread_pool_index_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index thread pool size"
                  },
                  "thread_pool_search_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool queue size"
                  },
                  "thread_pool_search_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool size"
                  },
                  "thread_pool_search_throttled_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool queue size"
                  },
                  "thread_pool_search_throttled_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool size"
                  },
                  "thread_pool_write_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool queue size"
                  },
                  "thread_pool_write_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool size"
                  }
                }
              }
            },
            "elasticsearch_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch major version"
            },
            "index_patterns": {
              "Type": "List",
              "Optional": true,
              "Description": "Index patterns",
              "MaxItems": 512,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_index_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Maximum number of indexes to keep"
                  },
                  "pattern": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "fnmatch pattern"
                  },
                  "sorting_algorithm": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Deletion sorting algorithm"
                  }
                }
              }
            },
            "index_template": {
              "Type": "List",
              "Optional": true,
              "Description": "Template settings for all new indexes",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mapping_nested_objects_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.mapping.nested_objects.limit"
                  },
                  "number_of_replicas": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_replicas"
                  },
                  "number_of_shards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_shards"
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "keep_index_refresh_interval": {
              "Type": "String",
              "Optional": true,
              "Description": "Don't reset index.refresh_interval to the default value"
            },
            "kibana": {
              "Type": "List",
              "Optional": true,
              "Description": "Kibana settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch_request_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Timeout in milliseconds for requests made by Kibana towards Elasticsearch"
                  },
                  "enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable or disable Kibana"
                  },
                  "max_old_space_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_old_space_size"
                  }
                }
              }
            },
            "max_index_count": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum index count"
            },
            "opensearch_version": {
              "Type": "String",
              "Optional": true,
              "Description": "OpenSearch major version"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to elasticsearch with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kibana with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable elasticsearch"
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kibana"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to elasticsearch from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kibana from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service"
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.",
        "Computed": true
      },
      "maintenance_window_time": {
        "Type": "String",
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.",
        "Computed": true
      },
      "plan": {
        "Type": "String",
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.",
        "Computed": true
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.",
        "Computed": true
      }
    },
    "aiven_elasticsearch_acl": {
      "acl": {
        "Type": "Set",
        "Description": "List of Elasticsearch ACLs",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "rule": {
              "Type": "Set",
              "Required": true,
              "Description": "Elasticsearch rules.",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "index": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Elasticsearch index pattern. Maximum Length: `249`."
                  },
                  "permission": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Elasticsearch permission. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`."
                  }
                }
              }
            },
            "username": {
              "Type": "String",
              "Required": true,
              "Description": "Username for the ACL entry. Maximum Length: `40`."
            }
          }
        }
      },
      "enabled": {
        "Type": "Bool",
        "Description": "Enable Elasticsearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.",
        "Computed": true
      },
      "extended_acl": {
        "Type": "Bool",
        "Description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is `true`.",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_elasticsearch_acl_config": {
      "enabled": {
        "Type": "Bool",
        "Description": "Enable Elasticsearch ACLs. When disabled authenticated service users have unrestricted access The default value is `true`.",
        "Computed": true
      },
      "extended_acl": {
        "Type": "Bool",
        "Description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to The default value is `10`.",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_elasticsearch_acl_rule": {
      "index": {
        "Type": "String",
        "Required": true,
        "Description": "The index pattern for the ACL entry. Maximum Length: `249`. This property cannot be changed, doing so forces recreation of the resource."
      },
      "permission": {
        "Type": "String",
        "Description": "The permission for the ACL entry. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "The username for the ACL entry. Maximum Length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_flink": {
      "cloud_name": {
        "Type": "String",
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).",
        "Computed": true
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.",
        "Computed": true
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "flink": {
        "Type": "List",
        "Description": "Flink server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "host_ports": {
              "Type": "List",
              "Optional": true,
              "Description": "Host and Port of a Flink server",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "flink_user_config": {
        "Type": "List",
        "Description": "Flink user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "execution_checkpointing_interval_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink execution.checkpointing.interval in milliseconds"
            },
            "execution_checkpointing_timeout_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink execution.checkpointing.timeout in milliseconds"
            },
            "flink_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink major version"
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "number_of_task_slots": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink taskmanager.numberOfTaskSlots"
            },
            "parallelism_default": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink parallelism.default"
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "flink": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable flink"
                  }
                }
              }
            },
            "restart_strategy": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink restart-strategy"
            },
            "restart_strategy_delay_sec": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink restart-strategy.failure-rate.delay in seconds"
            },
            "restart_strategy_failure_rate_interval_min": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink restart-strategy.failure-rate.failure-rate-interval in minutes"
            },
            "restart_strategy_max_failures": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink restart-strategy.failure-rate.max-failures-per-interval"
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.",
        "Computed": true
      },
      "maintenance_window_time": {
        "Type": "String",
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.",
        "Computed": true
      },
      "plan": {
        "Type": "String",
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.",
        "Computed": true
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.",
        "Computed": true
      }
    },
    "aiven_grafana": {
      "cloud_name": {
        "Type": "String",
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).",
        "Computed": true
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.",
        "Computed": true
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "grafana": {
        "Type": "List",
        "Description": "Grafana server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "grafana_user_config": {
        "Type": "List",
        "Description": "Grafana user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "alerting_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable or disable Grafana alerting functionality"
            },
            "alerting_error_or_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Default error or timeout setting for new alerting rules"
            },
            "alerting_max_annotations_to_keep": {
              "Type": "String",
              "Optional": true,
              "Description": "Max number of alert annotations that Grafana stores. 0 (default) keeps all alert annotations."
            },
            "alerting_nodata_or_nullvalues": {
              "Type": "String",
              "Optional": true,
              "Description": "Default value for 'no data or null values' for new alerting rules"
            },
            "allow_embedding": {
              "Type": "String",
              "Optional": true,
              "Description": "Allow embedding Grafana dashboards with iframe/frame/object/embed tags. Disabled by default to limit impact of clickjacking"
            },
            "auth_azuread": {
              "Type": "List",
              "Optional": true,
              "Description": "Azure AD OAuth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in"
                  },
                  "allowed_domains": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Allowed domains",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "allowed_groups": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given groups",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "auth_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Authorization URL"
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider"
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider"
                  },
                  "token_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Token URL"
                  }
                }
              }
            },
            "auth_basic_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable or disable basic authentication form, used by Grafana built-in login"
            },
            "auth_generic_oauth": {
              "Type": "List",
              "Optional": true,
              "Description": "Generic OAuth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in"
                  },
                  "allowed_domains": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Allowed domains",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "allowed_organizations": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require user to be member of one of the listed organizations",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "api_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "API URL"
                  },
                  "auth_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Authorization URL"
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider"
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider"
                  },
                  "name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Name of the OAuth integration"
                  },
                  "scopes": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "OAuth scopes",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "token_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Token URL"
                  }
                }
              }
            },
            "auth_github": {
              "Type": "List",
              "Optional": true,
              "Description": "Github Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in"
                  },
                  "allowed_organizations": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given organizations",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider"
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider"
                  },
                  "team_ids": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given team IDs",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "auth_gitlab": {
              "Type": "List",
              "Optional": true,
              "Description": "GitLab Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in"
                  },
                  "allowed_groups": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given groups",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "api_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "API URL. This only needs to be set when using self hosted GitLab"
                  },
                  "auth_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Authorization URL. This only needs to be set when using self hosted GitLab"
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider"
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider"
                  },
                  "token_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Token URL. This only needs to be set when using self hosted GitLab"
                  }
                }
              }
            },
            "auth_google": {
              "Type": "List",
              "Optional": true,
              "Description": "Google Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in"
                  },
                  "allowed_domains": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Domains allowed to sign-in to this Grafana",
                    "MaxItems": 64,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider"
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider"
                  }
                }
              }
            },
            "cookie_samesite": {
              "Type": "String",
              "Optional": true,
              "Description": "Cookie SameSite attribute: 'strict' prevents sending cookie for cross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value."
            },
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "dashboards_min_refresh_interval": {
              "Type": "String",
              "Optional": true,
              "Description": "Minimum refresh interval"
            },
            "dashboards_versions_to_keep": {
              "Type": "String",
              "Optional": true,
              "Description": "Dashboard versions to keep per dashboard"
            },
            "dataproxy_send_user_header": {
              "Type": "String",
              "Optional": true,
              "Description": "Send 'X-Grafana-User' header to data source"
            },
            "dataproxy_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Timeout for data proxy requests in seconds"
            },
            "date_formats": {
              "Type": "List",
              "Optional": true,
              "Description": "Grafana date format specifications",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "default_timezone": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Default time zone for user preferences. Value 'browser' uses browser local time zone."
                  },
                  "full_date": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string for cases where full date is shown"
                  },
                  "interval_day": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring day accuracy is shown"
                  },
                  "interval_hour": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring hour accuracy is shown"
                  },
                  "interval_minute": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring minute accuracy is shown"
                  },
                  "interval_month": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring month accuracy is shown"
                  },
                  "interval_second": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring second accuracy is shown"
                  },
                  "interval_year": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring year accuracy is shown"
                  }
                }
              }
            },
            "disable_gravatar": {
              "Type": "String",
              "Optional": true,
              "Description": "Set to true to disable gravatar. Defaults to false (gravatar is enabled)"
            },
            "editors_can_admin": {
              "Type": "String",
              "Optional": true,
              "Description": "Editors can manage folders, teams and dashboards created by them"
            },
            "external_image_storage": {
              "Type": "List",
              "Optional": true,
              "Description": "External image store settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "access_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "S3 access key. Requires permissions to the S3 bucket for the s3:PutObject and s3:PutObjectAcl actions"
                  },
                  "bucket_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Bucket URL for S3"
                  },
                  "provider": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Provider type"
                  },
                  "secret_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "S3 secret key"
                  }
                }
              }
            },
            "google_analytics_ua_id": {
              "Type": "String",
              "Optional": true,
              "Description": "Google Analytics ID"
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "metrics_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Grafana /metrics endpoint"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to grafana with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable grafana"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to grafana from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service"
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "smtp_server": {
              "Type": "List",
              "Optional": true,
              "Description": "SMTP server settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "from_address": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Address used for sending emails"
                  },
                  "from_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Name used in outgoing emails, defaults to Grafana"
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Server hostname or IP"
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for SMTP authentication"
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "SMTP server port"
                  },
                  "skip_verify": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Skip verifying server certificate. Defaults to false"
                  },
                  "starttls_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS. Default is OpportunisticStartTLS."
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Username for SMTP authentication"
                  }
                }
              }
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            },
            "user_auto_assign_org": {
              "Type": "String",
              "Optional": true,
              "Description": "Auto-assign new users on signup to main organization. Defaults to false"
            },
            "user_auto_assign_org_role": {
              "Type": "String",
              "Optional": true,
              "Description": "Set role for new signups. Defaults to Viewer"
            },
            "viewers_can_edit": {
              "Type": "String",
              "Optional": true,
              "Description": "Users with view-only permission can edit but not save dashboards"
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.",
        "Computed": true
      },
      "maintenance_window_time": {
        "Type": "String",
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.",
        "Computed": true
      },
      "plan": {
        "Type": "String",
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.",
        "Computed": true
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.",
        "Computed": true
      }
    },
    "aiven_influxdb": {
      "cloud_name": {
        "Type": "String",
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).",
        "Computed": true
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.",
        "Computed": true
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "influxdb": {
        "Type": "List",
        "Description": "InfluxDB server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "database_name": {
              "Type": "String",
              "Description": "Name of the default InfluxDB database",
              "Computed": true
            }
          }
        }
      },
      "influxdb_user_config": {
        "Type": "List",
        "Description": "Influxdb user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "influxdb": {
              "Type": "List",
              "Optional": true,
              "Description": "influxdb.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "log_queries_after": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum duration in seconds before a query is logged as a slow query. Setting this to 0 (the default) will never log slow queries."
                  },
                  "max_connection_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Maximum number of connections to InfluxDB. Setting this to 0 (default) means no limit. If using max_connection_limit, it is recommended to set the value to be large enough in order to not block clients unnecessarily."
                  },
                  "max_row_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of rows returned in a non-chunked query. Setting this to 0 (the default) allows an unlimited number to be returned."
                  },
                  "max_select_buckets": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of 'GROUP BY time()' buckets that can be processed in a query. Setting this to 0 (the default) allows an unlimited number to be processed."
                  },
                  "max_select_point": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of points that can be processed in a SELECT statement. Setting this to 0 (the default) allows an unlimited number to be processed."
                  },
                  "query_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum duration in seconds before a query is killed. Setting this to 0 (the default) will never kill slow queries."
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to influxdb with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable influxdb"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to influxdb from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service"
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.",
        "Computed": true
      },
      "maintenance_window_time": {
        "Type": "String",
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.",
        "Computed": true
      },
      "plan": {
        "Type": "String",
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.",
        "Computed": true
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.",
        "Computed": true
      }
    },
    "aiven_kafka": {
      "cloud_name": {
        "Type": "String",
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).",
        "Computed": true
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "default_acl": {
        "Type": "Bool",
        "Description": "Create default wildcard Kafka ACL",
        "Computed": true
      },
      "disk_space": {
        "Type": "String",
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.",
        "Computed": true
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "kafka": {
        "Type": "List",
        "Description": "Kafka server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka client certificate",
              "Computed": true
            },
            "access_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka client certificate key",
              "Computed": true
            },
            "connect_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka Connect URI, if any",
              "Computed": true
            },
            "rest_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka REST URI, if any",
              "Computed": true
            },
            "schema_registry_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Schema Registry URI, if any",
              "Computed": true
            }
          }
        }
      },
      "kafka_user_config": {
        "Type": "List",
        "Description": "Kafka user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka broker configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "auto_create_topics_enable": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "auto.create.topics.enable"
                  },
                  "compression_type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "compression.type"
                  },
                  "connections_max_idle_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "connections.max.idle.ms"
                  },
                  "default_replication_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "default.replication.factor"
                  },
                  "group_initial_rebalance_delay_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.initial.rebalance.delay.ms"
                  },
                  "group_max_session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.max.session.timeout.ms"
                  },
                  "group_min_session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.min.session.timeout.ms"
                  },
                  "log_cleaner_delete_retention_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.delete.retention.ms"
                  },
                  "log_cleaner_max_compaction_lag_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.max.compaction.lag.ms"
                  },
                  "log_cleaner_min_cleanable_ratio": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.min.cleanable.ratio"
                  },
                  "log_cleaner_min_compaction_lag_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.min.compaction.lag.ms"
                  },
                  "log_cleanup_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleanup.policy"
                  },
                  "log_flush_interval_messages": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.flush.interval.messages"
                  },
                  "log_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.flush.interval.ms"
                  },
                  "log_index_interval_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.index.interval.bytes"
                  },
                  "log_index_size_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.index.size.max.bytes"
                  },
                  "log_message_downconversion_enable": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.downconversion.enable"
                  },
                  "log_message_timestamp_difference_max_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.timestamp.difference.max.ms"
                  },
                  "log_message_timestamp_type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.timestamp.type"
                  },
                  "log_preallocate": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.preallocate"
                  },
                  "log_retention_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.bytes"
                  },
                  "log_retention_hours": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.hours"
                  },
                  "log_retention_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.ms"
                  },
                  "log_roll_jitter_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.roll.jitter.ms"
                  },
                  "log_roll_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.roll.ms"
                  },
                  "log_segment_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.segment.bytes"
                  },
                  "log_segment_delete_delay_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.segment.delete.delay.ms"
                  },
                  "max_connections_per_ip": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max.connections.per.ip"
                  },
                  "max_incremental_fetch_session_cache_slots": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max.incremental.fetch.session.cache.slots"
                  },
                  "message_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "message.max.bytes"
                  },
                  "min_insync_replicas": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "min.insync.replicas"
                  },
                  "num_partitions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "num.partitions"
                  },
                  "offsets_retention_minutes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "offsets.retention.minutes"
                  },
                  "producer_purgatory_purge_interval_requests": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.purgatory.purge.interval.requests"
                  },
                  "replica_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "replica.fetch.max.bytes"
                  },
                  "replica_fetch_response_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "replica.fetch.response.max.bytes"
                  },
                  "socket_request_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "socket.request.max.bytes"
                  },
                  "transaction_remove_expired_transaction_cleanup_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "transaction.remove.expired.transaction.cleanup.interval.ms"
                  },
                  "transaction_state_log_segment_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "transaction.state.log.segment.bytes"
                  }
                }
              }
            },
            "kafka_authentication_methods": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka authentication methods",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "certificate": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable certificate/SSL authentication"
                  },
                  "sasl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable SASL authentication"
                  }
                }
              }
            },
            "kafka_connect": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Kafka Connect service"
            },
            "kafka_connect_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka Connect configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connector_client_config_override_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client config override policy"
                  },
                  "consumer_auto_offset_reset": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer auto offset reset"
                  },
                  "consumer_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data the server should return for a fetch request"
                  },
                  "consumer_isolation_level": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer isolation level"
                  },
                  "consumer_max_partition_fetch_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data per-partition the server will return."
                  },
                  "consumer_max_poll_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum delay between polls when using consumer group management"
                  },
                  "consumer_max_poll_records": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of records returned by a single poll"
                  },
                  "offset_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The interval at which to try committing offsets for tasks"
                  },
                  "offset_flush_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Offset flush timeout"
                  },
                  "producer_max_request_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum size of a request in bytes"
                  },
                  "session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The timeout used to detect failures when using Kafka’s group management facilities"
                  }
                }
              }
            },
            "kafka_rest": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Kafka-REST service"
            },
            "kafka_rest_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka REST configuration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "consumer_enable_auto_commit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.enable.auto.commit"
                  },
                  "consumer_request_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.request.max.bytes"
                  },
                  "consumer_request_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.request.timeout.ms"
                  },
                  "producer_acks": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.acks"
                  },
                  "producer_linger_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.linger.ms"
                  },
                  "simpleconsumer_pool_size_max": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "simpleconsumer.pool.size.max"
                  }
                }
              }
            },
            "kafka_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka major version"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka"
                  },
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_connect"
                  },
                  "kafka_rest": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_rest"
                  },
                  "schema_registry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable schema_registry"
                  }
                }
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "kafka_rest": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_rest from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "schema_registry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to schema_registry from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "schema_registry": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Schema-Registry service"
            },
            "schema_registry_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Schema Registry configuration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "leader_eligibility": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "leader_eligibility"
                  },
                  "topic_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "topic_name"
                  }
                }
              }
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "karapace": {
        "Type": "Bool",
        "Description": "Switch the service to use Karapace for schema registry and REST proxy",
        "Computed": true
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.",
        "Computed": true
      },
      "maintenance_window_time": {
        "Type": "String",
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.",
        "Computed": true
      },
      "plan": {
        "Type": "String",
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.",
        "Computed": true
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.",
        "Computed": true
      }
    },
    "aiven_kafka_acl": {
      "permission": {
        "Type": "String",
        "Required": true,
        "Description": "Kafka permission to grant. The possible values are `admin`, `read`, `readwrite` and `write`. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "topic": {
        "Type": "String",
        "Required": true,
        "Description": "Topic name pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource."
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "Username pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_kafka_connect": {
      "cloud_name": {
        "Type": "String",
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).",
        "Computed": true
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.",
        "Computed": true
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "kafka_connect": {
        "Type": "List",
        "Description": "Kafka Connect server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "kafka_connect_user_config": {
        "Type": "List",
        "Description": "Kafka_connect user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka_connect": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka Connect configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connector_client_config_override_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client config override policy"
                  },
                  "consumer_auto_offset_reset": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer auto offset reset"
                  },
                  "consumer_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data the server should return for a fetch request"
                  },
                  "consumer_isolation_level": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer isolation level"
                  },
                  "consumer_max_partition_fetch_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data per-partition the server will return."
                  },
                  "consumer_max_poll_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum delay between polls when using consumer group management"
                  },
                  "consumer_max_poll_records": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of records returned by a single poll"
                  },
                  "offset_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The interval at which to try committing offsets for tasks"
                  },
                  "offset_flush_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Offset flush timeout"
                  },
                  "producer_max_request_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum size of a request in bytes"
                  },
                  "session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The timeout used to detect failures when using Kafka’s group management facilities"
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_connect"
                  }
                }
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.",
        "Computed": true
      },
      "maintenance_window_time": {
        "Type": "String",
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.",
        "Computed": true
      },
      "plan": {
        "Type": "String",
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.",
        "Computed": true
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.",
        "Computed": true
      }
    },
    "aiven_kafka_connector": {
      "config": {
        "Type": "Map",
        "Description": "The Kafka Connector configuration parameters.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "connector_name": {
        "Type": "String",
        "Required": true,
        "Description": "The kafka connector name. This property cannot be changed, doing so forces recreation of the resource."
      },
      "plugin_author": {
        "Type": "String",
        "Description": "The Kafka connector author.",
        "Computed": true
      },
      "plugin_class": {
        "Type": "String",
        "Description": "The Kafka connector Java class.",
        "Computed": true
      },
      "plugin_doc_url": {
        "Type": "String",
        "Description": "The Kafka connector documentation URL.",
        "Computed": true
      },
      "plugin_title": {
        "Type": "String",
        "Description": "The Kafka connector title.",
        "Computed": true
      },
      "plugin_type": {
        "Type": "String",
        "Description": "The Kafka connector type.",
        "Computed": true
      },
      "plugin_version": {
        "Type": "String",
        "Description": "The version of the kafka connector.",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "task": {
        "Type": "Set",
        "Description": "List of tasks of a connector.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "connector": {
              "Type": "String",
              "Description": "The name of the related connector.",
              "Computed": true
            },
            "task": {
              "Type": "Int",
              "Description": "The task id of the task.",
              "Computed": true
            }
          }
        }
      }
    },
    "aiven_kafka_mirrormaker": {
      "cloud_name": {
        "Type": "String",
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).",
        "Computed": true
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.",
        "Computed": true
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "kafka_mirrormaker": {
        "Type": "List",
        "Description": "Kafka MirrorMaker 2 server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "kafka_mirrormaker_user_config": {
        "Type": "List",
        "Description": "Kafka_mirrormaker user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka_mirrormaker": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka MirrorMaker configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "emit_checkpoints_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Emit consumer group offset checkpoints"
                  },
                  "emit_checkpoints_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of consumer group offset checkpoints"
                  },
                  "refresh_groups_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Refresh consumer groups"
                  },
                  "refresh_groups_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of group refresh"
                  },
                  "refresh_topics_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Refresh topics and partitions"
                  },
                  "refresh_topics_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of topic and partitions refresh"
                  },
                  "sync_group_offsets_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Sync consumer group offsets"
                  },
                  "sync_group_offsets_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of consumer group offset sync"
                  },
                  "sync_topic_configs_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Sync remote topics"
                  },
                  "tasks_max_per_cpu": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Maximum number of MirrorMaker tasks (of each type) per service CPU"
                  }
                }
              }
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.",
        "Computed": true
      },
      "maintenance_window_time": {
        "Type": "String",
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.",
        "Computed": true
      },
      "plan": {
        "Type": "String",
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.",
        "Computed": true
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.",
        "Computed": true
      }
    },
    "aiven_kafka_schema": {
      "compatibility_level": {
        "Type": "String",
        "Description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "schema": {
        "Type": "String",
        "Description": "Kafka Schema configuration should be a valid Avro Schema JSON format.",
        "Computed": true
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "subject_name": {
        "Type": "String",
        "Required": true,
        "Description": "The Kafka Schema Subject name. This property cannot be changed, doing so forces recreation of the resource."
      },
      "version": {
        "Type": "Int",
        "Description": "Kafka Schema configuration version.",
        "Computed": true
      }
    },
    "aiven_kafka_schema_configuration": {
      "compatibility_level": {
        "Type": "String",
        "Description": "Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "schema": {
        "Type": "String",
        "Description": "Kafka Schema configuration should be a valid Avro Schema JSON format.",
        "Computed": true
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "subject_name": {
        "Type": "String",
        "Description": "The Kafka Schema Subject name. This property cannot be changed, doing so forces recreation of the resource.",
        "Computed": true
      },
      "version": {
        "Type": "Int",
        "Description": "Kafka Schema configuration version.",
        "Computed": true
      }
    },
    "aiven_kafka_topic": {
      "cleanup_policy": {
        "Type": "String",
        "Description": "**DEPRECATED use config.cleanup_policy instead** Topic cleanup policy. The possible values are `delete` and `compact`.",
        "Computed": true
      },
      "config": {
        "Type": "List",
        "Description": "Kafka topic configuration",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cleanup_policy": {
              "Type": "String",
              "Optional": true,
              "Description": "cleanup.policy value"
            },
            "compression_type": {
              "Type": "String",
              "Optional": true,
              "Description": "compression.type value"
            },
            "delete_retention_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "delete.retention.ms value"
            },
            "file_delete_delay_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "file.delete.delay.ms value"
            },
            "flush_messages": {
              "Type": "String",
              "Optional": true,
              "Description": "flush.messages value"
            },
            "flush_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "flush.ms value"
            },
            "index_interval_bytes": {
              "Type": "String",
              "Optional": true,
              "Description": "index.interval.bytes value"
            },
            "max_compaction_lag_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "max.compaction.lag.ms value"
            },
            "max_message_bytes": {
              "Type": "String",
              "Optional": true,
              "Description": "max.message.bytes value"
            },
            "message_downconversion_enable": {
              "Type": "String",
              "Optional": true,
              "Description": "message.downconversion.enable value"
            },
            "message_format_version": {
              "Type": "String",
              "Optional": true,
              "Description": "message.format.version value"
            },
            "message_timestamp_difference_max_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "message.timestamp.difference.max.ms value"
            },
            "message_timestamp_type": {
              "Type": "String",
              "Optional": true,
              "Description": "message.timestamp.type value"
            },
            "min_cleanable_dirty_ratio": {
              "Type": "String",
              "Optional": true,
              "Description": "min.cleanable.dirty.ratio value"
            },
            "min_compaction_lag_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "min.compaction.lag.ms value"
            },
            "min_insync_replicas": {
              "Type": "String",
              "Optional": true,
              "Description": "min.insync.replicas value"
            },
            "preallocate": {
              "Type": "String",
              "Optional": true,
              "Description": "preallocate value"
            },
            "retention_bytes": {
              "Type": "String",
              "Optional": true,
              "Description": "retention.bytes value"
            },
            "retention_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "retention.ms value"
            },
            "segment_bytes": {
              "Type": "String",
              "Optional": true,
              "Description": "segment.bytes value"
            },
            "segment_index_bytes": {
              "Type": "String",
              "Optional": true,
              "Description": "segment.index.bytes value"
            },
            "segment_jitter_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "segment.jitter.ms value"
            },
            "segment_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "segment.ms value"
            },
            "unclean_leader_election_enable": {
              "Type": "String",
              "Optional": true,
              "Description": "unclean.leader.election.enable value"
            }
          }
        }
      },
      "minimum_in_sync_replicas": {
        "Type": "Int",
        "Description": "**DEPRECATED use config.min_insync_replicas instead** Minimum required nodes in-sync replicas (ISR) to produce to a partition.",
        "Computed": true
      },
      "partitions": {
        "Type": "Int",
        "Description": "The number of partitions to create in the topic.",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "replication": {
        "Type": "Int",
        "Description": "The replication factor for the topic.",
        "Computed": true
      },
      "retention_bytes": {
        "Type": "Int",
        "Description": "**DEPRECATED use config.retention_bytes instead** Retention bytes.",
        "Computed": true
      },
      "retention_hours": {
        "Type": "Int",
        "Description": "**DEPRECATED use config.retention_ms instead** Retention period (hours).",
        "Computed": true
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "tag": {
        "Type": "Set",
        "Description": "Kafka Topic tag.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "key": {
              "Type": "String",
              "Required": true,
              "Description": "Topic tag key. Maximum Length: `64`."
            },
            "value": {
              "Type": "String",
              "Optional": true,
              "Description": "Topic tag value. Maximum Length: `256`."
            }
          }
        }
      },
      "termination_protection": {
        "Type": "Bool",
        "Description": "It is a Terraform client-side deletion protection, which prevents a Kafka topic from being deleted. It is recommended to enable this for any production Kafka topic containing critical data.",
        "Computed": true
      },
      "topic_name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the topic. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_m3aggregator": {
      "cloud_name": {
        "Type": "String",
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).",
        "Computed": true
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.",
        "Computed": true
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "m3aggregator": {
        "Type": "List",
        "Description": "M3 aggregator specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "m3aggregator_user_config": {
        "Type": "List",
        "Description": "M3aggregator user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "m3_version": {
              "Type": "String",
              "Optional": true,
              "Description": "M3 major version (deprecated, use m3aggregator_version)"
            },
            "m3aggregator_version": {
              "Type": "String",
              "Optional": true,
              "Description": "M3 major version (the minimum compatible version)"
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.",
        "Computed": true
      },
      "maintenance_window_time": {
        "Type": "String",
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.",
        "Computed": true
      },
      "plan": {
        "Type": "String",
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.",
        "Computed": true
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.",
        "Computed": true
      }
    },
    "aiven_m3db": {
      "cloud_name": {
        "Type": "String",
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).",
        "Computed": true
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.",
        "Computed": true
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "m3db": {
        "Type": "List",
        "Description": "M3 specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "m3db_user_config": {
        "Type": "List",
        "Description": "M3db user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "limits": {
              "Type": "List",
              "Optional": true,
              "Description": "M3 limits",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "query_require_exhaustive": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Require exhaustive result"
                  },
                  "query_series": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of series fetched in single query"
                  }
                }
              }
            },
            "m3_version": {
              "Type": "String",
              "Optional": true,
              "Description": "M3 major version (deprecated, use m3db_version)"
            },
            "m3coordinator_enable_graphite_carbon_ingest": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Graphite ingestion using Carbon plaintext protocol"
            },
            "m3db_version": {
              "Type": "String",
              "Optional": true,
              "Description": "M3 major version (the minimum compatible version)"
            },
            "namespaces": {
              "Type": "List",
              "Optional": true,
              "Description": "List of M3 namespaces",
              "MaxItems": 2147483647,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The name of the namespace"
                  },
                  "options": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Namespace options",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "retention_options": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Retention options",
                          "MaxItems": 1,
                          "IsBlock": true,
                          "ConfigImplicitMode": "Block",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "block_data_expiry_duration": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Controls how long we wait before expiring stale data"
                              },
                              "blocksize_duration": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Controls how long to keep a block in memory before flushing to a fileset on disk"
                              },
                              "buffer_future_duration": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Controls how far into the future writes to the namespace will be accepted"
                              },
                              "buffer_past_duration": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Controls how far into the past writes to the namespace will be accepted"
                              },
                              "retention_period_duration": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Controls the duration of time that M3DB will retain data for the namespace"
                              }
                            }
                          }
                        },
                        "snapshot_enabled": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Controls whether M3DB will create snapshot files for this namespace"
                        },
                        "writes_to_commitlog": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Controls whether M3DB will include writes to this namespace in the commitlog"
                        }
                      }
                    }
                  },
                  "resolution": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The resolution for an aggregated namespace"
                  },
                  "type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The type of aggregation (aggregated/unaggregated)"
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "m3coordinator": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to m3coordinator with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "m3coordinator": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to m3coordinator from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "rules": {
              "Type": "List",
              "Optional": true,
              "Description": "M3 rules",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mapping": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of M3 mapping rules",
                    "MaxItems": 10,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "aggregations": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of aggregations to be applied",
                          "MaxItems": 10,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "drop": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Drop the matching metric"
                        },
                        "filter": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The metrics to be used with this particular rule"
                        },
                        "name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The (optional) name of the rule"
                        },
                        "namespaces": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Namespace filters for this particular rule",
                          "MaxItems": 10,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "tags": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of tags to be appended to matching metrics",
                          "MaxItems": 10,
                          "IsBlock": true,
                          "ConfigImplicitMode": "Block",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "name": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Name of the tag"
                              },
                              "value": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Value of the tag"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.",
        "Computed": true
      },
      "maintenance_window_time": {
        "Type": "String",
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.",
        "Computed": true
      },
      "plan": {
        "Type": "String",
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.",
        "Computed": true
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.",
        "Computed": true
      }
    },
    "aiven_mirrormaker_replication_flow": {
      "emit_heartbeats_enabled": {
        "Type": "Bool",
        "Description": "Emit heartbeats enabled. The default value is `false`.",
        "Computed": true
      },
      "enable": {
        "Type": "Bool",
        "Description": "Enable of disable replication flows for a service.",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "replication_policy_class": {
        "Type": "String",
        "Description": "Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.",
        "Computed": true
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "source_cluster": {
        "Type": "String",
        "Required": true,
        "Description": "Source cluster alias. Maximum Length: `128`."
      },
      "sync_group_offsets_enabled": {
        "Type": "Bool",
        "Description": "Sync consumer group offsets. The default value is `false`.",
        "Computed": true
      },
      "sync_group_offsets_interval_seconds": {
        "Type": "Int",
        "Description": "Frequency of consumer group offset sync. The default value is `1`.",
        "Computed": true
      },
      "target_cluster": {
        "Type": "String",
        "Required": true,
        "Description": "Target cluster alias. Maximum Length: `128`."
      },
      "topics": {
        "Type": "List",
        "Description": "List of topics and/or regular expressions to replicate",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "topics_blacklist": {
        "Type": "List",
        "Description": "List of topics and/or regular expressions to not replicate.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "aiven_mysql": {
      "cloud_name": {
        "Type": "String",
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).",
        "Computed": true
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.",
        "Computed": true
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.",
        "Computed": true
      },
      "maintenance_window_time": {
        "Type": "String",
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.",
        "Computed": true
      },
      "mysql": {
        "Type": "List",
        "Description": "MySQL specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "mysql_user_config": {
        "Type": "List",
        "Description": "Mysql user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "admin_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created."
            },
            "admin_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom username for admin user. This must be set only when a new service is being created."
            },
            "backup_hour": {
              "Type": "String",
              "Optional": true,
              "Description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed."
            },
            "backup_minute": {
              "Type": "String",
              "Optional": true,
              "Description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed."
            },
            "binlog_retention_period": {
              "Type": "String",
              "Optional": true,
              "Description": "The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended for services that require binlog entries for longer than the default for example if using the MySQL Debezium Kafka connector."
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection"
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from"
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)"
                  },
                  "method": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The migration method to be used"
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from"
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from"
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL"
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from"
                  }
                }
              }
            },
            "mysql": {
              "Type": "List",
              "Optional": true,
              "Description": "mysql.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connect_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "connect_timeout"
                  },
                  "default_time_zone": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "default_time_zone"
                  },
                  "group_concat_max_len": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group_concat_max_len"
                  },
                  "information_schema_stats_expiry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "information_schema_stats_expiry"
                  },
                  "innodb_ft_min_token_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_ft_min_token_size"
                  },
                  "innodb_ft_server_stopword_table": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_ft_server_stopword_table"
                  },
                  "innodb_lock_wait_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_lock_wait_timeout"
                  },
                  "innodb_log_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_log_buffer_size"
                  },
                  "innodb_online_alter_log_max_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_online_alter_log_max_size"
                  },
                  "innodb_print_all_deadlocks": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_print_all_deadlocks"
                  },
                  "innodb_rollback_on_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_rollback_on_timeout"
                  },
                  "interactive_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "interactive_timeout"
                  },
                  "internal_tmp_mem_storage_engine": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "internal_tmp_mem_storage_engine"
                  },
                  "long_query_time": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "long_query_time"
                  },
                  "max_allowed_packet": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_allowed_packet"
                  },
                  "max_heap_table_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_heap_table_size"
                  },
                  "net_read_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "net_read_timeout"
                  },
                  "net_write_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "net_write_timeout"
                  },
                  "slow_query_log": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "slow_query_log"
                  },
                  "sort_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sort_buffer_size"
                  },
                  "sql_mode": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sql_mode"
                  },
                  "sql_require_primary_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sql_require_primary_key"
                  },
                  "tmp_table_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "tmp_table_size"
                  },
                  "wait_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wait_timeout"
                  }
                }
              }
            },
            "mysql_version": {
              "Type": "String",
              "Optional": true,
              "Description": "MySQL major version"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysql with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "mysqlx": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysqlx with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable mysql"
                  },
                  "mysqlx": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable mysqlx"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysql from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "mysqlx": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysqlx from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_target_time": {
              "Type": "String",
              "Optional": true,
              "Description": "Recovery target time when forking a service. This has effect only when a new service is being created."
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "plan": {
        "Type": "String",
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.",
        "Computed": true
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.",
        "Computed": true
      }
    },
    "aiven_opensearch": {
      "cloud_name": {
        "Type": "String",
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).",
        "Computed": true
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.",
        "Computed": true
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.",
        "Computed": true
      },
      "maintenance_window_time": {
        "Type": "String",
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.",
        "Computed": true
      },
      "opensearch": {
        "Type": "List",
        "Description": "Opensearch server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "opensearch_dashboards_uri": {
              "Type": "String",
              "Description": "URI for Opensearch dashboard frontend",
              "Computed": true
            }
          }
        }
      },
      "opensearch_user_config": {
        "Type": "List",
        "Description": "Opensearch user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "disable_replication_factor_adjustment": {
              "Type": "String",
              "Optional": true,
              "Description": "Disable replication factor adjustment"
            },
            "index_patterns": {
              "Type": "List",
              "Optional": true,
              "Description": "Index patterns",
              "MaxItems": 512,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_index_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Maximum number of indexes to keep"
                  },
                  "pattern": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "fnmatch pattern"
                  },
                  "sorting_algorithm": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Deletion sorting algorithm"
                  }
                }
              }
            },
            "index_template": {
              "Type": "List",
              "Optional": true,
              "Description": "Template settings for all new indexes",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mapping_nested_objects_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.mapping.nested_objects.limit"
                  },
                  "number_of_replicas": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_replicas"
                  },
                  "number_of_shards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_shards"
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "keep_index_refresh_interval": {
              "Type": "String",
              "Optional": true,
              "Description": "Don't reset index.refresh_interval to the default value"
            },
            "max_index_count": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum index count"
            },
            "opensearch": {
              "Type": "List",
              "Optional": true,
              "Description": "OpenSearch settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action_auto_create_index_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "action.auto_create_index"
                  },
                  "action_destructive_requires_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Require explicit index names when deleting"
                  },
                  "cluster_max_shards_per_node": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "cluster.max_shards_per_node"
                  },
                  "http_max_content_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_content_length"
                  },
                  "http_max_header_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_header_size"
                  },
                  "http_max_initial_line_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_initial_line_length"
                  },
                  "indices_fielddata_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.fielddata.cache.size"
                  },
                  "indices_memory_index_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.memory.index_buffer_size"
                  },
                  "indices_queries_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.queries.cache.size"
                  },
                  "indices_query_bool_max_clause_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.query.bool.max_clause_count"
                  },
                  "override_main_response_version": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "compatibility.override_main_response_version"
                  },
                  "reindex_remote_whitelist": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "reindex_remote_whitelist",
                    "MaxItems": 32,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "search_max_buckets": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search.max_buckets"
                  },
                  "thread_pool_analyze_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool queue size"
                  },
                  "thread_pool_analyze_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool size"
                  },
                  "thread_pool_force_merge_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "force_merge thread pool size"
                  },
                  "thread_pool_get_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool queue size"
                  },
                  "thread_pool_get_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool size"
                  },
                  "thread_pool_index_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index thread pool size"
                  },
                  "thread_pool_search_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool queue size"
                  },
                  "thread_pool_search_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool size"
                  },
                  "thread_pool_search_throttled_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool queue size"
                  },
                  "thread_pool_search_throttled_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool size"
                  },
                  "thread_pool_write_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool queue size"
                  },
                  "thread_pool_write_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool size"
                  }
                }
              }
            },
            "opensearch_dashboards": {
              "Type": "List",
              "Optional": true,
              "Description": "OpenSearch Dashboards settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable or disable OpenSearch Dashboards"
                  },
                  "max_old_space_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_old_space_size"
                  },
                  "opensearch_request_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch"
                  }
                }
              }
            },
            "opensearch_version": {
              "Type": "String",
              "Optional": true,
              "Description": "OpenSearch major version"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "opensearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to opensearch with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "opensearch_dashboards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to opensearch_dashboards with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "opensearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable opensearch"
                  },
                  "opensearch_dashboards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable opensearch_dashboards"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "opensearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to opensearch from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "opensearch_dashboards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to opensearch_dashboards from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service"
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "plan": {
        "Type": "String",
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.",
        "Computed": true
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.",
        "Computed": true
      }
    },
    "aiven_opensearch_acl_config": {
      "enabled": {
        "Type": "Bool",
        "Description": "Enable Opensearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.",
        "Computed": true
      },
      "extended_acl": {
        "Type": "Bool",
        "Description": "Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is `true`.",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_opensearch_acl_rule": {
      "index": {
        "Type": "String",
        "Required": true,
        "Description": "The index pattern for this ACL entry. Maximum Length: `249`. This property cannot be changed, doing so forces recreation of the resource."
      },
      "permission": {
        "Type": "String",
        "Required": true,
        "Description": "The permissions for this ACL entry The possible values are `deny`, `admin`, `read`, `readwrite` and `write`."
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "The username for the ACL entry Maximum Length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_pg": {
      "cloud_name": {
        "Type": "String",
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).",
        "Computed": true
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.",
        "Computed": true
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.",
        "Computed": true
      },
      "maintenance_window_time": {
        "Type": "String",
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.",
        "Computed": true
      },
      "pg": {
        "Type": "List",
        "Description": "PostgreSQL specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dbname": {
              "Type": "String",
              "Description": "Primary PostgreSQL database name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "PostgreSQL master node host IP or name",
              "Computed": true
            },
            "password": {
              "Type": "String",
              "Description": "PostgreSQL admin user password",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "PostgreSQL port",
              "Computed": true
            },
            "replica_uri": {
              "Type": "String",
              "Description": "PostgreSQL replica URI for services with a replica",
              "Computed": true
            },
            "sslmode": {
              "Type": "String",
              "Description": "PostgreSQL sslmode setting (currently always \"require\")",
              "Computed": true
            },
            "uri": {
              "Type": "String",
              "Optional": true,
              "Description": "PostgreSQL master connection URI",
              "Computed": true
            },
            "user": {
              "Type": "String",
              "Description": "PostgreSQL admin user name",
              "Computed": true
            }
          }
        }
      },
      "pg_user_config": {
        "Type": "List",
        "Description": "Pg user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "admin_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created."
            },
            "admin_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom username for admin user. This must be set only when a new service is being created."
            },
            "backup_hour": {
              "Type": "String",
              "Optional": true,
              "Description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed."
            },
            "backup_minute": {
              "Type": "String",
              "Optional": true,
              "Description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed."
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection"
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from"
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)"
                  },
                  "method": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The migration method to be used"
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from"
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from"
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL"
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from"
                  }
                }
              }
            },
            "pg": {
              "Type": "List",
              "Optional": true,
              "Description": "postgresql.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "autovacuum_analyze_scale_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_analyze_scale_factor"
                  },
                  "autovacuum_analyze_threshold": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_analyze_threshold"
                  },
                  "autovacuum_freeze_max_age": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_freeze_max_age"
                  },
                  "autovacuum_max_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_max_workers"
                  },
                  "autovacuum_naptime": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_naptime"
                  },
                  "autovacuum_vacuum_cost_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_cost_delay"
                  },
                  "autovacuum_vacuum_cost_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_cost_limit"
                  },
                  "autovacuum_vacuum_scale_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_scale_factor"
                  },
                  "autovacuum_vacuum_threshold": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_threshold"
                  },
                  "bgwriter_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "bgwriter_delay"
                  },
                  "bgwriter_flush_after": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "bgwriter_flush_after"
                  },
                  "bgwriter_lru_maxpages": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "bgwriter_lru_maxpages"
                  },
                  "bgwriter_lru_multiplier": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "bgwriter_lru_multiplier"
                  },
                  "deadlock_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "deadlock_timeout"
                  },
                  "default_toast_compression": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "default_toast_compression"
                  },
                  "idle_in_transaction_session_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "idle_in_transaction_session_timeout"
                  },
                  "jit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "jit"
                  },
                  "log_autovacuum_min_duration": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_autovacuum_min_duration"
                  },
                  "log_error_verbosity": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_error_verbosity"
                  },
                  "log_line_prefix": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_line_prefix"
                  },
                  "log_min_duration_statement": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_min_duration_statement"
                  },
                  "max_files_per_process": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_files_per_process"
                  },
                  "max_locks_per_transaction": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_locks_per_transaction"
                  },
                  "max_logical_replication_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_logical_replication_workers"
                  },
                  "max_parallel_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_parallel_workers"
                  },
                  "max_parallel_workers_per_gather": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_parallel_workers_per_gather"
                  },
                  "max_pred_locks_per_transaction": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_pred_locks_per_transaction"
                  },
                  "max_prepared_transactions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_prepared_transactions"
                  },
                  "max_replication_slots": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_replication_slots"
                  },
                  "max_slot_wal_keep_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_slot_wal_keep_size"
                  },
                  "max_stack_depth": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_stack_depth"
                  },
                  "max_standby_archive_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_standby_archive_delay"
                  },
                  "max_standby_streaming_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_standby_streaming_delay"
                  },
                  "max_wal_senders": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_wal_senders"
                  },
                  "max_worker_processes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_worker_processes"
                  },
                  "pg_partman_bgw__dot__interval": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_partman_bgw.interval"
                  },
                  "pg_partman_bgw__dot__role": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_partman_bgw.role"
                  },
                  "pg_stat_statements__dot__track": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_stat_statements.track"
                  },
                  "temp_file_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "temp_file_limit"
                  },
                  "timezone": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "timezone"
                  },
                  "track_activity_query_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_activity_query_size"
                  },
                  "track_commit_timestamp": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_commit_timestamp"
                  },
                  "track_functions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_functions"
                  },
                  "track_io_timing": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_io_timing"
                  },
                  "wal_sender_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wal_sender_timeout"
                  },
                  "wal_writer_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wal_writer_delay"
                  }
                }
              }
            },
            "pg_read_replica": {
              "Type": "String",
              "Optional": true,
              "Description": "Should the service which is being forked be a read replica (deprecated, use read_replica service integration instead)."
            },
            "pg_service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the PG Service from which to fork (deprecated, use service_to_fork_from). This has effect only when a new service is being created."
            },
            "pg_version": {
              "Type": "String",
              "Optional": true,
              "Description": "PostgreSQL major version"
            },
            "pgbouncer": {
              "Type": "List",
              "Optional": true,
              "Description": "PGBouncer connection pooling settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "autodb_idle_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If the automatically created database pools have been unused this many seconds, they are freed. If 0 then timeout is disabled. [seconds]"
                  },
                  "autodb_max_db_connections": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Do not allow more than this many server connections per database (regardless of user). Setting it to 0 means unlimited."
                  },
                  "autodb_pool_mode": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "PGBouncer pool mode"
                  },
                  "autodb_pool_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If non-zero then create automatically a pool of that size per user when a pool doesn't exist."
                  },
                  "ignore_startup_parameters": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of parameters to ignore when given in startup packet",
                    "MaxItems": 32,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "min_pool_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Add more server connections to pool if below this number. Improves behavior when usual load comes suddenly back after period of total inactivity. The value is effectively capped at the pool size."
                  },
                  "server_idle_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If a server connection has been idle more than this many seconds it will be dropped. If 0 then timeout is disabled. [seconds]"
                  },
                  "server_lifetime": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The pooler will close an unused server connection that has been connected longer than this. [seconds]"
                  },
                  "server_reset_query_always": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Run server_reset_query (DISCARD ALL) in all pooling modes"
                  }
                }
              }
            },
            "pglookout": {
              "Type": "List",
              "Optional": true,
              "Description": "PGLookout settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_failover_replication_time_lag": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_failover_replication_time_lag"
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pg with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pgbouncer with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable pg"
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable pgbouncer"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pg from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pgbouncer from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_target_time": {
              "Type": "String",
              "Optional": true,
              "Description": "Recovery target time when forking a service. This has effect only when a new service is being created."
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "shared_buffers_percentage": {
              "Type": "String",
              "Optional": true,
              "Description": "shared_buffers_percentage"
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            },
            "synchronous_replication": {
              "Type": "String",
              "Optional": true,
              "Description": "Synchronous replication type. Note that the service plan also needs to support synchronous replication."
            },
            "timescaledb": {
              "Type": "List",
              "Optional": true,
              "Description": "TimescaleDB extension configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_background_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "timescaledb.max_background_workers"
                  }
                }
              }
            },
            "variant": {
              "Type": "String",
              "Optional": true,
              "Description": "Variant of the PostgreSQL service, may affect the features that are exposed by default"
            },
            "work_mem": {
              "Type": "String",
              "Optional": true,
              "Description": "work_mem"
            }
          }
        }
      },
      "plan": {
        "Type": "String",
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.",
        "Computed": true
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.",
        "Computed": true
      }
    },
    "aiven_project": {
      "account_id": {
        "Type": "String",
        "Description": "An optional property to link a project to already an existing account by using account ID. To set up proper dependencies please refer to this variable as a reference.",
        "Computed": true
      },
      "add_account_owners_admin_access": {
        "Type": "Bool",
        "Description": "If account_id is set, grant account owner team admin access to the new project. The default value is `true`.",
        "Computed": true
      },
      "available_credits": {
        "Type": "String",
        "Description": "The amount of platform credits available to the project. This could be your free trial or other promotional credits.",
        "Computed": true
      },
      "billing_address": {
        "Type": "String",
        "Description": "**DEPRECATED Please use aiven_billing_group resource to set this value.** Billing name and address of the project.",
        "Computed": true
      },
      "billing_currency": {
        "Type": "String",
        "Description": "**DEPRECATED Please use aiven_billing_group resource to set this value.** Billing currency.",
        "Computed": true
      },
      "billing_emails": {
        "Type": "Set",
        "Description": "**DEPRECATED Please use aiven_billing_group resource to set this value.** Billing contact emails of the project.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "billing_extra_text": {
        "Type": "String",
        "Description": "**DEPRECATED Please use aiven_billing_group resource to set this value.** Extra text to be included in all project invoices, e.g. purchase order or cost center number.",
        "Computed": true
      },
      "billing_group": {
        "Type": "String",
        "Description": "The id of the billing group that is linked to this project. To set up proper dependencies please refer to this variable as a reference.",
        "Computed": true
      },
      "ca_cert": {
        "Type": "String",
        "Description": "The CA certificate of the project. This is required for configuring clients that connect to certain services like Kafka.",
        "Computed": true
      },
      "card_id": {
        "Type": "String",
        "Description": "**DEPRECATED Please use aiven_billing_group resource to set this value.** Either the full card UUID or the last 4 digits of the card. As the full UUID is not shown in the UI it is typically easier to use the last 4 digits to identify the card. This can be omitted if `copy_from_project` is used to copy billing info from another project.",
        "Computed": true
      },
      "copy_from_project": {
        "Type": "String",
        "Description": "is the name of another project used to copy billing information and some other project attributes like technical contacts from. This is mostly relevant when an existing project has billing type set to invoice and that needs to be copied over to a new project. (Setting billing is otherwise not allowed over the API.) This only has effect when the project is created. To set up proper dependencies please refer to this variable as a reference.",
        "Computed": true
      },
      "country_code": {
        "Type": "String",
        "Description": "**DEPRECATED Please use aiven_billing_group resource to set this value.** Billing country code of the project.",
        "Computed": true
      },
      "default_cloud": {
        "Type": "String",
        "Description": "Defines the default cloud provider and region where services are hosted. This can be changed freely after the project is created. This will not affect existing services.",
        "Computed": true
      },
      "estimated_balance": {
        "Type": "String",
        "Description": "The current accumulated bill for this project in the current billing period.",
        "Computed": true
      },
      "payment_method": {
        "Type": "String",
        "Description": "The method of invoicing used for payments for this project, e.g. `card`.",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later without destroying and re-creating the project, including all sub-resources."
      },
      "technical_emails": {
        "Type": "Set",
        "Description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability. It is  good practice to keep this up-to-date to be aware of any potential issues with your project.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "use_source_project_billing_group": {
        "Type": "Bool",
        "Description": "Use the same billing group that is used in source project.",
        "Computed": true
      },
      "vat_id": {
        "Type": "String",
        "Description": "**DEPRECATED Please use aiven_billing_group resource to set this value.** EU VAT Identification Number.",
        "Computed": true
      }
    },
    "aiven_project_user": {
      "accepted": {
        "Type": "Bool",
        "Description": "Whether the user has accepted the request to join the project; adding user to a project sends an invitation to the target user and the actual membership is only created once the user accepts the invitation.",
        "Computed": true
      },
      "email": {
        "Type": "String",
        "Required": true,
        "Description": "Email address of the user. This property cannot be changed, doing so forces recreation of the resource."
      },
      "member_type": {
        "Type": "String",
        "Description": "Project membership type. The possible values are `admin`, `developer` and `operator`.",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_project_vpc": {
      "cloud_name": {
        "Type": "String",
        "Required": true,
        "Description": "Defines where the cloud provider and region where the service is hosted in. See the Service resource for additional information. This property cannot be changed, doing so forces recreation of the resource."
      },
      "network_cidr": {
        "Type": "String",
        "Description": "Network address range used by the VPC like 192.168.0.0/24",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "state": {
        "Type": "String",
        "Description": "State of the VPC. The possible values are `APPROVED`, `ACTIVE`, `DELETING` and `DELETED`.",
        "Computed": true
      }
    },
    "aiven_redis": {
      "cloud_name": {
        "Type": "String",
        "Description": "Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).",
        "Computed": true
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.",
        "Computed": true
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.",
        "Computed": true
      },
      "maintenance_window_time": {
        "Type": "String",
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.",
        "Computed": true
      },
      "plan": {
        "Type": "String",
        "Description": "Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the [Aiven pricing page](https://aiven.io/pricing).",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "project_vpc_id": {
        "Type": "String",
        "Description": "Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.",
        "Computed": true
      },
      "redis": {
        "Type": "List",
        "Description": "Redis server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "redis_user_config": {
        "Type": "List",
        "Description": "Redis user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection"
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from"
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)"
                  },
                  "method": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The migration method to be used"
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from"
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from"
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL"
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from"
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to redis with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable redis"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to redis from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service"
            },
            "redis_acl_channels_default": {
              "Type": "String",
              "Optional": true,
              "Description": "Default ACL for pub/sub channels used when Redis user is created"
            },
            "redis_io_threads": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis IO thread count"
            },
            "redis_lfu_decay_time": {
              "Type": "String",
              "Optional": true,
              "Description": "LFU maxmemory-policy counter decay time in minutes"
            },
            "redis_lfu_log_factor": {
              "Type": "String",
              "Optional": true,
              "Description": "Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies"
            },
            "redis_maxmemory_policy": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis maxmemory-policy"
            },
            "redis_notify_keyspace_events": {
              "Type": "String",
              "Optional": true,
              "Description": "Set notify-keyspace-events option"
            },
            "redis_number_of_databases": {
              "Type": "String",
              "Optional": true,
              "Description": "Number of redis databases"
            },
            "redis_persistence": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis persistence"
            },
            "redis_pubsub_client_output_buffer_limit": {
              "Type": "String",
              "Optional": true,
              "Description": "Pub/sub client output buffer hard limit in MB"
            },
            "redis_ssl": {
              "Type": "String",
              "Optional": true,
              "Description": "Require SSL to access Redis"
            },
            "redis_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis idle connection timeout"
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "service_host": {
        "Type": "String",
        "Description": "The hostname of the service.",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is `read_replica`"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes."
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "The port of the service",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Aiven internal service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Description": "Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.",
        "Computed": true
      }
    },
    "aiven_service": {
      "cassandra": {
        "Type": "List",
        "Description": "Cassandra specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "cassandra_user_config": {
        "Type": "List",
        "Description": "Cassandra user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cassandra": {
              "Type": "List",
              "Optional": true,
              "Description": "cassandra configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "batch_size_fail_threshold_in_kb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "batch_size_fail_threshold_in_kb"
                  },
                  "batch_size_warn_threshold_in_kb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "batch_size_warn_threshold_in_kb"
                  }
                }
              }
            },
            "cassandra_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Cassandra major version"
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migrate_sstableloader": {
              "Type": "String",
              "Optional": true,
              "Description": "Migration mode for the sstableloader utility"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "clickhouse": {
        "Type": "List",
        "Description": "Clickhouse specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "clickhouse_user_config": {
        "Type": "List",
        "Description": "Clickhouse user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            }
          }
        }
      },
      "cloud_name": {
        "Type": "String",
        "Description": "Cloud the service runs in",
        "Computed": true
      },
      "components": {
        "Type": "List",
        "Description": "Service component information objects",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "component": {
              "Type": "String",
              "Description": "Service component name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "DNS name for connecting to the service component",
              "Computed": true
            },
            "kafka_authentication_method": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port number for connecting to the service component",
              "Computed": true
            },
            "route": {
              "Type": "String",
              "Description": "Network access route",
              "Computed": true
            },
            "ssl": {
              "Type": "Bool",
              "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption",
              "Computed": true
            },
            "usage": {
              "Type": "String",
              "Description": "DNS usage name",
              "Computed": true
            }
          }
        }
      },
      "disk_space": {
        "Type": "String",
        "Description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.",
        "Computed": true
      },
      "disk_space_cap": {
        "Type": "String",
        "Description": "The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.",
        "Computed": true
      },
      "disk_space_default": {
        "Type": "String",
        "Description": "The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`",
        "Computed": true
      },
      "disk_space_step": {
        "Type": "String",
        "Description": "The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.",
        "Computed": true
      },
      "disk_space_used": {
        "Type": "String",
        "Description": "Disk space that service is currently using",
        "Computed": true
      },
      "elasticsearch": {
        "Type": "List",
        "Description": "Elasticsearch specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "kibana_uri": {
              "Type": "String",
              "Description": "URI for Kibana frontend",
              "Computed": true
            }
          }
        }
      },
      "elasticsearch_user_config": {
        "Type": "List",
        "Description": "Elasticsearch user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "disable_replication_factor_adjustment": {
              "Type": "String",
              "Optional": true,
              "Description": "Disable replication factor adjustment"
            },
            "elasticsearch": {
              "Type": "List",
              "Optional": true,
              "Description": "Elasticsearch settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action_auto_create_index_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "action.auto_create_index"
                  },
                  "action_destructive_requires_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Require explicit index names when deleting"
                  },
                  "cluster_max_shards_per_node": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "cluster.max_shards_per_node"
                  },
                  "http_max_content_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_content_length"
                  },
                  "http_max_header_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_header_size"
                  },
                  "http_max_initial_line_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_initial_line_length"
                  },
                  "indices_fielddata_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.fielddata.cache.size"
                  },
                  "indices_memory_index_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.memory.index_buffer_size"
                  },
                  "indices_queries_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.queries.cache.size"
                  },
                  "indices_query_bool_max_clause_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.query.bool.max_clause_count"
                  },
                  "override_main_response_version": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "compatibility.override_main_response_version"
                  },
                  "reindex_remote_whitelist": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "reindex_remote_whitelist",
                    "MaxItems": 32,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "search_max_buckets": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search.max_buckets"
                  },
                  "thread_pool_analyze_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool queue size"
                  },
                  "thread_pool_analyze_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool size"
                  },
                  "thread_pool_force_merge_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "force_merge thread pool size"
                  },
                  "thread_pool_get_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool queue size"
                  },
                  "thread_pool_get_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool size"
                  },
                  "thread_pool_index_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index thread pool queue size"
                  },
                  "thread_pool_index_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index thread pool size"
                  },
                  "thread_pool_search_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool queue size"
                  },
                  "thread_pool_search_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool size"
                  },
                  "thread_pool_search_throttled_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool queue size"
                  },
                  "thread_pool_search_throttled_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool size"
                  },
                  "thread_pool_write_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool queue size"
                  },
                  "thread_pool_write_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool size"
                  }
                }
              }
            },
            "elasticsearch_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch major version"
            },
            "index_patterns": {
              "Type": "List",
              "Optional": true,
              "Description": "Index patterns",
              "MaxItems": 512,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_index_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Maximum number of indexes to keep"
                  },
                  "pattern": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "fnmatch pattern"
                  },
                  "sorting_algorithm": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Deletion sorting algorithm"
                  }
                }
              }
            },
            "index_template": {
              "Type": "List",
              "Optional": true,
              "Description": "Template settings for all new indexes",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mapping_nested_objects_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.mapping.nested_objects.limit"
                  },
                  "number_of_replicas": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_replicas"
                  },
                  "number_of_shards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_shards"
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "keep_index_refresh_interval": {
              "Type": "String",
              "Optional": true,
              "Description": "Don't reset index.refresh_interval to the default value"
            },
            "kibana": {
              "Type": "List",
              "Optional": true,
              "Description": "Kibana settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch_request_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Timeout in milliseconds for requests made by Kibana towards Elasticsearch"
                  },
                  "enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable or disable Kibana"
                  },
                  "max_old_space_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_old_space_size"
                  }
                }
              }
            },
            "max_index_count": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum index count"
            },
            "opensearch_version": {
              "Type": "String",
              "Optional": true,
              "Description": "OpenSearch major version"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to elasticsearch with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kibana with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable elasticsearch"
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kibana"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "elasticsearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to elasticsearch from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "kibana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kibana from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service"
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "flink": {
        "Type": "List",
        "Description": "Flink specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "host_ports": {
              "Type": "List",
              "Optional": true,
              "Description": "Host and Port of a Flink server",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "flink_user_config": {
        "Type": "List",
        "Description": "Flink user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "execution_checkpointing_interval_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink execution.checkpointing.interval in milliseconds"
            },
            "execution_checkpointing_timeout_ms": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink execution.checkpointing.timeout in milliseconds"
            },
            "flink_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink major version"
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "number_of_task_slots": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink taskmanager.numberOfTaskSlots"
            },
            "parallelism_default": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink parallelism.default"
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "flink": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable flink"
                  }
                }
              }
            },
            "restart_strategy": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink restart-strategy"
            },
            "restart_strategy_delay_sec": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink restart-strategy.failure-rate.delay in seconds"
            },
            "restart_strategy_failure_rate_interval_min": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink restart-strategy.failure-rate.failure-rate-interval in minutes"
            },
            "restart_strategy_max_failures": {
              "Type": "String",
              "Optional": true,
              "Description": "Flink restart-strategy.failure-rate.max-failures-per-interval"
            }
          }
        }
      },
      "grafana": {
        "Type": "List",
        "Description": "Grafana specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "grafana_user_config": {
        "Type": "List",
        "Description": "Grafana user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "alerting_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable or disable Grafana alerting functionality"
            },
            "alerting_error_or_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Default error or timeout setting for new alerting rules"
            },
            "alerting_max_annotations_to_keep": {
              "Type": "String",
              "Optional": true,
              "Description": "Max number of alert annotations that Grafana stores. 0 (default) keeps all alert annotations."
            },
            "alerting_nodata_or_nullvalues": {
              "Type": "String",
              "Optional": true,
              "Description": "Default value for 'no data or null values' for new alerting rules"
            },
            "allow_embedding": {
              "Type": "String",
              "Optional": true,
              "Description": "Allow embedding Grafana dashboards with iframe/frame/object/embed tags. Disabled by default to limit impact of clickjacking"
            },
            "auth_azuread": {
              "Type": "List",
              "Optional": true,
              "Description": "Azure AD OAuth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in"
                  },
                  "allowed_domains": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Allowed domains",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "allowed_groups": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given groups",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "auth_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Authorization URL"
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider"
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider"
                  },
                  "token_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Token URL"
                  }
                }
              }
            },
            "auth_basic_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable or disable basic authentication form, used by Grafana built-in login"
            },
            "auth_generic_oauth": {
              "Type": "List",
              "Optional": true,
              "Description": "Generic OAuth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in"
                  },
                  "allowed_domains": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Allowed domains",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "allowed_organizations": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require user to be member of one of the listed organizations",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "api_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "API URL"
                  },
                  "auth_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Authorization URL"
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider"
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider"
                  },
                  "name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Name of the OAuth integration"
                  },
                  "scopes": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "OAuth scopes",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "token_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Token URL"
                  }
                }
              }
            },
            "auth_github": {
              "Type": "List",
              "Optional": true,
              "Description": "Github Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in"
                  },
                  "allowed_organizations": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given organizations",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider"
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider"
                  },
                  "team_ids": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given team IDs",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "auth_gitlab": {
              "Type": "List",
              "Optional": true,
              "Description": "GitLab Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in"
                  },
                  "allowed_groups": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Require users to belong to one of given groups",
                    "MaxItems": 50,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "api_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "API URL. This only needs to be set when using self hosted GitLab"
                  },
                  "auth_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Authorization URL. This only needs to be set when using self hosted GitLab"
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider"
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider"
                  },
                  "token_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Token URL. This only needs to be set when using self hosted GitLab"
                  }
                }
              }
            },
            "auth_google": {
              "Type": "List",
              "Optional": true,
              "Description": "Google Auth integration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allow_sign_up": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Automatically sign-up users on successful sign-in"
                  },
                  "allowed_domains": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Domains allowed to sign-in to this Grafana",
                    "MaxItems": 64,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "client_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client ID from provider"
                  },
                  "client_secret": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client secret from provider"
                  }
                }
              }
            },
            "cookie_samesite": {
              "Type": "String",
              "Optional": true,
              "Description": "Cookie SameSite attribute: 'strict' prevents sending cookie for cross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value."
            },
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "dashboards_min_refresh_interval": {
              "Type": "String",
              "Optional": true,
              "Description": "Minimum refresh interval"
            },
            "dashboards_versions_to_keep": {
              "Type": "String",
              "Optional": true,
              "Description": "Dashboard versions to keep per dashboard"
            },
            "dataproxy_send_user_header": {
              "Type": "String",
              "Optional": true,
              "Description": "Send 'X-Grafana-User' header to data source"
            },
            "dataproxy_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Timeout for data proxy requests in seconds"
            },
            "date_formats": {
              "Type": "List",
              "Optional": true,
              "Description": "Grafana date format specifications",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "default_timezone": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Default time zone for user preferences. Value 'browser' uses browser local time zone."
                  },
                  "full_date": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string for cases where full date is shown"
                  },
                  "interval_day": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring day accuracy is shown"
                  },
                  "interval_hour": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring hour accuracy is shown"
                  },
                  "interval_minute": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring minute accuracy is shown"
                  },
                  "interval_month": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring month accuracy is shown"
                  },
                  "interval_second": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring second accuracy is shown"
                  },
                  "interval_year": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Moment.js style format string used when a time requiring year accuracy is shown"
                  }
                }
              }
            },
            "disable_gravatar": {
              "Type": "String",
              "Optional": true,
              "Description": "Set to true to disable gravatar. Defaults to false (gravatar is enabled)"
            },
            "editors_can_admin": {
              "Type": "String",
              "Optional": true,
              "Description": "Editors can manage folders, teams and dashboards created by them"
            },
            "external_image_storage": {
              "Type": "List",
              "Optional": true,
              "Description": "External image store settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "access_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "S3 access key. Requires permissions to the S3 bucket for the s3:PutObject and s3:PutObjectAcl actions"
                  },
                  "bucket_url": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Bucket URL for S3"
                  },
                  "provider": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Provider type"
                  },
                  "secret_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "S3 secret key"
                  }
                }
              }
            },
            "google_analytics_ua_id": {
              "Type": "String",
              "Optional": true,
              "Description": "Google Analytics ID"
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "metrics_enabled": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Grafana /metrics endpoint"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to grafana with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable grafana"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "grafana": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to grafana from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service"
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "smtp_server": {
              "Type": "List",
              "Optional": true,
              "Description": "SMTP server settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "from_address": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Address used for sending emails"
                  },
                  "from_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Name used in outgoing emails, defaults to Grafana"
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Server hostname or IP"
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for SMTP authentication"
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "SMTP server port"
                  },
                  "skip_verify": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Skip verifying server certificate. Defaults to false"
                  },
                  "starttls_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS. Default is OpportunisticStartTLS."
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Username for SMTP authentication"
                  }
                }
              }
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            },
            "user_auto_assign_org": {
              "Type": "String",
              "Optional": true,
              "Description": "Auto-assign new users on signup to main organization. Defaults to false"
            },
            "user_auto_assign_org_role": {
              "Type": "String",
              "Optional": true,
              "Description": "Set role for new signups. Defaults to Viewer"
            },
            "viewers_can_edit": {
              "Type": "String",
              "Optional": true,
              "Description": "Users with view-only permission can edit but not save dashboards"
            }
          }
        }
      },
      "influxdb": {
        "Type": "List",
        "Description": "InfluxDB specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "database_name": {
              "Type": "String",
              "Description": "Name of the default InfluxDB database",
              "Computed": true
            }
          }
        }
      },
      "influxdb_user_config": {
        "Type": "List",
        "Description": "Influxdb user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "influxdb": {
              "Type": "List",
              "Optional": true,
              "Description": "influxdb.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "log_queries_after": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum duration in seconds before a query is logged as a slow query. Setting this to 0 (the default) will never log slow queries."
                  },
                  "max_connection_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Maximum number of connections to InfluxDB. Setting this to 0 (default) means no limit. If using max_connection_limit, it is recommended to set the value to be large enough in order to not block clients unnecessarily."
                  },
                  "max_row_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of rows returned in a non-chunked query. Setting this to 0 (the default) allows an unlimited number to be returned."
                  },
                  "max_select_buckets": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of 'GROUP BY time()' buckets that can be processed in a query. Setting this to 0 (the default) allows an unlimited number to be processed."
                  },
                  "max_select_point": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of points that can be processed in a SELECT statement. Setting this to 0 (the default) allows an unlimited number to be processed."
                  },
                  "query_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum duration in seconds before a query is killed. Setting this to 0 (the default) will never kill slow queries."
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to influxdb with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable influxdb"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "influxdb": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to influxdb from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service"
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "kafka": {
        "Type": "List",
        "Description": "Kafka specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka client certificate",
              "Computed": true
            },
            "access_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka client certificate key",
              "Computed": true
            },
            "connect_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka Connect URI, if any",
              "Computed": true
            },
            "rest_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Kafka REST URI, if any",
              "Computed": true
            },
            "schema_registry_uri": {
              "Type": "String",
              "Optional": true,
              "Description": "The Schema Registry URI, if any",
              "Computed": true
            }
          }
        }
      },
      "kafka_connect": {
        "Type": "List",
        "Description": "Kafka Connect specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "kafka_connect_user_config": {
        "Type": "List",
        "Description": "Kafka_connect user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka_connect": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka Connect configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connector_client_config_override_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client config override policy"
                  },
                  "consumer_auto_offset_reset": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer auto offset reset"
                  },
                  "consumer_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data the server should return for a fetch request"
                  },
                  "consumer_isolation_level": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer isolation level"
                  },
                  "consumer_max_partition_fetch_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data per-partition the server will return."
                  },
                  "consumer_max_poll_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum delay between polls when using consumer group management"
                  },
                  "consumer_max_poll_records": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of records returned by a single poll"
                  },
                  "offset_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The interval at which to try committing offsets for tasks"
                  },
                  "offset_flush_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Offset flush timeout"
                  },
                  "producer_max_request_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum size of a request in bytes"
                  },
                  "session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The timeout used to detect failures when using Kafka’s group management facilities"
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_connect"
                  }
                }
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "kafka_mirrormaker": {
        "Type": "List",
        "Description": "Kafka MirrorMaker 2 specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "kafka_mirrormaker_user_config": {
        "Type": "List",
        "Description": "Kafka_mirrormaker user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka_mirrormaker": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka MirrorMaker configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "emit_checkpoints_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Emit consumer group offset checkpoints"
                  },
                  "emit_checkpoints_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of consumer group offset checkpoints"
                  },
                  "refresh_groups_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Refresh consumer groups"
                  },
                  "refresh_groups_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of group refresh"
                  },
                  "refresh_topics_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Refresh topics and partitions"
                  },
                  "refresh_topics_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of topic and partitions refresh"
                  },
                  "sync_group_offsets_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Sync consumer group offsets"
                  },
                  "sync_group_offsets_interval_seconds": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Frequency of consumer group offset sync"
                  },
                  "sync_topic_configs_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Sync remote topics"
                  },
                  "tasks_max_per_cpu": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Maximum number of MirrorMaker tasks (of each type) per service CPU"
                  }
                }
              }
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "kafka_user_config": {
        "Type": "List",
        "Description": "Kafka user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka broker configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "auto_create_topics_enable": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "auto.create.topics.enable"
                  },
                  "compression_type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "compression.type"
                  },
                  "connections_max_idle_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "connections.max.idle.ms"
                  },
                  "default_replication_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "default.replication.factor"
                  },
                  "group_initial_rebalance_delay_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.initial.rebalance.delay.ms"
                  },
                  "group_max_session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.max.session.timeout.ms"
                  },
                  "group_min_session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group.min.session.timeout.ms"
                  },
                  "log_cleaner_delete_retention_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.delete.retention.ms"
                  },
                  "log_cleaner_max_compaction_lag_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.max.compaction.lag.ms"
                  },
                  "log_cleaner_min_cleanable_ratio": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.min.cleanable.ratio"
                  },
                  "log_cleaner_min_compaction_lag_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleaner.min.compaction.lag.ms"
                  },
                  "log_cleanup_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.cleanup.policy"
                  },
                  "log_flush_interval_messages": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.flush.interval.messages"
                  },
                  "log_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.flush.interval.ms"
                  },
                  "log_index_interval_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.index.interval.bytes"
                  },
                  "log_index_size_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.index.size.max.bytes"
                  },
                  "log_message_downconversion_enable": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.downconversion.enable"
                  },
                  "log_message_timestamp_difference_max_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.timestamp.difference.max.ms"
                  },
                  "log_message_timestamp_type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.message.timestamp.type"
                  },
                  "log_preallocate": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.preallocate"
                  },
                  "log_retention_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.bytes"
                  },
                  "log_retention_hours": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.hours"
                  },
                  "log_retention_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.retention.ms"
                  },
                  "log_roll_jitter_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.roll.jitter.ms"
                  },
                  "log_roll_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.roll.ms"
                  },
                  "log_segment_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.segment.bytes"
                  },
                  "log_segment_delete_delay_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log.segment.delete.delay.ms"
                  },
                  "max_connections_per_ip": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max.connections.per.ip"
                  },
                  "max_incremental_fetch_session_cache_slots": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max.incremental.fetch.session.cache.slots"
                  },
                  "message_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "message.max.bytes"
                  },
                  "min_insync_replicas": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "min.insync.replicas"
                  },
                  "num_partitions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "num.partitions"
                  },
                  "offsets_retention_minutes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "offsets.retention.minutes"
                  },
                  "producer_purgatory_purge_interval_requests": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.purgatory.purge.interval.requests"
                  },
                  "replica_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "replica.fetch.max.bytes"
                  },
                  "replica_fetch_response_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "replica.fetch.response.max.bytes"
                  },
                  "socket_request_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "socket.request.max.bytes"
                  },
                  "transaction_remove_expired_transaction_cleanup_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "transaction.remove.expired.transaction.cleanup.interval.ms"
                  },
                  "transaction_state_log_segment_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "transaction.state.log.segment.bytes"
                  }
                }
              }
            },
            "kafka_authentication_methods": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka authentication methods",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "certificate": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable certificate/SSL authentication"
                  },
                  "sasl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable SASL authentication"
                  }
                }
              }
            },
            "kafka_connect": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Kafka Connect service"
            },
            "kafka_connect_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka Connect configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connector_client_config_override_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Client config override policy"
                  },
                  "consumer_auto_offset_reset": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer auto offset reset"
                  },
                  "consumer_fetch_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data the server should return for a fetch request"
                  },
                  "consumer_isolation_level": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Consumer isolation level"
                  },
                  "consumer_max_partition_fetch_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum amount of data per-partition the server will return."
                  },
                  "consumer_max_poll_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum delay between polls when using consumer group management"
                  },
                  "consumer_max_poll_records": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum number of records returned by a single poll"
                  },
                  "offset_flush_interval_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The interval at which to try committing offsets for tasks"
                  },
                  "offset_flush_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Offset flush timeout"
                  },
                  "producer_max_request_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The maximum size of a request in bytes"
                  },
                  "session_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The timeout used to detect failures when using Kafka’s group management facilities"
                  }
                }
              }
            },
            "kafka_rest": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Kafka-REST service"
            },
            "kafka_rest_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka REST configuration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "consumer_enable_auto_commit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.enable.auto.commit"
                  },
                  "consumer_request_max_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.request.max.bytes"
                  },
                  "consumer_request_timeout_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.request.timeout.ms"
                  },
                  "producer_acks": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.acks"
                  },
                  "producer_linger_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.linger.ms"
                  },
                  "simpleconsumer_pool_size_max": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "simpleconsumer.pool.size.max"
                  }
                }
              }
            },
            "kafka_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka major version"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka"
                  },
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_connect"
                  },
                  "kafka_rest": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable kafka_rest"
                  },
                  "schema_registry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable schema_registry"
                  }
                }
              }
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "kafka": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "kafka_connect": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "kafka_rest": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to kafka_rest from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "schema_registry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to schema_registry from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "schema_registry": {
              "Type": "String",
              "Optional": true,
              "Description": "Enable Schema-Registry service"
            },
            "schema_registry_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Schema Registry configuration",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "leader_eligibility": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "leader_eligibility"
                  },
                  "topic_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "topic_name"
                  }
                }
              }
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "maintenance_window_dow": {
        "Type": "String",
        "Description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.",
        "Computed": true
      },
      "maintenance_window_time": {
        "Type": "String",
        "Description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.",
        "Computed": true
      },
      "mysql": {
        "Type": "List",
        "Description": "MySQL specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "mysql_user_config": {
        "Type": "List",
        "Description": "Mysql user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "admin_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created."
            },
            "admin_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom username for admin user. This must be set only when a new service is being created."
            },
            "backup_hour": {
              "Type": "String",
              "Optional": true,
              "Description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed."
            },
            "backup_minute": {
              "Type": "String",
              "Optional": true,
              "Description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed."
            },
            "binlog_retention_period": {
              "Type": "String",
              "Optional": true,
              "Description": "The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended for services that require binlog entries for longer than the default for example if using the MySQL Debezium Kafka connector."
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection"
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from"
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)"
                  },
                  "method": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The migration method to be used"
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from"
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from"
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL"
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from"
                  }
                }
              }
            },
            "mysql": {
              "Type": "List",
              "Optional": true,
              "Description": "mysql.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "connect_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "connect_timeout"
                  },
                  "default_time_zone": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "default_time_zone"
                  },
                  "group_concat_max_len": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "group_concat_max_len"
                  },
                  "information_schema_stats_expiry": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "information_schema_stats_expiry"
                  },
                  "innodb_ft_min_token_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_ft_min_token_size"
                  },
                  "innodb_ft_server_stopword_table": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_ft_server_stopword_table"
                  },
                  "innodb_lock_wait_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_lock_wait_timeout"
                  },
                  "innodb_log_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_log_buffer_size"
                  },
                  "innodb_online_alter_log_max_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_online_alter_log_max_size"
                  },
                  "innodb_print_all_deadlocks": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_print_all_deadlocks"
                  },
                  "innodb_rollback_on_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "innodb_rollback_on_timeout"
                  },
                  "interactive_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "interactive_timeout"
                  },
                  "internal_tmp_mem_storage_engine": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "internal_tmp_mem_storage_engine"
                  },
                  "long_query_time": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "long_query_time"
                  },
                  "max_allowed_packet": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_allowed_packet"
                  },
                  "max_heap_table_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_heap_table_size"
                  },
                  "net_read_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "net_read_timeout"
                  },
                  "net_write_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "net_write_timeout"
                  },
                  "slow_query_log": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "slow_query_log"
                  },
                  "sort_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sort_buffer_size"
                  },
                  "sql_mode": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sql_mode"
                  },
                  "sql_require_primary_key": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "sql_require_primary_key"
                  },
                  "tmp_table_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "tmp_table_size"
                  },
                  "wait_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wait_timeout"
                  }
                }
              }
            },
            "mysql_version": {
              "Type": "String",
              "Optional": true,
              "Description": "MySQL major version"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysql with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "mysqlx": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysqlx with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable mysql"
                  },
                  "mysqlx": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable mysqlx"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mysql": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysql from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "mysqlx": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to mysqlx from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_target_time": {
              "Type": "String",
              "Optional": true,
              "Description": "Recovery target time when forking a service. This has effect only when a new service is being created."
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "opensearch": {
        "Type": "List",
        "Description": "Opensearch specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "opensearch_dashboards_uri": {
              "Type": "String",
              "Description": "URI for Opensearch dashboard frontend",
              "Computed": true
            }
          }
        }
      },
      "opensearch_user_config": {
        "Type": "List",
        "Description": "Opensearch user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "custom_domain": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain"
            },
            "disable_replication_factor_adjustment": {
              "Type": "String",
              "Optional": true,
              "Description": "Disable replication factor adjustment"
            },
            "index_patterns": {
              "Type": "List",
              "Optional": true,
              "Description": "Index patterns",
              "MaxItems": 512,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_index_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Maximum number of indexes to keep"
                  },
                  "pattern": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "fnmatch pattern"
                  },
                  "sorting_algorithm": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Deletion sorting algorithm"
                  }
                }
              }
            },
            "index_template": {
              "Type": "List",
              "Optional": true,
              "Description": "Template settings for all new indexes",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "mapping_nested_objects_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.mapping.nested_objects.limit"
                  },
                  "number_of_replicas": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_replicas"
                  },
                  "number_of_shards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index.number_of_shards"
                  }
                }
              }
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "keep_index_refresh_interval": {
              "Type": "String",
              "Optional": true,
              "Description": "Don't reset index.refresh_interval to the default value"
            },
            "max_index_count": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum index count"
            },
            "opensearch": {
              "Type": "List",
              "Optional": true,
              "Description": "OpenSearch settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "action_auto_create_index_enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "action.auto_create_index"
                  },
                  "action_destructive_requires_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Require explicit index names when deleting"
                  },
                  "cluster_max_shards_per_node": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "cluster.max_shards_per_node"
                  },
                  "http_max_content_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_content_length"
                  },
                  "http_max_header_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_header_size"
                  },
                  "http_max_initial_line_length": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "http.max_initial_line_length"
                  },
                  "indices_fielddata_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.fielddata.cache.size"
                  },
                  "indices_memory_index_buffer_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.memory.index_buffer_size"
                  },
                  "indices_queries_cache_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.queries.cache.size"
                  },
                  "indices_query_bool_max_clause_count": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "indices.query.bool.max_clause_count"
                  },
                  "override_main_response_version": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "compatibility.override_main_response_version"
                  },
                  "reindex_remote_whitelist": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "reindex_remote_whitelist",
                    "MaxItems": 32,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "search_max_buckets": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search.max_buckets"
                  },
                  "thread_pool_analyze_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool queue size"
                  },
                  "thread_pool_analyze_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "analyze thread pool size"
                  },
                  "thread_pool_force_merge_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "force_merge thread pool size"
                  },
                  "thread_pool_get_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool queue size"
                  },
                  "thread_pool_get_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "get thread pool size"
                  },
                  "thread_pool_index_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "index thread pool size"
                  },
                  "thread_pool_search_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool queue size"
                  },
                  "thread_pool_search_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search thread pool size"
                  },
                  "thread_pool_search_throttled_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool queue size"
                  },
                  "thread_pool_search_throttled_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "search_throttled thread pool size"
                  },
                  "thread_pool_write_queue_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool queue size"
                  },
                  "thread_pool_write_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "write thread pool size"
                  }
                }
              }
            },
            "opensearch_dashboards": {
              "Type": "List",
              "Optional": true,
              "Description": "OpenSearch Dashboards settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "enabled": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable or disable OpenSearch Dashboards"
                  },
                  "max_old_space_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_old_space_size"
                  },
                  "opensearch_request_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch"
                  }
                }
              }
            },
            "opensearch_version": {
              "Type": "String",
              "Optional": true,
              "Description": "OpenSearch major version"
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "opensearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to opensearch with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "opensearch_dashboards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to opensearch_dashboards with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "opensearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable opensearch"
                  },
                  "opensearch_dashboards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable opensearch_dashboards"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "opensearch": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to opensearch from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "opensearch_dashboards": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to opensearch_dashboards from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service"
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "pg": {
        "Type": "List",
        "Description": "PostgreSQL specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dbname": {
              "Type": "String",
              "Description": "Primary PostgreSQL database name",
              "Computed": true
            },
            "host": {
              "Type": "String",
              "Description": "PostgreSQL master node host IP or name",
              "Computed": true
            },
            "password": {
              "Type": "String",
              "Description": "PostgreSQL admin user password",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "PostgreSQL port",
              "Computed": true
            },
            "replica_uri": {
              "Type": "String",
              "Description": "PostgreSQL replica URI for services with a replica",
              "Computed": true
            },
            "sslmode": {
              "Type": "String",
              "Description": "PostgreSQL sslmode setting (currently always \"require\")",
              "Computed": true
            },
            "uri": {
              "Type": "String",
              "Optional": true,
              "Description": "PostgreSQL master connection URI",
              "Computed": true
            },
            "user": {
              "Type": "String",
              "Description": "PostgreSQL admin user name",
              "Computed": true
            }
          }
        }
      },
      "pg_user_config": {
        "Type": "List",
        "Description": "Pg user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "admin_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created."
            },
            "admin_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom username for admin user. This must be set only when a new service is being created."
            },
            "backup_hour": {
              "Type": "String",
              "Optional": true,
              "Description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed."
            },
            "backup_minute": {
              "Type": "String",
              "Optional": true,
              "Description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed."
            },
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection"
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from"
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)"
                  },
                  "method": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The migration method to be used"
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from"
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from"
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL"
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from"
                  }
                }
              }
            },
            "pg": {
              "Type": "List",
              "Optional": true,
              "Description": "postgresql.conf configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "autovacuum_analyze_scale_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_analyze_scale_factor"
                  },
                  "autovacuum_analyze_threshold": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_analyze_threshold"
                  },
                  "autovacuum_freeze_max_age": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_freeze_max_age"
                  },
                  "autovacuum_max_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_max_workers"
                  },
                  "autovacuum_naptime": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_naptime"
                  },
                  "autovacuum_vacuum_cost_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_cost_delay"
                  },
                  "autovacuum_vacuum_cost_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_cost_limit"
                  },
                  "autovacuum_vacuum_scale_factor": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_scale_factor"
                  },
                  "autovacuum_vacuum_threshold": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "autovacuum_vacuum_threshold"
                  },
                  "bgwriter_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "bgwriter_delay"
                  },
                  "bgwriter_flush_after": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "bgwriter_flush_after"
                  },
                  "bgwriter_lru_maxpages": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "bgwriter_lru_maxpages"
                  },
                  "bgwriter_lru_multiplier": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "bgwriter_lru_multiplier"
                  },
                  "deadlock_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "deadlock_timeout"
                  },
                  "default_toast_compression": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "default_toast_compression"
                  },
                  "idle_in_transaction_session_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "idle_in_transaction_session_timeout"
                  },
                  "jit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "jit"
                  },
                  "log_autovacuum_min_duration": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_autovacuum_min_duration"
                  },
                  "log_error_verbosity": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_error_verbosity"
                  },
                  "log_line_prefix": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_line_prefix"
                  },
                  "log_min_duration_statement": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "log_min_duration_statement"
                  },
                  "max_files_per_process": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_files_per_process"
                  },
                  "max_locks_per_transaction": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_locks_per_transaction"
                  },
                  "max_logical_replication_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_logical_replication_workers"
                  },
                  "max_parallel_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_parallel_workers"
                  },
                  "max_parallel_workers_per_gather": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_parallel_workers_per_gather"
                  },
                  "max_pred_locks_per_transaction": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_pred_locks_per_transaction"
                  },
                  "max_prepared_transactions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_prepared_transactions"
                  },
                  "max_replication_slots": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_replication_slots"
                  },
                  "max_slot_wal_keep_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_slot_wal_keep_size"
                  },
                  "max_stack_depth": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_stack_depth"
                  },
                  "max_standby_archive_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_standby_archive_delay"
                  },
                  "max_standby_streaming_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_standby_streaming_delay"
                  },
                  "max_wal_senders": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_wal_senders"
                  },
                  "max_worker_processes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_worker_processes"
                  },
                  "pg_partman_bgw__dot__interval": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_partman_bgw.interval"
                  },
                  "pg_partman_bgw__dot__role": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_partman_bgw.role"
                  },
                  "pg_stat_statements__dot__track": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "pg_stat_statements.track"
                  },
                  "temp_file_limit": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "temp_file_limit"
                  },
                  "timezone": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "timezone"
                  },
                  "track_activity_query_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_activity_query_size"
                  },
                  "track_commit_timestamp": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_commit_timestamp"
                  },
                  "track_functions": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_functions"
                  },
                  "track_io_timing": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "track_io_timing"
                  },
                  "wal_sender_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wal_sender_timeout"
                  },
                  "wal_writer_delay": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "wal_writer_delay"
                  }
                }
              }
            },
            "pg_read_replica": {
              "Type": "String",
              "Optional": true,
              "Description": "Should the service which is being forked be a read replica (deprecated, use read_replica service integration instead)."
            },
            "pg_service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the PG Service from which to fork (deprecated, use service_to_fork_from). This has effect only when a new service is being created."
            },
            "pg_version": {
              "Type": "String",
              "Optional": true,
              "Description": "PostgreSQL major version"
            },
            "pgbouncer": {
              "Type": "List",
              "Optional": true,
              "Description": "PGBouncer connection pooling settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "autodb_idle_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If the automatically created database pools have been unused this many seconds, they are freed. If 0 then timeout is disabled. [seconds]"
                  },
                  "autodb_max_db_connections": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Do not allow more than this many server connections per database (regardless of user). Setting it to 0 means unlimited."
                  },
                  "autodb_pool_mode": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "PGBouncer pool mode"
                  },
                  "autodb_pool_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If non-zero then create automatically a pool of that size per user when a pool doesn't exist."
                  },
                  "ignore_startup_parameters": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of parameters to ignore when given in startup packet",
                    "MaxItems": 32,
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "min_pool_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Add more server connections to pool if below this number. Improves behavior when usual load comes suddenly back after period of total inactivity. The value is effectively capped at the pool size."
                  },
                  "server_idle_timeout": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If a server connection has been idle more than this many seconds it will be dropped. If 0 then timeout is disabled. [seconds]"
                  },
                  "server_lifetime": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The pooler will close an unused server connection that has been connected longer than this. [seconds]"
                  },
                  "server_reset_query_always": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Run server_reset_query (DISCARD ALL) in all pooling modes"
                  }
                }
              }
            },
            "pglookout": {
              "Type": "List",
              "Optional": true,
              "Description": "PGLookout settings",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_failover_replication_time_lag": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "max_failover_replication_time_lag"
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pg with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pgbouncer with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable pg"
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable pgbouncer"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "pg": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pg from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "pgbouncer": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to pgbouncer from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_target_time": {
              "Type": "String",
              "Optional": true,
              "Description": "Recovery target time when forking a service. This has effect only when a new service is being created."
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "shared_buffers_percentage": {
              "Type": "String",
              "Optional": true,
              "Description": "shared_buffers_percentage"
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            },
            "synchronous_replication": {
              "Type": "String",
              "Optional": true,
              "Description": "Synchronous replication type. Note that the service plan also needs to support synchronous replication."
            },
            "timescaledb": {
              "Type": "List",
              "Optional": true,
              "Description": "TimescaleDB extension configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "max_background_workers": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "timescaledb.max_background_workers"
                  }
                }
              }
            },
            "variant": {
              "Type": "String",
              "Optional": true,
              "Description": "Variant of the PostgreSQL service, may affect the features that are exposed by default"
            },
            "work_mem": {
              "Type": "String",
              "Optional": true,
              "Description": "work_mem"
            }
          }
        }
      },
      "plan": {
        "Type": "String",
        "Description": "Subscription plan",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Target project"
      },
      "project_vpc_id": {
        "Type": "String",
        "Description": "Identifier of the VPC the service should be in, if any",
        "Computed": true
      },
      "redis": {
        "Type": "List",
        "Description": "Redis specific server provided values",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo"
        }
      },
      "redis_user_config": {
        "Type": "List",
        "Description": "Redis user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip_filter": {
              "Type": "List",
              "Optional": true,
              "Description": "IP filter",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "migration": {
              "Type": "List",
              "Optional": true,
              "Description": "Migrate data from existing server",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "dbname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Database name for bootstrapping the initial connection"
                  },
                  "host": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Hostname or IP address of the server where to migrate data from"
                  },
                  "ignore_dbs": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)"
                  },
                  "method": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The migration method to be used"
                  },
                  "password": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Password for authentication with the server where to migrate data from"
                  },
                  "port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Port number of the server where to migrate data from"
                  },
                  "ssl": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The server where to migrate data from is secured with SSL"
                  },
                  "username": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "User name for authentication with the server where to migrate data from"
                  }
                }
              }
            },
            "private_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from private networks",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  },
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to redis with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations"
                  }
                }
              }
            },
            "privatelink_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service components through Privatelink",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Enable redis"
                  }
                }
              }
            },
            "project_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another project to fork a service from. This has effect only when a new service is being created."
            },
            "public_access": {
              "Type": "List",
              "Optional": true,
              "Description": "Allow access to selected service ports from the public Internet",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "prometheus": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "redis": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Allow clients to connect to redis from the public internet for service nodes that are in a project VPC or another type of private network"
                  }
                }
              }
            },
            "recovery_basebackup_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the basebackup to restore in forked service"
            },
            "redis_acl_channels_default": {
              "Type": "String",
              "Optional": true,
              "Description": "Default ACL for pub/sub channels used when Redis user is created"
            },
            "redis_io_threads": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis IO thread count"
            },
            "redis_lfu_decay_time": {
              "Type": "String",
              "Optional": true,
              "Description": "LFU maxmemory-policy counter decay time in minutes"
            },
            "redis_lfu_log_factor": {
              "Type": "String",
              "Optional": true,
              "Description": "Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies"
            },
            "redis_maxmemory_policy": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis maxmemory-policy"
            },
            "redis_notify_keyspace_events": {
              "Type": "String",
              "Optional": true,
              "Description": "Set notify-keyspace-events option"
            },
            "redis_number_of_databases": {
              "Type": "String",
              "Optional": true,
              "Description": "Number of redis databases"
            },
            "redis_persistence": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis persistence"
            },
            "redis_pubsub_client_output_buffer_limit": {
              "Type": "String",
              "Optional": true,
              "Description": "Pub/sub client output buffer hard limit in MB"
            },
            "redis_ssl": {
              "Type": "String",
              "Optional": true,
              "Description": "Require SSL to access Redis"
            },
            "redis_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Redis idle connection timeout"
            },
            "service_to_fork_from": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of another service to fork from. This has effect only when a new service is being created."
            },
            "static_ips": {
              "Type": "String",
              "Optional": true,
              "Description": "Static IP addresses"
            }
          }
        }
      },
      "service_host": {
        "Type": "String",
        "Description": "Service hostname",
        "Computed": true
      },
      "service_integrations": {
        "Type": "List",
        "Description": "Service integrations to specify when creating a service. Not applied after initial service creation",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "integration_type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of the service integration. The only supported value at the moment is 'read_replica'"
            },
            "source_service_name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the source service"
            }
          }
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Service name"
      },
      "service_password": {
        "Type": "String",
        "Description": "Password used for connecting to the service, if applicable",
        "Computed": true
      },
      "service_port": {
        "Type": "Int",
        "Description": "Service port",
        "Computed": true
      },
      "service_type": {
        "Type": "String",
        "Description": "Service type code",
        "Computed": true
      },
      "service_uri": {
        "Type": "String",
        "Description": "URI for connecting to the service. Service specific info is under \"kafka\", \"pg\", etc.",
        "Computed": true
      },
      "service_username": {
        "Type": "String",
        "Description": "Username used for connecting to the service, if applicable",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` and `RUNNING`.",
        "Computed": true
      },
      "termination_protection": {
        "Type": "Bool",
        "Description": "Prevent service from being deleted. It is recommended to have this enabled for all services.",
        "Computed": true
      }
    },
    "aiven_service_component": {
      "component": {
        "Type": "String",
        "Required": true,
        "Description": "Service component name"
      },
      "host": {
        "Type": "String",
        "Description": "DNS name for connecting to the service component",
        "Computed": true
      },
      "kafka_authentication_method": {
        "Type": "String",
        "Optional": true,
        "Description": "Kafka authentication method. This is a value specific to the 'kafka' service component"
      },
      "port": {
        "Type": "Int",
        "Description": "Port number for connecting to the service component",
        "Computed": true
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project name"
      },
      "route": {
        "Type": "String",
        "Optional": true,
        "Description": "Network access route"
      },
      "service_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Service name"
      },
      "ssl": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components that may disable encryption"
      },
      "usage": {
        "Type": "String",
        "Optional": true,
        "Description": "DNS usage name",
        "Default": {
          "Type": "string",
          "Value": "primary"
        }
      }
    },
    "aiven_service_integration": {
      "datadog_user_config": {
        "Type": "List",
        "Description": "Dashboard specific user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "datadog_tags": {
              "Type": "List",
              "Optional": true,
              "Description": "Custom tags provided by user",
              "MaxItems": 32,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "comment": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Optional tag explanation"
                  },
                  "tag": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Tag value"
                  }
                }
              }
            },
            "exclude_consumer_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "List of custom metrics",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "exclude_topics": {
              "Type": "List",
              "Optional": true,
              "Description": "List of topics to exclude",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "include_consumer_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "List of custom metrics",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "include_topics": {
              "Type": "List",
              "Optional": true,
              "Description": "List of topics to include",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "kafka_custom_metrics": {
              "Type": "List",
              "Optional": true,
              "Description": "List of custom metrics",
              "MaxItems": 1024,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "max_jmx_metrics": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum number of JMX metrics to send"
            }
          }
        }
      },
      "destination_endpoint_id": {
        "Type": "String",
        "Description": "Destination endpoint for the integration (if any)",
        "Computed": true
      },
      "destination_service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Destination service for the integration (if any)"
      },
      "integration_id": {
        "Type": "String",
        "Description": "Service Integration Id at aiven",
        "Computed": true
      },
      "integration_type": {
        "Type": "String",
        "Required": true,
        "Description": "Type of the service integration"
      },
      "kafka_connect_user_config": {
        "Type": "List",
        "Description": "Kafka Connect specific user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "kafka_connect": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka Connect service configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "config_storage_topic": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The name of the topic where connector and task configuration data are stored.This must be the same for all workers with the same group_id."
                  },
                  "group_id": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "A unique string that identifies the Connect cluster group this worker belongs to."
                  },
                  "offset_storage_topic": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The name of the topic where connector and task configuration offsets are stored.This must be the same for all workers with the same group_id."
                  },
                  "status_storage_topic": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The name of the topic where connector and task configuration status updates are stored.This must be the same for all workers with the same group_id."
                  }
                }
              }
            }
          }
        }
      },
      "kafka_logs_user_config": {
        "Type": "List",
        "Description": "Kafka Logs specific user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "kafka_topic": {
              "Type": "String",
              "Optional": true,
              "Description": "Topic name"
            }
          }
        }
      },
      "kafka_mirrormaker_user_config": {
        "Type": "List",
        "Description": "Mirrormaker 2 integration specific user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cluster_alias": {
              "Type": "String",
              "Optional": true,
              "Description": "Kafka cluster alias"
            },
            "kafka_mirrormaker": {
              "Type": "List",
              "Optional": true,
              "Description": "Kafka MirrorMaker configuration values",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "consumer_fetch_min_bytes": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "consumer.fetch.min.bytes"
                  },
                  "producer_batch_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.batch.size"
                  },
                  "producer_buffer_memory": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.buffer.memory"
                  },
                  "producer_linger_ms": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.linger.ms"
                  },
                  "producer_max_request_size": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "producer.max.request.size"
                  }
                }
              }
            }
          }
        }
      },
      "logs_user_config": {
        "Type": "List",
        "Description": "Log integration specific user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "elasticsearch_index_days_max": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch index retention limit"
            },
            "elasticsearch_index_prefix": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch index prefix"
            }
          }
        }
      },
      "metrics_user_config": {
        "Type": "List",
        "Description": "Metrics specific user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "database": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the database where to store metric datapoints. Only affects PostgreSQL destinations. Defaults to 'metrics'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service."
            },
            "retention_days": {
              "Type": "String",
              "Optional": true,
              "Description": "Number of days to keep old metrics. Only affects PostgreSQL destinations. Set to 0 for no automatic cleanup. Defaults to 30 days."
            },
            "ro_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of a user that can be used to read metrics. This will be used for Grafana integration (if enabled) to prevent Grafana users from making undesired changes. Only affects PostgreSQL destinations. Defaults to 'metrics_reader'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service."
            },
            "source_mysql": {
              "Type": "List",
              "Optional": true,
              "Description": "Configuration options for metrics where source service is MySQL",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "telegraf": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Configuration options for Telegraf MySQL input plugin",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "gather_event_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.EVENT_WAITS"
                        },
                        "gather_file_events_stats": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "gather metrics from PERFORMANCE_SCHEMA.FILE_SUMMARY_BY_EVENT_NAME"
                        },
                        "gather_index_io_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_INDEX_USAGE"
                        },
                        "gather_info_schema_auto_inc": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather auto_increment columns and max values from information schema"
                        },
                        "gather_innodb_metrics": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from INFORMATION_SCHEMA.INNODB_METRICS"
                        },
                        "gather_perf_events_statements": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.EVENTS_STATEMENTS_SUMMARY_BY_DIGEST"
                        },
                        "gather_process_list": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather thread state counts from INFORMATION_SCHEMA.PROCESSLIST"
                        },
                        "gather_slave_status": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from SHOW SLAVE STATUS command output"
                        },
                        "gather_table_io_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_TABLE"
                        },
                        "gather_table_lock_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_LOCK_WAITS"
                        },
                        "gather_table_schema": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from INFORMATION_SCHEMA.TABLES"
                        },
                        "perf_events_statements_digest_text_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Truncates digest text from perf_events_statements into this many characters"
                        },
                        "perf_events_statements_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Limits metrics from perf_events_statements"
                        },
                        "perf_events_statements_time_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Only include perf_events_statements whose last seen is less than this many seconds"
                        }
                      }
                    }
                  }
                }
              }
            },
            "username": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the user used to write metrics. Only affects PostgreSQL destinations. Defaults to 'metrics_writer'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service."
            }
          }
        }
      },
      "mirrormaker_user_config": {
        "Type": "List",
        "Description": "Mirrormaker 1 integration specific user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "mirrormaker_whitelist": {
              "Type": "String",
              "Optional": true,
              "Description": "Mirrormaker topic whitelist"
            }
          }
        }
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project the integration belongs to"
      },
      "prometheus_user_config": {
        "Type": "List",
        "Description": "Prometheus coordinator specific user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "source_mysql": {
              "Type": "List",
              "Optional": true,
              "Description": "Configuration options for metrics where source service is MySQL",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "telegraf": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Configuration options for Telegraf MySQL input plugin",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "gather_event_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.EVENT_WAITS"
                        },
                        "gather_file_events_stats": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "gather metrics from PERFORMANCE_SCHEMA.FILE_SUMMARY_BY_EVENT_NAME"
                        },
                        "gather_index_io_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_INDEX_USAGE"
                        },
                        "gather_info_schema_auto_inc": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather auto_increment columns and max values from information schema"
                        },
                        "gather_innodb_metrics": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from INFORMATION_SCHEMA.INNODB_METRICS"
                        },
                        "gather_perf_events_statements": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.EVENTS_STATEMENTS_SUMMARY_BY_DIGEST"
                        },
                        "gather_process_list": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather thread state counts from INFORMATION_SCHEMA.PROCESSLIST"
                        },
                        "gather_slave_status": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from SHOW SLAVE STATUS command output"
                        },
                        "gather_table_io_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_TABLE"
                        },
                        "gather_table_lock_waits": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from PERFORMANCE_SCHEMA.TABLE_LOCK_WAITS"
                        },
                        "gather_table_schema": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Gather metrics from INFORMATION_SCHEMA.TABLES"
                        },
                        "perf_events_statements_digest_text_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Truncates digest text from perf_events_statements into this many characters"
                        },
                        "perf_events_statements_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Limits metrics from perf_events_statements"
                        },
                        "perf_events_statements_time_limit": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Only include perf_events_statements whose last seen is less than this many seconds"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "source_endpoint_id": {
        "Type": "String",
        "Description": "Source endpoint for the integration (if any)",
        "Computed": true
      },
      "source_service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Source service for the integration (if any)"
      }
    },
    "aiven_service_integration_endpoint": {
      "datadog_user_config": {
        "Type": "List",
        "Description": "Datadog specific user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "datadog_api_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Datadog API key"
            },
            "datadog_tags": {
              "Type": "List",
              "Optional": true,
              "Description": "Custom tags provided by user",
              "MaxItems": 32,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "comment": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Optional tag explanation"
                  },
                  "tag": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Tag value"
                  }
                }
              }
            },
            "disable_consumer_stats": {
              "Type": "String",
              "Optional": true,
              "Description": "Disable consumer group metrics"
            },
            "kafka_consumer_check_instances": {
              "Type": "String",
              "Optional": true,
              "Description": "Number of separate instances to fetch kafka consumer statistics with"
            },
            "kafka_consumer_stats_timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Number of seconds that datadog will wait to get consumer statistics from brokers"
            },
            "max_partition_contexts": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum number of partition contexts to send"
            },
            "site": {
              "Type": "String",
              "Optional": true,
              "Description": "Datadog intake site. Defaults to datadoghq.com"
            }
          }
        }
      },
      "endpoint_config": {
        "Type": "Map",
        "Description": "Integration endpoint specific backend configuration",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "endpoint_name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the service integration endpoint"
      },
      "endpoint_type": {
        "Type": "String",
        "Description": "Type of the service integration endpoint",
        "Computed": true
      },
      "external_aws_cloudwatch_logs_user_config": {
        "Type": "List",
        "Description": "external AWS CloudWatch Logs specific user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_key": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS access key. Required permissions are logs:CreateLogGroup, logs:CreateLogStream, logs:PutLogEvents and logs:DescribeLogStreams"
            },
            "log_group_name": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS CloudWatch log group name"
            },
            "region": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS region"
            },
            "secret_key": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS secret key"
            }
          }
        }
      },
      "external_aws_cloudwatch_metrics_user_config": {
        "Type": "List",
        "Description": "External AWS cloudwatch mertrics specific user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_key": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS access key. Required permissions are cloudwatch:PutMetricData"
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS CloudWatch Metrics Namespace"
            },
            "region": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS region"
            },
            "secret_key": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS secret key"
            }
          }
        }
      },
      "external_elasticsearch_logs_user_config": {
        "Type": "List",
        "Description": "external elasticsearch specific user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ca": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM encoded CA certificate"
            },
            "index_days_max": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum number of days of logs to keep"
            },
            "index_prefix": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch index prefix"
            },
            "timeout": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch request timeout limit"
            },
            "url": {
              "Type": "String",
              "Optional": true,
              "Description": "Elasticsearch connection URL"
            }
          }
        }
      },
      "external_google_cloud_logging_user_config": {
        "Type": "List",
        "Description": "external Google Cloud Logginig specific user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "log_id": {
              "Type": "String",
              "Optional": true,
              "Description": "Google Cloud Logging log id"
            },
            "project_id": {
              "Type": "String",
              "Optional": true,
              "Description": "GCP project id."
            },
            "service_account_credentials": {
              "Type": "String",
              "Optional": true,
              "Description": "Google Service Account Credentials"
            }
          }
        }
      },
      "external_kafka_user_config": {
        "Type": "List",
        "Description": "external Kafka specific user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bootstrap_servers": {
              "Type": "String",
              "Optional": true,
              "Description": "Bootstrap servers"
            },
            "sasl_mechanism": {
              "Type": "String",
              "Optional": true,
              "Description": "The list of SASL mechanisms enabled in the Kafka server."
            },
            "sasl_plain_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for SASL PLAIN mechanism in the Kafka server."
            },
            "sasl_plain_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Username for SASL PLAIN mechanism in the Kafka server."
            },
            "security_protocol": {
              "Type": "String",
              "Optional": true,
              "Description": "Security protocol"
            },
            "ssl_ca_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM-encoded CA certificate"
            },
            "ssl_client_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM-encoded client certificate"
            },
            "ssl_client_key": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM-encoded client key"
            },
            "ssl_endpoint_identification_algorithm": {
              "Type": "String",
              "Optional": true,
              "Description": "The endpoint identification algorithm to validate server hostname using server certificate."
            }
          }
        }
      },
      "external_schema_registry_user_config": {
        "Type": "List",
        "Description": "External schema registry specific user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "authentication": {
              "Type": "String",
              "Optional": true,
              "Description": "Authentication method"
            },
            "basic_auth_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Basic authentication password"
            },
            "basic_auth_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Basic authentication user name"
            },
            "url": {
              "Type": "String",
              "Optional": true,
              "Description": "Schema Registry URL"
            }
          }
        }
      },
      "jolokia_user_config": {
        "Type": "List",
        "Description": "Jolokia specific user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "basic_auth_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Jolokia basic authentication password"
            },
            "basic_auth_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Jolokia basic authentication username"
            }
          }
        }
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Project the service integration endpoint belongs to"
      },
      "prometheus_user_config": {
        "Type": "List",
        "Description": "Prometheus specific user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "basic_auth_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Prometheus basic authentication password"
            },
            "basic_auth_username": {
              "Type": "String",
              "Optional": true,
              "Description": "Prometheus basic authentication username"
            }
          }
        }
      },
      "rsyslog_user_config": {
        "Type": "List",
        "Description": "rsyslog specific user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ca": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM encoded CA certificate"
            },
            "cert": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM encoded client certificate"
            },
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "message format"
            },
            "key": {
              "Type": "String",
              "Optional": true,
              "Description": "PEM encoded client key"
            },
            "logline": {
              "Type": "String",
              "Optional": true,
              "Description": "custom syslog message format"
            },
            "port": {
              "Type": "String",
              "Optional": true,
              "Description": "rsyslog server port"
            },
            "sd": {
              "Type": "String",
              "Optional": true,
              "Description": "Structured data block for log message"
            },
            "server": {
              "Type": "String",
              "Optional": true,
              "Description": "rsyslog server IP address or hostname"
            },
            "tls": {
              "Type": "String",
              "Optional": true,
              "Description": "Require TLS"
            }
          }
        }
      },
      "signalfx_user_config": {
        "Type": "List",
        "Description": "Signalfx specific user configurable settings",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "enabled_metrics": {
              "Type": "List",
              "Optional": true,
              "Description": "list of metrics to send",
              "MaxItems": 256,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "signalfx_api_key": {
              "Type": "String",
              "Optional": true,
              "Description": "SignalFX API key"
            },
            "signalfx_realm": {
              "Type": "String",
              "Optional": true,
              "Description": "SignalFX realm"
            }
          }
        }
      }
    },
    "aiven_service_user": {
      "access_cert": {
        "Type": "String",
        "Description": "Access certificate for the user if applicable for the service in question",
        "Computed": true
      },
      "access_key": {
        "Type": "String",
        "Description": "Access certificate key for the user if applicable for the service in question",
        "Computed": true
      },
      "authentication": {
        "Type": "String",
        "Description": "Authentication details. The possible values are `caching_sha2_password` and `mysql_native_password`.",
        "Computed": true
      },
      "password": {
        "Type": "String",
        "Description": "The password of the service user ( not applicable for all services ).",
        "Computed": true
      },
      "pg_allow_replication": {
        "Type": "Bool",
        "Description": "Postgres specific field, defines whether replication is allowed. This property cannot be changed, doing so forces recreation of the resource.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Bool"
        }
      },
      "project": {
        "Type": "String",
        "Required": true,
        "Description": "Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "redis_acl_categories": {
        "Type": "List",
        "Description": "Redis specific field, defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "redis_acl_channels": {
        "Type": "List",
        "Description": "Redis specific field, defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces recreation of the resource.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "redis_acl_commands": {
        "Type": "List",
        "Description": "Redis specific field, defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "redis_acl_keys": {
        "Type": "List",
        "Description": "Redis specific field, defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "service_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      },
      "type": {
        "Type": "String",
        "Description": "Type of the user account. Tells wether the user is the primary account or a regular account.",
        "Computed": true
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "The actual name of the service user. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_transit_gateway_vpc_attachment": {
      "peer_cloud_account": {
        "Type": "String",
        "Required": true,
        "Description": "AWS account ID or GCP project ID of the peered VPC This property cannot be changed, doing so forces recreation of the resource."
      },
      "peer_region": {
        "Type": "String",
        "Description": "AWS region of the peered VPC (if not in the same region as Aiven VPC)",
        "Computed": true
      },
      "peer_vpc": {
        "Type": "String",
        "Required": true,
        "Description": "Transit gateway ID This property cannot be changed, doing so forces recreation of the resource."
      },
      "peering_connection_id": {
        "Type": "String",
        "Description": "Cloud provider identifier for the peering connection if available",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "State of the peering connection",
        "Computed": true
      },
      "state_info": {
        "Type": "Map",
        "Description": "State-specific help or error information",
        "Computed": true
      },
      "user_peer_network_cidrs": {
        "Type": "List",
        "Description": "List of private IPv4 ranges to route through the peering connection",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "vpc_id": {
        "Type": "String",
        "Required": true,
        "Description": "The VPC the peering connection belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource."
      }
    },
    "aiven_vpc_peering_connection": {
      "peer_azure_app_id": {
        "Type": "String",
        "Description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet This property cannot be changed, doing so forces recreation of the resource.",
        "Computed": true
      },
      "peer_azure_tenant_id": {
        "Type": "String",
        "Description": "Azure tenant id in UUID4 form. This property cannot be changed, doing so forces recreation of the resource.",
        "Computed": true
      },
      "peer_cloud_account": {
        "Type": "String",
        "Required": true,
        "Description": "AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the resource."
      },
      "peer_region": {
        "Type": "String",
        "Description": "AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces recreation of the resource.",
        "Computed": true
      },
      "peer_resource_group": {
        "Type": "String",
        "Description": "Azure resource group name of the peered VPC This property cannot be changed, doing so forces recreation of the resource.",
        "Computed": true
      },
      "peer_vpc": {
        "Type": "String",
        "Required": true,
        "Description": "AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the resource."
      },
      "peering_connection_id": {
        "Type": "String",
        "Description": "Cloud provider identifier for the peering connection if available",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Description": "State of the peering connection",
        "Computed": true
      },
      "state_info": {
        "Type": "Map",
        "Description": "State-specific help or error information",
        "Computed": true
      },
      "vpc_id": {
        "Type": "String",
        "Required": true,
        "Description": "The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource."
      }
    }
  }
}