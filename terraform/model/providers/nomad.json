{
  ".schema_version": "2",
  ".sdk_type": "terraform-plugin-sdk-v1",
  "name": "nomad",
  "type": "provider",
  "version": "v1.4.14",
  "provider": {
    "address": {
      "Type": "String",
      "Required": true,
      "Description": "URL of the root of the target Nomad agent.",
      "DefaultFunc": "ENV(NOMAD_ADDR)"
    },
    "ca_file": {
      "Type": "String",
      "Optional": true,
      "Description": "A path to a PEM-encoded certificate authority used to verify the remote agent's certificate.",
      "DefaultFunc": "ENV(NOMAD_CACERT)",
      "ConflictsWith": [
        "ca_pem"
      ]
    },
    "ca_pem": {
      "Type": "String",
      "Optional": true,
      "Description": "PEM-encoded certificate authority used to verify the remote agent's certificate.",
      "ConflictsWith": [
        "ca_file"
      ]
    },
    "cert_file": {
      "Type": "String",
      "Optional": true,
      "Description": "A path to a PEM-encoded certificate provided to the remote agent; requires use of key_file or key_pem.",
      "DefaultFunc": "ENV(NOMAD_CLIENT_CERT)",
      "ConflictsWith": [
        "cert_pem"
      ]
    },
    "cert_pem": {
      "Type": "String",
      "Optional": true,
      "Description": "PEM-encoded certificate provided to the remote agent; requires use of key_file or key_pem.",
      "ConflictsWith": [
        "cert_file"
      ]
    },
    "consul_token": {
      "Type": "String",
      "Optional": true,
      "Description": "Consul token to validate Consul Connect Service Identity policies specified in the job file.",
      "DefaultFunc": "ENV(CONSUL_HTTP_TOKEN)"
    },
    "headers": {
      "Type": "List",
      "Optional": true,
      "Description": "The headers to send with each Nomad request.",
      "IsBlock": true,
      "ConfigImplicitMode": "Block",
      "Elem": {
        "Type": "SchemaInfo",
        "Info": {
          "name": {
            "Type": "String",
            "Required": true,
            "Description": "The header name"
          },
          "value": {
            "Type": "String",
            "Required": true,
            "Description": "The header value"
          }
        }
      }
    },
    "http_auth": {
      "Type": "String",
      "Optional": true,
      "Description": "HTTP basic auth configuration.",
      "DefaultFunc": "ENV(NOMAD_HTTP_AUTH)"
    },
    "key_file": {
      "Type": "String",
      "Optional": true,
      "Description": "A path to a PEM-encoded private key, required if cert_file or cert_pem is specified.",
      "DefaultFunc": "ENV(NOMAD_CLIENT_KEY)",
      "ConflictsWith": [
        "key_pem"
      ]
    },
    "key_pem": {
      "Type": "String",
      "Optional": true,
      "Description": "PEM-encoded private key, required if cert_file or cert_pem is specified.",
      "ConflictsWith": [
        "key_file"
      ]
    },
    "region": {
      "Type": "String",
      "Optional": true,
      "Description": "Region of the target Nomad agent.",
      "DefaultFunc": "ENV(NOMAD_REGION)"
    },
    "secret_id": {
      "Type": "String",
      "Optional": true,
      "Description": "ACL token secret for API requests.",
      "DefaultFunc": "ENV(NOMAD_TOKEN)"
    },
    "vault_token": {
      "Type": "String",
      "Optional": true,
      "Description": "Vault token if policies are specified in the job file.",
      "DefaultFunc": "ENV(VAULT_TOKEN)"
    }
  },
  "resources": {
    "nomad_acl_policy": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description for this policy."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Unique name for this policy."
      },
      "rules_hcl": {
        "Type": "String",
        "Required": true,
        "Description": "HCL or JSON representation of the rules to enforce on this policy. Use file() to specify a file as input."
      }
    },
    "nomad_acl_token": {
      "accessor_id": {
        "Type": "String",
        "Description": "Nomad-generated ID for this token.",
        "Computed": true
      },
      "create_time": {
        "Type": "String",
        "Description": "The timestamp the token was created.",
        "Computed": true
      },
      "global": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether the token should be replicated to all regions or not.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Human-readable name for this token."
      },
      "policies": {
        "Type": "Set",
        "Optional": true,
        "Description": "The ACL policies to associate with the token, if it's a 'client' type.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "secret_id": {
        "Type": "String",
        "Description": "The value that grants access to Nomad.",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The type of token to create, 'client' or 'management'."
      }
    },
    "nomad_job": {
      "allocation_ids": {
        "Type": "List",
        "Description": "The IDs for allocations associated with this job.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "datacenters": {
        "Type": "Set",
        "Description": "The target datacenters for the job, as derived from the jobspec.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "deployment_id": {
        "Type": "String",
        "Description": "If detach = false, the ID for the deployment associated with the last job create/update, if one exists.",
        "Computed": true
      },
      "deployment_status": {
        "Type": "String",
        "Description": "If detach = false, the status for the deployment associated with the last job create/update, if one exists.",
        "Computed": true
      },
      "deregister_on_destroy": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If true, the job will be deregistered on destroy.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "deregister_on_id_change": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If true, the job will be deregistered when the job ID changes.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "detach": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If true, the provider will return immediately after creating or updating, instead of monitoring.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "hcl2": {
        "Type": "List",
        "Optional": true,
        "Description": "Configuration for the HCL2 jobspec parser.",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "allow_fs": {
              "Type": "Bool",
              "Optional": true,
              "Description": "If true, HCL2 file system functions will be enabled when parsing the `jobspec`.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "enabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "If true, the `jobspec` will be parsed as HCL2 instead of HCL.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "vars": {
              "Type": "Map",
              "Optional": true,
              "Description": "Additional variables to use when templating the job with HCL2"
            }
          }
        }
      },
      "jobspec": {
        "Type": "String",
        "Required": true,
        "Description": "Job specification. If you want to point to a file use the file() function."
      },
      "json": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If true, the `jobspec` will be parsed as json instead of HCL."
      },
      "modify_index": {
        "Type": "String",
        "Description": "Integer that increments for each change. Used to detect any changes between plan and apply.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "The name of the job, as derived from the jobspec.",
        "Computed": true
      },
      "namespace": {
        "Type": "String",
        "Description": "The namespace of the job, as derived from the jobspec.",
        "Computed": true
      },
      "policy_override": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Override any soft-mandatory Sentinel policies that fail."
      },
      "purge_on_destroy": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to purge the job when the resource is destroyed."
      },
      "region": {
        "Type": "String",
        "Description": "The target region for the job, as derived from the jobspec.",
        "Computed": true
      },
      "task_groups": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "count": {
              "Type": "Int",
              "Computed": true
            },
            "meta": {
              "Type": "Map",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Computed": true
            },
            "task": {
              "Type": "List",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "driver": {
                    "Type": "String",
                    "Computed": true
                  },
                  "meta": {
                    "Type": "Map",
                    "Computed": true
                  },
                  "name": {
                    "Type": "String",
                    "Computed": true
                  },
                  "volume_mounts": {
                    "Type": "List",
                    "Computed": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "ComputedBlock",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "destination": {
                          "Type": "String",
                          "Computed": true
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Computed": true
                        },
                        "volume": {
                          "Type": "String",
                          "Computed": true
                        }
                      }
                    }
                  }
                }
              }
            },
            "volumes": {
              "Type": "List",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Computed": true
                  },
                  "read_only": {
                    "Type": "Bool",
                    "Computed": true
                  },
                  "source": {
                    "Type": "String",
                    "Computed": true
                  },
                  "type": {
                    "Type": "String",
                    "Computed": true
                  }
                }
              }
            }
          }
        }
      },
      "type": {
        "Type": "String",
        "Description": "The type of the job, as derived from the jobspec.",
        "Computed": true
      }
    },
    "nomad_namespace": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description for this namespace."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Unique name for this namespace."
      },
      "quota": {
        "Type": "String",
        "Optional": true,
        "Description": "Quota to set for this namespace."
      }
    },
    "nomad_quota_specification": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description for this quota specification."
      },
      "limits": {
        "Type": "Set",
        "Required": true,
        "Description": "Limits encapsulated by this quota specification.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "region": {
              "Type": "String",
              "Required": true,
              "Description": "Region in which this limit has affect."
            },
            "region_limit": {
              "Type": "Set",
              "Required": true,
              "Description": "The limit applied to this region.",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "cpu": {
                    "Type": "Int",
                    "Optional": true
                  },
                  "memory_mb": {
                    "Type": "Int",
                    "Optional": true
                  }
                }
              }
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Unique name for this quota specification."
      }
    },
    "nomad_scheduler_config": {
      "preemption_config": {
        "Type": "Map",
        "Optional": true,
        "Description": "Options to enable preemption for various schedulers.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Bool"
        }
      },
      "scheduler_algorithm": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies whether scheduler binpacks or spreads allocations on available nodes.",
        "ConfigImplicitMode": "Attr",
        "Default": {
          "Type": "string",
          "Value": "binpack"
        },
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "nomad_sentinel_policy": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description for this policy."
      },
      "enforcement_level": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the enforcement level of the policy."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Unique name for this policy."
      },
      "policy": {
        "Type": "String",
        "Required": true,
        "Description": "The Sentinel policy."
      },
      "scope": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the scope for this policy. Only 'submit-job' is currently supported."
      }
    },
    "nomad_volume": {
      "access_mode": {
        "Type": "String",
        "Required": true,
        "Description": "Defines whether a volume should be available concurrently.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "attachment_mode": {
        "Type": "String",
        "Required": true,
        "Description": "The storage API that will be used by the volume.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "context": {
        "Type": "Map",
        "Optional": true,
        "Description": "An optional key-value map of strings passed directly to the CSI plugin to validate the volume.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "controller_required": {
        "Type": "Bool",
        "Computed": true
      },
      "controllers_expected": {
        "Type": "Int",
        "Computed": true
      },
      "controllers_healthy": {
        "Type": "Int",
        "Computed": true
      },
      "deregister_on_destroy": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If true, the volume will be deregistered on destroy.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "external_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the physical volume from the storage provider."
      },
      "mount_options": {
        "Type": "List",
        "Optional": true,
        "Description": "Options for mounting 'block-device' volumes without a pre-formatted file system.",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "fs_type": {
              "Type": "String",
              "Optional": true,
              "Description": "The file system type."
            },
            "mount_flags": {
              "Type": "List",
              "Optional": true,
              "Description": "The flags passed to mount.",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The display name of the volume."
      },
      "namespace": {
        "Type": "String",
        "Optional": true,
        "Description": "The namespace in which to create the volume.",
        "Default": {
          "Type": "string",
          "Value": "default"
        }
      },
      "nodes_expected": {
        "Type": "Int",
        "Computed": true
      },
      "nodes_healthy": {
        "Type": "Int",
        "Computed": true
      },
      "parameters": {
        "Type": "Map",
        "Optional": true,
        "Description": "An optional key-value map of strings passed directly to the CSI plugin to configure the volume.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "plugin_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the CSI plugin that manages this volume."
      },
      "plugin_provider": {
        "Type": "String",
        "Computed": true
      },
      "plugin_provider_version": {
        "Type": "String",
        "Computed": true
      },
      "schedulable": {
        "Type": "Bool",
        "Computed": true
      },
      "secrets": {
        "Type": "Map",
        "Optional": true,
        "Description": "An optional key-value map of strings used as credentials for publishing and unpublishing volumes.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "The type of the volume. Currently, only 'csi' is supported.",
        "ConfigImplicitMode": "Attr",
        "Default": {
          "Type": "string",
          "Value": "csi"
        },
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "volume_id": {
        "Type": "String",
        "Required": true,
        "Description": "The unique ID of the volume, how jobs will refer to the volume."
      }
    }
  },
  "data-sources": {
    "nomad_acl_policies": {
      "policies": {
        "Type": "List",
        "Description": "ACL Policies",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "description": {
              "Type": "String",
              "Description": "ACL Policy Description",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "ACL Policy Name",
              "Computed": true
            }
          }
        }
      },
      "prefix": {
        "Type": "String",
        "Optional": true,
        "Description": "ACL Policy Name Prefix"
      }
    },
    "nomad_acl_policy": {
      "description": {
        "Type": "String",
        "Description": "Description",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name"
      },
      "rules": {
        "Type": "String",
        "Description": "ACL Rules in HCL format",
        "Computed": true
      }
    },
    "nomad_acl_token": {
      "accessor_id": {
        "Type": "String",
        "Required": true,
        "Description": "Non-sensitive identifier for this token."
      },
      "create_time": {
        "Type": "String",
        "Description": "Date and time the token was created.",
        "Computed": true
      },
      "global": {
        "Type": "Bool",
        "Description": "Whether the token is replicated to all regions, or if it will only be used in the region it was created.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "Human-friendly name of the ACL token.",
        "Computed": true
      },
      "policies": {
        "Type": "Set",
        "Description": "List of policy names associated with this token.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "secret_id": {
        "Type": "String",
        "Description": "The token value itself.",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Description": "The type of the token.",
        "Computed": true
      }
    },
    "nomad_acl_tokens": {
      "acl_tokens": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "accessor_id": {
              "Type": "String",
              "Computed": true
            },
            "create_time": {
              "Type": "String",
              "Computed": true
            },
            "global": {
              "Type": "Bool",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Computed": true
            },
            "policies": {
              "Type": "List",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "type": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      },
      "prefix": {
        "Type": "String",
        "Optional": true
      }
    },
    "nomad_datacenters": {
      "datacenters": {
        "Type": "List",
        "Description": "The list of datacenters.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ignore_down_nodes": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If enabled, this flag will ignore nodes that are down when listing datacenters.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "prefix": {
        "Type": "String",
        "Optional": true,
        "Description": "Prefix value used for filtering results."
      }
    },
    "nomad_deployments": {
      "deployments": {
        "Type": "List",
        "Description": "Deployments",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Map"
        }
      }
    },
    "nomad_job": {
      "all_at_once": {
        "Type": "Bool",
        "Description": "Job All At Once",
        "Computed": true
      },
      "constraints": {
        "Type": "List",
        "Description": "Job Constraints",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ltarget": {
              "Type": "String",
              "Computed": true
            },
            "operand": {
              "Type": "String",
              "Computed": true
            },
            "rtarget": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      },
      "create_index": {
        "Type": "Int",
        "Description": "Create Index",
        "Computed": true
      },
      "datacenters": {
        "Type": "List",
        "Description": "Job Datacenters",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "job_id": {
        "Type": "String",
        "Required": true,
        "Description": "Job ID"
      },
      "job_modify_index": {
        "Type": "Int",
        "Description": "Job Modify Index",
        "Computed": true
      },
      "modify_index": {
        "Type": "Int",
        "Description": "Modify Index",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "Job Name",
        "Computed": true
      },
      "namespace": {
        "Type": "String",
        "Optional": true,
        "Description": "Job Namespace",
        "Default": {
          "Type": "string",
          "Value": "default"
        }
      },
      "parent_id": {
        "Type": "String",
        "Description": "Job Parent ID",
        "Computed": true
      },
      "periodic_config": {
        "Type": "List",
        "Description": "Job Periodic Configuration",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "enabled": {
              "Type": "Bool",
              "Computed": true
            },
            "prohibit_overlap": {
              "Type": "Bool",
              "Computed": true
            },
            "spec": {
              "Type": "String",
              "Computed": true
            },
            "spec_type": {
              "Type": "String",
              "Computed": true
            },
            "timezone": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      },
      "priority": {
        "Type": "Int",
        "Description": "Job Priority",
        "Computed": true
      },
      "region": {
        "Type": "String",
        "Description": "Job Region",
        "Computed": true
      },
      "stable": {
        "Type": "Bool",
        "Description": "Job Stable",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "Deployment Status",
        "Computed": true
      },
      "status_description": {
        "Type": "String",
        "Description": "Deployment Status Description",
        "Computed": true
      },
      "stop": {
        "Type": "Bool",
        "Description": "Job Stopped",
        "Computed": true
      },
      "submit_time": {
        "Type": "Int",
        "Description": "Job Submit Time",
        "Computed": true
      },
      "task_groups": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "count": {
              "Type": "Int",
              "Computed": true
            },
            "meta": {
              "Type": "Map",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Computed": true
            },
            "task": {
              "Type": "List",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "driver": {
                    "Type": "String",
                    "Computed": true
                  },
                  "meta": {
                    "Type": "Map",
                    "Computed": true
                  },
                  "name": {
                    "Type": "String",
                    "Computed": true
                  },
                  "volume_mounts": {
                    "Type": "List",
                    "Computed": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "ComputedBlock",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "destination": {
                          "Type": "String",
                          "Computed": true
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Computed": true
                        },
                        "volume": {
                          "Type": "String",
                          "Computed": true
                        }
                      }
                    }
                  }
                }
              }
            },
            "volumes": {
              "Type": "List",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Computed": true
                  },
                  "read_only": {
                    "Type": "Bool",
                    "Computed": true
                  },
                  "source": {
                    "Type": "String",
                    "Computed": true
                  },
                  "type": {
                    "Type": "String",
                    "Computed": true
                  }
                }
              }
            }
          }
        }
      },
      "type": {
        "Type": "String",
        "Description": "Job Type",
        "Computed": true
      },
      "version": {
        "Type": "Int",
        "Description": "Job Version",
        "Computed": true
      }
    },
    "nomad_job_parser": {
      "canonicalize": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Flag to enable setting any unset fields to their default values.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "hcl": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the HCL definition of the job encoded in a JSON string."
      },
      "json": {
        "Type": "String",
        "Description": "The parsed job as JSON string.",
        "Computed": true
      }
    },
    "nomad_namespace": {
      "description": {
        "Type": "String",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "quota": {
        "Type": "String",
        "Computed": true
      }
    },
    "nomad_namespaces": {
      "namespaces": {
        "Type": "List",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "nomad_plugin": {
      "controller_required": {
        "Type": "Bool",
        "Computed": true
      },
      "controllers_expected": {
        "Type": "Int",
        "Computed": true
      },
      "controllers_healthy": {
        "Type": "Int",
        "Computed": true
      },
      "nodes": {
        "Type": "List",
        "Description": "Available nodes for this plugin",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "healthy": {
              "Type": "Bool",
              "Computed": true
            },
            "healthy_description": {
              "Type": "String",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      },
      "nodes_expected": {
        "Type": "Int",
        "Computed": true
      },
      "nodes_healthy": {
        "Type": "Int",
        "Computed": true
      },
      "plugin_id": {
        "Type": "String",
        "Required": true,
        "Description": "Plugin ID"
      },
      "plugin_provider": {
        "Type": "String",
        "Computed": true
      },
      "plugin_provider_version": {
        "Type": "String",
        "Computed": true
      },
      "wait_for_healthy": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Wait for to be backed by a specified number of controllers",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "wait_for_registration": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Wait for the plugin to be registered in Noamd",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      }
    },
    "nomad_plugins": {
      "plugins": {
        "Type": "List",
        "Description": "Registered plugins",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Map"
        }
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "Volume Type (currently only 'csi')",
        "ConfigImplicitMode": "Attr",
        "Default": {
          "Type": "string",
          "Value": "csi"
        },
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "nomad_regions": {
      "regions": {
        "Type": "List",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "nomad_scaling_policies": {
      "job_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Job ID to use to filter scaling policies."
      },
      "policies": {
        "Type": "List",
        "Description": "The list of policies that match the search criteria.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "enabled": {
              "Type": "Bool",
              "Description": "Whether or not the scaling policy is enabled.",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Description": "The scaling policy ID.",
              "Computed": true
            },
            "target": {
              "Type": "Map",
              "Description": "The scaling policy target.",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "The scaling policy type.",
              "Computed": true
            }
          }
        }
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "Scaling policy type used to filter scaling policies."
      }
    },
    "nomad_scaling_policy": {
      "enabled": {
        "Type": "Bool",
        "Description": "Whether or not the scaling policy is enabled.",
        "Computed": true
      },
      "id": {
        "Type": "String",
        "Required": true,
        "Description": "The scaling policy ID."
      },
      "max": {
        "Type": "Int",
        "Description": "The maximum value defined in the scaling policy.",
        "Computed": true
      },
      "min": {
        "Type": "Int",
        "Description": "The minimum value defined in the scaling policy.",
        "Computed": true
      },
      "policy": {
        "Type": "String",
        "Description": "The policy defined in the scaling policy as a JSON string.",
        "Computed": true
      },
      "target": {
        "Type": "Map",
        "Description": "The scaling policy target.",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Description": "The scaling policy type.",
        "Computed": true
      }
    },
    "nomad_scheduler_config": {
      "preemption_config": {
        "Type": "Map",
        "Description": "Options to enable preemption for various schedulers.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Bool"
        }
      },
      "scheduler_algorithm": {
        "Type": "String",
        "Description": "Specifies whether scheduler binpacks or spreads allocations on available nodes.",
        "Computed": true
      }
    },
    "nomad_volumes": {
      "namespace": {
        "Type": "String",
        "Optional": true,
        "Description": "Volume namespace filter",
        "Default": {
          "Type": "string",
          "Value": "default"
        }
      },
      "node_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Volume node filter",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "plugin_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Plugin ID filter",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "Volume Type (currently only 'csi')",
        "ConfigImplicitMode": "Attr",
        "Default": {
          "Type": "string",
          "Value": "csi"
        },
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "volumes": {
        "Type": "List",
        "Description": "Volumes",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Map"
        }
      }
    }
  }
}