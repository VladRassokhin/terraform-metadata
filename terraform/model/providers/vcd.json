{
  ".schema_version": "2",
  ".sdk_type": "terraform-plugin-sdk-v2",
  "name": "vcd",
  "type": "provider",
  "version": "v3.5.1",
  "provider": {
    "allow_unverified_ssl": {
      "Type": "Bool",
      "Optional": true,
      "Description": "If set, VCDClient will permit unverifiable SSL certificates.",
      "DefaultFunc": "ENV(VCD_ALLOW_UNVERIFIED_SSL)"
    },
    "api_token": {
      "Type": "String",
      "Optional": true,
      "Description": "The API token used instead of username/password for VCD API operations. (Requires VCD 10.3.1+)",
      "DefaultFunc": "ENV(VCD_API_TOKEN)"
    },
    "auth_type": {
      "Type": "String",
      "Optional": true,
      "Description": "'integrated', 'saml_adfs', 'token', and 'api_token' are the only ones supported now. 'integrated' is default.",
      "DefaultFunc": "ENV(VCD_AUTH_TYPE)"
    },
    "import_separator": {
      "Type": "String",
      "Optional": true,
      "Description": "Defines the import separation string to be used with 'terraform import'",
      "DefaultFunc": "ENV(VCD_IMPORT_SEPARATOR)"
    },
    "logging": {
      "Type": "Bool",
      "Optional": true,
      "Description": "If set, it will enable logging of API requests and responses",
      "DefaultFunc": "ENV(VCD_API_LOGGING)"
    },
    "logging_file": {
      "Type": "String",
      "Optional": true,
      "Description": "Defines the full name of the logging file for API calls (requires 'logging')",
      "DefaultFunc": "ENV(VCD_API_LOGGING_FILE)"
    },
    "max_retry_timeout": {
      "Type": "Int",
      "Optional": true,
      "Description": "Max num seconds to wait for successful response when operating on resources within vCloud (defaults to 60)",
      "DefaultFunc": "ENV(VCD_MAX_RETRY_TIMEOUT)"
    },
    "org": {
      "Type": "String",
      "Required": true,
      "Description": "The VCD Org for API operations",
      "DefaultFunc": "ENV(VCD_ORG)"
    },
    "password": {
      "Type": "String",
      "Optional": true,
      "Description": "The user password for VCD API operations.",
      "DefaultFunc": "ENV(VCD_PASSWORD)"
    },
    "saml_adfs_rpt_id": {
      "Type": "String",
      "Optional": true,
      "Description": "Allows to specify custom Relaying Party Trust Identifier for auth_type=saml_adfs",
      "DefaultFunc": "ENV(VCD_SAML_ADFS_RPT_ID)"
    },
    "sysorg": {
      "Type": "String",
      "Optional": true,
      "Description": "The VCD Org for user authentication",
      "DefaultFunc": "ENV(VCD_SYS_ORG)"
    },
    "token": {
      "Type": "String",
      "Optional": true,
      "Description": "The token used instead of username/password for VCD API operations.",
      "DefaultFunc": "ENV(VCD_TOKEN)"
    },
    "url": {
      "Type": "String",
      "Required": true,
      "Description": "The VCD url for VCD API operations.",
      "DefaultFunc": "ENV(VCD_URL)"
    },
    "user": {
      "Type": "String",
      "Optional": true,
      "Description": "The user name for VCD API operations.",
      "DefaultFunc": "ENV(VCD_USER)"
    },
    "vdc": {
      "Type": "String",
      "Optional": true,
      "Description": "The VDC for API operations",
      "DefaultFunc": "ENV(VCD_VDC)"
    }
  },
  "resources": {
    "vcd_catalog": {
      "created": {
        "Type": "String",
        "Description": "Time stamp of when the catalog was created",
        "Computed": true
      },
      "delete_force": {
        "Type": "Bool",
        "Required": true,
        "Description": "When destroying use delete_force=True with delete_recursive=True to remove a catalog and any objects it contains, regardless of their state."
      },
      "delete_recursive": {
        "Type": "Bool",
        "Required": true,
        "Description": "When destroying use delete_recursive=True to remove the catalog and any objects it contains that are in a state that normally allows removal."
      },
      "description": {
        "Type": "String",
        "Optional": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "storage_profile_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Optional storage profile ID"
      }
    },
    "vcd_catalog_item": {
      "catalog": {
        "Type": "String",
        "Required": true,
        "Description": "catalog name where upload the OVA file"
      },
      "created": {
        "Type": "String",
        "Description": "Time stamp of when the item was created",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true
      },
      "metadata": {
        "Type": "Map",
        "Optional": true,
        "Description": "Key and value pairs for catalog item metadata"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "catalog item name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "ova_path": {
        "Type": "String",
        "Required": true,
        "Description": "absolute or relative path to OVA"
      },
      "show_upload_progress": {
        "Type": "Bool",
        "Optional": true,
        "Description": "shows upload progress in stdout"
      },
      "upload_piece_size": {
        "Type": "Int",
        "Optional": true,
        "Description": "size of upload file piece size in mega bytes",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      }
    },
    "vcd_catalog_media": {
      "catalog": {
        "Type": "String",
        "Required": true,
        "Description": "catalog name where upload the Media file"
      },
      "creation_date": {
        "Type": "String",
        "Description": "Creation date",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true
      },
      "is_iso": {
        "Type": "Bool",
        "Description": "True if this media file is ISO",
        "Computed": true
      },
      "is_published": {
        "Type": "Bool",
        "Description": "True if this media file is in a published catalog",
        "Computed": true
      },
      "media_path": {
        "Type": "String",
        "Required": true,
        "Description": "absolute or relative path to Media file"
      },
      "metadata": {
        "Type": "Map",
        "Optional": true,
        "Description": "Key and value pairs for catalog item metadata"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "media name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "owner_name": {
        "Type": "String",
        "Description": "Owner name",
        "Computed": true
      },
      "show_upload_progress": {
        "Type": "Bool",
        "Optional": true,
        "Description": "shows upload progress in stdout"
      },
      "size": {
        "Type": "Int",
        "Description": "Media storage in Bytes",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "Media status",
        "Computed": true
      },
      "storage_profile_name": {
        "Type": "String",
        "Description": "Storage profile name",
        "Computed": true
      },
      "upload_piece_size": {
        "Type": "Int",
        "Optional": true,
        "Description": "size of upload file piece size in mega bytes",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      }
    },
    "vcd_edgegateway": {
      "configuration": {
        "Type": "String",
        "Required": true,
        "Description": "Configuration of the vShield edge VM for this gateway. One of: compact, full (\"Large\"), full4 (\"Quad Large\"), x-large"
      },
      "default_external_network_ip": {
        "Type": "String",
        "Description": "IP address of edge gateway interface which is used as default.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true
      },
      "distributed_routing": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable distributed routing",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "external_network": {
        "Type": "Set",
        "Required": true,
        "Description": "One or more blocks with external network information to be attached to this gateway's interface",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "enable_rate_limit": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Enable rate limiting",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "incoming_rate_limit": {
              "Type": "Float",
              "Optional": true,
              "Description": "Incoming rate limit (Mbps)",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "External network name"
            },
            "outgoing_rate_limit": {
              "Type": "Float",
              "Optional": true,
              "Description": "Outgoing rate limit (Mbps)",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "subnet": {
              "Type": "Set",
              "Optional": true,
              "Computed": true,
              "MinItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "gateway": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Gateway address for a subnet"
                  },
                  "ip_address": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "IP address on the edge gateway - will be auto-assigned if not defined"
                  },
                  "netmask": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Netmask address for a subnet"
                  },
                  "suballocate_pool": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "Define zero or more blocks to sub-allocate pools on the edge gateway",
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "end_address": {
                          "Type": "String",
                          "Required": true
                        },
                        "start_address": {
                          "Type": "String",
                          "Required": true
                        }
                      }
                    }
                  },
                  "use_for_default_route": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Defines if this subnet should be used as default gateway for edge",
                    "Default": {
                      "Type": "bool",
                      "Value": "false"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "external_network_ips": {
        "Type": "List",
        "Description": "List of IP addresses set on edge gateway external network interfaces",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "fips_mode_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable FIPS mode. FIPS mode turns on the cipher suites that comply with FIPS. (False by default)",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "fw_default_rule_action": {
        "Type": "String",
        "Optional": true,
        "Description": "'accept' or 'deny'. Default 'deny'",
        "Default": {
          "Type": "string",
          "Value": "deny"
        }
      },
      "fw_default_rule_logging_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable logging for default rule. Default 'false'",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "fw_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable firewall. Default 'true'",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "ha_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable high availability on this edge gateway",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "lb_acceleration_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable load balancer acceleration. (Disabled by default)",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "lb_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable load balancing. (Disabled by default)",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "lb_logging_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable load balancer logging. (Disabled by default)",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "lb_loglevel": {
        "Type": "String",
        "Optional": true,
        "Description": "Log level. One of 'emergency', 'alert', 'critical', 'error', 'warning', 'notice', 'info', 'debug'. ('info' by default)",
        "Default": {
          "Type": "string",
          "Value": "info"
        }
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "use_default_route_for_dns_relay": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If true, default gateway will be used for the edge gateways' default routing and DNS forwarding.(False by default)",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_edgegateway_settings": {
      "edge_gateway_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the edge gateway. Required when 'edge_gateway_name' is not set",
        "Computed": true
      },
      "edge_gateway_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the edge gateway. Required when 'edge_gateway_id' is not set",
        "Computed": true
      },
      "fw_default_rule_action": {
        "Type": "String",
        "Optional": true,
        "Description": "'accept' or 'deny'. Default 'deny'",
        "Default": {
          "Type": "string",
          "Value": "deny"
        }
      },
      "fw_default_rule_logging_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable logging for default rule. Default 'false'",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "fw_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable firewall. Default 'true'",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "lb_acceleration_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable load balancer acceleration. (Disabled by default)",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "lb_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable load balancing. (Disabled by default)",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "lb_logging_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable load balancer logging. (Disabled by default)",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "lb_loglevel": {
        "Type": "String",
        "Optional": true,
        "Description": "Log level. One of 'emergency', 'alert', 'critical', 'error', 'warning', 'notice', 'info', 'debug'. ('info' by default)",
        "Default": {
          "Type": "string",
          "Value": "info"
        }
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_edgegateway_vpn": {
      "description": {
        "Type": "String",
        "Optional": true
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true
      },
      "encryption_protocol": {
        "Type": "String",
        "Required": true
      },
      "local_id": {
        "Type": "String",
        "Required": true
      },
      "local_ip_address": {
        "Type": "String",
        "Required": true
      },
      "local_subnets": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "local_subnet_gateway": {
              "Type": "String",
              "Required": true
            },
            "local_subnet_mask": {
              "Type": "String",
              "Required": true
            },
            "local_subnet_name": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "mtu": {
        "Type": "Int",
        "Required": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "peer_id": {
        "Type": "String",
        "Required": true
      },
      "peer_ip_address": {
        "Type": "String",
        "Required": true
      },
      "peer_subnets": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "peer_subnet_gateway": {
              "Type": "String",
              "Required": true
            },
            "peer_subnet_mask": {
              "Type": "String",
              "Required": true
            },
            "peer_subnet_name": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "shared_secret": {
        "Type": "String",
        "Required": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_external_network": {
      "description": {
        "Type": "String",
        "Optional": true
      },
      "ip_scope": {
        "Type": "List",
        "Required": true,
        "Description": "A list of IP scopes for the network",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dns1": {
              "Type": "String",
              "Optional": true,
              "Description": "Primary DNS server"
            },
            "dns2": {
              "Type": "String",
              "Optional": true,
              "Description": "Secondary DNS server"
            },
            "dns_suffix": {
              "Type": "String",
              "Optional": true,
              "Description": "DNS suffix"
            },
            "gateway": {
              "Type": "String",
              "Required": true,
              "Description": "Gateway of the network"
            },
            "netmask": {
              "Type": "String",
              "Required": true,
              "Description": "Network mask"
            },
            "static_ip_pool": {
              "Type": "List",
              "Optional": true,
              "Description": "IP ranges used for static pool allocation in the network",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "end_address": {
                    "Type": "String",
                    "Required": true,
                    "Description": "End address of the IP range"
                  },
                  "start_address": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Start address of the IP range"
                  }
                }
              }
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "retain_net_info_across_deployments": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Specifies whether the network resources such as IP/MAC of router will be retained across deployments. Default is false.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "vsphere_network": {
        "Type": "List",
        "Required": true,
        "Description": "A list of port groups that back this network. Each referenced DV_PORTGROUP or NETWORK must exist on a vCenter server registered with the system.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the port group"
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "The vSphere port group type. One of: DV_PORTGROUP (distributed virtual port group), NETWORK"
            },
            "vcenter": {
              "Type": "String",
              "Required": true,
              "Description": "The vCenter server name"
            }
          }
        }
      }
    },
    "vcd_external_network_v2": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Network description"
      },
      "ip_scope": {
        "Type": "Set",
        "Required": true,
        "Description": "A set of IP scopes for the network",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dns1": {
              "Type": "String",
              "Optional": true,
              "Description": "Primary DNS server",
              "ConflictsWith": [
                "nsxt_network"
              ]
            },
            "dns2": {
              "Type": "String",
              "Optional": true,
              "Description": "Secondary DNS server",
              "ConflictsWith": [
                "nsxt_network"
              ]
            },
            "dns_suffix": {
              "Type": "String",
              "Optional": true,
              "Description": "DNS suffix",
              "ConflictsWith": [
                "nsxt_network"
              ]
            },
            "enabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "If subnet is enabled",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "gateway": {
              "Type": "String",
              "Required": true,
              "Description": "Gateway of the network"
            },
            "prefix_length": {
              "Type": "Int",
              "Required": true,
              "Description": "Network mask"
            },
            "static_ip_pool": {
              "Type": "Set",
              "Optional": true,
              "Description": "IP ranges used for static pool allocation in the network",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "end_address": {
                    "Type": "String",
                    "Required": true,
                    "Description": "End address of the IP range"
                  },
                  "start_address": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Start address of the IP range"
                  }
                }
              }
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Network name"
      },
      "nsxt_network": {
        "Type": "List",
        "Optional": true,
        "Description": "Reference to NSX-T Tier-0 router or segment and manager",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "nsxt_manager_id": {
              "Type": "String",
              "Required": true,
              "Description": "ID of NSX-T manager"
            },
            "nsxt_segment_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of NSX-T segment (for NSX-T segment backed external network)"
            },
            "nsxt_tier0_router_id": {
              "Type": "String",
              "Optional": true,
              "Description": "ID of NSX-T Tier-0 router (for T0 gateway backed external network)"
            }
          }
        }
      },
      "vsphere_network": {
        "Type": "Set",
        "Optional": true,
        "Description": "A set of port groups that back this network. Each referenced DV_PORTGROUP or NETWORK must exist on a vCenter server registered with the system.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "portgroup_id": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the port group"
            },
            "vcenter_id": {
              "Type": "String",
              "Required": true,
              "Description": "The vCenter server name"
            }
          }
        }
      }
    },
    "vcd_global_role": {
      "bundle_key": {
        "Type": "String",
        "Description": "Key used for internationalization",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Required": true,
        "Description": "Global role description"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of global role."
      },
      "publish_to_all_tenants": {
        "Type": "Bool",
        "Required": true,
        "Description": "When true, publishes the global role to all tenants"
      },
      "read_only": {
        "Type": "Bool",
        "Description": "Whether this global role is read-only",
        "Computed": true
      },
      "rights": {
        "Type": "Set",
        "Optional": true,
        "Description": "list of rights assigned to this global role",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tenants": {
        "Type": "Set",
        "Optional": true,
        "Description": "list of tenants to which this global role is published ",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "vcd_independent_disk": {
      "bus_sub_type": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "bus_type": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "datastore_name": {
        "Type": "String",
        "Description": "Datastore name",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "independent disk description"
      },
      "iops": {
        "Type": "Int",
        "Description": "IOPS request for the created disk",
        "Computed": true
      },
      "is_attached": {
        "Type": "Bool",
        "Description": "True if the disk is already attached",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "owner_name": {
        "Type": "String",
        "Description": "The owner name of the disk",
        "Computed": true
      },
      "size_in_mb": {
        "Type": "Int",
        "Required": true,
        "Description": "size in MB"
      },
      "storage_profile": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_inserted_media": {
      "catalog": {
        "Type": "String",
        "Required": true,
        "Description": "catalog name where to find media file"
      },
      "eject_force": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When ejecting answers automatically to question yes",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "media name to use"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "vapp_name": {
        "Type": "String",
        "Required": true,
        "Description": "vApp to use"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      },
      "vm_name": {
        "Type": "String",
        "Required": true,
        "Description": "VM in vApp in which media will be inserted or ejected"
      }
    },
    "vcd_lb_app_profile": {
      "cookie_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "The mode by which the cookie should be inserted. One of 'insert', 'prefix', or 'appsession'"
      },
      "cookie_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Used to uniquely identify the session the first time a client accesses the site. The load balancer refers to this cookie when connecting subsequent requests in the session, so that they all go to the same virtual server. Only applies for persistence_mechanism 'cookie'"
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which the LB Application Profile is located"
      },
      "enable_pool_side_ssl": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable to define the certificate, CAs, or CRLs used to authenticate the load balancer from the server side",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "enable_ssl_passthrough": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable SSL authentication to be passed through to the virtual server. Otherwise SSL authentication takes place at the destination address."
      },
      "expiration": {
        "Type": "Int",
        "Optional": true,
        "Description": "Length of time in seconds that persistence stays in effect"
      },
      "http_redirect_url": {
        "Type": "String",
        "Optional": true,
        "Description": "The URL to which traffic that arrives at the destination address should be redirected. Only applies for types 'http' and 'https'"
      },
      "insert_x_forwarded_http_header": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enables 'X-Forwarded-For' header for identifying the originating IP address of a client connecting to a Web server through the load balancer. Only applies for types HTTP and HTTPS",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Unique LB Application Profile name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "persistence_mechanism": {
        "Type": "String",
        "Optional": true,
        "Description": "Persistence mechanism for the profile. One of 'cookie', 'ssl-sessionid', 'sourceip'"
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "Protocol type used to send requests to the server. One of 'tcp', 'udp', 'http' org 'https'"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_lb_app_rule": {
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which the LB Application Rule is located"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Unique LB Application Rule name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "script": {
        "Type": "String",
        "Required": true,
        "Description": "The script for the application rule. Note - you may find HEREDOC useful to pass multiline strings"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_lb_server_pool": {
      "algorithm": {
        "Type": "String",
        "Required": true,
        "Description": "Balancing method for the service. One of 'ip-hash', 'round-robin', 'uri', 'leastconn', 'url', or 'httpheader'"
      },
      "algorithm_parameters": {
        "Type": "String",
        "Optional": true,
        "Description": "Additional options for load balancing algorithm for httpheader or url algorithms"
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Server pool description"
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which the LB Server Pool is located"
      },
      "enable_transparency": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Makes client IP addresses visible to the backend servers",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "member": {
        "Type": "List",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "condition": {
              "Type": "String",
              "Required": true,
              "Description": "Defines member state. One of enabled, drain, disabled."
            },
            "id": {
              "Type": "String",
              "Description": "Pool member id (formatted as member-xx, where xx is a number)",
              "Computed": true
            },
            "ip_address": {
              "Type": "String",
              "Required": true,
              "Description": "IP address of member in server pool"
            },
            "max_connections": {
              "Type": "Int",
              "Optional": true,
              "Description": "The maximum number of concurrent connections the member can handle. If exceeded requests are queued and the load balancer waits for a connection to be released"
            },
            "min_connections": {
              "Type": "Int",
              "Optional": true,
              "Description": "Minimum number of concurrent connections a member must always accept"
            },
            "monitor_port": {
              "Type": "Int",
              "Required": true,
              "Description": "Port at which the member is to receive health monitor requests. Can be the same as port"
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of pool member"
            },
            "port": {
              "Type": "Int",
              "Required": true,
              "Description": "Port at which the member is to receive traffic from the load balancer"
            },
            "weight": {
              "Type": "Int",
              "Required": true,
              "Description": "Proportion of traffic this member is to handle. Must be an integer in the range 1-256"
            }
          }
        }
      },
      "monitor_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Load Balancer Service Monitor ID"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Unique LB Server Pool name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_lb_service_monitor": {
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which the LB Service Monitor is located"
      },
      "expected": {
        "Type": "String",
        "Optional": true,
        "Description": "String that the monitor expects to match in the status line of the http or https response (for example, HTTP/1.1)"
      },
      "extension": {
        "Type": "Map",
        "Optional": true,
        "Description": "Advanced monitor parameters as key=value pairs"
      },
      "interval": {
        "Type": "Int",
        "Optional": true,
        "Description": "Interval in seconds at which a server is to be monitored (defaults to 10)",
        "Default": {
          "Type": "int",
          "Value": "10"
        }
      },
      "max_retries": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of times the specified monitoring Method must fail sequentially before the server is declared down  (defaults to 3)",
        "Default": {
          "Type": "int",
          "Value": "3"
        }
      },
      "method": {
        "Type": "String",
        "Optional": true,
        "Description": "Method to be used to detect server status. One of OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, or CONNECT"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Unique LB Service Monitor name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "receive": {
        "Type": "String",
        "Optional": true,
        "Description": "String to be matched in the response content"
      },
      "send": {
        "Type": "String",
        "Optional": true,
        "Description": "Data to be sent"
      },
      "timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "Maximum time in seconds within which a response from the server must be received  (defaults to 15)",
        "Default": {
          "Type": "int",
          "Value": "15"
        }
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "Way in which you want to send the health check request to the server. One of http, https, tcp, icmp, or udp"
      },
      "url": {
        "Type": "String",
        "Optional": true,
        "Description": "URL to be used in the server status request"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_lb_virtual_server": {
      "app_profile_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Application profile ID to be associated with the virtual server"
      },
      "app_rule_ids": {
        "Type": "List",
        "Optional": true,
        "Description": "List of attached application rule IDs",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "connection_limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "Maximum concurrent connections that the virtual server can process"
      },
      "connection_rate_limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "Maximum incoming new connection requests per second"
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Virtual Server description"
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which the LB Virtual Server is located"
      },
      "enable_acceleration": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable virtual server acceleration"
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Defines if the virtual server is enabled",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "ip_address": {
        "Type": "String",
        "Required": true,
        "Description": "IP address that the load balancer listens on"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Unique Virtual Server name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "port": {
        "Type": "Int",
        "Required": true,
        "Description": "Port number that the load balancer listens on"
      },
      "protocol": {
        "Type": "String",
        "Required": true,
        "Description": "Protocol that the virtual server accepts"
      },
      "server_pool_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The server pool that the load balancer will use"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_library_certificate": {
      "alias": {
        "Type": "String",
        "Required": true,
        "Description": "Alias of certificate"
      },
      "certificate": {
        "Type": "String",
        "Required": true,
        "Description": "Certificate content"
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Certificate description"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "private_key": {
        "Type": "String",
        "Optional": true,
        "Description": "Certificate content"
      },
      "private_key_passphrase": {
        "Type": "String",
        "Optional": true,
        "Description": "Certificate content"
      }
    },
    "vcd_network_direct": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Optional description for the network"
      },
      "external_network": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the external network"
      },
      "external_network_dns1": {
        "Type": "String",
        "Description": "Main DNS of the external network",
        "Computed": true
      },
      "external_network_dns2": {
        "Type": "String",
        "Description": "Secondary DNS of the external network",
        "Computed": true
      },
      "external_network_dns_suffix": {
        "Type": "String",
        "Description": "DNS suffix of the external network",
        "Computed": true
      },
      "external_network_gateway": {
        "Type": "String",
        "Description": "Gateway of the external network",
        "Computed": true
      },
      "external_network_netmask": {
        "Type": "String",
        "Description": "Net mask of the external network",
        "Computed": true
      },
      "href": {
        "Type": "String",
        "Description": "Network Hypertext Reference",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "A unique name for this network"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "shared": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Defines if this network is shared between multiple VDCs in the Org",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_network_isolated": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Optional description for the network"
      },
      "dhcp_pool": {
        "Type": "Set",
        "Optional": true,
        "Description": "A range of IPs to issue to virtual machines that don't have a static IP",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "default_lease_time": {
              "Type": "Int",
              "Optional": true,
              "Description": "The default DHCP lease time to use",
              "Default": {
                "Type": "int",
                "Value": "3600"
              }
            },
            "end_address": {
              "Type": "String",
              "Required": true,
              "Description": "The final address in the IP Range"
            },
            "max_lease_time": {
              "Type": "Int",
              "Optional": true,
              "Description": "The maximum DHCP lease time to use",
              "Default": {
                "Type": "int",
                "Value": "7200"
              }
            },
            "start_address": {
              "Type": "String",
              "Required": true,
              "Description": "The first address in the IP Range"
            }
          }
        }
      },
      "dns1": {
        "Type": "String",
        "Optional": true,
        "Description": "First DNS server to use"
      },
      "dns2": {
        "Type": "String",
        "Optional": true,
        "Description": "Second DNS server to use"
      },
      "dns_suffix": {
        "Type": "String",
        "Optional": true,
        "Description": "A FQDN for the virtual machines on this network"
      },
      "gateway": {
        "Type": "String",
        "Optional": true,
        "Description": "The gateway for this network"
      },
      "href": {
        "Type": "String",
        "Description": "Network Hyper Reference",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "A unique name for this network"
      },
      "netmask": {
        "Type": "String",
        "Optional": true,
        "Description": "The netmask for the new network",
        "Default": {
          "Type": "string",
          "Value": "255.255.255.0"
        }
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "shared": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Defines if this network is shared between multiple VDCs in the Org",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "static_ip_pool": {
        "Type": "Set",
        "Optional": true,
        "Description": "A range of IPs permitted to be used as static IPs for virtual machines",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "end_address": {
              "Type": "String",
              "Required": true,
              "Description": "The final address in the IP Range"
            },
            "start_address": {
              "Type": "String",
              "Required": true,
              "Description": "The first address in the IP Range"
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_network_isolated_v2": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Network description"
      },
      "dns1": {
        "Type": "String",
        "Optional": true,
        "Description": "DNS server 1"
      },
      "dns2": {
        "Type": "String",
        "Optional": true,
        "Description": "DNS server 1"
      },
      "dns_suffix": {
        "Type": "String",
        "Optional": true,
        "Description": "DNS suffix"
      },
      "gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Gateway IP address"
      },
      "is_shared": {
        "Type": "Bool",
        "Optional": true,
        "Description": "NSX-V only - share this network with other VDCs in this organization. Default - false"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Network name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "prefix_length": {
        "Type": "Int",
        "Required": true,
        "Description": "Network prefix"
      },
      "static_ip_pool": {
        "Type": "Set",
        "Optional": true,
        "Description": "IP ranges used for static pool allocation in the network",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "end_address": {
              "Type": "String",
              "Required": true,
              "Description": "End address of the IP range"
            },
            "start_address": {
              "Type": "String",
              "Required": true,
              "Description": "Start address of the IP range"
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_network_routed": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Optional description for the network"
      },
      "dhcp_pool": {
        "Type": "Set",
        "Optional": true,
        "Description": "A range of IPs to issue to virtual machines that don't have a static IP",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "default_lease_time": {
              "Type": "Int",
              "Description": "The default DHCP lease time to use",
              "Computed": true
            },
            "end_address": {
              "Type": "String",
              "Required": true,
              "Description": "The final address in the IP Range"
            },
            "max_lease_time": {
              "Type": "Int",
              "Optional": true,
              "Description": "The maximum DHCP lease time to use",
              "Default": {
                "Type": "int",
                "Value": "7200"
              }
            },
            "start_address": {
              "Type": "String",
              "Required": true,
              "Description": "The first address in the IP Range"
            }
          }
        }
      },
      "dns1": {
        "Type": "String",
        "Optional": true,
        "Description": "First DNS server to use"
      },
      "dns2": {
        "Type": "String",
        "Optional": true,
        "Description": "Second DNS server to use"
      },
      "dns_suffix": {
        "Type": "String",
        "Optional": true,
        "Description": "A FQDN for the virtual machines on this network"
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the edge gateway"
      },
      "gateway": {
        "Type": "String",
        "Optional": true,
        "Description": "The gateway of this network"
      },
      "href": {
        "Type": "String",
        "Description": "Network Hypertext Reference",
        "Computed": true
      },
      "interface_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Which interface to use (one of `internal`, `subinterface`, `distributed`)",
        "Default": {
          "Type": "string",
          "Value": "internal"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "A unique name for the network"
      },
      "netmask": {
        "Type": "String",
        "Optional": true,
        "Description": "The netmask for the new network",
        "Default": {
          "Type": "string",
          "Value": "255.255.255.0"
        }
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "shared": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Defines if this network is shared between multiple VDCs in the Org",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "static_ip_pool": {
        "Type": "Set",
        "Optional": true,
        "Description": "A range of IPs permitted to be used as static IPs for virtual machines",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "end_address": {
              "Type": "String",
              "Required": true,
              "Description": "The final address in the IP Range"
            },
            "start_address": {
              "Type": "String",
              "Required": true,
              "Description": "The first address in the IP Range"
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_network_routed_v2": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Network description"
      },
      "dns1": {
        "Type": "String",
        "Optional": true,
        "Description": "DNS server 1"
      },
      "dns2": {
        "Type": "String",
        "Optional": true,
        "Description": "DNS server 1"
      },
      "dns_suffix": {
        "Type": "String",
        "Optional": true,
        "Description": "DNS suffix"
      },
      "edge_gateway_id": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway ID in which Routed network should be located"
      },
      "gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Gateway IP address"
      },
      "interface_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Optional interface type (only for NSX-V networks). One of 'INTERNAL' (default), 'DISTRIBUTED', 'SUBINTERFACE'",
        "Default": {
          "Type": "string",
          "Value": "internal"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Network name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "prefix_length": {
        "Type": "Int",
        "Required": true,
        "Description": "Network prefix"
      },
      "static_ip_pool": {
        "Type": "Set",
        "Optional": true,
        "Description": "IP ranges used for static pool allocation in the network",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "end_address": {
              "Type": "String",
              "Required": true,
              "Description": "End address of the IP range"
            },
            "start_address": {
              "Type": "String",
              "Required": true,
              "Description": "Start address of the IP range"
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_alb_cloud": {
      "controller_id": {
        "Type": "String",
        "Required": true,
        "Description": "NSX-T ALB Controller ID"
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "NSX-T ALB Cloud description"
      },
      "health_message": {
        "Type": "String",
        "Description": "NSX-T ALB Cloud detailed health message",
        "Computed": true
      },
      "health_status": {
        "Type": "String",
        "Description": "NSX-T ALB Cloud health status",
        "Computed": true
      },
      "importable_cloud_id": {
        "Type": "String",
        "Required": true,
        "Description": "NSX-T ALB Importable Cloud ID"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "NSX-T ALB Cloud name"
      },
      "network_pool_id": {
        "Type": "String",
        "Required": true,
        "Description": "Network pool ID for NSX-T ALB Importable Cloud"
      },
      "network_pool_name": {
        "Type": "String",
        "Description": "Network pool name of NSX-T ALB Cloud",
        "Computed": true
      }
    },
    "vcd_nsxt_alb_controller": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "NSX-T ALB Controller description"
      },
      "license_type": {
        "Type": "String",
        "Required": true,
        "Description": "NSX-T ALB License type. One of 'BASIC', 'ENTERPRISE'"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "NSX-T ALB Controller name"
      },
      "password": {
        "Type": "String",
        "Required": true,
        "Description": "NSX-T ALB Controller Password"
      },
      "url": {
        "Type": "String",
        "Required": true,
        "Description": "NSX-T ALB Controller URL"
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "NSX-T ALB Controller Username"
      },
      "version": {
        "Type": "String",
        "Description": "NSX-T ALB Controller version",
        "Computed": true
      }
    },
    "vcd_nsxt_alb_edgegateway_service_engine_group": {
      "deployed_virtual_services": {
        "Type": "Int",
        "Description": "Number of deployed virtual services for this Service Engine Group",
        "Computed": true
      },
      "edge_gateway_id": {
        "Type": "String",
        "Required": true,
        "Description": "Edge Gateway ID in which ALB Service Engine Group should be located"
      },
      "max_virtual_services": {
        "Type": "Int",
        "Optional": true,
        "Description": "Maximum number of virtual services to be used in this Service Engine Group",
        "Computed": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "reserved_virtual_services": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of reserved virtual services for this Service Engine Group",
        "Computed": true
      },
      "service_engine_group_id": {
        "Type": "String",
        "Required": true,
        "Description": "Service Engine Group ID to attach to this NSX-T Edge Gateway"
      },
      "service_engine_group_name": {
        "Type": "String",
        "Description": "Service Engine Group Name which is attached to NSX-T Edge Gateway",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_alb_pool": {
      "algorithm": {
        "Type": "String",
        "Optional": true,
        "Description": "Algorithm for choosing pool members (default LEAST_CONNECTIONS). Other `ROUND_ROBIN`,`CONSISTENT_HASH`, `FASTEST_RESPONSE`, `LEAST_LOAD`, `FEWEST_SERVERS`, `RANDOM`, `FEWEST_TASKS`,`CORE_AFFINITY`",
        "Default": {
          "Type": "string",
          "Value": "LEAST_CONNECTIONS"
        }
      },
      "associated_virtual_service_ids": {
        "Type": "Set",
        "Description": "IDs of associated virtual services",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "associated_virtual_services": {
        "Type": "Set",
        "Description": "Names of associated virtual services",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ca_certificate_ids": {
        "Type": "Set",
        "Optional": true,
        "Description": "A set of root certificate IDs to use when validating certificates presented by pool members",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "cn_check_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean flag if common name check of the certificate should be enabled",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "default_port": {
        "Type": "Int",
        "Optional": true,
        "Description": "Default Port defines destination server port used by the traffic sent to the member (default 80)",
        "Default": {
          "Type": "int",
          "Value": "80"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description of ALB Pool"
      },
      "domain_names": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of domain names which will be used to verify common names",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "edge_gateway_id": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway ID in which ALB Pool should be created"
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value if ALB Pool is enabled or not (default true)",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "enabled_member_count": {
        "Type": "Int",
        "Description": "Number of enabled members in the pool",
        "Computed": true
      },
      "graceful_timeout_period": {
        "Type": "Int",
        "Optional": true,
        "Description": "Maximum time in minutes to gracefully disable pool member (default 1)",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      },
      "health_message": {
        "Type": "String",
        "Description": "Health message",
        "Computed": true
      },
      "health_monitor": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Computed": true
            },
            "system_defined": {
              "Type": "Bool",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of health monitor. One of `HTTP`, `HTTPS`, `TCP`, `UDP`, `PING`"
            }
          }
        }
      },
      "member": {
        "Type": "Set",
        "Optional": true,
        "Description": "ALB Pool Members",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "detailed_health_message": {
              "Type": "String",
              "Description": "Detailed health message",
              "Computed": true
            },
            "enabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Defines if pool member is accepts traffic (default 'true')",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "health_status": {
              "Type": "String",
              "Description": "Health status",
              "Computed": true
            },
            "ip_address": {
              "Type": "String",
              "Required": true,
              "Description": "IP address of pool member"
            },
            "marked_down_by": {
              "Type": "Set",
              "Description": "Marked down by provides a set of health monitors that marked the service down",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "Member port"
            },
            "ratio": {
              "Type": "Int",
              "Optional": true,
              "Description": "Ratio of selecting eligible servers in the pool",
              "Default": {
                "Type": "int",
                "Value": "1"
              }
            }
          }
        }
      },
      "member_count": {
        "Type": "Int",
        "Description": "Number of members in the pool",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of ALB Pool"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "passive_monitoring_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Monitors if the traffic is accepted by node (default true)",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "persistence_profile": {
        "Type": "List",
        "Optional": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Description": "System generated name of persistence profile",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of persistence strategy. One of `CLIENT_IP`, `HTTP_COOKIE`, `CUSTOM_HTTP_HEADER`, `APP_COOKIE`, `TLS`"
            },
            "value": {
              "Type": "String",
              "Optional": true,
              "Description": "Value of attribute based on persistence type"
            }
          }
        }
      },
      "up_member_count": {
        "Type": "Int",
        "Description": "Number of members in the pool serving the traffic",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_alb_service_engine_group": {
      "alb_cloud_id": {
        "Type": "String",
        "Required": true,
        "Description": "NSX-T ALB backing Cloud ID"
      },
      "deployed_virtual_services": {
        "Type": "Int",
        "Description": "NSX-T ALB Service Engine Group deployed virtual services",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "NSX-T ALB Service Engine Group description"
      },
      "ha_mode": {
        "Type": "String",
        "Description": "NSX-T ALB Service Engine Group HA mode",
        "Computed": true
      },
      "importable_service_engine_group_name": {
        "Type": "String",
        "Required": true,
        "Description": "NSX-T ALB Importable Service Engine Group Name"
      },
      "max_virtual_services": {
        "Type": "Int",
        "Description": "NSX-T ALB Service Engine Group maximum virtual services",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "NSX-T ALB Service Engine Group name"
      },
      "overallocated": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value that shows if virtual services are overallocated"
      },
      "reservation_model": {
        "Type": "String",
        "Required": true,
        "Description": "NSX-T ALB Service Engine Group reservation model. One of 'DEDICATED', 'SHARED'"
      },
      "reserved_virtual_services": {
        "Type": "Int",
        "Description": "NSX-T ALB Service Engine Group reserved virtual services",
        "Computed": true
      },
      "sync_on_refresh": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value that shows if sync should be performed on every refresh",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      }
    },
    "vcd_nsxt_alb_settings": {
      "edge_gateway_id": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway ID"
      },
      "is_active": {
        "Type": "Bool",
        "Required": true,
        "Description": "Defines if ALB is enabled on Edge Gateway"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "service_network_specification": {
        "Type": "String",
        "Optional": true,
        "Description": "Optional custom network CIDR definition for ALB Service Engine placement (VCD default is 192.168.255.1/25)",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_alb_virtual_service": {
      "application_profile_type": {
        "Type": "String",
        "Required": true,
        "Description": "HTTP, HTTPS, L4, L4_TLS"
      },
      "ca_certificate_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Optional certificate ID to use for exposing service"
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description of ALB Virtual Service"
      },
      "edge_gateway_id": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway ID in which ALB Pool should be created"
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Virtual Service is enabled or disabled (default true)",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of ALB Virtual Service"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "pool_id": {
        "Type": "String",
        "Required": true,
        "Description": "Pool ID"
      },
      "service_engine_group_id": {
        "Type": "String",
        "Required": true,
        "Description": "Service Engine Group ID"
      },
      "service_port": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "end_port": {
              "Type": "Int",
              "Optional": true,
              "Description": "Last port in the range"
            },
            "ssl_enabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Defines if certificate should be used",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "start_port": {
              "Type": "Int",
              "Required": true,
              "Description": "Starting port in the range"
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "One of 'TCP_PROXY', 'TCP_FAST_PATH', 'UDP_FAST_PATH'"
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      },
      "virtual_ip_address": {
        "Type": "String",
        "Required": true,
        "Description": "Virtual IP address (VIP) for Virtual Service"
      }
    },
    "vcd_nsxt_app_port_profile": {
      "app_port": {
        "Type": "Set",
        "Required": true,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "port": {
              "Type": "Set",
              "Optional": true,
              "Description": "Set of ports or ranges",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "protocol": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Application Port Profile description"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Application Port Profile name"
      },
      "nsxt_manager_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of NSX-T manager. Only required for 'PROVIDER' scope"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "scope": {
        "Type": "String",
        "Required": true,
        "Description": "Scope - 'PROVIDER' or 'TENANT'"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_edgegateway": {
      "dedicate_external_network": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Dedicating the External Network will enable Route Advertisement for this Edge Gateway."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Edge Gateway description"
      },
      "edge_cluster_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Select specific NSX-T Edge Cluster. Will be inherited from external network if not specified",
        "Computed": true
      },
      "external_network_id": {
        "Type": "String",
        "Required": true,
        "Description": "External network ID"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Edge Gateway name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "primary_ip": {
        "Type": "String",
        "Description": "Primary IP address of edge gateway. Read-only (can be specified in specific subnet)",
        "Computed": true
      },
      "subnet": {
        "Type": "Set",
        "Required": true,
        "Description": "One or more blocks with external network information to be attached to this gateway's interface",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "allocated_ips": {
              "Type": "Set",
              "Required": true,
              "Description": "Define one or more blocks to sub-allocate pools on the edge gateway",
              "MinItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "end_address": {
                    "Type": "String",
                    "Required": true
                  },
                  "start_address": {
                    "Type": "String",
                    "Required": true
                  }
                }
              }
            },
            "gateway": {
              "Type": "String",
              "Required": true,
              "Description": "Gateway address for a subnet"
            },
            "prefix_length": {
              "Type": "Int",
              "Required": true,
              "Description": "Netmask address for a subnet (e.g. 24 for /24)"
            },
            "primary_ip": {
              "Type": "String",
              "Optional": true,
              "Description": "Primary IP address for the edge gateway - will be auto-assigned if not defined"
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_firewall": {
      "edge_gateway_id": {
        "Type": "String",
        "Required": true,
        "Description": "Edge Gateway ID in which Firewall Rule are located"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "rule": {
        "Type": "List",
        "Required": true,
        "Description": "Ordered list of firewall rules",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Required": true,
              "Description": "Defines if the rule should 'ALLOW' or 'DROP' matching traffic"
            },
            "app_port_profile_ids": {
              "Type": "Set",
              "Optional": true,
              "Description": "A set of Application Port Profile IDs. Leaving it empty means 'Any'",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "destination_ids": {
              "Type": "Set",
              "Optional": true,
              "Description": "A set of Destination Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "direction": {
              "Type": "String",
              "Required": true,
              "Description": "Direction on which Firewall Rule applies (One of 'IN', 'OUT', 'IN_OUT')"
            },
            "enabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Defined if Firewall Rule is active",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "id": {
              "Type": "String",
              "Description": "Firewall Rule ID",
              "Computed": true
            },
            "ip_protocol": {
              "Type": "String",
              "Required": true,
              "Description": "Firewall Rule Protocol (One of 'IPV4', 'IPV6', 'IPV4_IPV6')"
            },
            "logging": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Defines if matching traffic should be logged",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Firewall Rule name"
            },
            "source_ids": {
              "Type": "Set",
              "Optional": true,
              "Description": "A set of Source Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_ip_set": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "IP set description"
      },
      "edge_gateway_id": {
        "Type": "String",
        "Required": true,
        "Description": "Edge Gateway ID in which IP Set is located"
      },
      "ip_addresses": {
        "Type": "Set",
        "Optional": true,
        "Description": "A set of IP address, CIDR, IP range objects",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "IP set name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_ipsec_vpn_tunnel": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description IP Sec VPN Tunnel"
      },
      "edge_gateway_id": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which IP Sec VPN configuration is located"
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enables or disables this configuration (default true)",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "ike_fail_reason": {
        "Type": "String",
        "Description": "Provides more details of failure if the IKE service is not UP",
        "Computed": true
      },
      "ike_service_status": {
        "Type": "String",
        "Description": "Status for the actual IKE Session for the given tunnel",
        "Computed": true
      },
      "local_ip_address": {
        "Type": "String",
        "Required": true,
        "Description": "IPv4 Address for the endpoint. This has to be a sub-allocated IP on the Edge Gateway."
      },
      "local_networks": {
        "Type": "Set",
        "Required": true,
        "Description": "Set of local networks in CIDR format. At least one value is required",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "logging": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Sets whether logging for the tunnel is enabled or not. (default - false)",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of IP Sec VPN Tunnel"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "pre_shared_key": {
        "Type": "String",
        "Required": true,
        "Description": "Pre-Shared Key (PSK)"
      },
      "remote_ip_address": {
        "Type": "String",
        "Required": true,
        "Description": "Public IPv4 Address of the remote device terminating the VPN connection"
      },
      "remote_networks": {
        "Type": "Set",
        "Optional": true,
        "Description": "Set of remote networks in CIDR format. Leaving it empty is interpreted as 0.0.0.0/0",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "security_profile": {
        "Type": "String",
        "Description": "Security type which is use for IPsec VPN Tunnel. It will be 'DEFAULT' if nothing is customized and 'CUSTOM' if some changes are applied",
        "Computed": true
      },
      "security_profile_customization": {
        "Type": "List",
        "Optional": true,
        "Description": "Security profile customization",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dpd_probe_internal": {
              "Type": "Int",
              "Optional": true,
              "Description": "Value in seconds of dead probe detection interval. Minimum is 3 seconds and the maximum is 60 seconds"
            },
            "ike_dh_groups": {
              "Type": "Set",
              "Required": true,
              "Description": "Diffie-Hellman groups to be used if Perfect Forward Secrecy is enabled. One of GROUP2, GROUP5, GROUP14, GROUP15, GROUP16, GROUP19, GROUP20, GROUP21",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "ike_digest_algorithms": {
              "Type": "Set",
              "Optional": true,
              "Description": "Secure hashing algorithms to use during the IKE negotiation. One of SHA1, SHA2_256, SHA2_384, SHA2_512",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "ike_encryption_algorithms": {
              "Type": "Set",
              "Required": true,
              "Description": "Encryption algorithms. One of SHA1, SHA2_256, SHA2_384, SHA2_512",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "ike_sa_lifetime": {
              "Type": "Int",
              "Optional": true,
              "Description": "Security Association life time (in seconds). It is number of seconds before the IPsec tunnel needs to reestablish"
            },
            "ike_version": {
              "Type": "String",
              "Required": true,
              "Description": "IKE version one of IKE_V1, IKE_V2, IKE_FLEX"
            },
            "tunnel_df_policy": {
              "Type": "String",
              "Optional": true,
              "Description": "Policy for handling defragmentation bit. One of COPY, CLEAR",
              "Default": {
                "Type": "string",
                "Value": "COPY"
              }
            },
            "tunnel_dh_groups": {
              "Type": "Set",
              "Required": true,
              "Description": "Diffie-Hellman groups to be used is PFS is enabled. One of GROUP2, GROUP5, GROUP14, GROUP15, GROUP16, GROUP19, GROUP20, GROUP21",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "tunnel_digest_algorithms": {
              "Type": "Set",
              "Optional": true,
              "Description": "Digest algorithms to be used for message digest. One of SHA1, SHA2_256, SHA2_384, SHA2_512",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "tunnel_encryption_algorithms": {
              "Type": "Set",
              "Required": true,
              "Description": "Encryption algorithms to use in IPSec tunnel establishment. One of AES_128, AES_256, AES_GCM_128, AES_GCM_192, AES_GCM_256, NO_ENCRYPTION_AUTH_AES_GMAC_128, NO_ENCRYPTION_AUTH_AES_GMAC_192, NO_ENCRYPTION_AUTH_AES_GMAC_256, NO_ENCRYPTION",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "tunnel_pfs_enabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Perfect Forward Secrecy Enabled or Disabled. Default (enabled)",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "tunnel_sa_lifetime": {
              "Type": "Int",
              "Optional": true,
              "Description": "Security Association life time (in seconds)"
            }
          }
        }
      },
      "status": {
        "Type": "String",
        "Description": "Overall IPsec VPN Tunnel Status",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_nat_rule": {
      "app_port_profile_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Application Port Profile to apply for this rule"
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description of NAT rule"
      },
      "dnat_external_port": {
        "Type": "String",
        "Optional": true,
        "Description": "For DNAT only. Enter a port into which the DNAT rule is translating for the packets inbound to the virtual machines."
      },
      "edge_gateway_id": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which NAT Rule is located"
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enables or disables this rule",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "external_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IP address or CIDR of external network"
      },
      "firewall_match": {
        "Type": "String",
        "Optional": true,
        "Description": "VCD 10.2.2+ Determines how the firewall matches the address during NATing if firewall stage is not skipped. One of 'MATCH_INTERNAL_ADDRESS', 'MATCH_EXTERNAL_ADDRESS', 'BYPASS'",
        "Computed": true
      },
      "internal_address": {
        "Type": "String",
        "Optional": true,
        "Description": "IP address or CIDR of the virtual machines for which you are configuring NAT"
      },
      "logging": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable logging when this rule is applied",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of NAT rule"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "priority": {
        "Type": "Int",
        "Optional": true,
        "Description": "VCD 10.2.2+ If an address has multiple NAT rules, the rule with the highest priority is applied. A lower value means a higher precedence for this rule.",
        "Computed": true
      },
      "rule_type": {
        "Type": "String",
        "Required": true,
        "Description": "Rule type - one of 'DNAT', 'NO_DNAT', 'SNAT', 'NO_SNAT', 'REFLEXIVE'"
      },
      "snat_destination_address": {
        "Type": "String",
        "Optional": true,
        "Description": "For SNAT only. If you want the rule to apply only for traffic to a specific domain, enter an IP address for this domain or an IP address range in CIDR format."
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_network_dhcp": {
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "org_network_id": {
        "Type": "String",
        "Required": true,
        "Description": "Parent Org VDC network ID"
      },
      "pool": {
        "Type": "Set",
        "Required": true,
        "Description": "IP ranges used for DHCP pool allocation in the network",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "end_address": {
              "Type": "String",
              "Required": true,
              "Description": "End address of DHCP pool IP range"
            },
            "start_address": {
              "Type": "String",
              "Required": true,
              "Description": "Start address of DHCP pool IP range"
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_network_imported": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Network description"
      },
      "dns1": {
        "Type": "String",
        "Optional": true,
        "Description": "DNS server 1"
      },
      "dns2": {
        "Type": "String",
        "Optional": true,
        "Description": "DNS server 1"
      },
      "dns_suffix": {
        "Type": "String",
        "Optional": true,
        "Description": "DNS suffix"
      },
      "gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Gateway IP address"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Network name"
      },
      "nsxt_logical_switch_id": {
        "Type": "String",
        "Description": "ID of existing NSX-T Logical Switch",
        "Computed": true
      },
      "nsxt_logical_switch_name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of existing NSX-T Logical Switch"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "prefix_length": {
        "Type": "Int",
        "Required": true,
        "Description": "Network prefix"
      },
      "static_ip_pool": {
        "Type": "Set",
        "Optional": true,
        "Description": "IP ranges used for static pool allocation in the network",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "end_address": {
              "Type": "String",
              "Required": true,
              "Description": "End address of the IP range"
            },
            "start_address": {
              "Type": "String",
              "Required": true,
              "Description": "Start address of the IP range"
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_security_group": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Security Group description"
      },
      "edge_gateway_id": {
        "Type": "String",
        "Required": true,
        "Description": "Edge Gateway ID in which security group is located"
      },
      "member_org_network_ids": {
        "Type": "Set",
        "Optional": true,
        "Description": "Set of Org VDC network IDs attached to this security group",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "member_vms": {
        "Type": "Set",
        "Description": "Set of VM IDs",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "vapp_id": {
              "Type": "String",
              "Description": "Parent vApp name (if exists) for member VM",
              "Computed": true
            },
            "vapp_name": {
              "Type": "String",
              "Description": "Parent vApp ID (if exists) for member VM",
              "Computed": true
            },
            "vm_id": {
              "Type": "String",
              "Description": "Member VM ID",
              "Computed": true
            },
            "vm_name": {
              "Type": "String",
              "Description": "Member VM Name",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Security Group name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxv_dhcp_relay": {
      "domain_names": {
        "Type": "Set",
        "Optional": true,
        "Description": "A set of IP domain names of DHCP servers",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name for DHCP relay settings"
      },
      "ip_addresses": {
        "Type": "Set",
        "Optional": true,
        "Description": "A set of IP address of DHCP servers",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ip_sets": {
        "Type": "Set",
        "Optional": true,
        "Description": "A set of IP set names which consist DHCP servers",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "relay_agent": {
        "Type": "Set",
        "Required": true,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "gateway_ip_address": {
              "Type": "String",
              "Optional": true,
              "Description": "Optional gateway IP address of org network which is to be used for relaying DHCP message to specified servers",
              "Computed": true
            },
            "network_name": {
              "Type": "String",
              "Required": true,
              "Description": "Org network which is to be used for relaying DHCP message to specified servers"
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxv_dnat": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "NAT rule description"
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which NAT Rule is located"
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether the rule should be enabled. Default 'true'",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "icmp_type": {
        "Type": "String",
        "Optional": true,
        "Description": "ICMP type. Only supported when protocol is ICMP. One of `any`, `address-mask-request`, `address-mask-reply`, `destination-unreachable`, `echo-request`, `echo-reply`, `parameter-problem`, `redirect`, `router-advertisement`, `router-solicitation`, `source-quench`, `time-exceeded`, `timestamp-request`, `timestamp-reply`. Default `any`"
      },
      "logging_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether logging should be enabled for this rule. Default 'false'",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "network_name": {
        "Type": "String",
        "Required": true,
        "Description": "Org or external network name"
      },
      "network_type": {
        "Type": "String",
        "Required": true,
        "Description": "Network type. One of 'ext', 'org'"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "original_address": {
        "Type": "String",
        "Required": true,
        "Description": "Original address or address range. This is the the destination address for DNAT rules."
      },
      "original_port": {
        "Type": "String",
        "Optional": true,
        "Description": "Original port. This is the destination port for DNAT rules"
      },
      "protocol": {
        "Type": "String",
        "Optional": true,
        "Description": "Protocol. Such as 'tcp', 'udp', 'icmp', 'any'"
      },
      "rule_tag": {
        "Type": "Int",
        "Optional": true,
        "Description": "Optional. Allows to set custom rule tag",
        "Computed": true
      },
      "rule_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Read only. Possible values 'user', 'internal_high'",
        "Computed": true
      },
      "translated_address": {
        "Type": "String",
        "Optional": true,
        "Description": "Translated address or address range"
      },
      "translated_port": {
        "Type": "String",
        "Optional": true,
        "Description": "Translated port"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxv_firewall_rule": {
      "above_rule_id": {
        "Type": "String",
        "Optional": true,
        "Description": "This firewall rule will be inserted above the referred one"
      },
      "action": {
        "Type": "String",
        "Optional": true,
        "Description": "'accept' or 'deny'. Default 'accept'",
        "Default": {
          "Type": "string",
          "Value": "accept"
        }
      },
      "destination": {
        "Type": "List",
        "Required": true,
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "exclude": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Rule is applied to traffic going to any destinations except for the excluded destination. Default 'false'",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "gateway_interfaces": {
              "Type": "Set",
              "Optional": true,
              "Description": "'vse', 'internal', 'external' or network name",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "ip_addresses": {
              "Type": "Set",
              "Optional": true,
              "Description": "IP address, CIDR, an IP range, or the keyword 'any'",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "ip_sets": {
              "Type": "Set",
              "Optional": true,
              "Description": "Set of IP set names",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "org_networks": {
              "Type": "Set",
              "Optional": true,
              "Description": "Set of org network names",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "vm_ids": {
              "Type": "Set",
              "Optional": true,
              "Description": "Set of VM IDs",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which Firewall Rule is located"
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether the rule should be enabled. Default 'true'",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "logging_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether logging should be enabled for this rule. Default 'false'",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Firewall rule name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "rule_tag": {
        "Type": "Int",
        "Optional": true,
        "Description": "Optional. Allows to set custom rule tag",
        "Computed": true
      },
      "rule_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Read only. Possible values 'user', 'internal_high'",
        "Computed": true
      },
      "service": {
        "Type": "Set",
        "Required": true,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "port": {
              "Type": "String",
              "Optional": true,
              "Computed": true
            },
            "protocol": {
              "Type": "String",
              "Required": true
            },
            "source_port": {
              "Type": "String",
              "Optional": true,
              "Computed": true
            }
          }
        }
      },
      "source": {
        "Type": "List",
        "Required": true,
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "exclude": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Rule is applied to traffic coming from all sources except for the excluded source. Default 'false'",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "gateway_interfaces": {
              "Type": "Set",
              "Optional": true,
              "Description": "'vse', 'internal', 'external' or network name",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "ip_addresses": {
              "Type": "Set",
              "Optional": true,
              "Description": "IP address, CIDR, an IP range, or the keyword 'any'",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "ip_sets": {
              "Type": "Set",
              "Optional": true,
              "Description": "Set of IP set names",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "org_networks": {
              "Type": "Set",
              "Optional": true,
              "Description": "Set of org network names",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "vm_ids": {
              "Type": "Set",
              "Optional": true,
              "Description": "Set of VM IDs",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxv_ip_set": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "IP set description"
      },
      "ip_addresses": {
        "Type": "Set",
        "Required": true,
        "Description": "A set of IP address, CIDR, IP range objects",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "is_inheritance_allowed": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Allows visibility in underlying scopes (Default is true)",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "IP set name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxv_snat": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "NAT rule description"
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which NAT Rule is located"
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether the rule should be enabled. Default 'true'",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "logging_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether logging should be enabled for this rule. Default 'false'",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "network_name": {
        "Type": "String",
        "Required": true,
        "Description": "Org or external network name"
      },
      "network_type": {
        "Type": "String",
        "Required": true,
        "Description": "Network type. One of 'ext', 'org'"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "original_address": {
        "Type": "String",
        "Required": true,
        "Description": "Original address or address range. This is the the source address for SNAT rules"
      },
      "rule_tag": {
        "Type": "Int",
        "Optional": true,
        "Description": "Optional. Allows to set custom rule tag",
        "Computed": true
      },
      "rule_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Read only. Possible values 'user', 'internal_high'",
        "Computed": true
      },
      "translated_address": {
        "Type": "String",
        "Optional": true,
        "Description": "Translated address or address range"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_org": {
      "can_publish_catalogs": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if this organization is allowed to share catalogs.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "delay_after_power_on_seconds": {
        "Type": "Int",
        "Optional": true,
        "Description": "Specifies this organization's default for virtual machine boot delay after power on."
      },
      "delete_force": {
        "Type": "Bool",
        "Required": true,
        "Description": "When destroying use delete_force=True with delete_recursive=True to remove an org and any objects it contains, regardless of their state."
      },
      "delete_recursive": {
        "Type": "Bool",
        "Required": true,
        "Description": "When destroying use delete_recursive=True to remove the org and any objects it contains that are in a state that normally allows removal."
      },
      "deployed_vm_quota": {
        "Type": "Int",
        "Optional": true,
        "Description": "Maximum number of virtual machines that can be deployed simultaneously by a member of this organization. (0 = unlimited)",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true
      },
      "full_name": {
        "Type": "String",
        "Required": true
      },
      "is_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if this organization is enabled (allows login and all other operations).",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "stored_vm_quota": {
        "Type": "Int",
        "Optional": true,
        "Description": "Maximum number of virtual machines in vApps or vApp templates that can be stored in an undeployed state by a member of this organization. (0 = unlimited)",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "vapp_lease": {
        "Type": "List",
        "Optional": true,
        "Description": "Defines lease parameters for vApps created in this organization",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "delete_on_storage_lease_expiration": {
              "Type": "Bool",
              "Required": true,
              "Description": "If true, storage for a vApp is deleted when the vApp's lease expires. If false, the storage is flagged for deletion, but not deleted."
            },
            "maximum_runtime_lease_in_sec": {
              "Type": "Int",
              "Required": true,
              "Description": "How long vApps can run before they are automatically stopped (in seconds). 0 means never expires"
            },
            "maximum_storage_lease_in_sec": {
              "Type": "Int",
              "Required": true,
              "Description": "How long stopped vApps are available before being automatically cleaned up (in seconds). 0 means never expires"
            },
            "power_off_on_runtime_lease_expiration": {
              "Type": "Bool",
              "Required": true,
              "Description": "When true, vApps are powered off when the runtime lease expires. When false, vApps are suspended when the runtime lease expires"
            }
          }
        }
      },
      "vapp_template_lease": {
        "Type": "List",
        "Optional": true,
        "Description": "Defines lease parameters for vApp templates created in this organization",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "delete_on_storage_lease_expiration": {
              "Type": "Bool",
              "Required": true,
              "Description": "If true, storage for a vAppTemplate is deleted when the vAppTemplate lease expires. If false, the storage is flagged for deletion, but not deleted"
            },
            "maximum_storage_lease_in_sec": {
              "Type": "Int",
              "Required": true,
              "Description": "How long vApp templates are available before being automatically cleaned up (in seconds). 0 means never expires"
            }
          }
        }
      }
    },
    "vcd_org_group": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Description"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Group name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "provider_type": {
        "Type": "String",
        "Required": true,
        "Description": "Identity provider type - 'SAML' or 'INTEGRATED' for LDAP"
      },
      "role": {
        "Type": "String",
        "Required": true,
        "Description": "Existing role name to assign"
      }
    },
    "vcd_org_user": {
      "deployed_vm_quota": {
        "Type": "Int",
        "Optional": true,
        "Description": "Quota of vApps that this user can deploy. A value of 0 specifies an unlimited quota.",
        "Default": {
          "Type": "int",
          "Value": "10"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The user's description"
      },
      "email_address": {
        "Type": "String",
        "Optional": true,
        "Description": "The user's email address"
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if the user is enabled and can log in.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "full_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The user's full name"
      },
      "instant_messaging": {
        "Type": "String",
        "Optional": true,
        "Description": "The user's telephone"
      },
      "is_group_role": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if this user has a group role.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "is_locked": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If the user account has been locked due to too many invalid login attempts, the value will change to true (only the system can lock the user). To unlock the user re-set this flag to false."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "User's name. Only lowercase letters allowed. Cannot be changed after creation"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "The user's password. This value is never returned on read. Either \"password\" or \"password_file\" must be included on creation.",
        "ConflictsWith": [
          "password_file"
        ]
      },
      "password_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of a file containing the user's password. Either \"password_file\" or \"password\" must be included on creation.",
        "ConflictsWith": [
          "password"
        ]
      },
      "provider_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Identity provider type for this this user. One of: 'INTEGRATED', 'SAML', 'OAUTH'. When empty, the default value 'INTEGRATED' is used.",
        "Default": {
          "Type": "string",
          "Value": "INTEGRATED"
        }
      },
      "role": {
        "Type": "String",
        "Required": true,
        "Description": "Role within the organization"
      },
      "stored_vm_quota": {
        "Type": "Int",
        "Optional": true,
        "Description": "Quota of vApps that this user can store. A value of 0 specifies an unlimited quota.",
        "Default": {
          "Type": "int",
          "Value": "10"
        }
      },
      "take_ownership": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Take ownership of user's objects on deletion.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "telephone": {
        "Type": "String",
        "Optional": true,
        "Description": "The user's telephone"
      }
    },
    "vcd_org_vdc": {
      "allocation_model": {
        "Type": "String",
        "Required": true,
        "Description": "The allocation model used by this VDC; must be one of {AllocationVApp, AllocationPool, ReservationPool, Flex}"
      },
      "allow_over_commit": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Set to false to disallow creation of the VDC if the AllocationModel is AllocationPool or ReservationPool and the ComputeCapacity you specified is greater than what the backing Provider VDC can supply. Default is true.",
        "Computed": true
      },
      "compute_capacity": {
        "Type": "List",
        "Required": true,
        "Description": "The compute capacity allocated to this VDC.",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cpu": {
              "Type": "List",
              "Required": true,
              "MaxItems": 1,
              "MinItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allocated": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Capacity that is committed to be available. Value in MB or MHz. Used with AllocationPool (Allocation pool) and ReservationPool (Reservation pool).",
                    "Computed": true
                  },
                  "limit": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Capacity limit relative to the value specified for Allocation. It must not be less than that value. If it is greater than that value, it implies over provisioning. A value of 0 specifies unlimited units. Value in MB or MHz. Used with AllocationVApp (Pay as you go).",
                    "Computed": true
                  },
                  "reserved": {
                    "Type": "Int",
                    "Computed": true
                  },
                  "used": {
                    "Type": "Int",
                    "Computed": true
                  }
                }
              }
            },
            "memory": {
              "Type": "List",
              "Required": true,
              "MaxItems": 1,
              "MinItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allocated": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Capacity that is committed to be available. Value in MB or MHz. Used with AllocationPool (Allocation pool) and ReservationPool (Reservation pool).",
                    "Computed": true
                  },
                  "limit": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Capacity limit relative to the value specified for Allocation. It must not be less than that value. If it is greater than that value, it implies over provisioning. A value of 0 specifies unlimited units. Value in MB or MHz. Used with AllocationVApp (Pay as you go).",
                    "Computed": true
                  },
                  "reserved": {
                    "Type": "Int",
                    "Computed": true
                  },
                  "used": {
                    "Type": "Int",
                    "Computed": true
                  }
                }
              }
            }
          }
        }
      },
      "cpu_guaranteed": {
        "Type": "Float",
        "Optional": true,
        "Description": "Percentage of allocated CPU resources guaranteed to vApps deployed in this VDC. For example, if this value is 0.75, then 75% of allocated resources are guaranteed. Required when AllocationModel is AllocationVApp or AllocationPool. If the element is empty, vCD sets a value",
        "Computed": true
      },
      "cpu_speed": {
        "Type": "Int",
        "Optional": true,
        "Description": "Specifies the clock frequency, in Megahertz, for any virtual CPU that is allocated to a VM. A VM with 2 vCPUs will consume twice as much of this value. Ignored for ReservationPool. Required when AllocationModel is AllocationVApp or AllocationPool, and may not be less than 256 MHz. Defaults to 1000 MHz if the element is empty or missing.",
        "Computed": true
      },
      "default_vm_sizing_policy_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of default VM sizing policy ID",
        "Computed": true
      },
      "delete_force": {
        "Type": "Bool",
        "Required": true,
        "Description": "When destroying use delete_force=True to remove a VDC and any objects it contains, regardless of their state."
      },
      "delete_recursive": {
        "Type": "Bool",
        "Required": true,
        "Description": "When destroying use delete_recursive=True to remove the VDC and any objects it contains that are in a state that normally allows removal."
      },
      "description": {
        "Type": "String",
        "Optional": true
      },
      "elasticity": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Set to true to indicate if the Flex VDC is to be elastic.",
        "Computed": true
      },
      "enable_fast_provisioning": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Request for fast provisioning. Request will be honored only if the underlying datas tore supports it. Fast provisioning can reduce the time it takes to create virtual machines by using vSphere linked clones. If you disable fast provisioning, all provisioning operations will result in full clones."
      },
      "enable_thin_provisioning": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean to request thin provisioning. Request will be honored only if the underlying datastore supports it. Thin provisioning saves storage space by committing it on demand. This allows over-allocation of storage."
      },
      "enable_vm_discovery": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if discovery of vCenter VMs is enabled for resource pools backing this VDC. If left unspecified, the actual behaviour depends on enablement at the organization level and at the system level."
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if this VDC is enabled for use by the organization VDCs. Default is true.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "include_vm_memory_overhead": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Set to true to indicate if the Flex VDC is to include memory overhead into its accounting for admission control.",
        "Computed": true
      },
      "memory_guaranteed": {
        "Type": "Float",
        "Optional": true,
        "Description": "Percentage of allocated memory resources guaranteed to vApps deployed in this VDC. For example, if this value is 0.75, then 75% of allocated resources are guaranteed. Required when AllocationModel is AllocationVApp or AllocationPool. When Allocation model is AllocationPool minimum value is 0.2. If the element is empty, vCD sets a value.",
        "Computed": true
      },
      "metadata": {
        "Type": "Map",
        "Optional": true,
        "Description": "Key and value pairs for Org VDC metadata"
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "network_pool_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of a network pool in the Provider VDC. Required if this VDC will contain routed or isolated networks."
      },
      "network_quota": {
        "Type": "Int",
        "Optional": true,
        "Description": "Maximum number of network objects that can be deployed in this VDC. Defaults to 0, which means no networks can be deployed."
      },
      "nic_quota": {
        "Type": "Int",
        "Optional": true,
        "Description": "Maximum number of virtual NICs allowed in this VDC. Defaults to 0, which specifies an unlimited number."
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "provider_vdc_name": {
        "Type": "String",
        "Required": true,
        "Description": "A reference to the Provider VDC from which this organization VDC is provisioned."
      },
      "storage_profile": {
        "Type": "Set",
        "Required": true,
        "Description": "Storage profiles supported by this VDC.",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "default": {
              "Type": "Bool",
              "Required": true,
              "Description": "True if this is default storage profile for this VDC. The default storage profile is used when an object that can specify a storage profile is created with no storage profile specified."
            },
            "enabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "True if this storage profile is enabled for use in the VDC.",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "limit": {
              "Type": "Int",
              "Required": true,
              "Description": "Maximum number of MB allocated for this storage profile. A value of 0 specifies unlimited MB."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of Provider VDC storage profile."
            },
            "storage_used_in_mb": {
              "Type": "Int",
              "Description": "Storage used in MB",
              "Computed": true
            }
          }
        }
      },
      "vm_quota": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximum number of VMs that can be created in this VDC. Includes deployed and undeployed VMs in vApps and vApp templates. Defaults to 0, which specifies an unlimited number."
      },
      "vm_sizing_policy_ids": {
        "Type": "Set",
        "Optional": true,
        "Description": "Set of VM sizing policy IDs",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "vcd_rights_bundle": {
      "bundle_key": {
        "Type": "String",
        "Description": "Key used for internationalization",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Required": true,
        "Description": "Rights bundle description"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of rights bundle."
      },
      "publish_to_all_tenants": {
        "Type": "Bool",
        "Required": true,
        "Description": "When true, publishes the rights bundle to all tenants"
      },
      "read_only": {
        "Type": "Bool",
        "Description": "Whether this rights bundle is read-only",
        "Computed": true
      },
      "rights": {
        "Type": "Set",
        "Optional": true,
        "Description": "list of rights assigned to this rights bundle",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tenants": {
        "Type": "Set",
        "Optional": true,
        "Description": "list of tenants to which this rights bundle is published",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "vcd_role": {
      "bundle_key": {
        "Type": "String",
        "Description": "Key used for internationalization",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Required": true,
        "Description": "Role description"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of Role."
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "read_only": {
        "Type": "Bool",
        "Description": "Whether this role is read-only",
        "Computed": true
      },
      "rights": {
        "Type": "Set",
        "Optional": true,
        "Description": "list of rights assigned to this role",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "vcd_vapp": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Optional description of the vApp"
      },
      "guest_properties": {
        "Type": "Map",
        "Optional": true,
        "Description": "Key/value settings for guest properties. Will be picked up by new VMs when created."
      },
      "href": {
        "Type": "String",
        "Description": "vApp Hyper Reference",
        "Computed": true
      },
      "lease": {
        "Type": "List",
        "Optional": true,
        "Description": "Defines lease parameters for this vApp",
        "Computed": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "runtime_lease_in_sec": {
              "Type": "Int",
              "Required": true,
              "Description": "How long any of the VMs in the vApp can run before the vApp is automatically powered off or suspended. 0 means never expires"
            },
            "storage_lease_in_sec": {
              "Type": "Int",
              "Required": true,
              "Description": "How long the vApp is available before being automatically deleted or marked as expired. 0 means never expires"
            }
          }
        }
      },
      "metadata": {
        "Type": "Map",
        "Optional": true,
        "Description": "Key value map of metadata to assign to this vApp. Key and value can be any string."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "A name for the vApp, unique withing the VDC"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "power_on": {
        "Type": "Bool",
        "Optional": true,
        "Description": "A boolean value stating if this vApp should be powered on",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "status": {
        "Type": "Int",
        "Description": "Shows the status code of the vApp",
        "Computed": true
      },
      "status_text": {
        "Type": "String",
        "Description": "Shows the status of the vApp",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_vapp_access_control": {
      "everyone_access_level": {
        "Type": "String",
        "Optional": true,
        "Description": "Access level when the vApp is shared with everyone (one of ReadOnly, Change, FullControl). Required when shared_with_everyone is set"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "shared_with": {
        "Type": "Set",
        "Optional": true,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_level": {
              "Type": "String",
              "Required": true,
              "Description": "The access level for the user or group to which we are sharing. (One of ReadOnly, Change, FullControl)"
            },
            "group_id": {
              "Type": "String",
              "Optional": true,
              "Description": "ID of the group to which we are sharing. Required if user_id is not set"
            },
            "subject_name": {
              "Type": "String",
              "Description": "Name of the subject (group or user) with which we are sharing",
              "Computed": true
            },
            "user_id": {
              "Type": "String",
              "Optional": true,
              "Description": "ID of the user to which we are sharing. Required if group_id is not set"
            }
          }
        }
      },
      "shared_with_everyone": {
        "Type": "Bool",
        "Required": true,
        "Description": "Whether the vApp is shared with everyone"
      },
      "vapp_id": {
        "Type": "String",
        "Required": true,
        "Description": "vApp identifier"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_vapp_firewall_rules": {
      "default_action": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies what to do should none of the rules match. Either `allow` or `drop`"
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable or disable firewall service. Default is `true`",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "log_default_action": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Flag to enable logging for default action. Default value is false.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "network_id": {
        "Type": "String",
        "Required": true,
        "Description": "vApp network identifier"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "rule": {
        "Type": "List",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "destination_ip": {
              "Type": "String",
              "Optional": true,
              "Description": "Destination IP address to which the rule applies. A value of `Any` matches any IP address."
            },
            "destination_port": {
              "Type": "String",
              "Optional": true,
              "Description": "Destination port to which this rule applies."
            },
            "destination_vm_id": {
              "Type": "String",
              "Optional": true,
              "Description": "Destination VM identifier"
            },
            "destination_vm_ip_type": {
              "Type": "String",
              "Optional": true,
              "Description": "The value can be one of: `assigned` - assigned internal IP will be automatically chosen. `NAT`: NATed external IP will be automatically chosen."
            },
            "destination_vm_nic_id": {
              "Type": "Int",
              "Optional": true,
              "Description": "Destination VM NIC ID to which this rule applies."
            },
            "enable_logging": {
              "Type": "Bool",
              "Optional": true,
              "Description": "'true' value will enable rule logging. Default is false",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "enabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "'true' value will enable firewall rule",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Rule name"
            },
            "policy": {
              "Type": "String",
              "Optional": true,
              "Description": "One of: `drop` (drop packets that match the rule), `allow` (allow packets that match the rule to pass through the firewall)"
            },
            "protocol": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify the protocols to which the rule should be applied. One of: `any`, `icmp`, `tcp`, `udp`, `tcp\u0026udp`",
              "Default": {
                "Type": "string",
                "Value": "any"
              }
            },
            "source_ip": {
              "Type": "String",
              "Optional": true,
              "Description": "Source IP address to which the rule applies. A value of `Any` matches any IP address."
            },
            "source_port": {
              "Type": "String",
              "Optional": true,
              "Description": "Source port to which this rule applies."
            },
            "source_vm_id": {
              "Type": "String",
              "Optional": true,
              "Description": "Source VM identifier"
            },
            "source_vm_ip_type": {
              "Type": "String",
              "Optional": true,
              "Description": "The value can be one of: `assigned` - assigned internal IP will be automatically chosen. `NAT`: NATed external IP will be automatically chosen."
            },
            "source_vm_nic_id": {
              "Type": "Int",
              "Optional": true,
              "Description": "Source VM NIC ID to which this rule applies."
            }
          }
        }
      },
      "vapp_id": {
        "Type": "String",
        "Required": true,
        "Description": "vApp identifier"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_vapp_nat_rules": {
      "enable_ip_masquerade": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When enabled translates a virtual machine's private, internal IP address to a public IP address for outbound traffic.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable or disable NAT service. Default is `true`.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "nat_type": {
        "Type": "String",
        "Required": true,
        "Description": "One of: `ipTranslation` (use IP translation), `portForwarding` (use port forwarding)."
      },
      "network_id": {
        "Type": "String",
        "Required": true,
        "Description": "vApp network identifier"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "rule": {
        "Type": "List",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "external_ip": {
              "Type": "String",
              "Optional": true,
              "Description": "External IP address to forward to or External IP address to map to VM",
              "Computed": true
            },
            "external_port": {
              "Type": "Int",
              "Optional": true,
              "Description": "External port to forward."
            },
            "forward_to_port": {
              "Type": "Int",
              "Optional": true,
              "Description": "Internal port to forward."
            },
            "id": {
              "Type": "String",
              "Description": "ID of the rule. Can be used to track syslog messages.",
              "Computed": true
            },
            "mapping_mode": {
              "Type": "String",
              "Optional": true,
              "Description": "Mapping mode. One of: `automatic`, `manual`"
            },
            "protocol": {
              "Type": "String",
              "Optional": true,
              "Description": "Protocol to forward. One of: `TCP` (forward TCP packets), `UDP` (forward UDP packets), `TCP_UDP` (forward TCP and UDP packets)."
            },
            "vm_id": {
              "Type": "String",
              "Required": true,
              "Description": "VM to which this rule applies."
            },
            "vm_nic_id": {
              "Type": "Int",
              "Required": true,
              "Description": "VM NIC ID to which this rule applies."
            }
          }
        }
      },
      "vapp_id": {
        "Type": "String",
        "Required": true,
        "Description": "vApp identifier"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_vapp_network": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Optional description for the network"
      },
      "dhcp_pool": {
        "Type": "Set",
        "Optional": true,
        "Description": "A range of IPs to issue to virtual machines that don't have a static IP",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "default_lease_time": {
              "Type": "Int",
              "Optional": true,
              "Default": {
                "Type": "int",
                "Value": "3600"
              }
            },
            "enabled": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "end_address": {
              "Type": "String",
              "Optional": true
            },
            "max_lease_time": {
              "Type": "Int",
              "Optional": true,
              "Default": {
                "Type": "int",
                "Value": "7200"
              }
            },
            "start_address": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "dns1": {
        "Type": "String",
        "Optional": true,
        "Description": "Primary DNS server"
      },
      "dns2": {
        "Type": "String",
        "Optional": true,
        "Description": "Secondary DNS server"
      },
      "dns_suffix": {
        "Type": "String",
        "Optional": true,
        "Description": "DNS suffix"
      },
      "gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Gateway of the network"
      },
      "guest_vlan_allowed": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if Network allows guest VLAN tagging"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "vApp network name"
      },
      "netmask": {
        "Type": "String",
        "Optional": true,
        "Description": "Netmask address for a subnet. Default is 255.255.255.0",
        "Default": {
          "Type": "string",
          "Value": "255.255.255.0"
        }
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "org_network_name": {
        "Type": "String",
        "Optional": true,
        "Description": "org network name to which vapp network is connected"
      },
      "retain_ip_mac_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Specifies whether the network resources such as IP/MAC of router will be retained across deployments. Default is false.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "static_ip_pool": {
        "Type": "Set",
        "Optional": true,
        "Description": "A range of IPs permitted to be used as static IPs for virtual machines",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "end_address": {
              "Type": "String",
              "Required": true
            },
            "start_address": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "vapp_name": {
        "Type": "String",
        "Required": true,
        "Description": "vApp to use"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_vapp_org_network": {
      "is_fenced": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Fencing allows identical virtual machines in different vApp networks connect to organization VDC networks that are accessed in this vApp",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "org_network_name": {
        "Type": "String",
        "Required": true,
        "Description": "Organization network name to which vApp network is connected to"
      },
      "retain_ip_mac_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Specifies whether the network resources such as IP/MAC of router will be retained across deployments. Default is false.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "vapp_name": {
        "Type": "String",
        "Required": true,
        "Description": "vApp network name"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_vapp_static_routing": {
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable or disable static Routing. Default is `true`.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "network_id": {
        "Type": "String",
        "Required": true,
        "Description": "vApp network identifier"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "rule": {
        "Type": "List",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Name for the static route."
            },
            "network_cidr": {
              "Type": "String",
              "Required": true,
              "Description": "network specification in CIDR."
            },
            "next_hop_ip": {
              "Type": "String",
              "Required": true,
              "Description": "IP Address of Next Hop router/gateway."
            }
          }
        }
      },
      "vapp_id": {
        "Type": "String",
        "Required": true,
        "Description": "vApp identifier"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_vapp_vm": {
      "accept_all_eulas": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Automatically accept EULA if OVA has it",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "boot_image": {
        "Type": "String",
        "Optional": true,
        "Description": "Media name to add as boot image."
      },
      "catalog_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The catalog name in which to find the given vApp Template or media for boot_image"
      },
      "computer_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Computer name to assign to this virtual machine",
        "Computed": true
      },
      "cpu_cores": {
        "Type": "Int",
        "Optional": true,
        "Description": "The number of cores per socket",
        "Computed": true
      },
      "cpu_hot_add_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if the virtual machine supports addition of virtual CPUs while powered on.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "cpus": {
        "Type": "Int",
        "Optional": true,
        "Description": "The number of virtual CPUs to allocate to the VM",
        "Computed": true
      },
      "customization": {
        "Type": "List",
        "Optional": true,
        "Description": "Guest customization block",
        "Computed": true,
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "admin_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Manually specify admin password",
              "Computed": true
            },
            "allow_local_admin_password": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Allow local administrator password",
              "Computed": true
            },
            "auto_generate_password": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Auto generate password",
              "Computed": true
            },
            "change_sid": {
              "Type": "Bool",
              "Optional": true,
              "Description": "'true' value will change SID. Applicable only for Windows VMs",
              "Computed": true
            },
            "enabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "'true' value will enable guest customization. It may occur on first boot or when 'force' is used",
              "Computed": true
            },
            "force": {
              "Type": "Bool",
              "Optional": true,
              "Description": "'true' value will cause the VM to reboot on every 'apply' operation",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "initscript": {
              "Type": "String",
              "Optional": true,
              "Description": "Script to run on initial boot or with customization.force=true set",
              "Computed": true
            },
            "join_domain": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Enable this VM to join a domain",
              "Computed": true
            },
            "join_domain_account_ou": {
              "Type": "String",
              "Optional": true,
              "Description": "Account organizational unit for domain name join",
              "Computed": true
            },
            "join_domain_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain name for join",
              "Computed": true
            },
            "join_domain_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for custom domain name join",
              "Computed": true
            },
            "join_domain_user": {
              "Type": "String",
              "Optional": true,
              "Description": "Username for custom domain name join",
              "Computed": true
            },
            "join_org_domain": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Use organization's domain for joining",
              "Computed": true
            },
            "must_change_password_on_first_login": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Require Administrator to change password on first login",
              "Computed": true
            },
            "number_of_auto_logons": {
              "Type": "Int",
              "Optional": true,
              "Description": "Number of times to log on automatically. '0' - disabled.",
              "Computed": true
            }
          }
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The VM description",
        "Computed": true
      },
      "disk": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bus_number": {
              "Type": "String",
              "Required": true,
              "Description": "Bus number on which to place the disk controller"
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Independent disk name"
            },
            "size_in_mb": {
              "Type": "Int",
              "Description": "The size of the disk in MB.",
              "Computed": true
            },
            "unit_number": {
              "Type": "String",
              "Required": true,
              "Description": "Unit number (slot) on the bus specified by BusNumber"
            }
          }
        }
      },
      "expose_hardware_virtualization": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Expose hardware-assisted CPU virtualization to guest OS.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "guest_properties": {
        "Type": "Map",
        "Optional": true,
        "Description": "Key/value settings for guest properties"
      },
      "hardware_version": {
        "Type": "String",
        "Optional": true,
        "Description": "Virtual Hardware Version (e.g.`vmx-14`, `vmx-13`, `vmx-12`, etc.)",
        "Computed": true
      },
      "href": {
        "Type": "String",
        "Optional": true,
        "Description": "VM Hyper Reference",
        "Computed": true
      },
      "internal_disk": {
        "Type": "List",
        "Description": "A block will show internal disk details",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bus_number": {
              "Type": "Int",
              "Description": "The number of the SCSI or IDE controller itself.",
              "Computed": true
            },
            "bus_type": {
              "Type": "String",
              "Description": "The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme",
              "Computed": true
            },
            "disk_id": {
              "Type": "String",
              "Description": "The disk ID.",
              "Computed": true
            },
            "iops": {
              "Type": "Int",
              "Description": "Specifies the IOPS for the disk. Default is 0.",
              "Computed": true
            },
            "size_in_mb": {
              "Type": "Int",
              "Description": "The size of the disk in MB.",
              "Computed": true
            },
            "storage_profile": {
              "Type": "String",
              "Description": "Storage profile to override the VM default one",
              "Computed": true
            },
            "thin_provisioned": {
              "Type": "Bool",
              "Description": "Specifies whether the disk storage is pre-allocated or allocated on demand.",
              "Computed": true
            },
            "unit_number": {
              "Type": "Int",
              "Description": "The device number on the SCSI or IDE controller of the disk.",
              "Computed": true
            }
          }
        }
      },
      "memory": {
        "Type": "Int",
        "Optional": true,
        "Description": "The amount of RAM (in MB) to allocate to the VM",
        "Computed": true
      },
      "memory_hot_add_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if the virtual machine supports addition of memory while powered on.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "metadata": {
        "Type": "Map",
        "Optional": true,
        "Description": "Key value map of metadata to assign to this VM"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "A name for the VM, unique within the vApp"
      },
      "network": {
        "Type": "List",
        "Optional": true,
        "Description": " A block to define network interface. Multiple can be used.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "adapter_type": {
              "Type": "String",
              "Optional": true,
              "Description": "Network card adapter type. (e.g. 'E1000', 'E1000E', 'SRIOVETHERNETCARD', 'VMXNET3', 'PCNet32')",
              "Computed": true
            },
            "connected": {
              "Type": "Bool",
              "Optional": true,
              "Description": "It defines if NIC is connected or not.",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "ip": {
              "Type": "String",
              "Optional": true,
              "Description": "IP of the VM. Settings depend on `ip_allocation_mode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL",
              "Computed": true
            },
            "ip_allocation_mode": {
              "Type": "String",
              "Optional": true,
              "Description": "IP address allocation mode. One of POOL, DHCP, MANUAL, NONE"
            },
            "is_primary": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Set to true if network interface should be primary. First network card in the list will be primary by default",
              "Computed": true
            },
            "mac": {
              "Type": "String",
              "Optional": true,
              "Description": "Mac address of network interface",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the network this VM should connect to. Always required except for `type` `NONE`"
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "Network type to use: 'vapp', 'org' or 'none'. Use 'vapp' for vApp network, 'org' to attach Org VDC network. 'none' for empty NIC."
            }
          }
        }
      },
      "network_dhcp_wait_seconds": {
        "Type": "Int",
        "Optional": true,
        "Description": "Optional number of seconds to try and wait for DHCP IP (valid for 'network' block only)"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "os_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Operating System type. Possible values can be found in documentation.",
        "Computed": true
      },
      "override_template_disk": {
        "Type": "Set",
        "Optional": true,
        "Description": "A block to match internal_disk interface in template. Multiple can be used. Disk will be matched by bus_type, bus_number and unit_number.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bus_number": {
              "Type": "Int",
              "Required": true,
              "Description": "The number of the SCSI or IDE controller itself."
            },
            "bus_type": {
              "Type": "String",
              "Required": true,
              "Description": "The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme"
            },
            "iops": {
              "Type": "Int",
              "Optional": true,
              "Description": "Specifies the IOPS for the disk. Default is 0."
            },
            "size_in_mb": {
              "Type": "Int",
              "Required": true,
              "Description": "The size of the disk in MB."
            },
            "storage_profile": {
              "Type": "String",
              "Optional": true,
              "Description": "Storage profile to override the VM default one"
            },
            "unit_number": {
              "Type": "Int",
              "Required": true,
              "Description": "The device number on the SCSI or IDE controller of the disk."
            }
          }
        }
      },
      "power_on": {
        "Type": "Bool",
        "Optional": true,
        "Description": "A boolean value stating if this VM should be powered on",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "prevent_update_power_off": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if the update of resource should fail when virtual machine power off needed.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "sizing_policy_id": {
        "Type": "String",
        "Optional": true,
        "Description": "VM sizing policy ID. Has to be assigned to Org VDC.",
        "Computed": true
      },
      "storage_profile": {
        "Type": "String",
        "Optional": true,
        "Description": "Storage profile to override the default one",
        "Computed": true
      },
      "template_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the vApp Template to use"
      },
      "vapp_name": {
        "Type": "String",
        "Required": true,
        "Description": "The vApp this VM belongs to - Required, unless it is a standalone VM"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      },
      "vm_name_in_template": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the VM in vApp Template to use. In cases when vApp template has more than one VM"
      },
      "vm_type": {
        "Type": "String",
        "Description": "Type of VM: either 'vcd_vapp_vm' or 'vcd_vm'",
        "Computed": true
      }
    },
    "vcd_vdc_group": {
      "default_policy_status": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Default Policy Status",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "VDC group description"
      },
      "dfw_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Distributed firewall status",
        "Computed": true
      },
      "error_message": {
        "Type": "String",
        "Description": "More detailed error message when VDC group has error status",
        "Computed": true
      },
      "local_egress": {
        "Type": "Bool",
        "Description": "Status whether local egress is enabled for a universal router belonging to a universal VDC group",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of VDC group"
      },
      "network_pool_id": {
        "Type": "String",
        "Description": "ID of used network pool",
        "Computed": true
      },
      "network_pool_universal_id": {
        "Type": "String",
        "Description": "The network provider’s universal id that is backing the universal network pool",
        "Computed": true
      },
      "network_provider_type": {
        "Type": "String",
        "Description": "Defines the networking provider backing the VDC Group",
        "Computed": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "participating_org_vdcs": {
        "Type": "Set",
        "Description": "The list of organization VDCs that are participating in this group",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "fault_domain_tag": {
              "Type": "String",
              "Description": "Represents the fault domain of a given organization VDC",
              "Computed": true
            },
            "is_remote_org": {
              "Type": "Bool",
              "Description": "Specifies whether the VDC is local to this VCD site",
              "Computed": true
            },
            "network_provider_scope": {
              "Type": "String",
              "Description": "Specifies the network provider scope of the VDC",
              "Computed": true
            },
            "org_id": {
              "Type": "String",
              "Description": "Organization VDC belongs",
              "Computed": true
            },
            "org_name": {
              "Type": "String",
              "Description": "Organization VDC belongs",
              "Computed": true
            },
            "site_id": {
              "Type": "String",
              "Description": "Site VDC belongs",
              "Computed": true
            },
            "site_name": {
              "Type": "String",
              "Description": "Site VDC belongs",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "The status that the VDC can be in e.g. 'SAVING', 'SAVED', 'CONFIGURING', 'REALIZED', 'REALIZATION_FAILED', 'DELETING', 'DELETE_FAILED', 'OBJECT_NOT_FOUND', 'UNCONFIGURED')",
              "Computed": true
            },
            "vdc_id": {
              "Type": "String",
              "Description": "VDC ID",
              "Computed": true
            },
            "vdc_name": {
              "Type": "String",
              "Description": "VDC name",
              "Computed": true
            }
          }
        }
      },
      "participating_vdc_ids": {
        "Type": "Set",
        "Required": true,
        "Description": "Participating VDC IDs",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "starting_vdc_id": {
        "Type": "String",
        "Required": true,
        "Description": "Starting VDC ID"
      },
      "status": {
        "Type": "String",
        "Description": "The status that the group can be in (e.g. 'SAVING', 'SAVED', 'CONFIGURING', 'REALIZED', 'REALIZATION_FAILED', 'DELETING', 'DELETE_FAILED', 'OBJECT_NOT_FOUND', 'UNCONFIGURED')",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Description": "Defines the group as LOCAL or UNIVERSAL",
        "Computed": true
      },
      "universal_networking_enabled": {
        "Type": "Bool",
        "Description": "True means that a VDC group router has been created",
        "Computed": true
      }
    },
    "vcd_vm": {
      "accept_all_eulas": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Automatically accept EULA if OVA has it",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "boot_image": {
        "Type": "String",
        "Optional": true,
        "Description": "Media name to add as boot image."
      },
      "catalog_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The catalog name in which to find the given vApp Template or media for boot_image"
      },
      "computer_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Computer name to assign to this virtual machine",
        "Computed": true
      },
      "cpu_cores": {
        "Type": "Int",
        "Optional": true,
        "Description": "The number of cores per socket",
        "Computed": true
      },
      "cpu_hot_add_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if the virtual machine supports addition of virtual CPUs while powered on.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "cpus": {
        "Type": "Int",
        "Optional": true,
        "Description": "The number of virtual CPUs to allocate to the VM",
        "Computed": true
      },
      "customization": {
        "Type": "List",
        "Optional": true,
        "Description": "Guest customization block",
        "Computed": true,
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "admin_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Manually specify admin password",
              "Computed": true
            },
            "allow_local_admin_password": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Allow local administrator password",
              "Computed": true
            },
            "auto_generate_password": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Auto generate password",
              "Computed": true
            },
            "change_sid": {
              "Type": "Bool",
              "Optional": true,
              "Description": "'true' value will change SID. Applicable only for Windows VMs",
              "Computed": true
            },
            "enabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "'true' value will enable guest customization. It may occur on first boot or when 'force' is used",
              "Computed": true
            },
            "force": {
              "Type": "Bool",
              "Optional": true,
              "Description": "'true' value will cause the VM to reboot on every 'apply' operation",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "initscript": {
              "Type": "String",
              "Optional": true,
              "Description": "Script to run on initial boot or with customization.force=true set",
              "Computed": true
            },
            "join_domain": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Enable this VM to join a domain",
              "Computed": true
            },
            "join_domain_account_ou": {
              "Type": "String",
              "Optional": true,
              "Description": "Account organizational unit for domain name join",
              "Computed": true
            },
            "join_domain_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom domain name for join",
              "Computed": true
            },
            "join_domain_password": {
              "Type": "String",
              "Optional": true,
              "Description": "Password for custom domain name join",
              "Computed": true
            },
            "join_domain_user": {
              "Type": "String",
              "Optional": true,
              "Description": "Username for custom domain name join",
              "Computed": true
            },
            "join_org_domain": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Use organization's domain for joining",
              "Computed": true
            },
            "must_change_password_on_first_login": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Require Administrator to change password on first login",
              "Computed": true
            },
            "number_of_auto_logons": {
              "Type": "Int",
              "Optional": true,
              "Description": "Number of times to log on automatically. '0' - disabled.",
              "Computed": true
            }
          }
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The VM description",
        "Computed": true
      },
      "disk": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bus_number": {
              "Type": "String",
              "Required": true,
              "Description": "Bus number on which to place the disk controller"
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Independent disk name"
            },
            "size_in_mb": {
              "Type": "Int",
              "Description": "The size of the disk in MB.",
              "Computed": true
            },
            "unit_number": {
              "Type": "String",
              "Required": true,
              "Description": "Unit number (slot) on the bus specified by BusNumber"
            }
          }
        }
      },
      "expose_hardware_virtualization": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Expose hardware-assisted CPU virtualization to guest OS.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "guest_properties": {
        "Type": "Map",
        "Optional": true,
        "Description": "Key/value settings for guest properties"
      },
      "hardware_version": {
        "Type": "String",
        "Optional": true,
        "Description": "Virtual Hardware Version (e.g.`vmx-14`, `vmx-13`, `vmx-12`, etc.)",
        "Computed": true
      },
      "href": {
        "Type": "String",
        "Optional": true,
        "Description": "VM Hyper Reference",
        "Computed": true
      },
      "internal_disk": {
        "Type": "List",
        "Description": "A block will show internal disk details",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bus_number": {
              "Type": "Int",
              "Description": "The number of the SCSI or IDE controller itself.",
              "Computed": true
            },
            "bus_type": {
              "Type": "String",
              "Description": "The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme",
              "Computed": true
            },
            "disk_id": {
              "Type": "String",
              "Description": "The disk ID.",
              "Computed": true
            },
            "iops": {
              "Type": "Int",
              "Description": "Specifies the IOPS for the disk. Default is 0.",
              "Computed": true
            },
            "size_in_mb": {
              "Type": "Int",
              "Description": "The size of the disk in MB.",
              "Computed": true
            },
            "storage_profile": {
              "Type": "String",
              "Description": "Storage profile to override the VM default one",
              "Computed": true
            },
            "thin_provisioned": {
              "Type": "Bool",
              "Description": "Specifies whether the disk storage is pre-allocated or allocated on demand.",
              "Computed": true
            },
            "unit_number": {
              "Type": "Int",
              "Description": "The device number on the SCSI or IDE controller of the disk.",
              "Computed": true
            }
          }
        }
      },
      "memory": {
        "Type": "Int",
        "Optional": true,
        "Description": "The amount of RAM (in MB) to allocate to the VM",
        "Computed": true
      },
      "memory_hot_add_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if the virtual machine supports addition of memory while powered on.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "metadata": {
        "Type": "Map",
        "Optional": true,
        "Description": "Key value map of metadata to assign to this VM"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "A name for the VM, unique within the vApp"
      },
      "network": {
        "Type": "List",
        "Optional": true,
        "Description": " A block to define network interface. Multiple can be used.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "adapter_type": {
              "Type": "String",
              "Optional": true,
              "Description": "Network card adapter type. (e.g. 'E1000', 'E1000E', 'SRIOVETHERNETCARD', 'VMXNET3', 'PCNet32')",
              "Computed": true
            },
            "connected": {
              "Type": "Bool",
              "Optional": true,
              "Description": "It defines if NIC is connected or not.",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "ip": {
              "Type": "String",
              "Optional": true,
              "Description": "IP of the VM. Settings depend on `ip_allocation_mode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL",
              "Computed": true
            },
            "ip_allocation_mode": {
              "Type": "String",
              "Optional": true,
              "Description": "IP address allocation mode. One of POOL, DHCP, MANUAL, NONE"
            },
            "is_primary": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Set to true if network interface should be primary. First network card in the list will be primary by default",
              "Computed": true
            },
            "mac": {
              "Type": "String",
              "Optional": true,
              "Description": "Mac address of network interface",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the network this VM should connect to. Always required except for `type` `NONE`"
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "Network type to use: 'vapp', 'org' or 'none'. Use 'vapp' for vApp network, 'org' to attach Org VDC network. 'none' for empty NIC."
            }
          }
        }
      },
      "network_dhcp_wait_seconds": {
        "Type": "Int",
        "Optional": true,
        "Description": "Optional number of seconds to try and wait for DHCP IP (valid for 'network' block only)"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "os_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Operating System type. Possible values can be found in documentation.",
        "Computed": true
      },
      "override_template_disk": {
        "Type": "Set",
        "Optional": true,
        "Description": "A block to match internal_disk interface in template. Multiple can be used. Disk will be matched by bus_type, bus_number and unit_number.",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bus_number": {
              "Type": "Int",
              "Required": true,
              "Description": "The number of the SCSI or IDE controller itself."
            },
            "bus_type": {
              "Type": "String",
              "Required": true,
              "Description": "The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme"
            },
            "iops": {
              "Type": "Int",
              "Optional": true,
              "Description": "Specifies the IOPS for the disk. Default is 0."
            },
            "size_in_mb": {
              "Type": "Int",
              "Required": true,
              "Description": "The size of the disk in MB."
            },
            "storage_profile": {
              "Type": "String",
              "Optional": true,
              "Description": "Storage profile to override the VM default one"
            },
            "unit_number": {
              "Type": "Int",
              "Required": true,
              "Description": "The device number on the SCSI or IDE controller of the disk."
            }
          }
        }
      },
      "power_on": {
        "Type": "Bool",
        "Optional": true,
        "Description": "A boolean value stating if this VM should be powered on",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "prevent_update_power_off": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if the update of resource should fail when virtual machine power off needed.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "sizing_policy_id": {
        "Type": "String",
        "Optional": true,
        "Description": "VM sizing policy ID. Has to be assigned to Org VDC.",
        "Computed": true
      },
      "storage_profile": {
        "Type": "String",
        "Optional": true,
        "Description": "Storage profile to override the default one",
        "Computed": true
      },
      "template_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the vApp Template to use"
      },
      "vapp_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The vApp this VM belongs to - Required, unless it is a standalone VM",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      },
      "vm_name_in_template": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the VM in vApp Template to use. In cases when vApp template has more than one VM"
      },
      "vm_type": {
        "Type": "String",
        "Description": "Type of VM: either 'vcd_vapp_vm' or 'vcd_vm'",
        "Computed": true
      }
    },
    "vcd_vm_affinity_rule": {
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if this affinity rule is enabled",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "VM affinity rule name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "polarity": {
        "Type": "String",
        "Required": true,
        "Description": "One of 'Affinity', 'Anti-Affinity'"
      },
      "required": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if this affinity rule is required. When a rule is mandatory, a host failover will not power on the VM if doing so would violate the rule",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      },
      "vm_ids": {
        "Type": "Set",
        "Required": true,
        "Description": "Set of VM IDs assigned to this rule",
        "MinItems": 2,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "vcd_vm_internal_disk": {
      "allow_vm_reboot": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Powers off VM when changing any attribute of an IDE disk or unit/bus number of other disk types, after the change is complete VM is powered back on. Without this setting enabled, such changes on a powered-on VM would fail.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "bus_number": {
        "Type": "Int",
        "Required": true,
        "Description": "The number of the SCSI or IDE controller itself."
      },
      "bus_type": {
        "Type": "String",
        "Required": true,
        "Description": "The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme"
      },
      "iops": {
        "Type": "Int",
        "Optional": true,
        "Description": "Specifies the IOPS for the disk.",
        "Computed": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "size_in_mb": {
        "Type": "Int",
        "Required": true,
        "Description": "The size of the disk in MB."
      },
      "storage_profile": {
        "Type": "String",
        "Optional": true,
        "Description": "Storage profile to override the VM default one",
        "Computed": true
      },
      "thin_provisioned": {
        "Type": "Bool",
        "Description": "Specifies whether the disk storage is pre-allocated or allocated on demand.",
        "Computed": true
      },
      "unit_number": {
        "Type": "Int",
        "Required": true,
        "Description": "The device number on the SCSI or IDE controller of the disk."
      },
      "vapp_name": {
        "Type": "String",
        "Required": true,
        "Description": "The vApp this VM internal disk belongs to"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      },
      "vm_name": {
        "Type": "String",
        "Required": true,
        "Description": "VM in vApp in which internal disk is created"
      }
    },
    "vcd_vm_sizing_policy": {
      "cpu": {
        "Type": "List",
        "Optional": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cores_per_socket": {
              "Type": "String",
              "Optional": true,
              "Description": "The number of cores per socket for a VM. This is a VM hardware configuration. The number of vCPUs that is defined in the VM sizing policy must be divisible by the number of cores per socket. If the number of vCPUs is not divisible by the number of cores per socket, the number of cores per socket becomes invalid."
            },
            "count": {
              "Type": "String",
              "Optional": true,
              "Description": "Defines the number of vCPUs configured for a VM. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, this count becomes the configured number of vCPUs for the VM."
            },
            "limit_in_mhz": {
              "Type": "String",
              "Optional": true,
              "Description": "Defines the CPU limit in MHz for a VM. If not defined in the VDC compute policy, CPU limit is equal to the vCPU speed multiplied by the number of vCPUs."
            },
            "reservation_guarantee": {
              "Type": "String",
              "Optional": true,
              "Description": "Defines how much of the CPU resources of a VM are reserved. The allocated CPU for a VM equals the number of vCPUs times the vCPU speed in MHz. The value of the attribute ranges between 0 and one. Value of 0 CPU reservation guarantee defines no CPU reservation. Value of 1 defines 100% of CPU reserved."
            },
            "shares": {
              "Type": "String",
              "Optional": true,
              "Description": "Defines the number of CPU shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of CPU as another VM, it is entitled to consume twice as much CPU when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM."
            },
            "speed_in_mhz": {
              "Type": "String",
              "Optional": true,
              "Description": "Defines the vCPU speed of a core in MHz."
            }
          }
        }
      },
      "description": {
        "Type": "String",
        "Optional": true
      },
      "memory": {
        "Type": "List",
        "Optional": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "limit_in_mb": {
              "Type": "String",
              "Optional": true,
              "Description": "Defines the memory limit in MB for a VM. If not defined in the VM sizing policy, memory limit is equal to the allocated memory for the VM."
            },
            "reservation_guarantee": {
              "Type": "String",
              "Optional": true,
              "Description": "Defines the reserved amount of memory that is configured for a VM. The value of the attribute ranges between 0 and one. Value of 0 memory reservation guarantee defines no memory reservation. Value of 1 defines 100% of memory reserved."
            },
            "shares": {
              "Type": "String",
              "Optional": true,
              "Description": "Defines the number of memory shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of memory as another VM, it is entitled to consume twice as much memory when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM."
            },
            "size_in_mb": {
              "Type": "String",
              "Optional": true,
              "Description": "Defines the memory configured for a VM in MB. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, the VM receives the amount of memory defined by this attribute."
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      }
    }
  },
  "data-sources": {
    "vcd_catalog": {
      "created": {
        "Type": "String",
        "Description": "Time stamp of when the catalog was created",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "filter": {
        "Type": "List",
        "Optional": true,
        "Description": "Criteria for retrieving a catalog by various attributes",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "date": {
              "Type": "String",
              "Optional": true,
              "Description": "Search by date comparison ({\u003e|\u003e=|\u003c|\u003c=|==} yyyy-mm-dd[ hh[:mm[:ss]]])"
            },
            "earliest": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Retrieves the oldest item"
            },
            "latest": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Retrieves the newest item"
            },
            "metadata": {
              "Type": "List",
              "Optional": true,
              "Description": "metadata filter",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "is_system": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "True if is a metadata@SYSTEM key"
                  },
                  "key": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Metadata key (field name)"
                  },
                  "type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Type of metadata value (needed only if \"use_api_search\" is true)",
                    "Default": {
                      "Type": "string",
                      "Value": "STRING"
                    }
                  },
                  "use_api_search": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "If true, will search the vCD using native metadata query (without regular expressions)"
                  },
                  "value": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Metadata value (can be a regular expression if \"use_api_search\" is false)"
                  }
                }
              }
            },
            "name_regex": {
              "Type": "String",
              "Optional": true,
              "Description": "Search by name with a regular expression"
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the catalog. (Optional if 'filter' is used)"
      },
      "org": {
        "Type": "String",
        "Required": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "storage_profile_id": {
        "Type": "String",
        "Description": "Storage profile ID",
        "Computed": true
      }
    },
    "vcd_catalog_item": {
      "catalog": {
        "Type": "String",
        "Required": true,
        "Description": "catalog containing the item"
      },
      "created": {
        "Type": "String",
        "Description": "Time stamp of when the item was created",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Computed": true
      },
      "filter": {
        "Type": "List",
        "Optional": true,
        "Description": "Criteria for retrieving a catalog item by various attributes",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "date": {
              "Type": "String",
              "Optional": true,
              "Description": "Search by date comparison ({\u003e|\u003e=|\u003c|\u003c=|==} yyyy-mm-dd[ hh[:mm[:ss]]])"
            },
            "earliest": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Retrieves the oldest item"
            },
            "latest": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Retrieves the newest item"
            },
            "metadata": {
              "Type": "List",
              "Optional": true,
              "Description": "metadata filter",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "is_system": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "True if is a metadata@SYSTEM key"
                  },
                  "key": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Metadata key (field name)"
                  },
                  "type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Type of metadata value (needed only if \"use_api_search\" is true)",
                    "Default": {
                      "Type": "string",
                      "Value": "STRING"
                    }
                  },
                  "use_api_search": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "If true, will search the vCD using native metadata query (without regular expressions)"
                  },
                  "value": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Metadata value (can be a regular expression if \"use_api_search\" is false)"
                  }
                }
              }
            },
            "name_regex": {
              "Type": "String",
              "Optional": true,
              "Description": "Search by name with a regular expression"
            }
          }
        }
      },
      "metadata": {
        "Type": "Map",
        "Description": "Key and value pairs for catalog item metadata",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of the item. It is optional when a filter is provided"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      }
    },
    "vcd_catalog_media": {
      "catalog": {
        "Type": "String",
        "Required": true,
        "Description": "catalog name where upload the Media file"
      },
      "creation_date": {
        "Type": "String",
        "Description": "Creation date",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Computed": true
      },
      "filter": {
        "Type": "List",
        "Optional": true,
        "Description": "Criteria for retrieving a catalog media by various attributes",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "date": {
              "Type": "String",
              "Optional": true,
              "Description": "Search by date comparison ({\u003e|\u003e=|\u003c|\u003c=|==} yyyy-mm-dd[ hh[:mm[:ss]]])"
            },
            "earliest": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Retrieves the oldest item"
            },
            "latest": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Retrieves the newest item"
            },
            "metadata": {
              "Type": "List",
              "Optional": true,
              "Description": "metadata filter",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "is_system": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "True if is a metadata@SYSTEM key"
                  },
                  "key": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Metadata key (field name)"
                  },
                  "type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Type of metadata value (needed only if \"use_api_search\" is true)",
                    "Default": {
                      "Type": "string",
                      "Value": "STRING"
                    }
                  },
                  "use_api_search": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "If true, will search the vCD using native metadata query (without regular expressions)"
                  },
                  "value": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Metadata value (can be a regular expression if \"use_api_search\" is false)"
                  }
                }
              }
            },
            "name_regex": {
              "Type": "String",
              "Optional": true,
              "Description": "Search by name with a regular expression"
            }
          }
        }
      },
      "is_iso": {
        "Type": "Bool",
        "Description": "True if this media file is ISO",
        "Computed": true
      },
      "is_published": {
        "Type": "Bool",
        "Description": "True if this media file is in a published catalog",
        "Computed": true
      },
      "metadata": {
        "Type": "Map",
        "Description": "Key and value pairs for catalog item metadata",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "media name (Optional when 'filter' is used)"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "owner_name": {
        "Type": "String",
        "Description": "Owner name",
        "Computed": true
      },
      "size": {
        "Type": "Int",
        "Description": "Media storage in Bytes",
        "Computed": true
      },
      "status": {
        "Type": "String",
        "Description": "Media status",
        "Computed": true
      },
      "storage_profile_name": {
        "Type": "String",
        "Description": "Storage profile name",
        "Computed": true
      }
    },
    "vcd_edgegateway": {
      "configuration": {
        "Type": "String",
        "Description": "Configuration of the vShield edge VM for this gateway. One of: compact, full (\"Large\"), full4 (\"Quad Large\"), x-large",
        "Computed": true
      },
      "default_external_network_ip": {
        "Type": "String",
        "Description": "IP address of edge gateway interface which is used as default.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Computed": true
      },
      "distributed_routing": {
        "Type": "Bool",
        "Description": "Enable distributed routing",
        "Computed": true
      },
      "external_network": {
        "Type": "Set",
        "Description": "One or more blocks with external network information to be attached to this gateway's interface",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "enable_rate_limit": {
              "Type": "Bool",
              "Description": "Enable rate limiting",
              "Computed": true
            },
            "incoming_rate_limit": {
              "Type": "Float",
              "Description": "Incoming rate limit (Mbps)",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "External network name",
              "Computed": true
            },
            "outgoing_rate_limit": {
              "Type": "Float",
              "Description": "Outgoing rate limit (Mbps)",
              "Computed": true
            },
            "subnet": {
              "Type": "Set",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "gateway": {
                    "Type": "String",
                    "Description": "Gateway address for a subnet",
                    "Computed": true
                  },
                  "ip_address": {
                    "Type": "String",
                    "Description": "IP address on the edge gateway - will be auto-assigned if not defined",
                    "Computed": true
                  },
                  "netmask": {
                    "Type": "String",
                    "Description": "Netmask address for a subnet",
                    "Computed": true
                  },
                  "suballocate_pool": {
                    "Type": "Set",
                    "Description": "Define zero or more blocks to sub-allocate pools on the edge gateway",
                    "Computed": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "ComputedBlock",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "end_address": {
                          "Type": "String",
                          "Computed": true
                        },
                        "start_address": {
                          "Type": "String",
                          "Computed": true
                        }
                      }
                    }
                  },
                  "use_for_default_route": {
                    "Type": "Bool",
                    "Description": "Defines if this subnet should be used as default gateway for edge",
                    "Computed": true
                  }
                }
              }
            }
          }
        }
      },
      "external_network_ips": {
        "Type": "List",
        "Description": "List of IP addresses set on edge gateway external network interfaces",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "filter": {
        "Type": "List",
        "Optional": true,
        "Description": "Criteria for retrieving an edge gateway by various attributes",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name_regex": {
              "Type": "String",
              "Optional": true,
              "Description": "Search by name with a regular expression"
            }
          }
        }
      },
      "fips_mode_enabled": {
        "Type": "Bool",
        "Description": "Enable FIPS mode. FIPS mode turns on the cipher suites that comply with FIPS. (False by default)",
        "Computed": true
      },
      "fw_default_rule_action": {
        "Type": "String",
        "Description": "'accept' or 'deny'. Default 'deny'",
        "Computed": true
      },
      "fw_default_rule_logging_enabled": {
        "Type": "Bool",
        "Description": "Enable logging for default rule. Default 'false'",
        "Computed": true
      },
      "fw_enabled": {
        "Type": "Bool",
        "Description": "Enable firewall. Default 'true'",
        "Computed": true
      },
      "ha_enabled": {
        "Type": "Bool",
        "Description": "Enable high availability on this edge gateway",
        "Computed": true
      },
      "lb_acceleration_enabled": {
        "Type": "Bool",
        "Description": "Enable load balancer acceleration. (Disabled by default)",
        "Computed": true
      },
      "lb_enabled": {
        "Type": "Bool",
        "Description": "Enable load balancing. (Disabled by default)",
        "Computed": true
      },
      "lb_logging_enabled": {
        "Type": "Bool",
        "Description": "Enable load balancer logging. (Disabled by default)",
        "Computed": true
      },
      "lb_loglevel": {
        "Type": "String",
        "Description": "Log level. One of 'emergency', 'alert', 'critical', 'error', 'warning', 'notice', 'info', 'debug'. ('info' by default)",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "name of the edge gateway. (Optional when 'filter' is used)"
      },
      "org": {
        "Type": "String",
        "Optional": true
      },
      "use_default_route_for_dns_relay": {
        "Type": "Bool",
        "Description": "If true, default gateway will be used for the edge gateways' default routing and DNS forwarding.(False by default)",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true
      }
    },
    "vcd_external_network": {
      "description": {
        "Type": "String",
        "Computed": true
      },
      "ip_scope": {
        "Type": "List",
        "Description": "A list of IP scopes for the network",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dns1": {
              "Type": "String",
              "Description": "Primary DNS server",
              "Computed": true
            },
            "dns2": {
              "Type": "String",
              "Description": "Secondary DNS server",
              "Computed": true
            },
            "dns_suffix": {
              "Type": "String",
              "Description": "DNS suffix",
              "Computed": true
            },
            "gateway": {
              "Type": "String",
              "Description": "Gateway of the network",
              "Computed": true
            },
            "netmask": {
              "Type": "String",
              "Description": "Network mask",
              "Computed": true
            },
            "static_ip_pool": {
              "Type": "List",
              "Description": "IP ranges used for static pool allocation in the network",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "end_address": {
                    "Type": "String",
                    "Description": "End address of the IP range",
                    "Computed": true
                  },
                  "start_address": {
                    "Type": "String",
                    "Description": "Start address of the IP range",
                    "Computed": true
                  }
                }
              }
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "retain_net_info_across_deployments": {
        "Type": "Bool",
        "Description": "Specifies whether the network resources such as IP/MAC of router will be retained across deployments. Default is false.",
        "Computed": true
      },
      "vsphere_network": {
        "Type": "List",
        "Description": "A list of port groups that back this network. Each referenced DV_PORTGROUP or NETWORK must exist on a vCenter server registered with the system.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Description": "The name of the port group",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "The vSphere port group type. One of: DV_PORTGROUP (distributed virtual port group), NETWORK",
              "Computed": true
            },
            "vcenter": {
              "Type": "String",
              "Description": "The vCenter server name",
              "Computed": true
            }
          }
        }
      }
    },
    "vcd_external_network_v2": {
      "description": {
        "Type": "String",
        "Computed": true
      },
      "ip_scope": {
        "Type": "Set",
        "Description": "A set of IP scopes for the network",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dns1": {
              "Type": "String",
              "Optional": true,
              "Description": "Primary DNS server",
              "ConflictsWith": [
                "nsxt_network"
              ]
            },
            "dns2": {
              "Type": "String",
              "Optional": true,
              "Description": "Secondary DNS server",
              "ConflictsWith": [
                "nsxt_network"
              ]
            },
            "dns_suffix": {
              "Type": "String",
              "Optional": true,
              "Description": "DNS suffix",
              "ConflictsWith": [
                "nsxt_network"
              ]
            },
            "enabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "If subnet is enabled",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "gateway": {
              "Type": "String",
              "Required": true,
              "Description": "Gateway of the network"
            },
            "prefix_length": {
              "Type": "Int",
              "Required": true,
              "Description": "Network mask"
            },
            "static_ip_pool": {
              "Type": "Set",
              "Optional": true,
              "Description": "IP ranges used for static pool allocation in the network",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "end_address": {
                    "Type": "String",
                    "Required": true,
                    "Description": "End address of the IP range"
                  },
                  "start_address": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Start address of the IP range"
                  }
                }
              }
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "nsxt_network": {
        "Type": "Set",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "nsxt_manager_id": {
              "Type": "String",
              "Description": "ID of NSX-T manager",
              "Computed": true
            },
            "nsxt_segment_name": {
              "Type": "String",
              "Description": "Name of NSX-T segment (for NSX-T segment backed external network)",
              "Computed": true
            },
            "nsxt_tier0_router_id": {
              "Type": "String",
              "Description": "ID of NSX-T Tier-0 router (for T0 gateway backed external network)",
              "Computed": true
            }
          }
        }
      },
      "vsphere_network": {
        "Type": "Set",
        "Description": "A list of port groups that back this network. Each referenced DV_PORTGROUP or NETWORK must exist on a vCenter server registered with the system.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "portgroup_id": {
              "Type": "String",
              "Description": "The portgroup ID",
              "Computed": true
            },
            "vcenter_id": {
              "Type": "String",
              "Description": "The vCenter server ID",
              "Computed": true
            }
          }
        }
      }
    },
    "vcd_global_role": {
      "bundle_key": {
        "Type": "String",
        "Description": "Key used for internationalization",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Global role description",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of global role."
      },
      "publish_to_all_tenants": {
        "Type": "Bool",
        "Description": "When true, publishes the global role to all tenants",
        "Computed": true
      },
      "read_only": {
        "Type": "Bool",
        "Description": "Whether this global role is read-only",
        "Computed": true
      },
      "rights": {
        "Type": "Set",
        "Description": "list of rights assigned to this global role",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tenants": {
        "Type": "Set",
        "Description": "list of tenants to which this global role is published",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "vcd_independent_disk": {
      "bus_sub_type": {
        "Type": "String",
        "Computed": true
      },
      "bus_type": {
        "Type": "String",
        "Computed": true
      },
      "datastore_name": {
        "Type": "String",
        "Description": "Datastore name",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "independent disk description",
        "Computed": true
      },
      "id": {
        "Type": "String",
        "Optional": true
      },
      "iops": {
        "Type": "Int",
        "Description": "IOPS request for the created disk",
        "Computed": true
      },
      "is_attached": {
        "Type": "Bool",
        "Description": "True if the disk is already attached",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "owner_name": {
        "Type": "String",
        "Description": "The owner name of the disk",
        "Computed": true
      },
      "size_in_mb": {
        "Type": "Int",
        "Description": "size in MB",
        "Computed": true
      },
      "storage_profile": {
        "Type": "String",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_lb_app_profile": {
      "cookie_mode": {
        "Type": "String",
        "Description": "The mode by which the cookie should be inserted. One of 'insert', 'prefix', or 'appsession'",
        "Computed": true
      },
      "cookie_name": {
        "Type": "String",
        "Description": "Used to uniquely identify the session the first time a client accesses the site. The load balancer refers to this cookie when connecting subsequent requests in the session, so that they all go to the same virtual server. Only applies for persistence_mechanism 'cookie'",
        "Computed": true
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which the LB Application Profile is located"
      },
      "enable_pool_side_ssl": {
        "Type": "Bool",
        "Description": "Enable to define the certificate, CAs, or CRLs used to authenticate the load balancer from the server side",
        "Computed": true
      },
      "enable_ssl_passthrough": {
        "Type": "Bool",
        "Description": "Enable SSL authentication to be passed through to the virtual server. Otherwise SSL authentication takes place at the destination address.",
        "Computed": true
      },
      "expiration": {
        "Type": "Int",
        "Description": "Length of time in seconds that persistence stays in effect",
        "Computed": true
      },
      "http_redirect_url": {
        "Type": "String",
        "Description": "The URL to which traffic that arrives at the destination address should be redirected. Only applies for types HTTP and HTTPS",
        "Computed": true
      },
      "insert_x_forwarded_http_header": {
        "Type": "Bool",
        "Description": "Enables 'X-Forwarded-For' header for identifying the originating IP address of a client connecting to a Web server through the load balancer. Only applies for types HTTP and HTTPS",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "LB Application Profile name for lookup"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "persistence_mechanism": {
        "Type": "String",
        "Description": "Persistence mechanism for the profile. One of 'cookie', 'ssl-sessionid', 'sourceip'",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Description": "Protocol type used to send requests to the server. One of 'TCP', 'UDP', 'HTTP' org 'HTTPS'",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_lb_app_rule": {
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which the LB Application Rule is located"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "LB Application Rule name for lookup"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "script": {
        "Type": "String",
        "Description": "The script for the LB Application Rule. Each line will be terminated by newlines (\n)",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_lb_server_pool": {
      "algorithm": {
        "Type": "String",
        "Description": "Balancing method for the service",
        "Computed": true
      },
      "algorithm_parameters": {
        "Type": "String",
        "Description": "Additional options for load balancing algorithm for http-header or url algorithms",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Server pool description",
        "Computed": true
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which the LB Server Pool is located"
      },
      "enable_transparency": {
        "Type": "Bool",
        "Description": "Makes client IP addresses visible to the backend servers",
        "Computed": true
      },
      "member": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "condition": {
              "Type": "String",
              "Description": "Defines member state. One of enabled, drain, disabled.",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Description": "Pool member id (formatted as member-xx, where xx is a number)",
              "Computed": true
            },
            "ip_address": {
              "Type": "String",
              "Description": "IP address of member in server pool",
              "Computed": true
            },
            "max_connections": {
              "Type": "Int",
              "Description": "The maximum number of concurrent connections the member can handle. If exceeded requests are queued and the load balancer waits for a connection to be released",
              "Computed": true
            },
            "min_connections": {
              "Type": "Int",
              "Description": "Minimum number of concurrent connections a member must always accept",
              "Computed": true
            },
            "monitor_port": {
              "Type": "Int",
              "Description": "Port at which the member is to receive health monitor requests. Can be the same as port",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Name of pool member",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port at which the member is to receive traffic from the load balancer",
              "Computed": true
            },
            "weight": {
              "Type": "Int",
              "Description": "Proportion of traffic this member is to handle. Must be an integer in the range 1-256",
              "Computed": true
            }
          }
        }
      },
      "monitor_id": {
        "Type": "String",
        "Description": "Load Balancer Service Monitor ID",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Server Pool name for lookup"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_lb_service_monitor": {
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which the LB Service Monitor is located"
      },
      "expected": {
        "Type": "String",
        "Description": "String that the monitor expects to match in the status line of the http or https response (for example, HTTP/1.1)",
        "Computed": true
      },
      "extension": {
        "Type": "Map",
        "Description": "Advanced monitor parameters as key=value pairs",
        "Computed": true
      },
      "interval": {
        "Type": "Int",
        "Description": "Interval in seconds at which a server is to be monitored",
        "Computed": true
      },
      "max_retries": {
        "Type": "Int",
        "Description": "Number of times the specified monitoring Method must fail sequentially before the server is declared down",
        "Computed": true
      },
      "method": {
        "Type": "String",
        "Description": "Method to be used to detect server status. One of OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, or CONNECT",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "LB Service Monitor name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "receive": {
        "Type": "String",
        "Description": "String to be matched in the response content",
        "Computed": true
      },
      "send": {
        "Type": "String",
        "Description": "Data to be sent",
        "Computed": true
      },
      "timeout": {
        "Type": "Int",
        "Description": "Maximum time in seconds within which a response from the server must be received",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Description": "Way in which you want to send the health check request to the server. One of http, https, tcp, icmp, or udp",
        "Computed": true
      },
      "url": {
        "Type": "String",
        "Description": "URL to be used in the server status request",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_lb_virtual_server": {
      "app_profile_id": {
        "Type": "String",
        "Description": "Application profile ID to be associated with the virtual server",
        "Computed": true
      },
      "app_rule_ids": {
        "Type": "List",
        "Description": "List of attached application rule IDs",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "connection_limit": {
        "Type": "Int",
        "Description": "Maximum concurrent connections that the virtual server can process",
        "Computed": true
      },
      "connection_rate_limit": {
        "Type": "Int",
        "Description": "Maximum incoming new connection requests per second",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Virtual Server description",
        "Computed": true
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which the Virtual Server is located"
      },
      "enable_acceleration": {
        "Type": "Bool",
        "Description": "Enable virtual server acceleration",
        "Computed": true
      },
      "enabled": {
        "Type": "Bool",
        "Description": "Defines if the virtual server is enabled",
        "Computed": true
      },
      "ip_address": {
        "Type": "String",
        "Description": "IP address that the load balancer listens on",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Virtual Server name for lookup"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "port": {
        "Type": "Int",
        "Description": "Port number that the load balancer listens on",
        "Computed": true
      },
      "protocol": {
        "Type": "String",
        "Description": "Protocol that the virtual server accepts",
        "Computed": true
      },
      "server_pool_id": {
        "Type": "String",
        "Description": "The server pool that the load balancer will use",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_library_certificate": {
      "alias": {
        "Type": "String",
        "Optional": true,
        "Description": "Alias of certificate",
        "Computed": true
      },
      "certificate": {
        "Type": "String",
        "Optional": true,
        "Description": "Certificate content",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Certificate description",
        "Computed": true
      },
      "id": {
        "Type": "String",
        "Optional": true,
        "Description": "Certificate ID",
        "Computed": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      }
    },
    "vcd_network_direct": {
      "description": {
        "Type": "String",
        "Description": "Optional description for the network",
        "Computed": true
      },
      "external_network": {
        "Type": "String",
        "Description": "The name of the external network",
        "Computed": true
      },
      "external_network_dns1": {
        "Type": "String",
        "Description": "Main DNS of the external network",
        "Computed": true
      },
      "external_network_dns2": {
        "Type": "String",
        "Description": "Secondary DNS of the external network",
        "Computed": true
      },
      "external_network_dns_suffix": {
        "Type": "String",
        "Description": "DNS suffix of the external network",
        "Computed": true
      },
      "external_network_gateway": {
        "Type": "String",
        "Description": "Gateway of the external network",
        "Computed": true
      },
      "external_network_netmask": {
        "Type": "String",
        "Description": "Net mask of the external network",
        "Computed": true
      },
      "filter": {
        "Type": "List",
        "Optional": true,
        "Description": "Criteria for retrieving a network by various attributes",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip": {
              "Type": "String",
              "Optional": true,
              "Description": "Search by IP. The value can be a regular expression"
            },
            "metadata": {
              "Type": "List",
              "Optional": true,
              "Description": "metadata filter",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "is_system": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "True if is a metadata@SYSTEM key"
                  },
                  "key": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Metadata key (field name)"
                  },
                  "type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Type of metadata value (needed only if \"use_api_search\" is true)",
                    "Default": {
                      "Type": "string",
                      "Value": "STRING"
                    }
                  },
                  "use_api_search": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "If true, will search the vCD using native metadata query (without regular expressions)"
                  },
                  "value": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Metadata value (can be a regular expression if \"use_api_search\" is false)"
                  }
                }
              }
            },
            "name_regex": {
              "Type": "String",
              "Optional": true,
              "Description": "Search by name with a regular expression"
            }
          }
        }
      },
      "href": {
        "Type": "String",
        "Description": "Network Hypertext Reference",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "A unique name for this network (optional if 'filter' is used)"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "shared": {
        "Type": "Bool",
        "Description": "Defines if this network is shared between multiple VDCs in the Org",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_network_isolated": {
      "description": {
        "Type": "String",
        "Description": "Optional description for the network",
        "Computed": true
      },
      "dhcp_pool": {
        "Type": "Set",
        "Description": "A range of IPs to issue to virtual machines that don't have a static IP",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "default_lease_time": {
              "Type": "Int",
              "Description": "The default DHCP lease time to use",
              "Computed": true
            },
            "end_address": {
              "Type": "String",
              "Description": "The final address in the IP Range",
              "Computed": true
            },
            "max_lease_time": {
              "Type": "Int",
              "Description": "The maximum DHCP lease time to use",
              "Computed": true
            },
            "start_address": {
              "Type": "String",
              "Description": "The first address in the IP Range",
              "Computed": true
            }
          }
        }
      },
      "dns1": {
        "Type": "String",
        "Description": "First DNS server to use",
        "Computed": true
      },
      "dns2": {
        "Type": "String",
        "Description": "Second DNS server to use",
        "Computed": true
      },
      "dns_suffix": {
        "Type": "String",
        "Description": "A FQDN for the virtual machines on this network",
        "Computed": true
      },
      "filter": {
        "Type": "List",
        "Optional": true,
        "Description": "Criteria for retrieving a network by various attributes",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip": {
              "Type": "String",
              "Optional": true,
              "Description": "Search by IP. The value can be a regular expression"
            },
            "metadata": {
              "Type": "List",
              "Optional": true,
              "Description": "metadata filter",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "is_system": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "True if is a metadata@SYSTEM key"
                  },
                  "key": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Metadata key (field name)"
                  },
                  "type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Type of metadata value (needed only if \"use_api_search\" is true)",
                    "Default": {
                      "Type": "string",
                      "Value": "STRING"
                    }
                  },
                  "use_api_search": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "If true, will search the vCD using native metadata query (without regular expressions)"
                  },
                  "value": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Metadata value (can be a regular expression if \"use_api_search\" is false)"
                  }
                }
              }
            },
            "name_regex": {
              "Type": "String",
              "Optional": true,
              "Description": "Search by name with a regular expression"
            }
          }
        }
      },
      "gateway": {
        "Type": "String",
        "Description": "The gateway for this network",
        "Computed": true
      },
      "href": {
        "Type": "String",
        "Description": "Network Hyper Reference",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "A unique name for this network (optional if 'filter' is used)"
      },
      "netmask": {
        "Type": "String",
        "Description": "The netmask for the new network",
        "Computed": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "shared": {
        "Type": "Bool",
        "Description": "Defines if this network is shared between multiple VDCs in the Org",
        "Computed": true
      },
      "static_ip_pool": {
        "Type": "Set",
        "Description": "A range of IPs permitted to be used as static IPs for virtual machines",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "end_address": {
              "Type": "String",
              "Description": "The final address in the IP Range",
              "Computed": true
            },
            "start_address": {
              "Type": "String",
              "Description": "The first address in the IP Range",
              "Computed": true
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_network_isolated_v2": {
      "description": {
        "Type": "String",
        "Description": "Network description",
        "Computed": true
      },
      "dns1": {
        "Type": "String",
        "Description": "DNS server 1",
        "Computed": true
      },
      "dns2": {
        "Type": "String",
        "Description": "DNS server 1",
        "Computed": true
      },
      "dns_suffix": {
        "Type": "String",
        "Description": "DNS suffix",
        "Computed": true
      },
      "filter": {
        "Type": "List",
        "Optional": true,
        "Description": "Criteria for retrieving a network by various attributes",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip": {
              "Type": "String",
              "Optional": true,
              "Description": "Search by IP. The value can be a regular expression"
            },
            "name_regex": {
              "Type": "String",
              "Optional": true,
              "Description": "Search by name with a regular expression"
            }
          }
        }
      },
      "gateway": {
        "Type": "String",
        "Description": "Gateway IP address",
        "Computed": true
      },
      "is_shared": {
        "Type": "Bool",
        "Description": "NSX-V only - share this network with other VDCs in this organization",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "A unique name for this network (optional if 'filter' is used)"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "prefix_length": {
        "Type": "Int",
        "Description": "Network prefix",
        "Computed": true
      },
      "static_ip_pool": {
        "Type": "Set",
        "Description": "IP ranges used for static pool allocation in the network",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "end_address": {
              "Type": "String",
              "Description": "End address of the IP range",
              "Computed": true
            },
            "start_address": {
              "Type": "String",
              "Description": "Start address of the IP range",
              "Computed": true
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_network_routed": {
      "description": {
        "Type": "String",
        "Description": "Optional description for the network",
        "Computed": true
      },
      "dhcp_pool": {
        "Type": "Set",
        "Description": "A range of IPs to issue to virtual machines that don't have a static IP",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "default_lease_time": {
              "Type": "Int",
              "Description": "The default DHCP lease time to use",
              "Computed": true
            },
            "end_address": {
              "Type": "String",
              "Description": "The final address in the IP Range",
              "Computed": true
            },
            "max_lease_time": {
              "Type": "Int",
              "Description": "HThe maximum DHCP lease time to use",
              "Computed": true
            },
            "start_address": {
              "Type": "String",
              "Description": "The first address in the IP Range",
              "Computed": true
            }
          }
        }
      },
      "dns1": {
        "Type": "String",
        "Description": "First DNS server to use",
        "Computed": true
      },
      "dns2": {
        "Type": "String",
        "Description": "Second DNS server to use",
        "Computed": true
      },
      "dns_suffix": {
        "Type": "String",
        "Description": "A FQDN for the virtual machines on this network",
        "Computed": true
      },
      "edge_gateway": {
        "Type": "String",
        "Description": "The name of the edge gateway",
        "Computed": true
      },
      "filter": {
        "Type": "List",
        "Optional": true,
        "Description": "Criteria for retrieving a network by various attributes",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip": {
              "Type": "String",
              "Optional": true,
              "Description": "Search by IP. The value can be a regular expression"
            },
            "metadata": {
              "Type": "List",
              "Optional": true,
              "Description": "metadata filter",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "is_system": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "True if is a metadata@SYSTEM key"
                  },
                  "key": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Metadata key (field name)"
                  },
                  "type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Type of metadata value (needed only if \"use_api_search\" is true)",
                    "Default": {
                      "Type": "string",
                      "Value": "STRING"
                    }
                  },
                  "use_api_search": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "If true, will search the vCD using native metadata query (without regular expressions)"
                  },
                  "value": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Metadata value (can be a regular expression if \"use_api_search\" is false)"
                  }
                }
              }
            },
            "name_regex": {
              "Type": "String",
              "Optional": true,
              "Description": "Search by name with a regular expression"
            }
          }
        }
      },
      "gateway": {
        "Type": "String",
        "Description": "The gateway of this network",
        "Computed": true
      },
      "href": {
        "Type": "String",
        "Description": "Network Hypertext Reference",
        "Computed": true
      },
      "interface_type": {
        "Type": "String",
        "Description": "Which interface to use (one of `internal`, `subinterface`, `distributed`)",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "A unique name for this network (optional if 'filter' is used)"
      },
      "netmask": {
        "Type": "String",
        "Description": "The netmask for the new network",
        "Computed": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "shared": {
        "Type": "Bool",
        "Description": "Defines if this network is shared between multiple VDCs in the Org",
        "Computed": true
      },
      "static_ip_pool": {
        "Type": "Set",
        "Description": "A range of IPs permitted to be used as static IPs for virtual machines",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "end_address": {
              "Type": "String",
              "Description": "The final address in the IP Range",
              "Computed": true
            },
            "start_address": {
              "Type": "String",
              "Description": "The first address in the IP Range",
              "Computed": true
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_network_routed_v2": {
      "description": {
        "Type": "String",
        "Description": "Network description",
        "Computed": true
      },
      "dns1": {
        "Type": "String",
        "Description": "DNS server 1",
        "Computed": true
      },
      "dns2": {
        "Type": "String",
        "Description": "DNS server 1",
        "Computed": true
      },
      "dns_suffix": {
        "Type": "String",
        "Description": "DNS suffix",
        "Computed": true
      },
      "edge_gateway_id": {
        "Type": "String",
        "Description": "Edge gateway name in which Routed network is located",
        "Computed": true
      },
      "filter": {
        "Type": "List",
        "Optional": true,
        "Description": "Criteria for retrieving a network by various attributes",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip": {
              "Type": "String",
              "Optional": true,
              "Description": "Search by IP. The value can be a regular expression"
            },
            "name_regex": {
              "Type": "String",
              "Optional": true,
              "Description": "Search by name with a regular expression"
            }
          }
        }
      },
      "gateway": {
        "Type": "String",
        "Description": "Gateway IP address",
        "Computed": true
      },
      "interface_type": {
        "Type": "String",
        "Description": "Interface type (only for NSX-V networks). One of 'INTERNAL' (default), 'DISTRIBUTED', 'SUBINTERFACE'",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "A unique name for this network (optional if 'filter' is used)"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "prefix_length": {
        "Type": "Int",
        "Description": "Network prefix",
        "Computed": true
      },
      "static_ip_pool": {
        "Type": "Set",
        "Description": "IP ranges used for static pool allocation in the network",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "end_address": {
              "Type": "String",
              "Description": "End address of the IP range",
              "Computed": true
            },
            "start_address": {
              "Type": "String",
              "Description": "Start address of the IP range",
              "Computed": true
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_alb_cloud": {
      "controller_id": {
        "Type": "String",
        "Description": "NSX-T ALB Importable Cloud ID",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "NSX-T ALB Cloud description",
        "Computed": true
      },
      "health_message": {
        "Type": "String",
        "Description": "NSX-T ALB Cloud detailed health message",
        "Computed": true
      },
      "health_status": {
        "Type": "String",
        "Description": "NSX-T ALB Cloud health status",
        "Computed": true
      },
      "importable_cloud_id": {
        "Type": "String",
        "Description": "NSX-T ALB Importable Cloud ID",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "NSX-T ALB Cloud name"
      },
      "network_pool_id": {
        "Type": "String",
        "Description": "Network pool ID NSX-T ALB Cloud",
        "Computed": true
      },
      "network_pool_name": {
        "Type": "String",
        "Description": "Network pool name of NSX-T ALB Cloud",
        "Computed": true
      }
    },
    "vcd_nsxt_alb_controller": {
      "description": {
        "Type": "String",
        "Description": "NSX-T ALB Controller description",
        "Computed": true
      },
      "license_type": {
        "Type": "String",
        "Description": "NSX-T ALB License type. One of 'BASIC', 'ENTERPRISE'",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "NSX-T ALB Controller name"
      },
      "url": {
        "Type": "String",
        "Description": "NSX-T ALB Controller URL",
        "Computed": true
      },
      "username": {
        "Type": "String",
        "Description": "NSX-T ALB Controller Username",
        "Computed": true
      },
      "version": {
        "Type": "String",
        "Description": "NSX-T ALB Controller version",
        "Computed": true
      }
    },
    "vcd_nsxt_alb_edgegateway_service_engine_group": {
      "deployed_virtual_services": {
        "Type": "Int",
        "Description": "Number of reserved deployed virtual services for this Service Engine Group",
        "Computed": true
      },
      "edge_gateway_id": {
        "Type": "String",
        "Required": true,
        "Description": "Edge Gateway ID in which ALB Service Engine Group should be located"
      },
      "max_virtual_services": {
        "Type": "Int",
        "Description": "Maximum number of virtual services to be used in this Service Engine Group",
        "Computed": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "reserved_virtual_services": {
        "Type": "Int",
        "Description": "Number of reserved virtual services for this Service Engine Group",
        "Computed": true
      },
      "service_engine_group_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Service Engine Group ID which is attached to NSX-T Edge Gateway",
        "Computed": true
      },
      "service_engine_group_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Service Engine Group Name which is attached to NSX-T Edge Gateway",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_alb_importable_cloud": {
      "already_imported": {
        "Type": "Bool",
        "Description": "Flags if the NSX-T ALB Importable Cloud is already imported",
        "Computed": true
      },
      "controller_id": {
        "Type": "String",
        "Required": true,
        "Description": "NSX-T ALB Controller ID"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "NSX-T ALB Importable Cloud Name"
      },
      "network_pool_id": {
        "Type": "String",
        "Description": "Network pool ID NSX-T ALB Importable Cloud",
        "Computed": true
      },
      "network_pool_name": {
        "Type": "String",
        "Description": "Network pool name of NSX-T ALB Importable Cloud",
        "Computed": true
      },
      "transport_zone_name": {
        "Type": "String",
        "Description": "Transport zone name NSX-T ALB Importable Cloud",
        "Computed": true
      }
    },
    "vcd_nsxt_alb_pool": {
      "algorithm": {
        "Type": "String",
        "Description": "Algorithm for choosing pool members (default LEAST_CONNECTIONS)",
        "Computed": true
      },
      "associated_virtual_service_ids": {
        "Type": "Set",
        "Optional": true,
        "Description": "IDs of associated virtual services",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "associated_virtual_services": {
        "Type": "Set",
        "Description": "Names of associated virtual services",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ca_certificate_ids": {
        "Type": "Set",
        "Description": "A set of root certificate IDs to use when validating certificates presented by pool members",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "cn_check_enabled": {
        "Type": "Bool",
        "Description": "Boolean flag if common name check of the certificate should be enabled",
        "Computed": true
      },
      "default_port": {
        "Type": "Int",
        "Description": "Default Port defines destination server port used by the traffic sent to the member (default 80)",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Description of ALB Pool",
        "Computed": true
      },
      "domain_names": {
        "Type": "Set",
        "Description": "List of domain names which will be used to verify common names",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "edge_gateway_id": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway ID in which ALB Pool should be created"
      },
      "enabled": {
        "Type": "Bool",
        "Description": "Defines if NSX-T ALB Pool is enabled or disabled",
        "Computed": true
      },
      "enabled_member_count": {
        "Type": "Int",
        "Description": "Number of enabled members in the pool",
        "Computed": true
      },
      "graceful_timeout_period": {
        "Type": "Int",
        "Description": "Maximum time in minutes to gracefully disable pool member (default 1)",
        "Computed": true
      },
      "health_message": {
        "Type": "String",
        "Description": "Health message",
        "Computed": true
      },
      "health_monitor": {
        "Type": "Set",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Computed": true
            },
            "system_defined": {
              "Type": "Bool",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Type of health monitor",
              "Computed": true
            }
          }
        }
      },
      "member": {
        "Type": "Set",
        "Description": "ALB Pool Members",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "detailed_health_message": {
              "Type": "String",
              "Description": "Detailed health message",
              "Computed": true
            },
            "enabled": {
              "Type": "Bool",
              "Description": "Shows is the member is enabled or not",
              "Computed": true
            },
            "health_status": {
              "Type": "String",
              "Description": "Health status",
              "Computed": true
            },
            "ip_address": {
              "Type": "String",
              "Description": "IP Address of pool member",
              "Computed": true
            },
            "marked_down_by": {
              "Type": "Set",
              "Description": "Marked down by provides a set of health monitors that marked the service down",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "port": {
              "Type": "Int",
              "Description": "Service port",
              "Computed": true
            },
            "ratio": {
              "Type": "Int",
              "Description": "Load ratio",
              "Computed": true
            }
          }
        }
      },
      "member_count": {
        "Type": "Int",
        "Description": "Number of members in the pool",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of ALB Pool"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "passive_monitoring_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Monitors if the traffic is accepted by node (default true)",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "persistence_profile": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Description": "System generated name of persistence profile",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Type of persistence strategy",
              "Computed": true
            },
            "value": {
              "Type": "String",
              "Description": "Value of attribute based on persistence type",
              "Computed": true
            }
          }
        }
      },
      "up_member_count": {
        "Type": "Int",
        "Description": "Number of members in the pool serving the traffic",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_alb_service_engine_group": {
      "alb_cloud_id": {
        "Type": "String",
        "Description": "NSX-T ALB backing Cloud ID",
        "Computed": true
      },
      "deployed_virtual_services": {
        "Type": "Int",
        "Description": "NSX-T ALB Service Engine Group deployed virtual services",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "NSX-T ALB Service Engine Group description",
        "Computed": true
      },
      "ha_mode": {
        "Type": "String",
        "Description": "NSX-T ALB Service Engine Group HA mode",
        "Computed": true
      },
      "max_virtual_services": {
        "Type": "Int",
        "Description": "NSX-T ALB Service Engine Group maximum virtual services",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "NSX-T ALB Service Engine Group name"
      },
      "overallocated": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value that shows if virtual services are overallocated"
      },
      "reservation_model": {
        "Type": "String",
        "Description": "NSX-T ALB Service Engine Group reservation model. One of 'DEDICATED', 'SHARED'",
        "Computed": true
      },
      "reserved_virtual_services": {
        "Type": "Int",
        "Description": "NSX-T ALB Service Engine Group reserved virtual services",
        "Computed": true
      },
      "sync_on_refresh": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean value that shows if sync should be performed on every refresh",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      }
    },
    "vcd_nsxt_alb_settings": {
      "edge_gateway_id": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway ID"
      },
      "is_active": {
        "Type": "Bool",
        "Description": "Defines if ALB is enabled on Edge Gateway",
        "Computed": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "service_network_specification": {
        "Type": "String",
        "Optional": true,
        "Description": "Optional custom network CIDR definition for ALB Service Engine placement (VCD default is 192.168.255.1/25)",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_alb_virtual_service": {
      "application_profile_type": {
        "Type": "String",
        "Description": "HTTP, HTTPS, L4, L4_TLS",
        "Computed": true
      },
      "ca_certificate_id": {
        "Type": "String",
        "Description": "ID of certificate in library if used",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Description of ALB Virtual Service",
        "Computed": true
      },
      "edge_gateway_id": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway ID in which ALB Virtual Service is"
      },
      "enabled": {
        "Type": "Bool",
        "Description": "Virtual Service is enabled or disabled (default true)",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of ALB Virtual Service"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "pool_id": {
        "Type": "String",
        "Description": "Pool ID to use for this Virtual Service",
        "Computed": true
      },
      "service_engine_group_id": {
        "Type": "String",
        "Description": "Service Engine Group ID",
        "Computed": true
      },
      "service_port": {
        "Type": "Set",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "end_port": {
              "Type": "Int",
              "Description": "Last port in the range",
              "Computed": true
            },
            "ssl_enabled": {
              "Type": "Bool",
              "Description": "Starting port in the range",
              "Computed": true
            },
            "start_port": {
              "Type": "Int",
              "Description": "Starting port in the range",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "One of 'TCP_PROXY', 'TCP_FAST_PATH', 'UDP_FAST_PATH'",
              "Computed": true
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      },
      "virtual_ip_address": {
        "Type": "String",
        "Description": "Virtual IP address (VIP) for Virtual Service",
        "Computed": true
      }
    },
    "vcd_nsxt_app_port_profile": {
      "app_port": {
        "Type": "Set",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "port": {
              "Type": "Set",
              "Description": "Set of ports or ranges",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "protocol": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      },
      "description": {
        "Type": "String",
        "Description": "Application Port Profile description",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Application Port Profile name"
      },
      "nsxt_manager_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of NSX-T manager. Only required for 'PROVIDER' scope"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "scope": {
        "Type": "String",
        "Required": true,
        "Description": "Scope - 'SYSTEM', 'PROVIDER' or 'TENANT'"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_edge_cluster": {
      "deployment_type": {
        "Type": "String",
        "Description": "Deployment type of NSX-T Edge Cluster",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Description of NSX-T Edge Cluster",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of NSX-T Edge Cluster"
      },
      "node_count": {
        "Type": "Int",
        "Description": "Number of nodes in NSX-T Edge Cluster",
        "Computed": true
      },
      "node_type": {
        "Type": "String",
        "Description": "Node type of NSX-T Edge Cluster",
        "Computed": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_edgegateway": {
      "dedicate_external_network": {
        "Type": "Bool",
        "Description": "Dedicating the External Network will enable Route Advertisement for this Edge Gateway.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Edge Gateway description",
        "Computed": true
      },
      "edge_cluster_id": {
        "Type": "String",
        "Optional": true,
        "Description": "NSX-T Edge Cluster ID."
      },
      "external_network_id": {
        "Type": "String",
        "Description": "External network ID",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Edge Gateway name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "primary_ip": {
        "Type": "String",
        "Description": "Primary IP address of edge gateway",
        "Computed": true
      },
      "subnet": {
        "Type": "Set",
        "Description": "One or more blocks with external network information to be attached to this gateway's interface",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "allocated_ips": {
              "Type": "Set",
              "Description": "One or more blocks to sub-allocate pools on the edge gateway",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "end_address": {
                    "Type": "String",
                    "Computed": true
                  },
                  "start_address": {
                    "Type": "String",
                    "Computed": true
                  }
                }
              }
            },
            "gateway": {
              "Type": "String",
              "Description": "Gateway address for a subnet",
              "Computed": true
            },
            "prefix_length": {
              "Type": "Int",
              "Description": "Netmask address for a subnet (e.g. 24 for /24)",
              "Computed": true
            },
            "primary_ip": {
              "Type": "String",
              "Description": "IP address on the edge gateway ",
              "Computed": true
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_firewall": {
      "edge_gateway_id": {
        "Type": "String",
        "Required": true,
        "Description": "Edge Gateway ID in which Firewall Rules are located"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "rule": {
        "Type": "List",
        "Description": "List of firewall rules",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Computed": true
            },
            "app_port_profile_ids": {
              "Type": "Set",
              "Description": "A set of Application Port Profile IDs. Leaving it empty means 'Any'",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "destination_ids": {
              "Type": "Set",
              "Description": "A set of Destination Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "direction": {
              "Type": "String",
              "Description": "IN OUT IN_OUT",
              "Computed": true
            },
            "enabled": {
              "Type": "Bool",
              "Description": "Firewall Rule name",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Description": "Firewall Rule ID",
              "Computed": true
            },
            "ip_protocol": {
              "Type": "String",
              "Description": "IPV4,  IPV6, IPV4_IPV6",
              "Computed": true
            },
            "logging": {
              "Type": "Bool",
              "Description": "Firewall Rule name",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Firewall Rule name",
              "Computed": true
            },
            "source_ids": {
              "Type": "Set",
              "Description": "A set of Source Firewall Group IDs (IP Sets or Security Groups). Leaving it empty means 'Any'",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_ip_set": {
      "description": {
        "Type": "String",
        "Description": "IP set description",
        "Computed": true
      },
      "edge_gateway_id": {
        "Type": "String",
        "Required": true,
        "Description": "Edge Gateway ID in which IP Set is located"
      },
      "ip_addresses": {
        "Type": "Set",
        "Description": "A set of IP address, CIDR, IP range objects",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "IP set name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_ipsec_vpn_tunnel": {
      "description": {
        "Type": "String",
        "Description": "Description of NAT rule",
        "Computed": true
      },
      "edge_gateway_id": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which IP Sec VPN configuration is located"
      },
      "enabled": {
        "Type": "Bool",
        "Description": "Enables or disables this configuration (default true)",
        "Computed": true
      },
      "ike_fail_reason": {
        "Type": "String",
        "Description": "Provides more details of failure if the IKE service is not UP",
        "Computed": true
      },
      "ike_service_status": {
        "Type": "String",
        "Description": "Status for the actual IKE Session for the given tunnel",
        "Computed": true
      },
      "local_ip_address": {
        "Type": "String",
        "Description": "IPv4 Address for the endpoint. This has to be a sub-allocated IP on the Edge Gateway.",
        "Computed": true
      },
      "local_networks": {
        "Type": "Set",
        "Description": "Set of local networks in CIDR format. At least one value is required",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "logging": {
        "Type": "Bool",
        "Description": "Sets whether logging for the tunnel is enabled or not. (default - false)",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of IP Sec VPN configuration"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "pre_shared_key": {
        "Type": "String",
        "Description": "Pre-Shared Key (PSK)",
        "Computed": true
      },
      "remote_ip_address": {
        "Type": "String",
        "Description": "Public IPv4 Address of the remote device terminating the VPN connection",
        "Computed": true
      },
      "remote_networks": {
        "Type": "Set",
        "Description": "Set of remote networks in CIDR format. Leaving it empty is interpreted as 0.0.0.0/0",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "security_profile": {
        "Type": "String",
        "Description": "Security type which is use for IPsec VPN Tunnel. It will be 'DEFAULT' if nothing is customized and 'CUSTOM' if some changes are applied",
        "Computed": true
      },
      "security_profile_customization": {
        "Type": "List",
        "Description": "Security profile customization",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dpd_probe_internal": {
              "Type": "Int",
              "Description": "Value in seconds of dead probe detection interval. Minimum is 3 seconds and the maximum is 60 seconds",
              "Computed": true
            },
            "ike_dh_groups": {
              "Type": "Set",
              "Description": "Diffie-Hellman groups to be used if Perfect Forward Secrecy is enabled. One of GROUP2, GROUP5, GROUP14, GROUP15, GROUP16, GROUP19, GROUP20, GROUP21",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "ike_digest_algorithms": {
              "Type": "Set",
              "Description": "Secure hashing algorithms to use during the IKE negotiation. One of SHA1, SHA2_256, SHA2_384, SHA2_512",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "ike_encryption_algorithms": {
              "Type": "Set",
              "Description": "Encryption algorithms. One of SHA1, SHA2_256, SHA2_384, SHA2_512",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "ike_sa_lifetime": {
              "Type": "Int",
              "Description": "Security Association life time (in seconds). It is number of seconds before the IPsec tunnel needs to reestablish",
              "Computed": true
            },
            "ike_version": {
              "Type": "String",
              "Description": "IKE version one of IKE_V1, IKE_V2, IKE_FLEX",
              "Computed": true
            },
            "tunnel_df_policy": {
              "Type": "String",
              "Description": "Policy for handling defragmentation bit. One of COPY, CLEAR",
              "Computed": true
            },
            "tunnel_dh_groups": {
              "Type": "Set",
              "Description": "Diffie-Hellman groups to be used is PFS is enabled. One of GROUP2, GROUP5, GROUP14, GROUP15, GROUP16, GROUP19, GROUP20, GROUP21",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "tunnel_digest_algorithms": {
              "Type": "Set",
              "Description": "Digest algorithms to be used for message digest. One of SHA1, SHA2_256, SHA2_384, SHA2_512",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "tunnel_encryption_algorithms": {
              "Type": "Set",
              "Description": "Encryption algorithms to use in IPSec tunnel establishment. One of AES_128, AES_256, AES_GCM_128, AES_GCM_192, AES_GCM_256, NO_ENCRYPTION_AUTH_AES_GMAC_128, NO_ENCRYPTION_AUTH_AES_GMAC_192, NO_ENCRYPTION_AUTH_AES_GMAC_256, NO_ENCRYPTION",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "tunnel_pfs_enabled": {
              "Type": "Bool",
              "Description": "Perfect Forward Secrecy Enabled or Disabled. Default (enabled)",
              "Computed": true
            },
            "tunnel_sa_lifetime": {
              "Type": "Int",
              "Description": "Security Association life time (in seconds)",
              "Computed": true
            }
          }
        }
      },
      "status": {
        "Type": "String",
        "Description": "Overall IPsec VPN Tunnel Status",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_manager": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of NSX-T manager."
      }
    },
    "vcd_nsxt_nat_rule": {
      "app_port_profile_id": {
        "Type": "String",
        "Description": "Application Port Profile ID applied for this rule",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Description of NAT rule",
        "Computed": true
      },
      "dnat_external_port": {
        "Type": "String",
        "Description": "For DNAT only. Port into which the DNAT rule is translating for the packets inbound to the virtual machines.",
        "Computed": true
      },
      "edge_gateway_id": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which NAT Rule is located"
      },
      "enabled": {
        "Type": "Bool",
        "Description": "Enables or disables this rule",
        "Computed": true
      },
      "external_address": {
        "Type": "String",
        "Description": "IP address or CIDR of external network",
        "Computed": true
      },
      "firewall_match": {
        "Type": "String",
        "Description": "VCD 10.2.2+ Determines how the firewall matches the address during NATing if firewall stage is not skipped. One of 'MATCH_INTERNAL_ADDRESS', 'MATCH_EXTERNAL_ADDRESS', 'BYPASS'",
        "Computed": true
      },
      "internal_address": {
        "Type": "String",
        "Description": "IP address or CIDR of the virtual machines for which you are configuring NAT",
        "Computed": true
      },
      "logging": {
        "Type": "Bool",
        "Description": "Enable logging when this rule is applied",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of NAT rule"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "priority": {
        "Type": "Int",
        "Description": "VCD 10.2.2+ If an address has multiple NAT rules, the rule with the highest priority is applied. A lower value means a higher precedence for this rule.",
        "Computed": true
      },
      "rule_type": {
        "Type": "String",
        "Description": "Rule type - one of 'DNAT', 'NO_DNAT', 'SNAT', 'NO_SNAT'",
        "Computed": true
      },
      "snat_destination_address": {
        "Type": "String",
        "Description": "For SNAT only. Limits SNAT rule by destination IP address or range in CIDR format.",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_network_dhcp": {
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "org_network_id": {
        "Type": "String",
        "Required": true,
        "Description": "Parent Org VDC network name"
      },
      "pool": {
        "Type": "Set",
        "Description": "IP ranges used for DHCP pool allocation in the network",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "end_address": {
              "Type": "String",
              "Description": "End address of DHCP pool IP range",
              "Computed": true
            },
            "start_address": {
              "Type": "String",
              "Description": "Start address of DHCP pool IP range",
              "Computed": true
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_network_imported": {
      "description": {
        "Type": "String",
        "Description": "Network description",
        "Computed": true
      },
      "dns1": {
        "Type": "String",
        "Description": "DNS server 1",
        "Computed": true
      },
      "dns2": {
        "Type": "String",
        "Description": "DNS server 1",
        "Computed": true
      },
      "dns_suffix": {
        "Type": "String",
        "Description": "DNS suffix",
        "Computed": true
      },
      "filter": {
        "Type": "List",
        "Optional": true,
        "Description": "Criteria for retrieving a network by various attributes",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip": {
              "Type": "String",
              "Optional": true,
              "Description": "Search by IP. The value can be a regular expression"
            },
            "name_regex": {
              "Type": "String",
              "Optional": true,
              "Description": "Search by name with a regular expression"
            }
          }
        }
      },
      "gateway": {
        "Type": "String",
        "Description": "Gateway IP address",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "A unique name for this network (optional if 'filter' is used)"
      },
      "nsxt_logical_switch_id": {
        "Type": "String",
        "Description": "ID of existing NSX-T Logical Switch",
        "Computed": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "prefix_length": {
        "Type": "Int",
        "Description": "Network prefix",
        "Computed": true
      },
      "static_ip_pool": {
        "Type": "Set",
        "Description": "IP ranges used for static pool allocation in the network",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "end_address": {
              "Type": "String",
              "Description": "End address of the IP range",
              "Computed": true
            },
            "start_address": {
              "Type": "String",
              "Description": "Start address of the IP range",
              "Computed": true
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_security_group": {
      "description": {
        "Type": "String",
        "Description": "Security Group description",
        "Computed": true
      },
      "edge_gateway_id": {
        "Type": "String",
        "Required": true,
        "Description": "Edge Gateway ID in which security group is located"
      },
      "member_org_network_ids": {
        "Type": "Set",
        "Description": "Set of Org VDC network IDs attached to this security group",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "member_vms": {
        "Type": "Set",
        "Description": "Set of VM IDs",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "vapp_id": {
              "Type": "String",
              "Description": "Parent vApp name (if exists) for member VM",
              "Computed": true
            },
            "vapp_name": {
              "Type": "String",
              "Description": "Parent vApp ID (if exists) for member VM",
              "Computed": true
            },
            "vm_id": {
              "Type": "String",
              "Description": "Member VM ID",
              "Computed": true
            },
            "vm_name": {
              "Type": "String",
              "Description": "Member VM Name",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Security Group name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxt_tier0_router": {
      "is_assigned": {
        "Type": "Bool",
        "Description": "Defines if Tier-0 router is already assigned to external network.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of NSX-T Tier-0 router."
      },
      "nsxt_manager_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of NSX-T manager."
      }
    },
    "vcd_nsxv_dhcp_relay": {
      "domain_names": {
        "Type": "Set",
        "Description": "A set of IP domain names of DHCP servers",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name for DHCP relay settings"
      },
      "ip_addresses": {
        "Type": "Set",
        "Description": "A set of IP address of DHCP servers",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ip_sets": {
        "Type": "Set",
        "Description": "A set of IP set names which consist DHCP servers",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "relay_agent": {
        "Type": "Set",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "gateway_ip_address": {
              "Type": "String",
              "Description": "Optional gateway IP address of org network which is to be used for relaying DHCP message to specified servers",
              "Computed": true
            },
            "network_name": {
              "Type": "String",
              "Description": "Org network which is to be used for relaying DHCP message to specified servers",
              "Computed": true
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxv_dnat": {
      "description": {
        "Type": "String",
        "Description": "NAT rule description",
        "Computed": true
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which the NAT rule is located"
      },
      "enabled": {
        "Type": "Bool",
        "Description": "Defines if the rule is enabled",
        "Computed": true
      },
      "icmp_type": {
        "Type": "String",
        "Description": "ICMP type. Only supported when protocol is ICMP. One of `any`, `address-mask-request`, `address-mask-reply`, `destination-unreachable`, `echo-request`, `echo-reply`, `parameter-problem`, `redirect`, `router-advertisement`, `router-solicitation`, `source-quench`, `time-exceeded`, `timestamp-request`, `timestamp-reply`. Default `any`",
        "Computed": true
      },
      "logging_enabled": {
        "Type": "Bool",
        "Description": "Defines if logging is enabled for the rule",
        "Computed": true
      },
      "network_name": {
        "Type": "String",
        "Description": "Org or external network name",
        "Computed": true
      },
      "network_type": {
        "Type": "String",
        "Description": "Network type. One of 'ext', 'org'",
        "Computed": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "original_address": {
        "Type": "String",
        "Description": "Original address or address range. This is the the destination address for DNAT rules.",
        "Computed": true
      },
      "original_port": {
        "Type": "String",
        "Description": "Original port. This is the destinationport for DNAT rules",
        "Computed": true
      },
      "protocol": {
        "Type": "String",
        "Description": "Protocol. One of 'tcp', 'udp', 'icmp', 'any'",
        "Computed": true
      },
      "rule_id": {
        "Type": "String",
        "Required": true,
        "Description": "NAT rule ID for lookup"
      },
      "rule_tag": {
        "Type": "Int",
        "Description": "Custom rule tag. Contains rule ID if tag was not set",
        "Computed": true
      },
      "rule_type": {
        "Type": "String",
        "Description": "Possible values 'user', 'internal_high'",
        "Computed": true
      },
      "translated_address": {
        "Type": "String",
        "Description": "Translated address or address range",
        "Computed": true
      },
      "translated_port": {
        "Type": "String",
        "Description": "Translated port",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxv_firewall_rule": {
      "action": {
        "Type": "String",
        "Description": "'accept' or 'deny'. Default 'accept'",
        "Computed": true
      },
      "destination": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "exclude": {
              "Type": "Bool",
              "Description": "Rule is applied to traffic going to any destinations except for the excluded destination. Default 'false'",
              "Computed": true
            },
            "gateway_interfaces": {
              "Type": "Set",
              "Description": "'vse', 'internal', 'external' or network name",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "ip_addresses": {
              "Type": "Set",
              "Description": "IP address, CIDR, an IP range, or the keyword 'any'",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "ip_sets": {
              "Type": "Set",
              "Description": "Set of IP set names",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "org_networks": {
              "Type": "Set",
              "Description": "Set of org network names",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "vm_ids": {
              "Type": "Set",
              "Description": "Set of VM IDs",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which the firewall rule is located"
      },
      "enabled": {
        "Type": "Bool",
        "Description": "Whether the rule should be enabled. Default 'true'",
        "Computed": true
      },
      "logging_enabled": {
        "Type": "Bool",
        "Description": "Whether logging should be enabled for this rule. Default 'false'",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Description": "Firewall rule name",
        "Computed": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "rule_id": {
        "Type": "String",
        "Required": true,
        "Description": "Firewall rule ID for lookup"
      },
      "rule_tag": {
        "Type": "Int",
        "Description": "Optional. Allows to set custom rule tag",
        "Computed": true
      },
      "rule_type": {
        "Type": "String",
        "Description": "Read only. Possible values 'user', 'internal_high'",
        "Computed": true
      },
      "service": {
        "Type": "Set",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "port": {
              "Type": "String",
              "Computed": true
            },
            "protocol": {
              "Type": "String",
              "Computed": true
            },
            "source_port": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      },
      "source": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "exclude": {
              "Type": "Bool",
              "Description": "Rule is applied to traffic coming from all sources except for the excluded source. Default 'false'",
              "Computed": true
            },
            "gateway_interfaces": {
              "Type": "Set",
              "Description": "'vse', 'internal', 'external' or network name",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "ip_addresses": {
              "Type": "Set",
              "Description": "IP address, CIDR, an IP range, or the keyword 'any'",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "ip_sets": {
              "Type": "Set",
              "Description": "Set of IP set names",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "org_networks": {
              "Type": "Set",
              "Description": "Set of org network names",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "vm_ids": {
              "Type": "Set",
              "Description": "Set of VM IDs",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxv_ip_set": {
      "description": {
        "Type": "String",
        "Description": "IP set description",
        "Computed": true
      },
      "ip_addresses": {
        "Type": "Set",
        "Description": "A set of IP address, CIDR, IP range objects",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "is_inheritance_allowed": {
        "Type": "Bool",
        "Description": "Allows visibility in underlying scopes (Default is true)",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "IP set name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_nsxv_snat": {
      "description": {
        "Type": "String",
        "Description": "NAT rule description",
        "Computed": true
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which the NAT rule is located"
      },
      "enabled": {
        "Type": "Bool",
        "Description": "Defines if the rule is enabled",
        "Computed": true
      },
      "logging_enabled": {
        "Type": "Bool",
        "Description": "Defines if logging is enabled for the rule",
        "Computed": true
      },
      "network_name": {
        "Type": "String",
        "Description": "Org or external network name",
        "Computed": true
      },
      "network_type": {
        "Type": "String",
        "Description": "Network type. One of 'ext', 'org'",
        "Computed": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "original_address": {
        "Type": "String",
        "Description": "Original address or address range. This is the the source address for SNAT rules",
        "Computed": true
      },
      "rule_id": {
        "Type": "String",
        "Required": true,
        "Description": "NAT rule ID for lookup"
      },
      "rule_tag": {
        "Type": "Int",
        "Description": "Custom rule tag. Contains rule ID if tag was not set",
        "Computed": true
      },
      "rule_type": {
        "Type": "String",
        "Description": "Possible values 'user', 'internal_high'.",
        "Computed": true
      },
      "translated_address": {
        "Type": "String",
        "Description": "Translated address or address range",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_org": {
      "can_publish_catalogs": {
        "Type": "Bool",
        "Description": "True if this organization is allowed to share catalogs.",
        "Computed": true
      },
      "delay_after_power_on_seconds": {
        "Type": "Int",
        "Description": "Specifies this organization's default for virtual machine boot delay after power on.",
        "Computed": true
      },
      "deployed_vm_quota": {
        "Type": "Int",
        "Description": "Maximum number of virtual machines that can be deployed simultaneously by a member of this organization. (0 = unlimited)",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Computed": true
      },
      "full_name": {
        "Type": "String",
        "Computed": true
      },
      "is_enabled": {
        "Type": "Bool",
        "Description": "True if this organization is enabled (allows login and all other operations).",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Organization name for lookup"
      },
      "stored_vm_quota": {
        "Type": "Int",
        "Description": "Maximum number of virtual machines in vApps or vApp templates that can be stored in an undeployed state by a member of this organization. (0 = unlimited)",
        "Computed": true
      },
      "vapp_lease": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "delete_on_storage_lease_expiration": {
              "Type": "Bool",
              "Description": "If true, storage for a vApp is deleted when the vApp's lease expires. If false, the storage is flagged for deletion, but not deleted.",
              "Computed": true
            },
            "maximum_runtime_lease_in_sec": {
              "Type": "Int",
              "Description": "How long vApps can run before they are automatically stopped (in seconds)",
              "Computed": true
            },
            "maximum_storage_lease_in_sec": {
              "Type": "Int",
              "Description": "How long stopped vApps are available before being automatically cleaned up (in seconds)",
              "Computed": true
            },
            "power_off_on_runtime_lease_expiration": {
              "Type": "Bool",
              "Description": "When true, vApps are powered off when the runtime lease expires. When false, vApps are suspended when the runtime lease expires",
              "Computed": true
            }
          }
        }
      },
      "vapp_template_lease": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "delete_on_storage_lease_expiration": {
              "Type": "Bool",
              "Description": "If true, storage for a vAppTemplate is deleted when the vAppTemplate lease expires. If false, the storage is flagged for deletion, but not deleted",
              "Computed": true
            },
            "maximum_storage_lease_in_sec": {
              "Type": "Int",
              "Description": "How long vApp templates are available before being automatically cleaned up (in seconds)",
              "Computed": true
            }
          }
        }
      }
    },
    "vcd_org_user": {
      "deployed_vm_quota": {
        "Type": "Int",
        "Description": "Quota of vApps that this user can deploy. A value of 0 specifies an unlimited quota.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "The user's description",
        "Computed": true
      },
      "email_address": {
        "Type": "String",
        "Description": "The user's email address",
        "Computed": true
      },
      "enabled": {
        "Type": "Bool",
        "Description": "True if the user is enabled and can log in.",
        "Computed": true
      },
      "full_name": {
        "Type": "String",
        "Description": "The user's full name",
        "Computed": true
      },
      "instant_messaging": {
        "Type": "String",
        "Description": "The user's telephone",
        "Computed": true
      },
      "is_group_role": {
        "Type": "Bool",
        "Description": "True if this user has a group role.",
        "Computed": true
      },
      "is_locked": {
        "Type": "Bool",
        "Description": "If the user account has been locked due to too many invalid login attempts, the value will change to true (only the system can lock the user). ",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "User's name. Required if \"user_id\" is not set"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "provider_type": {
        "Type": "String",
        "Description": "Identity provider type for this this user. One of: 'INTEGRATED', 'SAML', 'OAUTH'. ",
        "Computed": true
      },
      "role": {
        "Type": "String",
        "Description": "Role within the organization",
        "Computed": true
      },
      "stored_vm_quota": {
        "Type": "Int",
        "Description": "Quota of vApps that this user can store. A value of 0 specifies an unlimited quota.",
        "Computed": true
      },
      "telephone": {
        "Type": "String",
        "Description": "The user's telephone",
        "Computed": true
      },
      "user_id": {
        "Type": "String",
        "Optional": true,
        "Description": "User's id. Required if \"name\" is not set"
      }
    },
    "vcd_org_vdc": {
      "allocation_model": {
        "Type": "String",
        "Description": "The allocation model used by this VDC; must be one of {AllocationVApp, AllocationPool, ReservationPool, Flex}",
        "Computed": true
      },
      "allow_over_commit": {
        "Type": "Bool",
        "Description": "Set to false to disallow creation of the VDC if the AllocationModel is AllocationPool or ReservationPool and the ComputeCapacity you specified is greater than what the backing Provider VDC can supply. Default is true.",
        "Computed": true
      },
      "compute_capacity": {
        "Type": "List",
        "Description": "The compute capacity allocated to this VDC.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cpu": {
              "Type": "List",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allocated": {
                    "Type": "Int",
                    "Description": "Capacity that is committed to be available. Value in MB or MHz. Used with AllocationPool (Allocation pool) and ReservationPool (Reservation pool).",
                    "Computed": true
                  },
                  "limit": {
                    "Type": "Int",
                    "Description": "Capacity limit relative to the value specified for Allocation. It must not be less than that value. If it is greater than that value, it implies over provisioning. A value of 0 specifies unlimited units. Value in MB or MHz. Used with AllocationVApp (Pay as you go).",
                    "Computed": true
                  },
                  "reserved": {
                    "Type": "Int",
                    "Computed": true
                  },
                  "used": {
                    "Type": "Int",
                    "Computed": true
                  }
                }
              }
            },
            "memory": {
              "Type": "List",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allocated": {
                    "Type": "Int",
                    "Description": "Capacity that is committed to be available. Value in MB or MHz. Used with AllocationPool (Allocation pool) and ReservationPool (Reservation pool).",
                    "Computed": true
                  },
                  "limit": {
                    "Type": "Int",
                    "Description": "Capacity limit relative to the value specified for Allocation. It must not be less than that value. If it is greater than that value, it implies over provisioning. A value of 0 specifies unlimited units. Value in MB or MHz. Used with AllocationVApp (Pay as you go).",
                    "Computed": true
                  },
                  "reserved": {
                    "Type": "Int",
                    "Computed": true
                  },
                  "used": {
                    "Type": "Int",
                    "Computed": true
                  }
                }
              }
            }
          }
        }
      },
      "cpu_guaranteed": {
        "Type": "Float",
        "Description": "Percentage of allocated CPU resources guaranteed to vApps deployed in this VDC. For example, if this value is 0.75, then 75% of allocated resources are guaranteed. Required when AllocationModel is AllocationVApp or AllocationPool. If the element is empty, vCD sets a value",
        "Computed": true
      },
      "cpu_speed": {
        "Type": "Int",
        "Description": "Specifies the clock frequency, in Megahertz, for any virtual CPU that is allocated to a VM. A VM with 2 vCPUs will consume twice as much of this value. Ignored for ReservationPool. Required when AllocationModel is AllocationVApp or AllocationPool, and may not be less than 256 MHz. Defaults to 1000 MHz if the element is empty or missing.",
        "Computed": true
      },
      "default_vm_sizing_policy_id": {
        "Type": "String",
        "Description": "ID of default VM sizing policy ID",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Computed": true
      },
      "elasticity": {
        "Type": "Bool",
        "Description": "True if the Flex VDC is elastic.",
        "Computed": true
      },
      "enable_fast_provisioning": {
        "Type": "Bool",
        "Description": "Request for fast provisioning. Request will be honored only if the underlying datas tore supports it. Fast provisioning can reduce the time it takes to create virtual machines by using vSphere linked clones. If you disable fast provisioning, all provisioning operations will result in full clones.",
        "Computed": true
      },
      "enable_thin_provisioning": {
        "Type": "Bool",
        "Description": "Boolean to request thin provisioning. Request will be honored only if the underlying datastore supports it. Thin provisioning saves storage space by committing it on demand. This allows over-allocation of storage.",
        "Computed": true
      },
      "enable_vm_discovery": {
        "Type": "Bool",
        "Description": "True if discovery of vCenter VMs is enabled for resource pools backing this VDC. If left unspecified, the actual behaviour depends on enablement at the organization level and at the system level.",
        "Computed": true
      },
      "enabled": {
        "Type": "Bool",
        "Description": "True if this VDC is enabled for use by the organization VDCs. Default is true.",
        "Computed": true
      },
      "include_vm_memory_overhead": {
        "Type": "Bool",
        "Description": "True if the Flex VDC includes memory overhead into its accounting for admission control.",
        "Computed": true
      },
      "memory_guaranteed": {
        "Type": "Float",
        "Description": "Percentage of allocated memory resources guaranteed to vApps deployed in this VDC. For example, if this value is 0.75, then 75% of allocated resources are guaranteed. Required when AllocationModel is AllocationVApp or AllocationPool. When Allocation model is AllocationPool minimum value is 0.2. If the element is empty, vCD sets a value.",
        "Computed": true
      },
      "metadata": {
        "Type": "Map",
        "Description": "Key and value pairs for Org VDC metadata",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "network_pool_name": {
        "Type": "String",
        "Description": "The name of a network pool in the Provider VDC. Required if this VDC will contain routed or isolated networks.",
        "Computed": true
      },
      "network_quota": {
        "Type": "Int",
        "Description": "Maximum number of network objects that can be deployed in this VDC. Defaults to 0, which means no networks can be deployed.",
        "Computed": true
      },
      "nic_quota": {
        "Type": "Int",
        "Description": "Maximum number of virtual NICs allowed in this VDC. Defaults to 0, which specifies an unlimited number.",
        "Computed": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "Organization to create the VDC in"
      },
      "provider_vdc_name": {
        "Type": "String",
        "Description": "A reference to the Provider VDC from which this organization VDC is provisioned.",
        "Computed": true
      },
      "storage_profile": {
        "Type": "List",
        "Description": "Storage profiles supported by this VDC.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "default": {
              "Type": "Bool",
              "Description": "True if this is default storage profile for this VDC. The default storage profile is used when an object that can specify a storage profile is created with no storage profile specified.",
              "Computed": true
            },
            "enabled": {
              "Type": "Bool",
              "Description": "True if this storage profile is enabled for use in the VDC.",
              "Computed": true
            },
            "limit": {
              "Type": "Int",
              "Description": "Maximum number of MB allocated for this storage profile. A value of 0 specifies unlimited MB.",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Name of Provider VDC storage profile.",
              "Computed": true
            },
            "storage_used_in_mb": {
              "Type": "Int",
              "Description": "Storage used in MB",
              "Computed": true
            }
          }
        }
      },
      "vm_quota": {
        "Type": "Int",
        "Description": "The maximum number of VMs that can be created in this VDC. Includes deployed and undeployed VMs in vApps and vApp templates. Defaults to 0, which specifies an unlimited number.",
        "Computed": true
      },
      "vm_sizing_policy_ids": {
        "Type": "Set",
        "Description": "Set of VM sizing policy IDs",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "vcd_portgroup": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of NSX-T Tier-0 router."
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "Portgroup type. One of 'NETWORK', 'DV_PORTGROUP'"
      }
    },
    "vcd_resource_list": {
      "list": {
        "Type": "List",
        "Description": "Holds the list of requested resources",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "list_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "How the list should be built",
        "Default": {
          "Type": "string",
          "Value": "name"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Unique name of the Info"
      },
      "name_id_separator": {
        "Type": "String",
        "Optional": true,
        "Description": "Separator for name_id combination",
        "Default": {
          "Type": "string",
          "Value": "  "
        }
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "parent": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the parent to the resources being retrieved"
      },
      "resource_type": {
        "Type": "String",
        "Required": true,
        "Description": "Which resource we should list"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_resource_schema": {
      "attributes": {
        "Type": "Set",
        "Description": "Attributes of the resource",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "computed": {
              "Type": "Bool",
              "Description": "Is the attribute computed",
              "Computed": true
            },
            "description": {
              "Type": "String",
              "Description": "attribute description",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "attribute name",
              "Computed": true
            },
            "optional": {
              "Type": "Bool",
              "Description": "Is the attribute optional",
              "Computed": true
            },
            "required": {
              "Type": "Bool",
              "Description": "Is the attribute required",
              "Computed": true
            },
            "sensitive": {
              "Type": "Bool",
              "Description": "Is the attribute sensitive",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "attribute type",
              "Computed": true
            }
          }
        }
      },
      "block_attributes": {
        "Type": "Set",
        "Description": "The compound attributes for this resource",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "attributes": {
              "Type": "Set",
              "Description": "Attributes of the resource",
              "Computed": true,
              "IsBlock": true,
              "ConfigImplicitMode": "ComputedBlock",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "computed": {
                    "Type": "Bool",
                    "Description": "Is the attribute computed",
                    "Computed": true
                  },
                  "description": {
                    "Type": "String",
                    "Description": "attribute description",
                    "Computed": true
                  },
                  "name": {
                    "Type": "String",
                    "Description": "attribute name",
                    "Computed": true
                  },
                  "optional": {
                    "Type": "Bool",
                    "Description": "Is the attribute optional",
                    "Computed": true
                  },
                  "required": {
                    "Type": "Bool",
                    "Description": "Is the attribute required",
                    "Computed": true
                  },
                  "sensitive": {
                    "Type": "Bool",
                    "Description": "Is the attribute sensitive",
                    "Computed": true
                  },
                  "type": {
                    "Type": "String",
                    "Description": "attribute type",
                    "Computed": true
                  }
                }
              }
            },
            "name": {
              "Type": "String",
              "Description": "Name of the Block",
              "Computed": true
            },
            "nesting_mode": {
              "Type": "String",
              "Description": "How the block is nested",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Unique name of the structure"
      },
      "resource_type": {
        "Type": "String",
        "Required": true,
        "Description": "Which resource we should list"
      }
    },
    "vcd_right": {
      "bundle_key": {
        "Type": "String",
        "Description": "Key used for internationalization",
        "Computed": true
      },
      "category_id": {
        "Type": "String",
        "Description": "ID of the category for this right",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Right description",
        "Computed": true
      },
      "implied_rights": {
        "Type": "Set",
        "Description": "list of rights that are implied with this one",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Description": "ID of the implied right",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Name of the implied right",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of Right."
      },
      "right_type": {
        "Type": "String",
        "Description": "Type of the right",
        "Computed": true
      }
    },
    "vcd_rights_bundle": {
      "bundle_key": {
        "Type": "String",
        "Description": "Key used for internationalization",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Rights bundle description",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of rights bundle."
      },
      "publish_to_all_tenants": {
        "Type": "Bool",
        "Description": "When true, publishes the global role to all tenants",
        "Computed": true
      },
      "read_only": {
        "Type": "Bool",
        "Description": "Whether this rights bundle is read-only",
        "Computed": true
      },
      "rights": {
        "Type": "Set",
        "Description": "list of rights assigned to this rights bundle",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tenants": {
        "Type": "Set",
        "Description": "list of tenants to which this rights bundle is published",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "vcd_role": {
      "bundle_key": {
        "Type": "String",
        "Description": "Key used for internationalization",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Role description",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of Role."
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "read_only": {
        "Type": "Bool",
        "Description": "Whether this role is read-only",
        "Computed": true
      },
      "rights": {
        "Type": "Set",
        "Description": "list of rights assigned to this role",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "vcd_storage_profile": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of storage profile"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_vapp": {
      "description": {
        "Type": "String",
        "Description": "Optional description of the vApp",
        "Computed": true
      },
      "guest_properties": {
        "Type": "Map",
        "Description": "Key/value settings for guest properties",
        "Computed": true
      },
      "href": {
        "Type": "String",
        "Description": "vApp Hyper Reference",
        "Computed": true
      },
      "lease": {
        "Type": "List",
        "Description": "Defines lease parameters for this vApp",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "runtime_lease_in_sec": {
              "Type": "Int",
              "Description": "How long any of the VMs in the vApp can run before the vApp is automatically powered off or suspended. 0 means never expires",
              "Computed": true
            },
            "storage_lease_in_sec": {
              "Type": "Int",
              "Description": "How long the vApp is available before being automatically deleted or marked as expired. 0 means never expires",
              "Computed": true
            }
          }
        }
      },
      "metadata": {
        "Type": "Map",
        "Description": "Key value map of metadata to assign to this vApp. Key and value can be any string.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "A name for the vApp, unique within the VDC"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "status": {
        "Type": "Int",
        "Description": "Shows the status code of the vApp",
        "Computed": true
      },
      "status_text": {
        "Type": "String",
        "Description": "Shows the status of the vApp",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_vapp_network": {
      "description": {
        "Type": "String",
        "Description": "Optional description for the network",
        "Computed": true
      },
      "dhcp_pool": {
        "Type": "Set",
        "Description": "A range of IPs to issue to virtual machines that don't have a static IP",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "default_lease_time": {
              "Type": "Int",
              "Computed": true
            },
            "enabled": {
              "Type": "Bool",
              "Computed": true
            },
            "end_address": {
              "Type": "String",
              "Computed": true
            },
            "max_lease_time": {
              "Type": "Int",
              "Computed": true
            },
            "start_address": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      },
      "dns1": {
        "Type": "String",
        "Description": "Primary DNS server",
        "Computed": true
      },
      "dns2": {
        "Type": "String",
        "Description": "Secondary DNS server",
        "Computed": true
      },
      "dns_suffix": {
        "Type": "String",
        "Description": "DNS suffix",
        "Computed": true
      },
      "gateway": {
        "Type": "String",
        "Description": "Gateway of the network",
        "Computed": true
      },
      "guest_vlan_allowed": {
        "Type": "Bool",
        "Description": "True if Network allows guest VLAN tagging",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "vApp network name"
      },
      "netmask": {
        "Type": "String",
        "Description": "Netmask address for a subnet",
        "Computed": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "org_network_name": {
        "Type": "String",
        "Description": "org network name to which vapp network is connected",
        "Computed": true
      },
      "retain_ip_mac_enabled": {
        "Type": "Bool",
        "Description": "Specifies whether the network resources such as IP/MAC of router will be retained across deployments.",
        "Computed": true
      },
      "static_ip_pool": {
        "Type": "Set",
        "Description": "A range of IPs permitted to be used as static IPs for virtual machines",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "end_address": {
              "Type": "String",
              "Computed": true
            },
            "start_address": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      },
      "vapp_name": {
        "Type": "String",
        "Required": true,
        "Description": "vApp to use"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_vapp_org_network": {
      "is_fenced": {
        "Type": "Bool",
        "Description": "Fencing allows identical virtual machines in different vApp networks connect to organization VDC networks that are accessed in this vApp",
        "Computed": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "org_network_name": {
        "Type": "String",
        "Required": true,
        "Description": "Organization network name to which vApp network is connected to"
      },
      "retain_ip_mac_enabled": {
        "Type": "Bool",
        "Description": "Specifies whether the network resources such as IP/MAC of router will be retained across deployments.",
        "Computed": true
      },
      "vapp_name": {
        "Type": "String",
        "Required": true,
        "Description": "vApp name"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      }
    },
    "vcd_vapp_vm": {
      "computer_name": {
        "Type": "String",
        "Description": "Computer name assigned to this virtual machine",
        "Computed": true
      },
      "cpu_cores": {
        "Type": "Int",
        "Description": "The number of cores per socket",
        "Computed": true
      },
      "cpu_hot_add_enabled": {
        "Type": "Bool",
        "Description": "True if the virtual machine supports addition of virtual CPUs while powered on.",
        "Computed": true
      },
      "cpus": {
        "Type": "Int",
        "Description": "The number of virtual CPUs to allocate to the VM",
        "Computed": true
      },
      "customization": {
        "Type": "List",
        "Description": "Guest customization block",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "admin_password": {
              "Type": "String",
              "Description": "Manually specify admin password",
              "Computed": true
            },
            "allow_local_admin_password": {
              "Type": "Bool",
              "Description": "Allow local administrator password",
              "Computed": true
            },
            "auto_generate_password": {
              "Type": "Bool",
              "Description": "Auto generate password",
              "Computed": true
            },
            "change_sid": {
              "Type": "Bool",
              "Description": "'true' value will change SID. Applicable only for Windows VMs",
              "Computed": true
            },
            "enabled": {
              "Type": "Bool",
              "Description": "'true' value will enable guest customization. It may occur on first boot or when 'force' is used",
              "Computed": true
            },
            "force": {
              "Type": "Bool",
              "Description": "'true' value will cause the VM to reboot on every 'apply' operation",
              "Computed": true
            },
            "initscript": {
              "Type": "String",
              "Description": "Script to run on initial boot or with customization.force=true set",
              "Computed": true
            },
            "join_domain": {
              "Type": "Bool",
              "Description": "Enable this VM to join a domain",
              "Computed": true
            },
            "join_domain_account_ou": {
              "Type": "String",
              "Description": "Account organizational unit for domain name join",
              "Computed": true
            },
            "join_domain_name": {
              "Type": "String",
              "Description": "Custom domain name for join",
              "Computed": true
            },
            "join_domain_password": {
              "Type": "String",
              "Description": "Password for custom domain name join",
              "Computed": true
            },
            "join_domain_user": {
              "Type": "String",
              "Description": "Username for custom domain name join",
              "Computed": true
            },
            "join_org_domain": {
              "Type": "Bool",
              "Description": "Use organization's domain for joining",
              "Computed": true
            },
            "must_change_password_on_first_login": {
              "Type": "Bool",
              "Description": "Require Administrator to change password on first login",
              "Computed": true
            },
            "number_of_auto_logons": {
              "Type": "Int",
              "Description": "Number of times to log on automatically",
              "Computed": true
            }
          }
        }
      },
      "description": {
        "Type": "String",
        "Description": "The VM description",
        "Computed": true
      },
      "disk": {
        "Type": "Set",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bus_number": {
              "Type": "String",
              "Description": "Bus number on which to place the disk controller",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Independent disk name",
              "Computed": true
            },
            "size_in_mb": {
              "Type": "Int",
              "Description": "The size of the disk in MB.",
              "Computed": true
            },
            "unit_number": {
              "Type": "String",
              "Description": "Unit number (slot) on the bus specified by BusNumber",
              "Computed": true
            }
          }
        }
      },
      "expose_hardware_virtualization": {
        "Type": "Bool",
        "Description": "Expose hardware-assisted CPU virtualization to guest OS.",
        "Computed": true
      },
      "guest_properties": {
        "Type": "Map",
        "Description": "Key/value settings for guest properties",
        "Computed": true
      },
      "hardware_version": {
        "Type": "String",
        "Description": "Virtual Hardware Version.",
        "Computed": true
      },
      "href": {
        "Type": "String",
        "Description": "VM Hyper Reference",
        "Computed": true
      },
      "internal_disk": {
        "Type": "List",
        "Description": "A block will show internal disk details",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bus_number": {
              "Type": "Int",
              "Description": "The number of the SCSI or IDE controller itself.",
              "Computed": true
            },
            "bus_type": {
              "Type": "String",
              "Description": "The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme",
              "Computed": true
            },
            "disk_id": {
              "Type": "String",
              "Description": "The disk ID.",
              "Computed": true
            },
            "iops": {
              "Type": "Int",
              "Description": "Specifies the IOPS for the disk. Default is 0.",
              "Computed": true
            },
            "size_in_mb": {
              "Type": "Int",
              "Description": "The size of the disk in MB.",
              "Computed": true
            },
            "storage_profile": {
              "Type": "String",
              "Description": "Storage profile to override the VM default one",
              "Computed": true
            },
            "thin_provisioned": {
              "Type": "Bool",
              "Description": "Specifies whether the disk storage is pre-allocated or allocated on demand.",
              "Computed": true
            },
            "unit_number": {
              "Type": "Int",
              "Description": "The device number on the SCSI or IDE controller of the disk.",
              "Computed": true
            }
          }
        }
      },
      "memory": {
        "Type": "Int",
        "Description": "The amount of RAM (in MB) to allocate to the VM",
        "Computed": true
      },
      "memory_hot_add_enabled": {
        "Type": "Bool",
        "Description": "True if the virtual machine supports addition of memory while powered on.",
        "Computed": true
      },
      "metadata": {
        "Type": "Map",
        "Description": "Key value map of metadata to assign to this VM",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "A name for the VM, unique within the vApp"
      },
      "network": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "adapter_type": {
              "Type": "String",
              "Description": "Network card adapter type. (e.g. 'E1000', 'E1000E', 'SRIOVETHERNETCARD', 'VMXNET3', 'PCNet32')",
              "Computed": true
            },
            "connected": {
              "Type": "Bool",
              "Description": "It defines if NIC is connected or not.",
              "Computed": true
            },
            "ip": {
              "Type": "String",
              "Description": "IP of the VM. Settings depend on `ip_allocation_mode`",
              "Computed": true
            },
            "ip_allocation_mode": {
              "Type": "String",
              "Description": "IP address allocation mode.",
              "Computed": true
            },
            "is_primary": {
              "Type": "Bool",
              "Description": "Set to true if network interface should be primary. First network card in the list will be primary by default",
              "Computed": true
            },
            "mac": {
              "Type": "String",
              "Description": "Mac address of network interface",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Name of the network this VM should connect to.",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Network type",
              "Computed": true
            }
          }
        }
      },
      "network_dhcp_wait_seconds": {
        "Type": "Int",
        "Optional": true,
        "Description": "Optional number of seconds to try and wait for DHCP IP (valid for 'network' block only)"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "os_type": {
        "Type": "String",
        "Description": "Operating System type.",
        "Computed": true
      },
      "sizing_policy_id": {
        "Type": "String",
        "Optional": true,
        "Description": "VM sizing policy ID.",
        "Computed": true
      },
      "storage_profile": {
        "Type": "String",
        "Description": "Storage profile used with the VM",
        "Computed": true
      },
      "vapp_name": {
        "Type": "String",
        "Required": true,
        "Description": "The vApp this VM belongs to - Required, unless it is a standalone VM"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      },
      "vm_type": {
        "Type": "String",
        "Description": "Type of VM: either 'vcd_vapp_vm' or 'vcd_vm'",
        "Computed": true
      }
    },
    "vcd_vcenter": {
      "connection_status": {
        "Type": "String",
        "Description": "vCenter connection state",
        "Computed": true
      },
      "is_enabled": {
        "Type": "Bool",
        "Description": "vCenter version",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of vCenter."
      },
      "status": {
        "Type": "String",
        "Description": "vCenter status",
        "Computed": true
      },
      "vcenter_host": {
        "Type": "String",
        "Description": "vCenter hostname",
        "Computed": true
      },
      "vcenter_version": {
        "Type": "String",
        "Description": "vCenter version",
        "Computed": true
      }
    },
    "vcd_vdc_group": {
      "default_policy_status": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Default Policy Status",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "VDC group description",
        "Computed": true
      },
      "dfw_enabled": {
        "Type": "Bool",
        "Description": "Distributed firewall status",
        "Computed": true
      },
      "error_message": {
        "Type": "String",
        "Optional": true,
        "Description": "More detailed error message when VDC group has error status",
        "Computed": true
      },
      "id": {
        "Type": "String",
        "Optional": true,
        "Description": "VDC group ID",
        "Computed": true
      },
      "local_egress": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Status whether local egress is enabled for a universal router belonging to a universal VDC group",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of VDC group",
        "Computed": true
      },
      "network_pool_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of used network pool",
        "Computed": true
      },
      "network_pool_universal_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The network provider’s universal id that is backing the universal network pool",
        "Computed": true
      },
      "network_provider_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines the networking provider backing the VDC Group",
        "Computed": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "participating_org_vdcs": {
        "Type": "Set",
        "Description": "The list of organization VDCs that are participating in this group",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "fault_domain_tag": {
              "Type": "String",
              "Description": "Represents the fault domain of a given organization VDC",
              "Computed": true
            },
            "is_remote_org": {
              "Type": "Bool",
              "Description": "Specifies whether the VDC is local to this VCD site",
              "Computed": true
            },
            "network_provider_scope": {
              "Type": "String",
              "Description": "Specifies the network provider scope of the VDC",
              "Computed": true
            },
            "org_id": {
              "Type": "String",
              "Description": "Organization VDC belongs",
              "Computed": true
            },
            "org_name": {
              "Type": "String",
              "Description": "Organization VDC belongs",
              "Computed": true
            },
            "site_id": {
              "Type": "String",
              "Description": "Site VDC belongs",
              "Computed": true
            },
            "site_name": {
              "Type": "String",
              "Description": "Site VDC belongs",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Description": "The status that the VDC can be in e.g. 'SAVING', 'SAVED', 'CONFIGURING', 'REALIZED', 'REALIZATION_FAILED', 'DELETING', 'DELETE_FAILED', 'OBJECT_NOT_FOUND', 'UNCONFIGURED')",
              "Computed": true
            },
            "vdc_id": {
              "Type": "String",
              "Description": "VDC ID",
              "Computed": true
            },
            "vdc_name": {
              "Type": "String",
              "Description": "VDC name",
              "Computed": true
            }
          }
        }
      },
      "status": {
        "Type": "String",
        "Optional": true,
        "Description": "The status that the group can be in (e.g. 'SAVING', 'SAVED', 'CONFIGURING', 'REALIZED', 'REALIZATION_FAILED', 'DELETING', 'DELETE_FAILED', 'OBJECT_NOT_FOUND', 'UNCONFIGURED')",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "Defines the group as LOCAL or UNIVERSAL",
        "Computed": true
      },
      "universal_networking_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True means that a VDC group router has been created",
        "Computed": true
      }
    },
    "vcd_vm": {
      "computer_name": {
        "Type": "String",
        "Description": "Computer name assigned to this virtual machine",
        "Computed": true
      },
      "cpu_cores": {
        "Type": "Int",
        "Description": "The number of cores per socket",
        "Computed": true
      },
      "cpu_hot_add_enabled": {
        "Type": "Bool",
        "Description": "True if the virtual machine supports addition of virtual CPUs while powered on.",
        "Computed": true
      },
      "cpus": {
        "Type": "Int",
        "Description": "The number of virtual CPUs to allocate to the VM",
        "Computed": true
      },
      "customization": {
        "Type": "List",
        "Description": "Guest customization block",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "admin_password": {
              "Type": "String",
              "Description": "Manually specify admin password",
              "Computed": true
            },
            "allow_local_admin_password": {
              "Type": "Bool",
              "Description": "Allow local administrator password",
              "Computed": true
            },
            "auto_generate_password": {
              "Type": "Bool",
              "Description": "Auto generate password",
              "Computed": true
            },
            "change_sid": {
              "Type": "Bool",
              "Description": "'true' value will change SID. Applicable only for Windows VMs",
              "Computed": true
            },
            "enabled": {
              "Type": "Bool",
              "Description": "'true' value will enable guest customization. It may occur on first boot or when 'force' is used",
              "Computed": true
            },
            "force": {
              "Type": "Bool",
              "Description": "'true' value will cause the VM to reboot on every 'apply' operation",
              "Computed": true
            },
            "initscript": {
              "Type": "String",
              "Description": "Script to run on initial boot or with customization.force=true set",
              "Computed": true
            },
            "join_domain": {
              "Type": "Bool",
              "Description": "Enable this VM to join a domain",
              "Computed": true
            },
            "join_domain_account_ou": {
              "Type": "String",
              "Description": "Account organizational unit for domain name join",
              "Computed": true
            },
            "join_domain_name": {
              "Type": "String",
              "Description": "Custom domain name for join",
              "Computed": true
            },
            "join_domain_password": {
              "Type": "String",
              "Description": "Password for custom domain name join",
              "Computed": true
            },
            "join_domain_user": {
              "Type": "String",
              "Description": "Username for custom domain name join",
              "Computed": true
            },
            "join_org_domain": {
              "Type": "Bool",
              "Description": "Use organization's domain for joining",
              "Computed": true
            },
            "must_change_password_on_first_login": {
              "Type": "Bool",
              "Description": "Require Administrator to change password on first login",
              "Computed": true
            },
            "number_of_auto_logons": {
              "Type": "Int",
              "Description": "Number of times to log on automatically",
              "Computed": true
            }
          }
        }
      },
      "description": {
        "Type": "String",
        "Description": "The VM description",
        "Computed": true
      },
      "disk": {
        "Type": "Set",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bus_number": {
              "Type": "String",
              "Description": "Bus number on which to place the disk controller",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Independent disk name",
              "Computed": true
            },
            "size_in_mb": {
              "Type": "Int",
              "Description": "The size of the disk in MB.",
              "Computed": true
            },
            "unit_number": {
              "Type": "String",
              "Description": "Unit number (slot) on the bus specified by BusNumber",
              "Computed": true
            }
          }
        }
      },
      "expose_hardware_virtualization": {
        "Type": "Bool",
        "Description": "Expose hardware-assisted CPU virtualization to guest OS.",
        "Computed": true
      },
      "guest_properties": {
        "Type": "Map",
        "Description": "Key/value settings for guest properties",
        "Computed": true
      },
      "hardware_version": {
        "Type": "String",
        "Description": "Virtual Hardware Version.",
        "Computed": true
      },
      "href": {
        "Type": "String",
        "Description": "VM Hyper Reference",
        "Computed": true
      },
      "internal_disk": {
        "Type": "List",
        "Description": "A block will show internal disk details",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bus_number": {
              "Type": "Int",
              "Description": "The number of the SCSI or IDE controller itself.",
              "Computed": true
            },
            "bus_type": {
              "Type": "String",
              "Description": "The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme",
              "Computed": true
            },
            "disk_id": {
              "Type": "String",
              "Description": "The disk ID.",
              "Computed": true
            },
            "iops": {
              "Type": "Int",
              "Description": "Specifies the IOPS for the disk. Default is 0.",
              "Computed": true
            },
            "size_in_mb": {
              "Type": "Int",
              "Description": "The size of the disk in MB.",
              "Computed": true
            },
            "storage_profile": {
              "Type": "String",
              "Description": "Storage profile to override the VM default one",
              "Computed": true
            },
            "thin_provisioned": {
              "Type": "Bool",
              "Description": "Specifies whether the disk storage is pre-allocated or allocated on demand.",
              "Computed": true
            },
            "unit_number": {
              "Type": "Int",
              "Description": "The device number on the SCSI or IDE controller of the disk.",
              "Computed": true
            }
          }
        }
      },
      "memory": {
        "Type": "Int",
        "Description": "The amount of RAM (in MB) to allocate to the VM",
        "Computed": true
      },
      "memory_hot_add_enabled": {
        "Type": "Bool",
        "Description": "True if the virtual machine supports addition of memory while powered on.",
        "Computed": true
      },
      "metadata": {
        "Type": "Map",
        "Description": "Key value map of metadata to assign to this VM",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "A name for the VM, unique within the vApp"
      },
      "network": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "adapter_type": {
              "Type": "String",
              "Description": "Network card adapter type. (e.g. 'E1000', 'E1000E', 'SRIOVETHERNETCARD', 'VMXNET3', 'PCNet32')",
              "Computed": true
            },
            "connected": {
              "Type": "Bool",
              "Description": "It defines if NIC is connected or not.",
              "Computed": true
            },
            "ip": {
              "Type": "String",
              "Description": "IP of the VM. Settings depend on `ip_allocation_mode`",
              "Computed": true
            },
            "ip_allocation_mode": {
              "Type": "String",
              "Description": "IP address allocation mode.",
              "Computed": true
            },
            "is_primary": {
              "Type": "Bool",
              "Description": "Set to true if network interface should be primary. First network card in the list will be primary by default",
              "Computed": true
            },
            "mac": {
              "Type": "String",
              "Description": "Mac address of network interface",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Name of the network this VM should connect to.",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Network type",
              "Computed": true
            }
          }
        }
      },
      "network_dhcp_wait_seconds": {
        "Type": "Int",
        "Optional": true,
        "Description": "Optional number of seconds to try and wait for DHCP IP (valid for 'network' block only)"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "os_type": {
        "Type": "String",
        "Description": "Operating System type.",
        "Computed": true
      },
      "sizing_policy_id": {
        "Type": "String",
        "Optional": true,
        "Description": "VM sizing policy ID.",
        "Computed": true
      },
      "storage_profile": {
        "Type": "String",
        "Description": "Storage profile used with the VM",
        "Computed": true
      },
      "vapp_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The vApp this VM belongs to - Required, unless it is a standalone VM",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      },
      "vm_type": {
        "Type": "String",
        "Description": "Type of VM: either 'vcd_vapp_vm' or 'vcd_vm'",
        "Computed": true
      }
    },
    "vcd_vm_affinity_rule": {
      "enabled": {
        "Type": "Bool",
        "Description": "True if this affinity rule is enabled",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "VM affinity rule name. Used to retrieve a rule only when the name is unique"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      },
      "polarity": {
        "Type": "String",
        "Description": "One of 'Affinity', 'Anti-Affinity'",
        "Computed": true
      },
      "required": {
        "Type": "Bool",
        "Description": "True if this affinity rule is required. When a rule is mandatory, a host failover will not power on the VM if doing so would violate the rule",
        "Computed": true
      },
      "rule_id": {
        "Type": "String",
        "Optional": true,
        "Description": "VM affinity rule ID. It's the preferred way of identifying a rule"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of VDC to use, optional if defined at provider level"
      },
      "vm_ids": {
        "Type": "Set",
        "Description": "Set of VM IDs assigned to this rule",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "vcd_vm_sizing_policy": {
      "cpu": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cores_per_socket": {
              "Type": "String",
              "Description": "The number of cores per socket for a VM. This is a VM hardware configuration. The number of vCPUs that is defined in the VM sizing policy must be divisible by the number of cores per socket. If the number of vCPUs is not divisible by the number of cores per socket, the number of cores per socket becomes invalid.",
              "Computed": true
            },
            "count": {
              "Type": "String",
              "Description": "Defines the number of vCPUs configured for a VM. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, this count becomes the configured number of vCPUs for the VM.",
              "Computed": true
            },
            "limit_in_mhz": {
              "Type": "String",
              "Description": "Defines the CPU limit in MHz for a VM. If not defined in the VDC compute policy, CPU limit is equal to the vCPU speed multiplied by the number of vCPUs.",
              "Computed": true
            },
            "reservation_guarantee": {
              "Type": "String",
              "Description": "Defines how much of the CPU resources of a VM are reserved. The allocated CPU for a VM equals the number of vCPUs times the vCPU speed in MHz. The value of the attribute ranges between 0 and one. Value of 0 CPU reservation guarantee defines no CPU reservation. Value of 1 defines 100% of CPU reserved.",
              "Computed": true
            },
            "shares": {
              "Type": "String",
              "Description": "Defines the number of CPU shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of CPU as another VM, it is entitled to consume twice as much CPU when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.",
              "Computed": true
            },
            "speed_in_mhz": {
              "Type": "String",
              "Description": "Defines the vCPU speed of a core in MHz.",
              "Computed": true
            }
          }
        }
      },
      "description": {
        "Type": "String",
        "Computed": true
      },
      "memory": {
        "Type": "List",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "limit_in_mb": {
              "Type": "String",
              "Description": "Defines the memory limit in MB for a VM. If not defined in the VM sizing policy, memory limit is equal to the allocated memory for the VM.",
              "Computed": true
            },
            "reservation_guarantee": {
              "Type": "String",
              "Description": "Defines the reserved amount of memory that is configured for a VM. The value of the attribute ranges between 0 and one. Value of 0 memory reservation guarantee defines no memory reservation. Value of 1 defines 100% of memory reserved.",
              "Computed": true
            },
            "shares": {
              "Type": "String",
              "Description": "Defines the number of memory shares for a VM. Shares specify the relative importance of a VM within a virtual data center. If a VM has twice as many shares of memory as another VM, it is entitled to consume twice as much memory when these two virtual machines are competing for resources. If not defined in the VDC compute policy, normal shares are applied to the VM.",
              "Computed": true
            },
            "size_in_mb": {
              "Type": "String",
              "Description": "Defines the memory configured for a VM in MB. This is a VM hardware configuration. When a tenant assigns the VM sizing policy to a VM, the VM receives the amount of memory defined by this attribute.",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations"
      }
    }
  }
}