{
  ".schema_version": "2",
  ".sdk_type": "terraform-plugin-sdk-v2",
  "name": "boundary",
  "type": "provider",
  "version": "v1.0.5",
  "provider": {
    "addr": {
      "Type": "String",
      "Required": true,
      "Description": "The base url of the Boundary API, e.g. \"http://127.0.0.1:9200\". If not set, it will be read from the \"BOUNDARY_ADDR\" env var."
    },
    "auth_method_id": {
      "Type": "String",
      "Optional": true,
      "Description": "The auth method ID e.g. ampw_1234567890"
    },
    "password_auth_method_login_name": {
      "Type": "String",
      "Optional": true,
      "Description": "The auth method login name for password-style auth methods"
    },
    "password_auth_method_password": {
      "Type": "String",
      "Optional": true,
      "Description": "The auth method password for password-style auth methods"
    },
    "recovery_kms_hcl": {
      "Type": "String",
      "Optional": true,
      "Description": "Can be a heredoc string or a path on disk. If set, the string/file will be parsed as HCL and used with the recovery KMS mechanism. While this is set, it will override any other authentication information; the KMS mechanism will always be used. See Boundary's KMS docs for examples: https://boundaryproject.io/docs/configuration/kms"
    },
    "token": {
      "Type": "String",
      "Optional": true,
      "Description": "The Boundary token to use, as a string or path on disk containing just the string. If set, the token read here will be used in place of authenticating with the auth method specified in \"auth_method_id\", although the recovery KMS mechanism will still override this. Can also be set with the BOUNDARY_TOKEN environment variable."
    }
  },
  "resources": {
    "boundary_account": {
      "auth_method_id": {
        "Type": "String",
        "Required": true,
        "Description": "The resource ID for the auth method."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The account description."
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the account.",
        "Computed": true
      },
      "login_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The login name for this account.",
        "Deprecated": "Will be removed in favor of using attributes parameter"
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The account name. Defaults to the resource name."
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "The account password. Only set on create, changes will not be reflected when updating account.",
        "Deprecated": "Will be removed in favor of using attributes parameter"
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The resource type."
      }
    },
    "boundary_account_oidc": {
      "auth_method_id": {
        "Type": "String",
        "Required": true,
        "Description": "The resource ID for the auth method."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The account description."
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the account.",
        "Computed": true
      },
      "issuer": {
        "Type": "String",
        "Optional": true,
        "Description": "The OIDC issuer."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The account name. Defaults to the resource name."
      },
      "subject": {
        "Type": "String",
        "Optional": true,
        "Description": "The OIDC subject."
      }
    },
    "boundary_account_password": {
      "auth_method_id": {
        "Type": "String",
        "Required": true,
        "Description": "The resource ID for the auth method."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The account description."
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the account.",
        "Computed": true
      },
      "login_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The login name for this account.",
        "Deprecated": "Will be removed in favor of using attributes parameter"
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The account name. Defaults to the resource name."
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "The account password. Only set on create, changes will not be reflected when updating account.",
        "Deprecated": "Will be removed in favor of using attributes parameter"
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The resource type."
      }
    },
    "boundary_auth_method": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The auth method description."
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the account.",
        "Computed": true
      },
      "min_login_name_length": {
        "Type": "Int",
        "Optional": true,
        "Description": "The minimum login name length.",
        "Computed": true,
        "Deprecated": "Will be removed in favor of using attributes parameter"
      },
      "min_password_length": {
        "Type": "Int",
        "Optional": true,
        "Description": "The minimum password length.",
        "Computed": true,
        "Deprecated": "Will be removed in favor of using attributes parameter"
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The auth method name. Defaults to the resource name."
      },
      "scope_id": {
        "Type": "String",
        "Required": true,
        "Description": "The scope ID."
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The resource type."
      }
    },
    "boundary_auth_method_oidc": {
      "account_claim_maps": {
        "Type": "List",
        "Optional": true,
        "Description": "Account claim maps for the to_claim of sub.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "allowed_audiences": {
        "Type": "List",
        "Optional": true,
        "Description": "Audiences for which the provider responses will be allowed",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "api_url_prefix": {
        "Type": "String",
        "Optional": true,
        "Description": "The API prefix to use when generating callback URLs for the provider. Should be set to an address at which the provider can reach back to the controller."
      },
      "callback_url": {
        "Type": "String",
        "Optional": true,
        "Description": "The URL that should be provided to the IdP for callbacks.",
        "Computed": true
      },
      "claims_scopes": {
        "Type": "List",
        "Optional": true,
        "Description": "Claims scopes.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "client_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The client ID assigned to this auth method from the provider."
      },
      "client_secret": {
        "Type": "String",
        "Optional": true,
        "Description": "The secret key assigned to this auth method from the provider. Once set, only the hash will be kept and the original value can be removed from configuration."
      },
      "client_secret_hmac": {
        "Type": "String",
        "Optional": true,
        "Description": "The HMAC of the client secret returned by the Boundary controller, which is used for comparison after initial setting of the value.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The auth method description."
      },
      "disable_discovered_config_validation": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Disables validation logic ensuring that the OIDC provider's information from its discovery endpoint matches the information here. The validation is only performed at create or update time."
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the auth method.",
        "Computed": true
      },
      "idp_ca_certs": {
        "Type": "List",
        "Optional": true,
        "Description": "A list of CA certificates to trust when validating the IdP's token signatures.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "is_primary_for_scope": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When true, makes this auth method the primary auth method for the scope in which it resides. The primary auth method for a scope means the the user will be automatically created when they login using an OIDC account."
      },
      "issuer": {
        "Type": "String",
        "Optional": true,
        "Description": "The issuer corresponding to the provider, which must match the issuer field in generated tokens."
      },
      "max_age": {
        "Type": "Int",
        "Optional": true,
        "Description": "The max age to provide to the provider, indicating how much time is allowed to have passed since the last authentication before the user is challenged again."
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The auth method name. Defaults to the resource name."
      },
      "scope_id": {
        "Type": "String",
        "Required": true,
        "Description": "The scope ID."
      },
      "signing_algorithms": {
        "Type": "List",
        "Optional": true,
        "Description": "Allowed signing algorithms for the provider's issued tokens.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "Can be one of 'inactive', 'active-private', or 'active-public'. Currently automatically set to active-public.",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "The type of auth method; hardcoded.",
        "Default": {
          "Type": "string",
          "Value": "oidc"
        }
      }
    },
    "boundary_auth_method_password": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The auth method description."
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the account.",
        "Computed": true
      },
      "min_login_name_length": {
        "Type": "Int",
        "Optional": true,
        "Description": "The minimum login name length.",
        "Computed": true
      },
      "min_password_length": {
        "Type": "Int",
        "Optional": true,
        "Description": "The minimum password length.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The auth method name. Defaults to the resource name."
      },
      "scope_id": {
        "Type": "String",
        "Required": true,
        "Description": "The scope ID."
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "The resource type, hardcoded per resource",
        "Default": {
          "Type": "string",
          "Value": "password"
        }
      }
    },
    "boundary_credential_library_vault": {
      "credential_store_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the credential store that this library belongs to."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The Vault credential library description."
      },
      "http_method": {
        "Type": "String",
        "Optional": true,
        "Description": "The HTTP method the library uses when requesting credentials from Vault. Defaults to 'GET'"
      },
      "http_request_body": {
        "Type": "String",
        "Optional": true,
        "Description": "The body of the HTTP request the library sends to Vault when requesting credentials. Only valid if `http_method` is set to `POST`."
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the Vault credential library.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The Vault credential library name. Defaults to the resource name."
      },
      "path": {
        "Type": "String",
        "Required": true,
        "Description": "The path in Vault to request credentials from."
      }
    },
    "boundary_credential_store_vault": {
      "address": {
        "Type": "String",
        "Required": true,
        "Description": "The address to Vault server. This should be a complete URL such as 'https://127.0.0.1:8200'"
      },
      "ca_cert": {
        "Type": "String",
        "Optional": true,
        "Description": "A PEM-encoded CA certificate to verify the Vault server's TLS certificate."
      },
      "client_certificate": {
        "Type": "String",
        "Optional": true,
        "Description": "A PEM-encoded client certificate to use for TLS authentication to the Vault server."
      },
      "client_certificate_key": {
        "Type": "String",
        "Optional": true,
        "Description": "A PEM-encoded private key matching the client certificate from 'client_certificate'."
      },
      "client_certificate_key_hmac": {
        "Type": "String",
        "Description": "The Vault client certificate key hmac.",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The Vault credential store description."
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the Vault credential store.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The Vault credential store name. Defaults to the resource name."
      },
      "namespace": {
        "Type": "String",
        "Optional": true,
        "Description": "The namespace within Vault to use."
      },
      "scope_id": {
        "Type": "String",
        "Required": true,
        "Description": "The scope for this credential store."
      },
      "tls_server_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Name to use as the SNI host when connecting to Vault via TLS."
      },
      "tls_skip_verify": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether or not to skip TLS verification."
      },
      "token": {
        "Type": "String",
        "Required": true,
        "Description": "A token used for accessing Vault."
      },
      "token_hmac": {
        "Type": "String",
        "Description": "The Vault token hmac.",
        "Computed": true
      }
    },
    "boundary_group": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The group description."
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the group.",
        "Computed": true
      },
      "member_ids": {
        "Type": "Set",
        "Optional": true,
        "Description": "Resource IDs for group members, these are most likely boundary users.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The group name. Defaults to the resource name."
      },
      "scope_id": {
        "Type": "String",
        "Required": true,
        "Description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset."
      }
    },
    "boundary_host": {
      "address": {
        "Type": "String",
        "Optional": true,
        "Description": "The static address of the host resource as `\u003cIP\u003e` (note: port assignment occurs in the target resource definition, do not add :port here) or a domain name."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The host description."
      },
      "host_catalog_id": {
        "Type": "String",
        "Required": true
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the host.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The host name. Defaults to the resource name."
      },
      "type": {
        "Type": "String",
        "Required": true
      }
    },
    "boundary_host_catalog": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The host catalog description."
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the host catalog.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The host catalog name. Defaults to the resource name."
      },
      "scope_id": {
        "Type": "String",
        "Required": true,
        "Description": "The scope ID in which the resource is created."
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The host catalog type. Only `static` is supported."
      }
    },
    "boundary_host_set": {
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The hostset description."
      },
      "host_catalog_id": {
        "Type": "String",
        "Required": true,
        "Description": "The catalog for the hostset."
      },
      "host_ids": {
        "Type": "Set",
        "Optional": true,
        "Description": "The list of host IDs contained in this set.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the hostset.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The hostset name. Defaults to the resource name."
      },
      "type": {
        "Type": "String",
        "Required": true
      }
    },
    "boundary_managed_group": {
      "auth_method_id": {
        "Type": "String",
        "Required": true,
        "Description": "The resource ID for the auth method."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The managed group description."
      },
      "filter": {
        "Type": "String",
        "Required": true,
        "Description": "Boolean expression to filter the workers for this managed group."
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the group.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The managed group name. Defaults to the resource name."
      }
    },
    "boundary_role": {
      "default_role": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates that the role containing this value is the default role (that is, has the id 'r_default'), which triggers some specialized behavior to allow it to be imported and managed."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The role description."
      },
      "grant_scope_id": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "grant_strings": {
        "Type": "Set",
        "Optional": true,
        "Description": " A list of stringified grants for the role.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the role.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The role name. Defaults to the resource name."
      },
      "principal_ids": {
        "Type": "Set",
        "Optional": true,
        "Description": "A list of principal (user or group) IDs to add as principals on the role.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "scope_id": {
        "Type": "String",
        "Required": true,
        "Description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset."
      }
    },
    "boundary_scope": {
      "auto_create_admin_role": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If set, when a new scope is created, the provider will not disable the functionality that automatically creates a role in the new scope and gives permissions to manage the scope to the provider's user. Marking this true makes for simpler HCL but results in role resources that are unmanaged by Terraform."
      },
      "auto_create_default_role": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Only relevant when creating an org scope. If set, when a new scope is created, the provider will not disable the functionality that automatically creates a role in the new scope and gives listing of scopes and auth methods and the ability to authenticate to the anonymous user. Marking this true makes for simpler HCL but results in role resources that are unmanaged by Terraform."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The scope description."
      },
      "global_scope": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates that the scope containing this value is the global scope, which triggers some specialized behavior to allow it to be imported and managed."
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the scope.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The scope name. Defaults to the resource name."
      },
      "scope_id": {
        "Type": "String",
        "Required": true,
        "Description": "The scope ID containing the sub scope resource."
      }
    },
    "boundary_target": {
      "application_credential_library_ids": {
        "Type": "Set",
        "Optional": true,
        "Description": "A list of application credential library ID's.",
        "ConflictsWith": [
          "application_credential_source_ids"
        ],
        "Deprecated": "Please use 'application_credential_source_ids' instead",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "application_credential_source_ids": {
        "Type": "Set",
        "Optional": true,
        "Description": "A list of application credential source ID's.",
        "ConflictsWith": [
          "application_credential_library_ids"
        ],
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "default_port": {
        "Type": "Int",
        "Optional": true,
        "Description": "The default port for this target."
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The target description."
      },
      "host_set_ids": {
        "Type": "Set",
        "Optional": true,
        "Description": "A list of host set ID's.",
        "ConflictsWith": [
          "host_source_ids"
        ],
        "Deprecated": "Please use 'host_source_ids' instead",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "host_source_ids": {
        "Type": "Set",
        "Optional": true,
        "Description": "A list of host source ID's.",
        "ConflictsWith": [
          "host_set_ids"
        ],
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the target.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The target name. Defaults to the resource name."
      },
      "scope_id": {
        "Type": "String",
        "Required": true,
        "Description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset."
      },
      "session_connection_limit": {
        "Type": "Int",
        "Optional": true,
        "Computed": true
      },
      "session_max_seconds": {
        "Type": "Int",
        "Optional": true,
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "The target resource type."
      },
      "worker_filter": {
        "Type": "String",
        "Optional": true,
        "Description": "Boolean expression to filter the workers for this target"
      }
    },
    "boundary_user": {
      "account_ids": {
        "Type": "Set",
        "Optional": true,
        "Description": "Account ID's to associate with this user resource.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The user description."
      },
      "id": {
        "Type": "String",
        "Description": "The ID of the user.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The username. Defaults to the resource name."
      },
      "scope_id": {
        "Type": "String",
        "Required": true,
        "Description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset."
      }
    }
  },
  "data-sources": {}
}