{
  ".schema_version": "2",
  ".sdk_type": "terraform",
  "name": "cohesity",
  "type": "provider",
  "version": "v1.0.1",
  "provider": {
    "cluster_domain": {
      "Type": "String",
      "Optional": true,
      "Description": "The domain name of cohesity user",
      "Default": {
        "Type": "string",
        "Value": "LOCAL"
      }
    },
    "cluster_password": {
      "Type": "String",
      "Required": true,
      "Description": "Cohesity cluster password",
      "DefaultFunc": "ENV(COHESITY_PASSWORD)"
    },
    "cluster_username": {
      "Type": "String",
      "Required": true,
      "Description": "Cohesity cluster username",
      "DefaultFunc": "ENV(COHESITY_USERNAME)"
    },
    "cluster_vip": {
      "Type": "String",
      "Required": true,
      "Description": "IP or hostname of Cohesity cluster node",
      "DefaultFunc": "ENV(COHESITY_IP)"
    }
  },
  "resources": {
    "cohesity_cloud_edition_cluster": {
      "cluster_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "The default gateway IP address for the cluster network"
      },
      "cluster_name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the new Cloud edition cluster"
      },
      "cluster_subnet_mask": {
        "Type": "String",
        "Required": true,
        "Description": "The subnet mask of the cluster network"
      },
      "dns_servers": {
        "Type": "Set",
        "Required": true,
        "Description": "The DNS servers to configure on the cluster",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "domain_names": {
        "Type": "Set",
        "Required": true,
        "Description": "The domain names to configure on the cluster",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "enable_encryption": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Specifies whether or not to enable encryption.\n\t\t\t\t If encryption is enabled, all data on the cluster will be encrypted",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "enable_fips_mode": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Specifies whether or not to enable FIPS mode.\n\t\t\t\t This must be set to true in order to enable FIPS",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "encryption_keys_rotation_period": {
        "Type": "Int",
        "Optional": true,
        "Description": "The rotation period for encryption keys in days",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "license_key": {
        "Type": "String",
        "Required": true,
        "Description": "Cohesity license key to apply after cluster creation",
        "DefaultFunc": "ENV(CLOUD_COHESITY_CLUSTER_LICENSE_KEY)"
      },
      "metadata_fault_tolerance": {
        "Type": "Int",
        "Optional": true,
        "Description": "The metadata fault tolerance",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "node_ips": {
        "Type": "Set",
        "Required": true,
        "Description": "IP addresses of the nodes in the cluster",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ntp_servers": {
        "Type": "Set",
        "Required": true,
        "Description": "The NTP servers to configure on the cluster",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "operation_timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "The time to wait in minutes for cluster creation or destruction",
        "Default": {
          "Type": "int",
          "Value": "120"
        }
      }
    },
    "cohesity_job_run": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the Protection Job"
      },
      "operation_timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "Specifies the time to wait in minutes for the protection job run\n\t\t\t\t to complete the run or stop the run",
        "Default": {
          "Type": "int",
          "Value": "120"
        }
      },
      "run_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies the type of backup",
        "Default": {
          "Type": "string",
          "Value": "Regular"
        }
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies whether to start or stop a protection job run",
        "Default": {
          "Type": "string",
          "Value": "start"
        }
      },
      "timestamp": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the current timestamp to trigger starting or stopping a job run"
      }
    },
    "cohesity_job_vmware": {
      "delete_snapshots": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Specifies if snapshots generated by the Protection\n\t\t\t\tJob should also be deleted when the Job is deleted.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "exclude": {
        "Type": "Set",
        "Optional": true,
        "Description": "Specifies the list of vm's from the protection source\n\t\t\t\tthat should not be protected and are excluded from being\n\t\t\t\tbacked up by the protection job",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "full_sla": {
        "Type": "Int",
        "Optional": true,
        "Description": "Specifies the number of minutes that a Job Run\n\t\t\t\tof a Full (no CBT) backup schedule is expected to complete,\n\t\t\t\twhich is known as a Service-Level Agreement (SLA).A SLA\n\t\t\t\tviolation is reported when the run time of a Job Run exceeds\n\t\t\t\tthe SLA time period specified for this backup schedule.",
        "Default": {
          "Type": "int",
          "Value": "120"
        }
      },
      "include": {
        "Type": "Set",
        "Optional": true,
        "Description": "Specifies the list of vm's from the\n\t\t\t\tprotection source to be protected by this protection job",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "incremental_sla": {
        "Type": "Int",
        "Optional": true,
        "Description": "Specifies the number of minutes that a Job Run\n\t\t\t\tof a CBT-based backup schedule is expected to complete, which\n\t\t\t\tis known as a Service-Level Agreement (SLA). A SLA violation\n\t\t\t\tis reported when the run time of a Job Run exceeds the SLA\n\t\t\t\ttime period specified for this backup schedule.",
        "Default": {
          "Type": "int",
          "Value": "60"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the Protection Job"
      },
      "policy": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the protection policy"
      },
      "priority": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies the priority of execution for a\n\t\t\t\tProtection Job",
        "Default": {
          "Type": "string",
          "Value": "Medium"
        }
      },
      "protection_source": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the Protection source"
      },
      "qos_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies the QoS policy type to use for this\n\t\t\t\tProtection Job. 'BackupHDD' indicates the Cohesity Cluster\n\t\t\t\twrites data directly to the HDD tier for this Protection Job.\n\t\t\t\tThis is the recommended setting. 'BackupSSD' indicates the\n\t\t\t\tCohesity Cluster writes data directly to the SSD tier for this\n\t\t\t\tProtection Job. Only specify this policy if you need fast ingest\n\t\t\t\tspeed for a small number of Protection Jobs",
        "Default": {
          "Type": "string",
          "Value": "BackupHDD"
        }
      },
      "storage_domain": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the storage domain where this job\n\t\t\t\twrites data"
      },
      "timezone": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies the timezone in the format: Area/Location",
        "Default": {
          "Type": "string",
          "Value": "America/Los_Angeles"
        }
      }
    },
    "cohesity_physical_edition_cluster": {
      "cluster_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "The default gateway IP address for the cluster network"
      },
      "cluster_name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the new Physical edition cluste"
      },
      "cluster_subnet_mask": {
        "Type": "String",
        "Required": true,
        "Description": "The subnet mask of the cluster network"
      },
      "dns_servers": {
        "Type": "Set",
        "Required": true,
        "Description": "The DNS servers to configure on the cluster",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "domain_names": {
        "Type": "Set",
        "Required": true,
        "Description": "The domain names to configure on the cluster",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "enable_encryption": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Specifies whether or not to enable encryption.\n\t\t\t\t If encryption is enabled, all data on the cluster will be encrypted",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "enable_fips_mode": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Specifies whether or not to enable FIPS mode.\n\t\t\t\t This must be set to true in order to enable FIPS",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "encryption_keys_rotation_period": {
        "Type": "Int",
        "Optional": true,
        "Description": "The rotation period for encryption keys in days",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      },
      "ipmi_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "The default gateway IP address for the IPMI network"
      },
      "ipmi_password": {
        "Type": "String",
        "Required": true,
        "Description": "The IPMI password",
        "DefaultFunc": "ENV(PHYSICAL_COHESITY_CLUSTER_IPMI_PASSWORD)"
      },
      "ipmi_subnet_mask": {
        "Type": "String",
        "Required": true,
        "Description": "The subnet mask for the IPMI network"
      },
      "ipmi_username": {
        "Type": "String",
        "Required": true,
        "Description": "The IPMI username",
        "DefaultFunc": "ENV(PHYSICAL_COHESITY_CLUSTER_IPMI_USERNAME)"
      },
      "license_key": {
        "Type": "String",
        "Required": true,
        "Description": "Cohesity license key to apply after cluster creation",
        "DefaultFunc": "ENV(PHYSICAL_COHESITY_CLUSTER_LICENSE_KEY)"
      },
      "metadata_fault_tolerance": {
        "Type": "Int",
        "Optional": true,
        "Description": "The metadata fault tolerance",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "node_configs": {
        "Type": "Set",
        "Required": true,
        "Description": "The configuration for the nodes in the new cluster",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "node_ip": {
              "Type": "String",
              "Required": true,
              "Description": "IP address for this node"
            },
            "node_ipmi_ip": {
              "Type": "String",
              "Required": true,
              "Description": "IPMI IP for this node"
            }
          }
        }
      },
      "ntp_servers": {
        "Type": "Set",
        "Required": true,
        "Description": "The NTP servers to configure on the cluster",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "operation_timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "The time to wait in minutes for cluster creation or destruction",
        "Default": {
          "Type": "int",
          "Value": "120"
        }
      },
      "virtual_ip_hostname": {
        "Type": "String",
        "Required": true,
        "Description": "The virtual IP hostname"
      },
      "virtual_ips": {
        "Type": "Set",
        "Required": true,
        "Description": "The virtauls IPs for the new cluster",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "cohesity_restore_vmware_vm": {
      "backup_timestamp": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies the time of the protection job run.\n\t\t\t\t Should be in the format YYYY-MM-DD HH:MM Area/Location"
      },
      "job_name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the protection job that backed up the objects to be restored"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the name of the restore task"
      },
      "operation_timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "The time to wait in minutes for restore task start/stop operation",
        "Default": {
          "Type": "int",
          "Value": "120"
        }
      },
      "state": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies whether to start or stop a restore task",
        "Default": {
          "Type": "string",
          "Value": "start"
        }
      },
      "vm_names": {
        "Type": "Set",
        "Optional": true,
        "Description": "Specifies the names of the virtual machines to restore",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "vmware_parameters": {
        "Type": "Map",
        "Optional": true,
        "Description": "Specifies vmware parameters for the restore task",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "cohesity_source_vmware": {
      "active_task_latency": {
        "Type": "Int",
        "Optional": true,
        "Description": "If the latency of a datastore is above this value,\n\t\t\t\texisting backup tasks using the datastore are throttled.",
        "Default": {
          "Type": "int",
          "Value": "30"
        }
      },
      "ca_certificate": {
        "Type": "String",
        "Optional": true,
        "Description": "The contents of CA certificate",
        "Default": {
          "Type": "string"
        }
      },
      "cap_streams_per_datastore": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Specifies whether datastore streams are configured\n\t\t\t\tfor all datastores that are part of the registered entity. If set\n\t\t\t\tto true, number of streams from Cohesity cluster to the registered\n\t\t\t\tentity will be limited to the value set for number_of_streams. If\n\t\t\t\tnot set or set to false, there is no max limit for the number of \n\t\t\t\tconcurrent streams.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "enable_latency_throttling": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether read operations to the datastores,\n\t\t\t\twhich are part of the registered Protection Source, are throttled.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "enable_ssl_verification": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Specifies whether SSL verification should be performed.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "endpoint": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies the network endpoint of the Protection\n\t\t\t\tSource where it is reachable. It could be an URL or hostname or\n\t\t\t\tan IP address of the Protection Source\n\t\t\t\t\t\t\t  "
      },
      "new_task_latency": {
        "Type": "Int",
        "Optional": true,
        "Description": "If the latency of a datastore is above this value,\n\t\t\t\tthen new backup tasks using the datastore will not be started.",
        "Default": {
          "Type": "int",
          "Value": "30"
        }
      },
      "number_of_streams": {
        "Type": "Int",
        "Optional": true,
        "Description": "Specifies the limit on the number of streams\n\t\t\t\tCohesity cluster will make concurrently to the datastores\n\t\t\t\tof the registered entity. This limit is enforced only when the\n\t\t\t\tcap_streams_per_datastore is set to true",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      },
      "password": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies password of the username to access the target source",
        "DefaultFunc": "ENV(COHESITY_SOURCE_VMWARE_PASSWORD)"
      },
      "username": {
        "Type": "String",
        "Required": true,
        "Description": "Specifies username to access the target source"
      },
      "vmware_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Specifies the VMware entity type",
        "Default": {
          "Type": "string",
          "Value": "VCenter"
        }
      }
    },
    "cohesity_virtual_edition_cluster": {
      "cluster_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "The default gateway IP address for the cluster network"
      },
      "cluster_name": {
        "Type": "String",
        "Required": true,
        "Description": "The name of the new Virtual edition cluster"
      },
      "cluster_subnet_mask": {
        "Type": "String",
        "Required": true,
        "Description": "The subnet mask of the cluster network"
      },
      "dns_servers": {
        "Type": "Set",
        "Required": true,
        "Description": "The DNS servers to configure on the cluster",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "domain_names": {
        "Type": "Set",
        "Required": true,
        "Description": "The domain names to configure on the cluster",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "enable_encryption": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Specifies whether or not to enable encryption.\n\t\t\t\t If encryption is enabled, all data on the cluster will be encrypted",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "enable_fips_mode": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Specifies whether or not to enable FIPS mode.\n\t\t\t\t This must be set to true in order to enable FIPS",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "encryption_keys_rotation_period": {
        "Type": "Int",
        "Optional": true,
        "Description": "The rotation period for encryption keys in days",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      },
      "license_key": {
        "Type": "String",
        "Required": true,
        "Description": "Cohesity license key to apply after cluster creation",
        "DefaultFunc": "ENV(VIRTUAL_COHESITY_CLUSTER_LICENSE_KEY)"
      },
      "metadata_fault_tolerance": {
        "Type": "Int",
        "Optional": true,
        "Description": "The metadata fault tolerance",
        "Default": {
          "Type": "int",
          "Value": "0"
        }
      },
      "node_ips": {
        "Type": "Set",
        "Required": true,
        "Description": "IP addresses of the nodes in the cluster",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ntp_servers": {
        "Type": "Set",
        "Required": true,
        "Description": "The NTP servers to configure on the cluster",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "operation_timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "The time to wait in minutes for cluster creation or destruction",
        "Default": {
          "Type": "int",
          "Value": "120"
        }
      },
      "virtual_ip_hostname": {
        "Type": "String",
        "Required": true,
        "Description": "The virtual IP hostname"
      },
      "virtual_ips": {
        "Type": "Set",
        "Required": true,
        "Description": "The virtauls IPs for the new cluster",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    }
  },
  "data-sources": {}
}