{
  ".schema_version": "2",
  ".sdk_type": "terraform-plugin-sdk-v2",
  "name": "fastly",
  "type": "provider",
  "version": "v0.38.0",
  "provider": {
    "api_key": {
      "Type": "String",
      "Optional": true,
      "Description": "Fastly API Key from https://app.fastly.com/#account",
      "DefaultFunc": "ENV(FASTLY_API_KEY)"
    },
    "base_url": {
      "Type": "String",
      "Optional": true,
      "Description": "Fastly API URL",
      "DefaultFunc": "ENV(FASTLY_API_URL)"
    },
    "force_http2": {
      "Type": "Bool",
      "Optional": true,
      "Description": "Set this to `true` to disable HTTP/1.x fallback mechanism that the underlying Go library will attempt upon connection to `api.fastly.com:443` by default. This may slightly improve the provider's performance and reduce unnecessary TLS handshakes. Default: `false`",
      "Default": {
        "Type": "bool",
        "Value": "false"
      }
    },
    "no_auth": {
      "Type": "Bool",
      "Optional": true,
      "Description": "Set this to `true` if you only need data source that does not require authentication such as `fastly_ip_ranges`",
      "Default": {
        "Type": "bool",
        "Value": "false"
      }
    }
  },
  "resources": {
    "fastly_service_acl_entries_v1": {
      "acl_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the ACL that the items belong to"
      },
      "entry": {
        "Type": "Set",
        "Optional": true,
        "Description": "ACL Entries",
        "MaxItems": 10000,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "comment": {
              "Type": "String",
              "Optional": true,
              "Description": "A personal freeform descriptive note"
            },
            "id": {
              "Type": "String",
              "Description": "The unique ID of the entry",
              "Computed": true
            },
            "ip": {
              "Type": "String",
              "Required": true,
              "Description": "An IP address that is the focus for the ACL"
            },
            "negated": {
              "Type": "Bool",
              "Optional": true,
              "Description": "A boolean that will negate the match if true",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "subnet": {
              "Type": "String",
              "Optional": true,
              "Description": "An optional subnet mask applied to the IP address"
            }
          }
        }
      },
      "service_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the Service that the ACL belongs to"
      }
    },
    "fastly_service_compute": {
      "activate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Conditionally prevents the Service from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "active_version": {
        "Type": "Int",
        "Description": "The currently active version of your Fastly Service",
        "Computed": true
      },
      "backend": {
        "Type": "Set",
        "Required": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "String",
              "Required": true,
              "Description": "An IPv4, hostname, or IPv6 address for the Backend"
            },
            "auto_loadbalance": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Denotes if this Backend should be included in the pool of backends that requests are load balanced against. Default `true`",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "between_bytes_timeout": {
              "Type": "Int",
              "Optional": true,
              "Description": "How long to wait between bytes in milliseconds. Default `10000`",
              "Default": {
                "Type": "int",
                "Value": "10000"
              }
            },
            "connect_timeout": {
              "Type": "Int",
              "Optional": true,
              "Description": "How long to wait for a timeout in milliseconds. Default `1000`",
              "Default": {
                "Type": "int",
                "Value": "1000"
              }
            },
            "error_threshold": {
              "Type": "Int",
              "Optional": true,
              "Description": "Number of errors to allow before the Backend is marked as down. Default `0`",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "first_byte_timeout": {
              "Type": "Int",
              "Optional": true,
              "Description": "How long to wait for the first bytes in milliseconds. Default `15000`",
              "Default": {
                "Type": "int",
                "Value": "15000"
              }
            },
            "healthcheck": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of a defined `healthcheck` to assign to this backend",
              "Default": {
                "Type": "string"
              }
            },
            "max_conn": {
              "Type": "Int",
              "Optional": true,
              "Description": "Maximum number of connections for this Backend. Default `200`",
              "Default": {
                "Type": "int",
                "Value": "200"
              }
            },
            "max_tls_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum allowed TLS version on SSL connections to this backend.",
              "Default": {
                "Type": "string"
              }
            },
            "min_tls_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Minimum allowed TLS version on SSL connections to this backend.",
              "Default": {
                "Type": "string"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Name for this Backend. Must be unique to this Service. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "override_host": {
              "Type": "String",
              "Optional": true,
              "Description": "The hostname to override the Host header",
              "Default": {
                "Type": "string"
              }
            },
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "The port number on which the Backend responds. Default `80`",
              "Default": {
                "Type": "int",
                "Value": "80"
              }
            },
            "shield": {
              "Type": "String",
              "Optional": true,
              "Description": "The POP of the shield designated to reduce inbound load. Valid values for `shield` are included in the `GET /datacenters` API response",
              "Default": {
                "Type": "string"
              }
            },
            "ssl_ca_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "CA certificate attached to origin.",
              "Default": {
                "Type": "string"
              }
            },
            "ssl_cert_hostname": {
              "Type": "String",
              "Optional": true,
              "Description": "Overrides ssl_hostname, but only for cert verification. Does not affect SNI at all",
              "Default": {
                "Type": "string"
              }
            },
            "ssl_check_cert": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Be strict about checking SSL certs. Default `true`",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "ssl_ciphers": {
              "Type": "String",
              "Optional": true,
              "Description": "Cipher list consisting of one or more cipher strings separated by colons. Commas or spaces are also acceptable separators but colons are normally used.",
              "Default": {
                "Type": "string"
              }
            },
            "ssl_client_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "Client certificate attached to origin. Used when connecting to the backend",
              "Default": {
                "Type": "string"
              }
            },
            "ssl_client_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Client key attached to origin. Used when connecting to the backend",
              "Default": {
                "Type": "string"
              }
            },
            "ssl_hostname": {
              "Type": "String",
              "Optional": true,
              "Description": "Used for both SNI during the TLS handshake and to validate the cert",
              "Deprecated": "Use ssl_cert_hostname and ssl_sni_hostname instead.",
              "Default": {
                "Type": "string"
              }
            },
            "ssl_sni_hostname": {
              "Type": "String",
              "Optional": true,
              "Description": "Overrides ssl_hostname, but only for SNI in the handshake. Does not affect cert validation at all",
              "Default": {
                "Type": "string"
              }
            },
            "use_ssl": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to use SSL to reach the Backend. Default `false`",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "weight": {
              "Type": "Int",
              "Optional": true,
              "Description": "The [portion of traffic](https://docs.fastly.com/en/guides/load-balancing-configuration#how-weight-affects-load-balancing) to send to this Backend. Each Backend receives weight / total of the traffic. Default `100`",
              "Default": {
                "Type": "int",
                "Value": "100"
              }
            }
          }
        }
      },
      "bigquerylogging": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dataset": {
              "Type": "String",
              "Required": true,
              "Description": "The ID of your BigQuery dataset"
            },
            "email": {
              "Type": "String",
              "Required": true,
              "Description": "The email for the service account with write access to your BigQuery dataset. If not provided, this will be pulled from a `FASTLY_BQ_EMAIL` environment variable",
              "DefaultFunc": "ENV(FASTLY_BQ_EMAIL)"
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A unique name to identify this BigQuery logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "project_id": {
              "Type": "String",
              "Required": true,
              "Description": "The ID of your GCP project"
            },
            "secret_key": {
              "Type": "String",
              "Required": true,
              "Description": "The secret key associated with the service account that has write access to your BigQuery table. If not provided, this will be pulled from the `FASTLY_BQ_SECRET_KEY` environment variable. Typical format for this is a private key in a string with newlines",
              "DefaultFunc": "ENV(FASTLY_BQ_SECRET_KEY)"
            },
            "table": {
              "Type": "String",
              "Required": true,
              "Description": "The ID of your BigQuery table"
            },
            "template": {
              "Type": "String",
              "Optional": true,
              "Description": "BigQuery table name suffix template",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "blobstoragelogging": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "account_name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique Azure Blob Storage namespace in which your data objects are stored"
            },
            "compression_codec": {
              "Type": "String",
              "Optional": true,
              "Description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip_level will default to 3. To specify a different level, leave compression_codec blank and explicitly set the level using gzip_level. Specifying both compression_codec and gzip_level in the same API request will result in an error."
            },
            "container": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the Azure Blob Storage container in which to store logs"
            },
            "file_max_bytes": {
              "Type": "Int",
              "Optional": true,
              "Description": "Maximum size of an uploaded log file, if non-zero."
            },
            "gzip_level": {
              "Type": "Int",
              "Optional": true,
              "Description": "Level of Gzip compression from `0-9`. `0` means no compression. `1` is the fastest and the least compressed version, `9` is the slowest and the most compressed version. Default `0`",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "message_type": {
              "Type": "String",
              "Optional": true,
              "Description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default `classic`",
              "Default": {
                "Type": "string",
                "Value": "classic"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A unique name to identify the Azure Blob Storage endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "path": {
              "Type": "String",
              "Optional": true,
              "Description": "The path to upload logs to. Must end with a trailing slash. If this field is left empty, the files will be saved in the container's root path"
            },
            "period": {
              "Type": "Int",
              "Optional": true,
              "Description": "How frequently the logs should be transferred in seconds. Default `3600`",
              "Default": {
                "Type": "int",
                "Value": "3600"
              }
            },
            "public_key": {
              "Type": "String",
              "Optional": true,
              "Description": "A PGP public key that Fastly will use to encrypt your log files before writing them to disk"
            },
            "sas_token": {
              "Type": "String",
              "Required": true,
              "Description": "The Azure shared access signature providing write access to the blob service objects. Be sure to update your token before it expires or the logging functionality will not work",
              "DefaultFunc": "ENV(FASTLY_AZURE_SHARED_ACCESS_SIGNATURE)"
            },
            "timestamp_format": {
              "Type": "String",
              "Optional": true,
              "Description": "`strftime` specified timestamp formatting. Default `%Y-%m-%dT%H:%M:%S.000`",
              "Default": {
                "Type": "string",
                "Value": "%Y-%m-%dT%H:%M:%S.000"
              }
            }
          }
        }
      },
      "cloned_version": {
        "Type": "Int",
        "Description": "The latest cloned version by the provider",
        "Computed": true
      },
      "comment": {
        "Type": "String",
        "Optional": true,
        "Description": "Description field for the service. Default `Managed by Terraform`",
        "Default": {
          "Type": "string",
          "Value": "Managed by Terraform"
        }
      },
      "default_host": {
        "Type": "String",
        "Optional": true,
        "Description": "The default hostname"
      },
      "default_ttl": {
        "Type": "Int",
        "Optional": true,
        "Description": "The default Time-to-live (TTL) for requests",
        "Default": {
          "Type": "int",
          "Value": "3600"
        }
      },
      "dictionary": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dictionary_id": {
              "Type": "String",
              "Description": "The ID of the dictionary",
              "Computed": true
            },
            "force_destroy": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Allow the dictionary to be deleted, even if it contains entries. Defaults to false.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A unique name to identify this dictionary. It is important to note that changing this attribute will delete and recreate the dictionary, and discard the current items in the dictionary"
            },
            "write_only": {
              "Type": "Bool",
              "Optional": true,
              "Description": "If `true`, the dictionary is a [private dictionary](https://docs.fastly.com/en/guides/private-dictionaries). Default is `false`. Please note that changing this attribute will delete and recreate the dictionary, and discard the current items in the dictionary. `fastly_service_v1` resource will only manage the dictionary object itself, and items under private dictionaries can not be managed using [`fastly_service_dictionary_items_v1`](https://registry.terraform.io/providers/fastly/fastly/latest/docs/resources/service_dictionary_items_v1#limitations) resource. Therefore, using a write-only/private dictionary should only be done if the items are managed outside of Terraform",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            }
          }
        }
      },
      "director": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "backends": {
              "Type": "Set",
              "Required": true,
              "Description": "Names of defined backends to map the director to. Example: `[ \"origin1\", \"origin2\" ]`",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "capacity": {
              "Type": "Int",
              "Optional": true,
              "Description": "Load balancing weight for the backends. Default `100`",
              "Default": {
                "Type": "int",
                "Value": "100"
              }
            },
            "comment": {
              "Type": "String",
              "Optional": true,
              "Description": "An optional comment about the Director"
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Unique name for this Director. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "quorum": {
              "Type": "Int",
              "Optional": true,
              "Description": "Percentage of capacity that needs to be up for the director itself to be considered up. Default `75`",
              "Default": {
                "Type": "int",
                "Value": "75"
              }
            },
            "retries": {
              "Type": "Int",
              "Optional": true,
              "Description": "How many backends to search if it fails. Default `5`",
              "Default": {
                "Type": "int",
                "Value": "5"
              }
            },
            "shield": {
              "Type": "String",
              "Optional": true,
              "Description": "Selected POP to serve as a \"shield\" for backends. Valid values for `shield` are included in the [`GET /datacenters`](https://developer.fastly.com/reference/api/utils/datacenter/) API response",
              "Default": {
                "Type": "string"
              }
            },
            "type": {
              "Type": "Int",
              "Optional": true,
              "Description": "Type of load balance group to use. Integer, 1 to 4. Values: `1` (random), `3` (hash), `4` (client). Default `1`",
              "Default": {
                "Type": "int",
                "Value": "1"
              }
            }
          }
        }
      },
      "domain": {
        "Type": "Set",
        "Required": true,
        "Description": "A set of Domain names to serve as entry points for your Service",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "comment": {
              "Type": "String",
              "Optional": true,
              "Description": "An optional comment about the Domain."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The domain that this Service will respond to. It is important to note that changing this attribute will delete and recreate the resource."
            }
          }
        }
      },
      "force_destroy": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Services that are active cannot be destroyed. In order to destroy the Service, set `force_destroy` to `true`. Default `false`"
      },
      "gcslogging": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bucket_name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the bucket in which to store the logs"
            },
            "compression_codec": {
              "Type": "String",
              "Optional": true,
              "Description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip_level will default to 3. To specify a different level, leave compression_codec blank and explicitly set the level using gzip_level. Specifying both compression_codec and gzip_level in the same API request will result in an error."
            },
            "email": {
              "Type": "String",
              "Optional": true,
              "Description": "The email address associated with the target GCS bucket on your account. You may optionally provide this secret via an environment variable, `FASTLY_GCS_EMAIL`",
              "DefaultFunc": "ENV(FASTLY_GCS_EMAIL)"
            },
            "gzip_level": {
              "Type": "Int",
              "Optional": true,
              "Description": "Level of Gzip compression, from `0-9`. `0` is no compression. `1` is fastest and least compressed, `9` is slowest and most compressed. Default `0`",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "message_type": {
              "Type": "String",
              "Optional": true,
              "Description": "How the message should be formatted; one of: `classic`, `loggly`, `logplex` or `blank`. Default `classic`. [Fastly Documentation](https://developer.fastly.com/reference/api/logging/gcs/)",
              "Default": {
                "Type": "string",
                "Value": "classic"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A unique name to identify this GCS endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "path": {
              "Type": "String",
              "Optional": true,
              "Description": "Path to store the files. Must end with a trailing slash. If this field is left empty, the files will be saved in the bucket's root path"
            },
            "period": {
              "Type": "Int",
              "Optional": true,
              "Description": "How frequently the logs should be transferred, in seconds (Default 3600)",
              "Default": {
                "Type": "int",
                "Value": "3600"
              }
            },
            "secret_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The secret key associated with the target gcs bucket on your account. You may optionally provide this secret via an environment variable, `FASTLY_GCS_SECRET_KEY`. A typical format for the key is PEM format, containing actual newline characters where required",
              "DefaultFunc": "ENV(FASTLY_GCS_SECRET_KEY)"
            },
            "timestamp_format": {
              "Type": "String",
              "Optional": true,
              "Description": "specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)",
              "Default": {
                "Type": "string",
                "Value": "%Y-%m-%dT%H:%M:%S.000"
              }
            }
          }
        }
      },
      "healthcheck": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "check_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "How often to run the Healthcheck in milliseconds. Default `5000`",
              "Default": {
                "Type": "int",
                "Value": "5000"
              }
            },
            "expected_response": {
              "Type": "Int",
              "Optional": true,
              "Description": "The status code expected from the host. Default `200`",
              "Default": {
                "Type": "int",
                "Value": "200"
              }
            },
            "host": {
              "Type": "String",
              "Required": true,
              "Description": "The Host header to send for this Healthcheck"
            },
            "http_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Whether to use version 1.0 or 1.1 HTTP. Default `1.1`",
              "Default": {
                "Type": "string",
                "Value": "1.1"
              }
            },
            "initial": {
              "Type": "Int",
              "Optional": true,
              "Description": "When loading a config, the initial number of probes to be seen as OK. Default `3`",
              "Default": {
                "Type": "int",
                "Value": "3"
              }
            },
            "method": {
              "Type": "String",
              "Optional": true,
              "Description": "Which HTTP method to use. Default `HEAD`",
              "Default": {
                "Type": "string",
                "Value": "HEAD"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A unique name to identify this Healthcheck. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "path": {
              "Type": "String",
              "Required": true,
              "Description": "The path to check"
            },
            "threshold": {
              "Type": "Int",
              "Optional": true,
              "Description": "How many Healthchecks must succeed to be considered healthy. Default `3`",
              "Default": {
                "Type": "int",
                "Value": "3"
              }
            },
            "timeout": {
              "Type": "Int",
              "Optional": true,
              "Description": "Timeout in milliseconds. Default `500`",
              "Default": {
                "Type": "int",
                "Value": "500"
              }
            },
            "window": {
              "Type": "Int",
              "Optional": true,
              "Description": "The number of most recent Healthcheck queries to keep for this Healthcheck. Default `5`",
              "Default": {
                "Type": "int",
                "Value": "5"
              }
            }
          }
        }
      },
      "httpslogging": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "content_type": {
              "Type": "String",
              "Optional": true,
              "Description": "Value of the `Content-Type` header sent with the request"
            },
            "header_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom header sent with the request"
            },
            "header_value": {
              "Type": "String",
              "Optional": true,
              "Description": "Value of the custom header sent with the request"
            },
            "json_format": {
              "Type": "String",
              "Optional": true,
              "Description": "Formats log entries as JSON. Can be either disabled (`0`), array of json (`1`), or newline delimited json (`2`)",
              "Default": {
                "Type": "string",
                "Value": "0"
              }
            },
            "message_type": {
              "Type": "String",
              "Optional": true,
              "Description": "How the message should be formatted; one of: `classic`, `loggly`, `logplex` or `blank`. Default `blank`",
              "Default": {
                "Type": "string",
                "Value": "blank"
              }
            },
            "method": {
              "Type": "String",
              "Optional": true,
              "Description": "HTTP method used for request. Can be either `POST` or `PUT`. Default `POST`",
              "Default": {
                "Type": "string",
                "Value": "POST"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the HTTPS logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "request_max_bytes": {
              "Type": "Int",
              "Optional": true,
              "Description": "The maximum number of bytes sent in one request"
            },
            "request_max_entries": {
              "Type": "Int",
              "Optional": true,
              "Description": "The maximum number of logs sent in one request"
            },
            "tls_ca_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "A secure certificate to authenticate the server with. Must be in PEM format"
            },
            "tls_client_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "The client certificate used to make authenticated requests. Must be in PEM format"
            },
            "tls_client_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The client private key used to make authenticated requests. Must be in PEM format"
            },
            "tls_hostname": {
              "Type": "String",
              "Optional": true,
              "Description": "Used during the TLS handshake to validate the certificate"
            },
            "url": {
              "Type": "String",
              "Required": true,
              "Description": "URL that log data will be sent to. Must use the https protocol"
            }
          }
        }
      },
      "logentries": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Logentries logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "The port number configured in Logentries",
              "Default": {
                "Type": "int",
                "Value": "20000"
              }
            },
            "token": {
              "Type": "String",
              "Required": true,
              "Description": "Use token based authentication (https://logentries.com/doc/input-token/)"
            },
            "use_tls": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether to use TLS for secure logging",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            }
          }
        }
      },
      "logging_cloudfiles": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_key": {
              "Type": "String",
              "Required": true,
              "Description": "Your Cloud File account access key"
            },
            "bucket_name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of your Cloud Files container"
            },
            "compression_codec": {
              "Type": "String",
              "Optional": true,
              "Description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip_level will default to 3. To specify a different level, leave compression_codec blank and explicitly set the level using gzip_level. Specifying both compression_codec and gzip_level in the same API request will result in an error."
            },
            "gzip_level": {
              "Type": "Int",
              "Optional": true,
              "Description": "What level of GZIP encoding to have when dumping logs (default `0`, no compression)",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "message_type": {
              "Type": "String",
              "Optional": true,
              "Description": "How the message should be formatted. One of: `classic` (default), `loggly`, `logplex` or `blank`",
              "Default": {
                "Type": "string",
                "Value": "classic"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Rackspace Cloud Files logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "path": {
              "Type": "String",
              "Optional": true,
              "Description": "The path to upload logs to"
            },
            "period": {
              "Type": "Int",
              "Optional": true,
              "Description": "How frequently log files are finalized so they can be available for reading (in seconds, default `3600`)",
              "Default": {
                "Type": "int",
                "Value": "3600"
              }
            },
            "public_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The PGP public key that Fastly will use to encrypt your log files before writing them to disk"
            },
            "region": {
              "Type": "String",
              "Optional": true,
              "Description": "The region to stream logs to. One of: DFW (Dallas), ORD (Chicago), IAD (Northern Virginia), LON (London), SYD (Sydney), HKG (Hong Kong)"
            },
            "timestamp_format": {
              "Type": "String",
              "Optional": true,
              "Description": "The `strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)",
              "Default": {
                "Type": "string",
                "Value": "%Y-%m-%dT%H:%M:%S.000"
              }
            },
            "user": {
              "Type": "String",
              "Required": true,
              "Description": "The username for your Cloud Files account"
            }
          }
        }
      },
      "logging_datadog": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Datadog logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "region": {
              "Type": "String",
              "Optional": true,
              "Description": "The region that log data will be sent to. One of `US` or `EU`. Defaults to `US` if undefined",
              "Default": {
                "Type": "string",
                "Value": "US"
              }
            },
            "token": {
              "Type": "String",
              "Required": true,
              "Description": "The API key from your Datadog account"
            }
          }
        }
      },
      "logging_digitalocean": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_key": {
              "Type": "String",
              "Required": true,
              "Description": "Your DigitalOcean Spaces account access key"
            },
            "bucket_name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the DigitalOcean Space"
            },
            "compression_codec": {
              "Type": "String",
              "Optional": true,
              "Description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip_level will default to 3. To specify a different level, leave compression_codec blank and explicitly set the level using gzip_level. Specifying both compression_codec and gzip_level in the same API request will result in an error."
            },
            "domain": {
              "Type": "String",
              "Optional": true,
              "Description": "The domain of the DigitalOcean Spaces endpoint (default `nyc3.digitaloceanspaces.com`)",
              "Default": {
                "Type": "string",
                "Value": "nyc3.digitaloceanspaces.com"
              }
            },
            "gzip_level": {
              "Type": "Int",
              "Optional": true,
              "Description": "What level of Gzip encoding to have when dumping logs (default `0`, no compression)"
            },
            "message_type": {
              "Type": "String",
              "Optional": true,
              "Description": "How the message should be formatted. One of: `classic` (default), `loggly`, `logplex` or `blank`",
              "Default": {
                "Type": "string",
                "Value": "classic"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the DigitalOcean Spaces logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "path": {
              "Type": "String",
              "Optional": true,
              "Description": "The path to upload logs to"
            },
            "period": {
              "Type": "Int",
              "Optional": true,
              "Description": "How frequently log files are finalized so they can be available for reading (in seconds, default `3600`)"
            },
            "public_key": {
              "Type": "String",
              "Optional": true,
              "Description": "A PGP public key that Fastly will use to encrypt your log files before writing them to disk"
            },
            "secret_key": {
              "Type": "String",
              "Required": true,
              "Description": "Your DigitalOcean Spaces account secret key"
            },
            "timestamp_format": {
              "Type": "String",
              "Optional": true,
              "Description": "`strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)"
            }
          }
        }
      },
      "logging_elasticsearch": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "index": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the Elasticsearch index to send documents (logs) to"
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Elasticsearch logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "BasicAuth password for Elasticsearch"
            },
            "pipeline": {
              "Type": "String",
              "Optional": true,
              "Description": "The ID of the Elasticsearch ingest pipeline to apply pre-process transformations to before indexing"
            },
            "request_max_bytes": {
              "Type": "Int",
              "Optional": true,
              "Description": "The maximum number of logs sent in one request. Defaults to `0` for unbounded",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "request_max_entries": {
              "Type": "Int",
              "Optional": true,
              "Description": "The maximum number of bytes sent in one request. Defaults to `0` for unbounded",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "tls_ca_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "A secure certificate to authenticate the server with. Must be in PEM format"
            },
            "tls_client_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "The client certificate used to make authenticated requests. Must be in PEM format"
            },
            "tls_client_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The client private key used to make authenticated requests. Must be in PEM format"
            },
            "tls_hostname": {
              "Type": "String",
              "Optional": true,
              "Description": "The hostname used to verify the server's certificate. It can either be the Common Name (CN) or a Subject Alternative Name (SAN)"
            },
            "url": {
              "Type": "String",
              "Required": true,
              "Description": "The Elasticsearch URL to stream logs to"
            },
            "user": {
              "Type": "String",
              "Optional": true,
              "Description": "BasicAuth username for Elasticsearch"
            }
          }
        }
      },
      "logging_ftp": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "String",
              "Required": true,
              "Description": "The FTP address to stream logs to"
            },
            "compression_codec": {
              "Type": "String",
              "Optional": true,
              "Description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip_level will default to 3. To specify a different level, leave compression_codec blank and explicitly set the level using gzip_level. Specifying both compression_codec and gzip_level in the same API request will result in an error."
            },
            "gzip_level": {
              "Type": "Int",
              "Optional": true,
              "Description": "Gzip Compression level. Default `0`",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "message_type": {
              "Type": "String",
              "Optional": true,
              "Description": "How the message should be formatted (default: `classic`)",
              "Default": {
                "Type": "string",
                "Value": "classic"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the FTP logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "password": {
              "Type": "String",
              "Required": true,
              "Description": "The password for the server (for anonymous use an email address)"
            },
            "path": {
              "Type": "String",
              "Required": true,
              "Description": "The path to upload log files to. If the path ends in `/` then it is treated as a directory"
            },
            "period": {
              "Type": "Int",
              "Optional": true,
              "Description": "How frequently the logs should be transferred, in seconds (Default `3600`)",
              "Default": {
                "Type": "int",
                "Value": "3600"
              }
            },
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "The port number. Default: `21`",
              "Default": {
                "Type": "int",
                "Value": "21"
              }
            },
            "public_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The PGP public key that Fastly will use to encrypt your log files before writing them to disk"
            },
            "timestamp_format": {
              "Type": "String",
              "Optional": true,
              "Description": "specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)",
              "Default": {
                "Type": "string",
                "Value": "%Y-%m-%dT%H:%M:%S.000"
              }
            },
            "user": {
              "Type": "String",
              "Required": true,
              "Description": "The username for the server (can be `anonymous`)"
            }
          }
        }
      },
      "logging_googlepubsub": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Google Cloud Pub/Sub logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "project_id": {
              "Type": "String",
              "Required": true,
              "Description": "The ID of your Google Cloud Platform project"
            },
            "secret_key": {
              "Type": "String",
              "Required": true,
              "Description": "Your Google Cloud Platform account secret key. The `private_key` field in your service account authentication JSON. You may optionally provide this secret via an environment variable, `FASTLY_GOOGLE_PUBSUB_SECRET_KEY`.",
              "DefaultFunc": "ENV(FASTLY_GOOGLE_PUBSUB_SECRET_KEY)"
            },
            "topic": {
              "Type": "String",
              "Required": true,
              "Description": "The Google Cloud Pub/Sub topic to which logs will be published"
            },
            "user": {
              "Type": "String",
              "Required": true,
              "Description": "Your Google Cloud Platform service account email address. The `client_email` field in your service account authentication JSON. You may optionally provide this via an environment variable, `FASTLY_GOOGLE_PUBSUB_EMAIL`.",
              "DefaultFunc": "ENV(FASTLY_GOOGLE_PUBSUB_EMAIL)"
            }
          }
        }
      },
      "logging_heroku": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Heroku logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "token": {
              "Type": "String",
              "Required": true,
              "Description": "The token to use for authentication (https://www.heroku.com/docs/customer-token-authentication-token/)"
            },
            "url": {
              "Type": "String",
              "Required": true,
              "Description": "The URL to stream logs to"
            }
          }
        }
      },
      "logging_honeycomb": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dataset": {
              "Type": "String",
              "Required": true,
              "Description": "The Honeycomb Dataset you want to log to"
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Honeycomb logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "token": {
              "Type": "String",
              "Required": true,
              "Description": "The Write Key from the Account page of your Honeycomb account"
            }
          }
        }
      },
      "logging_kafka": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "auth_method": {
              "Type": "String",
              "Optional": true,
              "Description": "SASL authentication method. One of: plain, scram-sha-256, scram-sha-512"
            },
            "brokers": {
              "Type": "String",
              "Required": true,
              "Description": "A comma-separated list of IP addresses or hostnames of Kafka brokers"
            },
            "compression_codec": {
              "Type": "String",
              "Optional": true,
              "Description": "The codec used for compression of your logs. One of: `gzip`, `snappy`, `lz4`"
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Kafka logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "parse_log_keyvals": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Enables parsing of key=value tuples from the beginning of a logline, turning them into record headers",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "SASL Pass"
            },
            "request_max_bytes": {
              "Type": "Int",
              "Optional": true,
              "Description": "Maximum size of log batch, if non-zero. Defaults to 0 for unbounded"
            },
            "required_acks": {
              "Type": "String",
              "Optional": true,
              "Description": "The Number of acknowledgements a leader must receive before a write is considered successful. One of: `1` (default) One server needs to respond. `0` No servers need to respond. `-1`\tWait for all in-sync replicas to respond"
            },
            "tls_ca_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "A secure certificate to authenticate the server with. Must be in PEM format"
            },
            "tls_client_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "The client certificate used to make authenticated requests. Must be in PEM format"
            },
            "tls_client_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The client private key used to make authenticated requests. Must be in PEM format"
            },
            "tls_hostname": {
              "Type": "String",
              "Optional": true,
              "Description": "The hostname used to verify the server's certificate. It can either be the Common Name or a Subject Alternative Name (SAN)"
            },
            "topic": {
              "Type": "String",
              "Required": true,
              "Description": "The Kafka topic to send logs to"
            },
            "use_tls": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether to use TLS for secure logging. Can be either `true` or `false`",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "user": {
              "Type": "String",
              "Optional": true,
              "Description": "SASL User"
            }
          }
        }
      },
      "logging_kinesis": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The AWS access key to be used to write to the stream"
            },
            "iam_role": {
              "Type": "String",
              "Optional": true,
              "Description": "The Amazon Resource Name (ARN) for the IAM role granting Fastly access to Kinesis. Not required if `access_key` and `secret_key` are provided."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Kinesis logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "region": {
              "Type": "String",
              "Optional": true,
              "Description": "The AWS region the stream resides in. (Default: `us-east-1`)",
              "Default": {
                "Type": "string",
                "Value": "us-east-1"
              }
            },
            "secret_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The AWS secret access key to authenticate with"
            },
            "topic": {
              "Type": "String",
              "Required": true,
              "Description": "The Kinesis stream name"
            }
          }
        }
      },
      "logging_loggly": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Loggly logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "token": {
              "Type": "String",
              "Required": true,
              "Description": "The token to use for authentication (https://www.loggly.com/docs/customer-token-authentication-token/)."
            }
          }
        }
      },
      "logging_logshuttle": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Log Shuttle logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "token": {
              "Type": "String",
              "Required": true,
              "Description": "The data authentication token associated with this endpoint"
            },
            "url": {
              "Type": "String",
              "Required": true,
              "Description": "Your Log Shuttle endpoint URL"
            }
          }
        }
      },
      "logging_newrelic": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the New Relic logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "region": {
              "Type": "String",
              "Optional": true,
              "Description": "The region that log data will be sent to. Default: `US`",
              "Default": {
                "Type": "string",
                "Value": "US"
              }
            },
            "token": {
              "Type": "String",
              "Required": true,
              "Description": "The Insert API key from the Account page of your New Relic account"
            }
          }
        }
      },
      "logging_openstack": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_key": {
              "Type": "String",
              "Required": true,
              "Description": "Your OpenStack account access key"
            },
            "bucket_name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of your OpenStack container"
            },
            "compression_codec": {
              "Type": "String",
              "Optional": true,
              "Description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip_level will default to 3. To specify a different level, leave compression_codec blank and explicitly set the level using gzip_level. Specifying both compression_codec and gzip_level in the same API request will result in an error."
            },
            "gzip_level": {
              "Type": "Int",
              "Optional": true,
              "Description": "What level of Gzip encoding to have when dumping logs (default `0`, no compression)",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "message_type": {
              "Type": "String",
              "Optional": true,
              "Description": "How the message should be formatted; one of: `classic`, `loggly`, `logplex` or `blank`. Default `classic`. [Fastly Documentation](https://developer.fastly.com/reference/api/logging/gcs/)",
              "Default": {
                "Type": "string",
                "Value": "classic"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the OpenStack logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "path": {
              "Type": "String",
              "Optional": true,
              "Description": "Path to store the files. Must end with a trailing slash. If this field is left empty, the files will be saved in the bucket's root path"
            },
            "period": {
              "Type": "Int",
              "Optional": true,
              "Description": "How frequently the logs should be transferred, in seconds. Default `3600`",
              "Default": {
                "Type": "int",
                "Value": "3600"
              }
            },
            "public_key": {
              "Type": "String",
              "Optional": true,
              "Description": "A PGP public key that Fastly will use to encrypt your log files before writing them to disk"
            },
            "timestamp_format": {
              "Type": "String",
              "Optional": true,
              "Description": "specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)",
              "Default": {
                "Type": "string",
                "Value": "%Y-%m-%dT%H:%M:%S.000"
              }
            },
            "url": {
              "Type": "String",
              "Required": true,
              "Description": "Your OpenStack auth url"
            },
            "user": {
              "Type": "String",
              "Required": true,
              "Description": "The username for your OpenStack account"
            }
          }
        }
      },
      "logging_scalyr": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Scalyr logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "region": {
              "Type": "String",
              "Optional": true,
              "Description": "The region that log data will be sent to. One of `US` or `EU`. Defaults to `US` if undefined",
              "Default": {
                "Type": "string",
                "Value": "US"
              }
            },
            "token": {
              "Type": "String",
              "Required": true,
              "Description": "The token to use for authentication (https://www.scalyr.com/keys)"
            }
          }
        }
      },
      "logging_sftp": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "String",
              "Required": true,
              "Description": "The SFTP address to stream logs to"
            },
            "compression_codec": {
              "Type": "String",
              "Optional": true,
              "Description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip_level will default to 3. To specify a different level, leave compression_codec blank and explicitly set the level using gzip_level. Specifying both compression_codec and gzip_level in the same API request will result in an error."
            },
            "gzip_level": {
              "Type": "Int",
              "Optional": true,
              "Description": "What level of Gzip encoding to have when dumping logs (default `0`, no compression)",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "message_type": {
              "Type": "String",
              "Optional": true,
              "Description": "How the message should be formatted. One of: `classic` (default), `loggly`, `logplex` or `blank`",
              "Default": {
                "Type": "string",
                "Value": "classic"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the SFTP logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "The password for the server. If both `password` and `secret_key` are passed, `secret_key` will be preferred"
            },
            "path": {
              "Type": "String",
              "Required": true,
              "Description": "The path to upload log files to. If the path ends in `/` then it is treated as a directory"
            },
            "period": {
              "Type": "Int",
              "Optional": true,
              "Description": "How frequently log files are finalized so they can be available for reading (in seconds, default `3600`)",
              "Default": {
                "Type": "int",
                "Value": "3600"
              }
            },
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "The port the SFTP service listens on. (Default: `22`)",
              "Default": {
                "Type": "int",
                "Value": "22"
              }
            },
            "public_key": {
              "Type": "String",
              "Optional": true,
              "Description": "A PGP public key that Fastly will use to encrypt your log files before writing them to disk"
            },
            "secret_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The SSH private key for the server. If both `password` and `secret_key` are passed, `secret_key` will be preferred"
            },
            "ssh_known_hosts": {
              "Type": "String",
              "Required": true,
              "Description": "A list of host keys for all hosts we can connect to over SFTP"
            },
            "timestamp_format": {
              "Type": "String",
              "Optional": true,
              "Description": "The `strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)",
              "Default": {
                "Type": "string",
                "Value": "%Y-%m-%dT%H:%M:%S.000"
              }
            },
            "user": {
              "Type": "String",
              "Required": true,
              "Description": "The username for the server"
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The unique name for the Service to create"
      },
      "package": {
        "Type": "List",
        "Required": true,
        "Description": "The `package` block supports uploading or modifying Wasm packages for use in a Fastly Compute@Edge service. See Fastly's documentation on [Compute@Edge](https://developer.fastly.com/learning/compute/)",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "filename": {
              "Type": "String",
              "Required": true,
              "Description": "The path to the Wasm deployment package within your local filesystem"
            },
            "source_code_hash": {
              "Type": "String",
              "Optional": true,
              "Description": "Used to trigger updates. Must be set to a SHA512 hash of the package file specified with the filename. The usual way to set this is filesha512(\"package.tar.gz\") (Terraform 0.11.12 and later) or filesha512(file(\"package.tar.gz\")) (Terraform 0.11.11 and earlier), where \"package.tar.gz\" is the local filename of the Wasm deployment package",
              "Computed": true
            }
          }
        }
      },
      "papertrail": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "String",
              "Required": true,
              "Description": "The address of the Papertrail endpoint"
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A unique name to identify this Papertrail endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "port": {
              "Type": "Int",
              "Required": true,
              "Description": "The port associated with the address where the Papertrail endpoint can be accessed"
            }
          }
        }
      },
      "s3logging": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "acl": {
              "Type": "String",
              "Optional": true,
              "Description": "The AWS [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl) to use for objects uploaded to the S3 bucket. Options are: `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, `bucket-owner-read`, `bucket-owner-full-control`"
            },
            "bucket_name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the bucket in which to store the logs"
            },
            "compression_codec": {
              "Type": "String",
              "Optional": true,
              "Description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip_level will default to 3. To specify a different level, leave compression_codec blank and explicitly set the level using gzip_level. Specifying both compression_codec and gzip_level in the same API request will result in an error."
            },
            "domain": {
              "Type": "String",
              "Optional": true,
              "Description": "If you created the S3 bucket outside of `us-east-1`, then specify the corresponding bucket endpoint. Example: `s3-us-west-2.amazonaws.com`",
              "Default": {
                "Type": "string",
                "Value": "s3.amazonaws.com"
              }
            },
            "gzip_level": {
              "Type": "Int",
              "Optional": true,
              "Description": "Level of Gzip compression, from `0-9`. `0` is no compression. `1` is fastest and least compressed, `9` is slowest and most compressed. Default `0`",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "message_type": {
              "Type": "String",
              "Optional": true,
              "Description": "How the message should be formatted; one of: `classic`, `loggly`, `logplex` or `blank`. Default `classic`",
              "Default": {
                "Type": "string",
                "Value": "classic"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the S3 logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "path": {
              "Type": "String",
              "Optional": true,
              "Description": "Path to store the files. Must end with a trailing slash. If this field is left empty, the files will be saved in the bucket's root path"
            },
            "period": {
              "Type": "Int",
              "Optional": true,
              "Description": "How frequently the logs should be transferred, in seconds. Default `3600`",
              "Default": {
                "Type": "int",
                "Value": "3600"
              }
            },
            "public_key": {
              "Type": "String",
              "Optional": true,
              "Description": "A PGP public key that Fastly will use to encrypt your log files before writing them to disk"
            },
            "redundancy": {
              "Type": "String",
              "Optional": true,
              "Description": "The S3 storage class (redundancy level). Should be one of: `standard`, `reduced_redundancy`, `standard_ia`, or `onezone_ia`"
            },
            "s3_access_key": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS Access Key of an account with the required permissions to post logs. It is **strongly** recommended you create a separate IAM user with permissions to only operate on this Bucket. This key will be not be encrypted. Not required if `iam_role` is provided. You can provide this key via an environment variable, `FASTLY_S3_ACCESS_KEY`",
              "DefaultFunc": "ENV(FASTLY_S3_ACCESS_KEY)"
            },
            "s3_iam_role": {
              "Type": "String",
              "Optional": true,
              "Description": "The Amazon Resource Name (ARN) for the IAM role granting Fastly access to S3. Not required if `access_key` and `secret_key` are provided. You can provide this value via an environment variable, `FASTLY_S3_IAM_ROLE`",
              "DefaultFunc": "ENV(FASTLY_S3_IAM_ROLE)"
            },
            "s3_secret_key": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS Secret Key of an account with the required permissions to post logs. It is **strongly** recommended you create a separate IAM user with permissions to only operate on this Bucket. This secret will be not be encrypted. Not required if `iam_role` is provided. You can provide this secret via an environment variable, `FASTLY_S3_SECRET_KEY`",
              "DefaultFunc": "ENV(FASTLY_S3_SECRET_KEY)"
            },
            "server_side_encryption": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify what type of server side encryption should be used. Can be either `AES256` or `aws:kms`"
            },
            "server_side_encryption_kms_key_id": {
              "Type": "String",
              "Optional": true,
              "Description": "Optional server-side KMS Key Id. Must be set if server_side_encryption is set to `aws:kms`"
            },
            "timestamp_format": {
              "Type": "String",
              "Optional": true,
              "Description": "`strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)",
              "Default": {
                "Type": "string",
                "Value": "%Y-%m-%dT%H:%M:%S.000"
              }
            }
          }
        }
      },
      "splunk": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A unique name to identify the Splunk endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "tls_ca_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "A secure certificate to authenticate the server with. Must be in PEM format. You can provide this certificate via an environment variable, `FASTLY_SPLUNK_CA_CERT`",
              "DefaultFunc": "ENV(FASTLY_SPLUNK_CA_CERT)"
            },
            "tls_client_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "The client certificate used to make authenticated requests. Must be in PEM format.",
              "DefaultFunc": "ENV(FASTLY_SPLUNK_CLIENT_CERT)"
            },
            "tls_client_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The client private key used to make authenticated requests. Must be in PEM format.",
              "DefaultFunc": "ENV(FASTLY_SPLUNK_CLIENT_KEY)"
            },
            "tls_hostname": {
              "Type": "String",
              "Optional": true,
              "Description": "The hostname used to verify the server's certificate. It can either be the Common Name or a Subject Alternative Name (SAN)"
            },
            "token": {
              "Type": "String",
              "Required": true,
              "Description": "The Splunk token to be used for authentication",
              "DefaultFunc": "ENV(FASTLY_SPLUNK_TOKEN)"
            },
            "url": {
              "Type": "String",
              "Required": true,
              "Description": "The Splunk URL to stream logs to"
            },
            "use_tls": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether to use TLS for secure logging. Default: `false`",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            }
          }
        }
      },
      "stale_if_error": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enables serving a stale object if there is an error",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "stale_if_error_ttl": {
        "Type": "Int",
        "Optional": true,
        "Description": "The default time-to-live (TTL) for serving the stale object for the version",
        "Default": {
          "Type": "int",
          "Value": "43200"
        }
      },
      "sumologic": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "message_type": {
              "Type": "String",
              "Optional": true,
              "Description": "How the message should be formatted; one of: `classic`, `loggly`, `logplex` or `blank`. Default `classic`. See [Fastly's Documentation on Sumologic](https://developer.fastly.com/reference/api/logging/sumologic/)",
              "Default": {
                "Type": "string",
                "Value": "classic"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A unique name to identify this Sumologic endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "url": {
              "Type": "String",
              "Required": true,
              "Description": "The URL to Sumologic collector endpoint"
            }
          }
        }
      },
      "syslog": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "String",
              "Required": true,
              "Description": "A hostname or IPv4 address of the Syslog endpoint"
            },
            "message_type": {
              "Type": "String",
              "Optional": true,
              "Description": "How the message should be formatted; one of: `classic`, `loggly`, `logplex` or `blank`. Default `classic`",
              "Default": {
                "Type": "string",
                "Value": "classic"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A unique name to identify this Syslog endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "The port associated with the address where the Syslog endpoint can be accessed. Default `514`",
              "Default": {
                "Type": "int",
                "Value": "514"
              }
            },
            "tls_ca_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "A secure certificate to authenticate the server with. Must be in PEM format. You can provide this certificate via an environment variable, `FASTLY_SYSLOG_CA_CERT`",
              "DefaultFunc": "ENV(FASTLY_SYSLOG_CA_CERT)"
            },
            "tls_client_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "The client certificate used to make authenticated requests. Must be in PEM format. You can provide this certificate via an environment variable, `FASTLY_SYSLOG_CLIENT_CERT`",
              "DefaultFunc": "ENV(FASTLY_SYSLOG_CLIENT_CERT)"
            },
            "tls_client_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The client private key used to make authenticated requests. Must be in PEM format. You can provide this key via an environment variable, `FASTLY_SYSLOG_CLIENT_KEY`",
              "DefaultFunc": "ENV(FASTLY_SYSLOG_CLIENT_KEY)"
            },
            "tls_hostname": {
              "Type": "String",
              "Optional": true,
              "Description": "Used during the TLS handshake to validate the certificate",
              "Default": {
                "Type": "string"
              }
            },
            "token": {
              "Type": "String",
              "Optional": true,
              "Description": "Whether to prepend each message with a specific token",
              "Default": {
                "Type": "string"
              }
            },
            "use_tls": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether to use TLS for secure logging. Default `false`",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            }
          }
        }
      },
      "version_comment": {
        "Type": "String",
        "Optional": true,
        "Description": "Description field for the version"
      }
    },
    "fastly_service_dictionary_items_v1": {
      "dictionary_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the dictionary that the items belong to"
      },
      "items": {
        "Type": "Map",
        "Optional": true,
        "Description": "A map representing an entry in the dictionary, (key/value)",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Value": "String"
        }
      },
      "service_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the service that the dictionary belongs to"
      }
    },
    "fastly_service_dynamic_snippet_content_v1": {
      "content": {
        "Type": "String",
        "Required": true,
        "Description": "The VCL code that specifies exactly what the snippet does"
      },
      "service_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the service that the dynamic snippet belongs to"
      },
      "snippet_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the dynamic snippet that the content belong to"
      }
    },
    "fastly_service_v1": {
      "acl": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "acl_id": {
              "Type": "String",
              "Description": "The ID of the ACL",
              "Computed": true
            },
            "force_destroy": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Allow the ACL to be deleted, even if it contains entries. Defaults to false.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A unique name to identify this ACL. It is important to note that changing this attribute will delete and recreate the ACL, and discard the current items in the ACL"
            }
          }
        }
      },
      "activate": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Conditionally prevents the Service from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to `false`. Default `true`",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "active_version": {
        "Type": "Int",
        "Description": "The currently active version of your Fastly Service",
        "Computed": true
      },
      "backend": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "String",
              "Required": true,
              "Description": "An IPv4, hostname, or IPv6 address for the Backend"
            },
            "auto_loadbalance": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Denotes if this Backend should be included in the pool of backends that requests are load balanced against. Default `true`",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "between_bytes_timeout": {
              "Type": "Int",
              "Optional": true,
              "Description": "How long to wait between bytes in milliseconds. Default `10000`",
              "Default": {
                "Type": "int",
                "Value": "10000"
              }
            },
            "connect_timeout": {
              "Type": "Int",
              "Optional": true,
              "Description": "How long to wait for a timeout in milliseconds. Default `1000`",
              "Default": {
                "Type": "int",
                "Value": "1000"
              }
            },
            "error_threshold": {
              "Type": "Int",
              "Optional": true,
              "Description": "Number of errors to allow before the Backend is marked as down. Default `0`",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "first_byte_timeout": {
              "Type": "Int",
              "Optional": true,
              "Description": "How long to wait for the first bytes in milliseconds. Default `15000`",
              "Default": {
                "Type": "int",
                "Value": "15000"
              }
            },
            "healthcheck": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of a defined `healthcheck` to assign to this backend",
              "Default": {
                "Type": "string"
              }
            },
            "max_conn": {
              "Type": "Int",
              "Optional": true,
              "Description": "Maximum number of connections for this Backend. Default `200`",
              "Default": {
                "Type": "int",
                "Value": "200"
              }
            },
            "max_tls_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Maximum allowed TLS version on SSL connections to this backend.",
              "Default": {
                "Type": "string"
              }
            },
            "min_tls_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Minimum allowed TLS version on SSL connections to this backend.",
              "Default": {
                "Type": "string"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Name for this Backend. Must be unique to this Service. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "override_host": {
              "Type": "String",
              "Optional": true,
              "Description": "The hostname to override the Host header",
              "Default": {
                "Type": "string"
              }
            },
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "The port number on which the Backend responds. Default `80`",
              "Default": {
                "Type": "int",
                "Value": "80"
              }
            },
            "request_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of a condition, which if met, will select this backend during a request.",
              "Default": {
                "Type": "string"
              }
            },
            "shield": {
              "Type": "String",
              "Optional": true,
              "Description": "The POP of the shield designated to reduce inbound load. Valid values for `shield` are included in the `GET /datacenters` API response",
              "Default": {
                "Type": "string"
              }
            },
            "ssl_ca_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "CA certificate attached to origin.",
              "Default": {
                "Type": "string"
              }
            },
            "ssl_cert_hostname": {
              "Type": "String",
              "Optional": true,
              "Description": "Overrides ssl_hostname, but only for cert verification. Does not affect SNI at all",
              "Default": {
                "Type": "string"
              }
            },
            "ssl_check_cert": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Be strict about checking SSL certs. Default `true`",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "ssl_ciphers": {
              "Type": "String",
              "Optional": true,
              "Description": "Cipher list consisting of one or more cipher strings separated by colons. Commas or spaces are also acceptable separators but colons are normally used.",
              "Default": {
                "Type": "string"
              }
            },
            "ssl_client_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "Client certificate attached to origin. Used when connecting to the backend",
              "Default": {
                "Type": "string"
              }
            },
            "ssl_client_key": {
              "Type": "String",
              "Optional": true,
              "Description": "Client key attached to origin. Used when connecting to the backend",
              "Default": {
                "Type": "string"
              }
            },
            "ssl_hostname": {
              "Type": "String",
              "Optional": true,
              "Description": "Used for both SNI during the TLS handshake and to validate the cert",
              "Deprecated": "Use ssl_cert_hostname and ssl_sni_hostname instead.",
              "Default": {
                "Type": "string"
              }
            },
            "ssl_sni_hostname": {
              "Type": "String",
              "Optional": true,
              "Description": "Overrides ssl_hostname, but only for SNI in the handshake. Does not affect cert validation at all",
              "Default": {
                "Type": "string"
              }
            },
            "use_ssl": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to use SSL to reach the Backend. Default `false`",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "weight": {
              "Type": "Int",
              "Optional": true,
              "Description": "The [portion of traffic](https://docs.fastly.com/en/guides/load-balancing-configuration#how-weight-affects-load-balancing) to send to this Backend. Each Backend receives weight / total of the traffic. Default `100`",
              "Default": {
                "Type": "int",
                "Value": "100"
              }
            }
          }
        }
      },
      "bigquerylogging": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dataset": {
              "Type": "String",
              "Required": true,
              "Description": "The ID of your BigQuery dataset"
            },
            "email": {
              "Type": "String",
              "Required": true,
              "Description": "The email for the service account with write access to your BigQuery dataset. If not provided, this will be pulled from a `FASTLY_BQ_EMAIL` environment variable",
              "DefaultFunc": "ENV(FASTLY_BQ_EMAIL)"
            },
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "The logging format desired.",
              "Default": {
                "Type": "string",
                "Value": "%h %l %u %t \"%r\" %\u003es %b"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A unique name to identify this BigQuery logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed."
            },
            "project_id": {
              "Type": "String",
              "Required": true,
              "Description": "The ID of your GCP project"
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of a condition to apply this logging.",
              "Default": {
                "Type": "string"
              }
            },
            "secret_key": {
              "Type": "String",
              "Required": true,
              "Description": "The secret key associated with the service account that has write access to your BigQuery table. If not provided, this will be pulled from the `FASTLY_BQ_SECRET_KEY` environment variable. Typical format for this is a private key in a string with newlines",
              "DefaultFunc": "ENV(FASTLY_BQ_SECRET_KEY)"
            },
            "table": {
              "Type": "String",
              "Required": true,
              "Description": "The ID of your BigQuery table"
            },
            "template": {
              "Type": "String",
              "Optional": true,
              "Description": "BigQuery table name suffix template",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "blobstoragelogging": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "account_name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique Azure Blob Storage namespace in which your data objects are stored"
            },
            "compression_codec": {
              "Type": "String",
              "Optional": true,
              "Description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip_level will default to 3. To specify a different level, leave compression_codec blank and explicitly set the level using gzip_level. Specifying both compression_codec and gzip_level in the same API request will result in an error."
            },
            "container": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the Azure Blob Storage container in which to store logs"
            },
            "file_max_bytes": {
              "Type": "Int",
              "Optional": true,
              "Description": "Maximum size of an uploaded log file, if non-zero."
            },
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache-style string or VCL variables to use for log formatting (default: `%h %l %u %t \"%r\" %\u003es %b`)",
              "Default": {
                "Type": "string",
                "Value": "%h %l %u %t \"%r\" %\u003es %b"
              }
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (default: 2)",
              "Default": {
                "Type": "int",
                "Value": "2"
              }
            },
            "gzip_level": {
              "Type": "Int",
              "Optional": true,
              "Description": "Level of Gzip compression from `0-9`. `0` means no compression. `1` is the fastest and the least compressed version, `9` is the slowest and the most compressed version. Default `0`",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "message_type": {
              "Type": "String",
              "Optional": true,
              "Description": "How the message should be formatted. Can be either `classic`, `loggly`, `logplex` or `blank`. Default `classic`",
              "Default": {
                "Type": "string",
                "Value": "classic"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A unique name to identify the Azure Blob Storage endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "path": {
              "Type": "String",
              "Optional": true,
              "Description": "The path to upload logs to. Must end with a trailing slash. If this field is left empty, the files will be saved in the container's root path"
            },
            "period": {
              "Type": "Int",
              "Optional": true,
              "Description": "How frequently the logs should be transferred in seconds. Default `3600`",
              "Default": {
                "Type": "int",
                "Value": "3600"
              }
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed"
            },
            "public_key": {
              "Type": "String",
              "Optional": true,
              "Description": "A PGP public key that Fastly will use to encrypt your log files before writing them to disk"
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of the condition to apply"
            },
            "sas_token": {
              "Type": "String",
              "Required": true,
              "Description": "The Azure shared access signature providing write access to the blob service objects. Be sure to update your token before it expires or the logging functionality will not work",
              "DefaultFunc": "ENV(FASTLY_AZURE_SHARED_ACCESS_SIGNATURE)"
            },
            "timestamp_format": {
              "Type": "String",
              "Optional": true,
              "Description": "`strftime` specified timestamp formatting. Default `%Y-%m-%dT%H:%M:%S.000`",
              "Default": {
                "Type": "string",
                "Value": "%Y-%m-%dT%H:%M:%S.000"
              }
            }
          }
        }
      },
      "cache_setting": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Optional": true,
              "Description": "One of cache, pass, or restart, as defined on Fastly's documentation under \"[Caching action descriptions](https://docs.fastly.com/en/guides/controlling-caching#caching-action-descriptions)\""
            },
            "cache_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of already defined `condition` used to test whether this settings object should be used. This `condition` must be of type `CACHE`",
              "Default": {
                "Type": "string"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Unique name for this Cache Setting. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "stale_ttl": {
              "Type": "Int",
              "Optional": true,
              "Description": "Max \"Time To Live\" for stale (unreachable) objects"
            },
            "ttl": {
              "Type": "Int",
              "Optional": true,
              "Description": "The Time-To-Live (TTL) for the object"
            }
          }
        }
      },
      "cloned_version": {
        "Type": "Int",
        "Description": "The latest cloned version by the provider",
        "Computed": true
      },
      "comment": {
        "Type": "String",
        "Optional": true,
        "Description": "Description field for the service. Default `Managed by Terraform`",
        "Default": {
          "Type": "string",
          "Value": "Managed by Terraform"
        }
      },
      "condition": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name for the condition. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "priority": {
              "Type": "Int",
              "Optional": true,
              "Description": "A number used to determine the order in which multiple conditions execute. Lower numbers execute first. Default `10`",
              "Default": {
                "Type": "int",
                "Value": "10"
              }
            },
            "statement": {
              "Type": "String",
              "Required": true,
              "Description": "The statement used to determine if the condition is met"
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of condition, either `REQUEST` (req), `RESPONSE` (req, resp), or `CACHE` (req, beresp)"
            }
          }
        }
      },
      "default_host": {
        "Type": "String",
        "Optional": true,
        "Description": "The default hostname"
      },
      "default_ttl": {
        "Type": "Int",
        "Optional": true,
        "Description": "The default Time-to-live (TTL) for requests",
        "Default": {
          "Type": "int",
          "Value": "3600"
        }
      },
      "dictionary": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dictionary_id": {
              "Type": "String",
              "Description": "The ID of the dictionary",
              "Computed": true
            },
            "force_destroy": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Allow the dictionary to be deleted, even if it contains entries. Defaults to false.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A unique name to identify this dictionary. It is important to note that changing this attribute will delete and recreate the dictionary, and discard the current items in the dictionary"
            },
            "write_only": {
              "Type": "Bool",
              "Optional": true,
              "Description": "If `true`, the dictionary is a [private dictionary](https://docs.fastly.com/en/guides/private-dictionaries). Default is `false`. Please note that changing this attribute will delete and recreate the dictionary, and discard the current items in the dictionary. `fastly_service_v1` resource will only manage the dictionary object itself, and items under private dictionaries can not be managed using [`fastly_service_dictionary_items_v1`](https://registry.terraform.io/providers/fastly/fastly/latest/docs/resources/service_dictionary_items_v1#limitations) resource. Therefore, using a write-only/private dictionary should only be done if the items are managed outside of Terraform",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            }
          }
        }
      },
      "director": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "backends": {
              "Type": "Set",
              "Required": true,
              "Description": "Names of defined backends to map the director to. Example: `[ \"origin1\", \"origin2\" ]`",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "capacity": {
              "Type": "Int",
              "Optional": true,
              "Description": "Load balancing weight for the backends. Default `100`",
              "Default": {
                "Type": "int",
                "Value": "100"
              }
            },
            "comment": {
              "Type": "String",
              "Optional": true,
              "Description": "An optional comment about the Director"
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Unique name for this Director. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "quorum": {
              "Type": "Int",
              "Optional": true,
              "Description": "Percentage of capacity that needs to be up for the director itself to be considered up. Default `75`",
              "Default": {
                "Type": "int",
                "Value": "75"
              }
            },
            "retries": {
              "Type": "Int",
              "Optional": true,
              "Description": "How many backends to search if it fails. Default `5`",
              "Default": {
                "Type": "int",
                "Value": "5"
              }
            },
            "shield": {
              "Type": "String",
              "Optional": true,
              "Description": "Selected POP to serve as a \"shield\" for backends. Valid values for `shield` are included in the [`GET /datacenters`](https://developer.fastly.com/reference/api/utils/datacenter/) API response",
              "Default": {
                "Type": "string"
              }
            },
            "type": {
              "Type": "Int",
              "Optional": true,
              "Description": "Type of load balance group to use. Integer, 1 to 4. Values: `1` (random), `3` (hash), `4` (client). Default `1`",
              "Default": {
                "Type": "int",
                "Value": "1"
              }
            }
          }
        }
      },
      "domain": {
        "Type": "Set",
        "Required": true,
        "Description": "A set of Domain names to serve as entry points for your Service",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "comment": {
              "Type": "String",
              "Optional": true,
              "Description": "An optional comment about the Domain."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The domain that this Service will respond to. It is important to note that changing this attribute will delete and recreate the resource."
            }
          }
        }
      },
      "dynamicsnippet": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A name that is unique across \"regular\" and \"dynamic\" VCL Snippet configuration blocks. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "priority": {
              "Type": "Int",
              "Optional": true,
              "Description": "Priority determines the ordering for multiple snippets. Lower numbers execute first. Defaults to `100`",
              "Default": {
                "Type": "int",
                "Value": "100"
              }
            },
            "snippet_id": {
              "Type": "String",
              "Description": "The ID of the dynamic snippet",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "The location in generated VCL where the snippet should be placed (can be one of `init`, `recv`, `hit`, `miss`, `pass`, `fetch`, `error`, `deliver`, `log` or `none`)"
            }
          }
        }
      },
      "force_destroy": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Services that are active cannot be destroyed. In order to destroy the Service, set `force_destroy` to `true`. Default `false`"
      },
      "gcslogging": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bucket_name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the bucket in which to store the logs"
            },
            "compression_codec": {
              "Type": "String",
              "Optional": true,
              "Description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip_level will default to 3. To specify a different level, leave compression_codec blank and explicitly set the level using gzip_level. Specifying both compression_codec and gzip_level in the same API request will result in an error."
            },
            "email": {
              "Type": "String",
              "Optional": true,
              "Description": "The email address associated with the target GCS bucket on your account. You may optionally provide this secret via an environment variable, `FASTLY_GCS_EMAIL`",
              "DefaultFunc": "ENV(FASTLY_GCS_EMAIL)"
            },
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache-style string or VCL variables to use for log formatting",
              "Default": {
                "Type": "string",
                "Value": "%h %l %u %t %r %\u003es"
              }
            },
            "gzip_level": {
              "Type": "Int",
              "Optional": true,
              "Description": "Level of Gzip compression, from `0-9`. `0` is no compression. `1` is fastest and least compressed, `9` is slowest and most compressed. Default `0`",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "message_type": {
              "Type": "String",
              "Optional": true,
              "Description": "How the message should be formatted; one of: `classic`, `loggly`, `logplex` or `blank`. Default `classic`. [Fastly Documentation](https://developer.fastly.com/reference/api/logging/gcs/)",
              "Default": {
                "Type": "string",
                "Value": "classic"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A unique name to identify this GCS endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "path": {
              "Type": "String",
              "Optional": true,
              "Description": "Path to store the files. Must end with a trailing slash. If this field is left empty, the files will be saved in the bucket's root path"
            },
            "period": {
              "Type": "Int",
              "Optional": true,
              "Description": "How frequently the logs should be transferred, in seconds (Default 3600)",
              "Default": {
                "Type": "int",
                "Value": "3600"
              }
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed."
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of a condition to apply this logging.",
              "Default": {
                "Type": "string"
              }
            },
            "secret_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The secret key associated with the target gcs bucket on your account. You may optionally provide this secret via an environment variable, `FASTLY_GCS_SECRET_KEY`. A typical format for the key is PEM format, containing actual newline characters where required",
              "DefaultFunc": "ENV(FASTLY_GCS_SECRET_KEY)"
            },
            "timestamp_format": {
              "Type": "String",
              "Optional": true,
              "Description": "specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)",
              "Default": {
                "Type": "string",
                "Value": "%Y-%m-%dT%H:%M:%S.000"
              }
            }
          }
        }
      },
      "gzip": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cache_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of already defined `condition` controlling when this gzip configuration applies. This `condition` must be of type `CACHE`. For detailed information about Conditionals, see [Fastly's Documentation on Conditionals](https://docs.fastly.com/en/guides/using-conditions)",
              "Default": {
                "Type": "string"
              }
            },
            "content_types": {
              "Type": "Set",
              "Optional": true,
              "Description": "The content-type for each type of content you wish to have dynamically gzip'ed. Example: `[\"text/html\", \"text/css\"]`",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "extensions": {
              "Type": "Set",
              "Optional": true,
              "Description": "File extensions for each file type to dynamically gzip. Example: `[\"css\", \"js\"]`",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A name to refer to this gzip condition. It is important to note that changing this attribute will delete and recreate the resource"
            }
          }
        }
      },
      "header": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Required": true,
              "Description": "The Header manipulation action to take; must be one of `set`, `append`, `delete`, `regex`, or `regex_repeat`"
            },
            "cache_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of already defined `condition` to apply. This `condition` must be of type `CACHE`",
              "Default": {
                "Type": "string"
              }
            },
            "destination": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the header that is going to be affected by the Action"
            },
            "ignore_if_set": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Don't add the header if it is already. (Only applies to `set` action.). Default `false`",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Unique name for this header attribute. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "priority": {
              "Type": "Int",
              "Optional": true,
              "Description": "Lower priorities execute first. Default: `100`",
              "Default": {
                "Type": "int",
                "Value": "100"
              }
            },
            "regex": {
              "Type": "String",
              "Optional": true,
              "Description": "Regular expression to use (Only applies to `regex` and `regex_repeat` actions.)",
              "Computed": true
            },
            "request_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of already defined `condition` to apply. This `condition` must be of type `REQUEST`",
              "Default": {
                "Type": "string"
              }
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of already defined `condition` to apply. This `condition` must be of type `RESPONSE`. For detailed information about Conditionals, see [Fastly's Documentation on Conditionals](https://docs.fastly.com/en/guides/using-conditions)",
              "Default": {
                "Type": "string"
              }
            },
            "source": {
              "Type": "String",
              "Optional": true,
              "Description": "Variable to be used as a source for the header content (Does not apply to `delete` action.)",
              "Computed": true
            },
            "substitution": {
              "Type": "String",
              "Optional": true,
              "Description": "Value to substitute in place of regular expression. (Only applies to `regex` and `regex_repeat`.)",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "The Request type on which to apply the selected Action; must be one of `request`, `fetch`, `cache` or `response`"
            }
          }
        }
      },
      "healthcheck": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "check_interval": {
              "Type": "Int",
              "Optional": true,
              "Description": "How often to run the Healthcheck in milliseconds. Default `5000`",
              "Default": {
                "Type": "int",
                "Value": "5000"
              }
            },
            "expected_response": {
              "Type": "Int",
              "Optional": true,
              "Description": "The status code expected from the host. Default `200`",
              "Default": {
                "Type": "int",
                "Value": "200"
              }
            },
            "host": {
              "Type": "String",
              "Required": true,
              "Description": "The Host header to send for this Healthcheck"
            },
            "http_version": {
              "Type": "String",
              "Optional": true,
              "Description": "Whether to use version 1.0 or 1.1 HTTP. Default `1.1`",
              "Default": {
                "Type": "string",
                "Value": "1.1"
              }
            },
            "initial": {
              "Type": "Int",
              "Optional": true,
              "Description": "When loading a config, the initial number of probes to be seen as OK. Default `3`",
              "Default": {
                "Type": "int",
                "Value": "3"
              }
            },
            "method": {
              "Type": "String",
              "Optional": true,
              "Description": "Which HTTP method to use. Default `HEAD`",
              "Default": {
                "Type": "string",
                "Value": "HEAD"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A unique name to identify this Healthcheck. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "path": {
              "Type": "String",
              "Required": true,
              "Description": "The path to check"
            },
            "threshold": {
              "Type": "Int",
              "Optional": true,
              "Description": "How many Healthchecks must succeed to be considered healthy. Default `3`",
              "Default": {
                "Type": "int",
                "Value": "3"
              }
            },
            "timeout": {
              "Type": "Int",
              "Optional": true,
              "Description": "Timeout in milliseconds. Default `500`",
              "Default": {
                "Type": "int",
                "Value": "500"
              }
            },
            "window": {
              "Type": "Int",
              "Optional": true,
              "Description": "The number of most recent Healthcheck queries to keep for this Healthcheck. Default `5`",
              "Default": {
                "Type": "int",
                "Value": "5"
              }
            }
          }
        }
      },
      "httpslogging": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "content_type": {
              "Type": "String",
              "Optional": true,
              "Description": "Value of the `Content-Type` header sent with the request"
            },
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache-style string or VCL variables to use for log formatting."
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (default: 2)",
              "Default": {
                "Type": "int",
                "Value": "2"
              }
            },
            "header_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Custom header sent with the request"
            },
            "header_value": {
              "Type": "String",
              "Optional": true,
              "Description": "Value of the custom header sent with the request"
            },
            "json_format": {
              "Type": "String",
              "Optional": true,
              "Description": "Formats log entries as JSON. Can be either disabled (`0`), array of json (`1`), or newline delimited json (`2`)",
              "Default": {
                "Type": "string",
                "Value": "0"
              }
            },
            "message_type": {
              "Type": "String",
              "Optional": true,
              "Description": "How the message should be formatted; one of: `classic`, `loggly`, `logplex` or `blank`. Default `blank`",
              "Default": {
                "Type": "string",
                "Value": "blank"
              }
            },
            "method": {
              "Type": "String",
              "Optional": true,
              "Description": "HTTP method used for request. Can be either `POST` or `PUT`. Default `POST`",
              "Default": {
                "Type": "string",
                "Value": "POST"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the HTTPS logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed"
            },
            "request_max_bytes": {
              "Type": "Int",
              "Optional": true,
              "Description": "The maximum number of bytes sent in one request"
            },
            "request_max_entries": {
              "Type": "Int",
              "Optional": true,
              "Description": "The maximum number of logs sent in one request"
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of the condition to apply"
            },
            "tls_ca_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "A secure certificate to authenticate the server with. Must be in PEM format"
            },
            "tls_client_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "The client certificate used to make authenticated requests. Must be in PEM format"
            },
            "tls_client_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The client private key used to make authenticated requests. Must be in PEM format"
            },
            "tls_hostname": {
              "Type": "String",
              "Optional": true,
              "Description": "Used during the TLS handshake to validate the certificate"
            },
            "url": {
              "Type": "String",
              "Required": true,
              "Description": "URL that log data will be sent to. Must use the https protocol"
            }
          }
        }
      },
      "logentries": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache-style string or VCL variables to use for log formatting",
              "Default": {
                "Type": "string",
                "Value": "%h %l %u %t %r %\u003es"
              }
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (Default: 1)",
              "Default": {
                "Type": "int",
                "Value": "1"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Logentries logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed."
            },
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "The port number configured in Logentries",
              "Default": {
                "Type": "int",
                "Value": "20000"
              }
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of blockAttributes condition to apply this logging.",
              "Default": {
                "Type": "string"
              }
            },
            "token": {
              "Type": "String",
              "Required": true,
              "Description": "Use token based authentication (https://logentries.com/doc/input-token/)"
            },
            "use_tls": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether to use TLS for secure logging",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            }
          }
        }
      },
      "logging_cloudfiles": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_key": {
              "Type": "String",
              "Required": true,
              "Description": "Your Cloud File account access key"
            },
            "bucket_name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of your Cloud Files container"
            },
            "compression_codec": {
              "Type": "String",
              "Optional": true,
              "Description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip_level will default to 3. To specify a different level, leave compression_codec blank and explicitly set the level using gzip_level. Specifying both compression_codec and gzip_level in the same API request will result in an error."
            },
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache style log formatting."
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).",
              "Default": {
                "Type": "int",
                "Value": "2"
              }
            },
            "gzip_level": {
              "Type": "Int",
              "Optional": true,
              "Description": "What level of GZIP encoding to have when dumping logs (default `0`, no compression)",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "message_type": {
              "Type": "String",
              "Optional": true,
              "Description": "How the message should be formatted. One of: `classic` (default), `loggly`, `logplex` or `blank`",
              "Default": {
                "Type": "string",
                "Value": "classic"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Rackspace Cloud Files logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "path": {
              "Type": "String",
              "Optional": true,
              "Description": "The path to upload logs to"
            },
            "period": {
              "Type": "Int",
              "Optional": true,
              "Description": "How frequently log files are finalized so they can be available for reading (in seconds, default `3600`)",
              "Default": {
                "Type": "int",
                "Value": "3600"
              }
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`."
            },
            "public_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The PGP public key that Fastly will use to encrypt your log files before writing them to disk"
            },
            "region": {
              "Type": "String",
              "Optional": true,
              "Description": "The region to stream logs to. One of: DFW (Dallas), ORD (Chicago), IAD (Northern Virginia), LON (London), SYD (Sydney), HKG (Hong Kong)"
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of an existing condition in the configured endpoint, or leave blank to always execute."
            },
            "timestamp_format": {
              "Type": "String",
              "Optional": true,
              "Description": "The `strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)",
              "Default": {
                "Type": "string",
                "Value": "%Y-%m-%dT%H:%M:%S.000"
              }
            },
            "user": {
              "Type": "String",
              "Required": true,
              "Description": "The username for your Cloud Files account"
            }
          }
        }
      },
      "logging_datadog": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache-style string or VCL variables to use for log formatting."
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).",
              "Default": {
                "Type": "int",
                "Value": "2"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Datadog logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed."
            },
            "region": {
              "Type": "String",
              "Optional": true,
              "Description": "The region that log data will be sent to. One of `US` or `EU`. Defaults to `US` if undefined",
              "Default": {
                "Type": "string",
                "Value": "US"
              }
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of the condition to apply."
            },
            "token": {
              "Type": "String",
              "Required": true,
              "Description": "The API key from your Datadog account"
            }
          }
        }
      },
      "logging_digitalocean": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_key": {
              "Type": "String",
              "Required": true,
              "Description": "Your DigitalOcean Spaces account access key"
            },
            "bucket_name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the DigitalOcean Space"
            },
            "compression_codec": {
              "Type": "String",
              "Optional": true,
              "Description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip_level will default to 3. To specify a different level, leave compression_codec blank and explicitly set the level using gzip_level. Specifying both compression_codec and gzip_level in the same API request will result in an error."
            },
            "domain": {
              "Type": "String",
              "Optional": true,
              "Description": "The domain of the DigitalOcean Spaces endpoint (default `nyc3.digitaloceanspaces.com`)",
              "Default": {
                "Type": "string",
                "Value": "nyc3.digitaloceanspaces.com"
              }
            },
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache style log formatting."
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).",
              "Default": {
                "Type": "int",
                "Value": "2"
              }
            },
            "gzip_level": {
              "Type": "Int",
              "Optional": true,
              "Description": "What level of Gzip encoding to have when dumping logs (default `0`, no compression)"
            },
            "message_type": {
              "Type": "String",
              "Optional": true,
              "Description": "How the message should be formatted. One of: `classic` (default), `loggly`, `logplex` or `blank`",
              "Default": {
                "Type": "string",
                "Value": "classic"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the DigitalOcean Spaces logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "path": {
              "Type": "String",
              "Optional": true,
              "Description": "The path to upload logs to"
            },
            "period": {
              "Type": "Int",
              "Optional": true,
              "Description": "How frequently log files are finalized so they can be available for reading (in seconds, default `3600`)"
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`."
            },
            "public_key": {
              "Type": "String",
              "Optional": true,
              "Description": "A PGP public key that Fastly will use to encrypt your log files before writing them to disk"
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of an existing condition in the configured endpoint, or leave blank to always execute."
            },
            "secret_key": {
              "Type": "String",
              "Required": true,
              "Description": "Your DigitalOcean Spaces account secret key"
            },
            "timestamp_format": {
              "Type": "String",
              "Optional": true,
              "Description": "`strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)"
            }
          }
        }
      },
      "logging_elasticsearch": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache-style string or VCL variables to use for log formatting.",
              "Default": {
                "Type": "string",
                "Value": "%h %l %u %t \"%r\" %\u003es %b"
              }
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (default: 2).",
              "Default": {
                "Type": "int",
                "Value": "2"
              }
            },
            "index": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the Elasticsearch index to send documents (logs) to"
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Elasticsearch logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "BasicAuth password for Elasticsearch"
            },
            "pipeline": {
              "Type": "String",
              "Optional": true,
              "Description": "The ID of the Elasticsearch ingest pipeline to apply pre-process transformations to before indexing"
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed."
            },
            "request_max_bytes": {
              "Type": "Int",
              "Optional": true,
              "Description": "The maximum number of logs sent in one request. Defaults to `0` for unbounded",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "request_max_entries": {
              "Type": "Int",
              "Optional": true,
              "Description": "The maximum number of bytes sent in one request. Defaults to `0` for unbounded",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of the condition to apply"
            },
            "tls_ca_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "A secure certificate to authenticate the server with. Must be in PEM format"
            },
            "tls_client_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "The client certificate used to make authenticated requests. Must be in PEM format"
            },
            "tls_client_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The client private key used to make authenticated requests. Must be in PEM format"
            },
            "tls_hostname": {
              "Type": "String",
              "Optional": true,
              "Description": "The hostname used to verify the server's certificate. It can either be the Common Name (CN) or a Subject Alternative Name (SAN)"
            },
            "url": {
              "Type": "String",
              "Required": true,
              "Description": "The Elasticsearch URL to stream logs to"
            },
            "user": {
              "Type": "String",
              "Optional": true,
              "Description": "BasicAuth username for Elasticsearch"
            }
          }
        }
      },
      "logging_ftp": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "String",
              "Required": true,
              "Description": "The FTP address to stream logs to"
            },
            "compression_codec": {
              "Type": "String",
              "Optional": true,
              "Description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip_level will default to 3. To specify a different level, leave compression_codec blank and explicitly set the level using gzip_level. Specifying both compression_codec and gzip_level in the same API request will result in an error."
            },
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache-style string or VCL variables to use for log formatting."
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (default: 2).",
              "Default": {
                "Type": "int",
                "Value": "2"
              }
            },
            "gzip_level": {
              "Type": "Int",
              "Optional": true,
              "Description": "Gzip Compression level. Default `0`",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "message_type": {
              "Type": "String",
              "Optional": true,
              "Description": "How the message should be formatted (default: `classic`)",
              "Default": {
                "Type": "string",
                "Value": "classic"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the FTP logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "password": {
              "Type": "String",
              "Required": true,
              "Description": "The password for the server (for anonymous use an email address)"
            },
            "path": {
              "Type": "String",
              "Required": true,
              "Description": "The path to upload log files to. If the path ends in `/` then it is treated as a directory"
            },
            "period": {
              "Type": "Int",
              "Optional": true,
              "Description": "How frequently the logs should be transferred, in seconds (Default `3600`)",
              "Default": {
                "Type": "int",
                "Value": "3600"
              }
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed."
            },
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "The port number. Default: `21`",
              "Default": {
                "Type": "int",
                "Value": "21"
              }
            },
            "public_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The PGP public key that Fastly will use to encrypt your log files before writing them to disk"
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of the condition to apply."
            },
            "timestamp_format": {
              "Type": "String",
              "Optional": true,
              "Description": "specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)",
              "Default": {
                "Type": "string",
                "Value": "%Y-%m-%dT%H:%M:%S.000"
              }
            },
            "user": {
              "Type": "String",
              "Required": true,
              "Description": "The username for the server (can be `anonymous`)"
            }
          }
        }
      },
      "logging_googlepubsub": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache style log formatting."
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (default: 2).",
              "Default": {
                "Type": "int",
                "Value": "2"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Google Cloud Pub/Sub logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed."
            },
            "project_id": {
              "Type": "String",
              "Required": true,
              "Description": "The ID of your Google Cloud Platform project"
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of an existing condition in the configured endpoint, or leave blank to always execute."
            },
            "secret_key": {
              "Type": "String",
              "Required": true,
              "Description": "Your Google Cloud Platform account secret key. The `private_key` field in your service account authentication JSON. You may optionally provide this secret via an environment variable, `FASTLY_GOOGLE_PUBSUB_SECRET_KEY`.",
              "DefaultFunc": "ENV(FASTLY_GOOGLE_PUBSUB_SECRET_KEY)"
            },
            "topic": {
              "Type": "String",
              "Required": true,
              "Description": "The Google Cloud Pub/Sub topic to which logs will be published"
            },
            "user": {
              "Type": "String",
              "Required": true,
              "Description": "Your Google Cloud Platform service account email address. The `client_email` field in your service account authentication JSON. You may optionally provide this via an environment variable, `FASTLY_GOOGLE_PUBSUB_EMAIL`.",
              "DefaultFunc": "ENV(FASTLY_GOOGLE_PUBSUB_EMAIL)"
            }
          }
        }
      },
      "logging_heroku": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache-style string or VCL variables to use for log formatting."
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).",
              "Default": {
                "Type": "int",
                "Value": "2"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Heroku logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`."
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of an existing condition in the configured endpoint, or leave blank to always execute."
            },
            "token": {
              "Type": "String",
              "Required": true,
              "Description": "The token to use for authentication (https://www.heroku.com/docs/customer-token-authentication-token/)"
            },
            "url": {
              "Type": "String",
              "Required": true,
              "Description": "The URL to stream logs to"
            }
          }
        }
      },
      "logging_honeycomb": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dataset": {
              "Type": "String",
              "Required": true,
              "Description": "The Honeycomb Dataset you want to log to"
            },
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache style log formatting. Your log must produce valid JSON that Honeycomb can ingest."
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).",
              "Default": {
                "Type": "int",
                "Value": "2"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Honeycomb logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`."
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of an existing condition in the configured endpoint, or leave blank to always execute."
            },
            "token": {
              "Type": "String",
              "Required": true,
              "Description": "The Write Key from the Account page of your Honeycomb account"
            }
          }
        }
      },
      "logging_kafka": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "auth_method": {
              "Type": "String",
              "Optional": true,
              "Description": "SASL authentication method. One of: plain, scram-sha-256, scram-sha-512"
            },
            "brokers": {
              "Type": "String",
              "Required": true,
              "Description": "A comma-separated list of IP addresses or hostnames of Kafka brokers"
            },
            "compression_codec": {
              "Type": "String",
              "Optional": true,
              "Description": "The codec used for compression of your logs. One of: `gzip`, `snappy`, `lz4`"
            },
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache style log formatting."
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (default: 2).",
              "Default": {
                "Type": "int",
                "Value": "2"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Kafka logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "parse_log_keyvals": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Enables parsing of key=value tuples from the beginning of a logline, turning them into record headers",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "SASL Pass"
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed."
            },
            "request_max_bytes": {
              "Type": "Int",
              "Optional": true,
              "Description": "Maximum size of log batch, if non-zero. Defaults to 0 for unbounded"
            },
            "required_acks": {
              "Type": "String",
              "Optional": true,
              "Description": "The Number of acknowledgements a leader must receive before a write is considered successful. One of: `1` (default) One server needs to respond. `0` No servers need to respond. `-1`\tWait for all in-sync replicas to respond"
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of an existing condition in the configured endpoint, or leave blank to always execute."
            },
            "tls_ca_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "A secure certificate to authenticate the server with. Must be in PEM format"
            },
            "tls_client_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "The client certificate used to make authenticated requests. Must be in PEM format"
            },
            "tls_client_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The client private key used to make authenticated requests. Must be in PEM format"
            },
            "tls_hostname": {
              "Type": "String",
              "Optional": true,
              "Description": "The hostname used to verify the server's certificate. It can either be the Common Name or a Subject Alternative Name (SAN)"
            },
            "topic": {
              "Type": "String",
              "Required": true,
              "Description": "The Kafka topic to send logs to"
            },
            "use_tls": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether to use TLS for secure logging. Can be either `true` or `false`",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "user": {
              "Type": "String",
              "Optional": true,
              "Description": "SASL User"
            }
          }
        }
      },
      "logging_kinesis": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The AWS access key to be used to write to the stream"
            },
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache style log formatting."
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).",
              "Default": {
                "Type": "int",
                "Value": "2"
              }
            },
            "iam_role": {
              "Type": "String",
              "Optional": true,
              "Description": "The Amazon Resource Name (ARN) for the IAM role granting Fastly access to Kinesis. Not required if `access_key` and `secret_key` are provided."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Kinesis logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`."
            },
            "region": {
              "Type": "String",
              "Optional": true,
              "Description": "The AWS region the stream resides in. (Default: `us-east-1`)",
              "Default": {
                "Type": "string",
                "Value": "us-east-1"
              }
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of an existing condition in the configured endpoint, or leave blank to always execute."
            },
            "secret_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The AWS secret access key to authenticate with"
            },
            "topic": {
              "Type": "String",
              "Required": true,
              "Description": "The Kinesis stream name"
            }
          }
        }
      },
      "logging_loggly": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache-style string or VCL variables to use for log formatting."
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).",
              "Default": {
                "Type": "int",
                "Value": "2"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Loggly logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`."
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of an existing condition in the configured endpoint, or leave blank to always execute."
            },
            "token": {
              "Type": "String",
              "Required": true,
              "Description": "The token to use for authentication (https://www.loggly.com/docs/customer-token-authentication-token/)."
            }
          }
        }
      },
      "logging_logshuttle": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache style log formatting."
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).",
              "Default": {
                "Type": "int",
                "Value": "2"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Log Shuttle logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`."
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of an existing condition in the configured endpoint, or leave blank to always execute."
            },
            "token": {
              "Type": "String",
              "Required": true,
              "Description": "The data authentication token associated with this endpoint"
            },
            "url": {
              "Type": "String",
              "Required": true,
              "Description": "Your Log Shuttle endpoint URL"
            }
          }
        }
      },
      "logging_newrelic": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache style log formatting. Your log must produce valid JSON that New Relic Logs can ingest."
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).",
              "Default": {
                "Type": "int",
                "Value": "2"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the New Relic logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed."
            },
            "region": {
              "Type": "String",
              "Optional": true,
              "Description": "The region that log data will be sent to. Default: `US`",
              "Default": {
                "Type": "string",
                "Value": "US"
              }
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of the condition to apply."
            },
            "token": {
              "Type": "String",
              "Required": true,
              "Description": "The Insert API key from the Account page of your New Relic account"
            }
          }
        }
      },
      "logging_openstack": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_key": {
              "Type": "String",
              "Required": true,
              "Description": "Your OpenStack account access key"
            },
            "bucket_name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of your OpenStack container"
            },
            "compression_codec": {
              "Type": "String",
              "Optional": true,
              "Description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip_level will default to 3. To specify a different level, leave compression_codec blank and explicitly set the level using gzip_level. Specifying both compression_codec and gzip_level in the same API request will result in an error."
            },
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache style log formatting."
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format used for the configured endpoint. Can be either `1` or `2`. (default: `2`).",
              "Default": {
                "Type": "int",
                "Value": "2"
              }
            },
            "gzip_level": {
              "Type": "Int",
              "Optional": true,
              "Description": "What level of Gzip encoding to have when dumping logs (default `0`, no compression)",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "message_type": {
              "Type": "String",
              "Optional": true,
              "Description": "How the message should be formatted; one of: `classic`, `loggly`, `logplex` or `blank`. Default `classic`. [Fastly Documentation](https://developer.fastly.com/reference/api/logging/gcs/)",
              "Default": {
                "Type": "string",
                "Value": "classic"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the OpenStack logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "path": {
              "Type": "String",
              "Optional": true,
              "Description": "Path to store the files. Must end with a trailing slash. If this field is left empty, the files will be saved in the bucket's root path"
            },
            "period": {
              "Type": "Int",
              "Optional": true,
              "Description": "How frequently the logs should be transferred, in seconds. Default `3600`",
              "Default": {
                "Type": "int",
                "Value": "3600"
              }
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed. Can be `none` or `waf_debug`."
            },
            "public_key": {
              "Type": "String",
              "Optional": true,
              "Description": "A PGP public key that Fastly will use to encrypt your log files before writing them to disk"
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of an existing condition in the configured endpoint, or leave blank to always execute."
            },
            "timestamp_format": {
              "Type": "String",
              "Optional": true,
              "Description": "specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)",
              "Default": {
                "Type": "string",
                "Value": "%Y-%m-%dT%H:%M:%S.000"
              }
            },
            "url": {
              "Type": "String",
              "Required": true,
              "Description": "Your OpenStack auth url"
            },
            "user": {
              "Type": "String",
              "Required": true,
              "Description": "The username for your OpenStack account"
            }
          }
        }
      },
      "logging_scalyr": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache style log formatting."
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (default: 2).",
              "Default": {
                "Type": "int",
                "Value": "2"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the Scalyr logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed."
            },
            "region": {
              "Type": "String",
              "Optional": true,
              "Description": "The region that log data will be sent to. One of `US` or `EU`. Defaults to `US` if undefined",
              "Default": {
                "Type": "string",
                "Value": "US"
              }
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of an existing condition in the configured endpoint, or leave blank to always execute."
            },
            "token": {
              "Type": "String",
              "Required": true,
              "Description": "The token to use for authentication (https://www.scalyr.com/keys)"
            }
          }
        }
      },
      "logging_sftp": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "String",
              "Required": true,
              "Description": "The SFTP address to stream logs to"
            },
            "compression_codec": {
              "Type": "String",
              "Optional": true,
              "Description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip_level will default to 3. To specify a different level, leave compression_codec blank and explicitly set the level using gzip_level. Specifying both compression_codec and gzip_level in the same API request will result in an error."
            },
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache-style string or VCL variables to use for log formatting.",
              "Default": {
                "Type": "string",
                "Value": "%h %l %u %t \"%r\" %\u003es %b"
              }
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (default: 2).",
              "Default": {
                "Type": "int",
                "Value": "2"
              }
            },
            "gzip_level": {
              "Type": "Int",
              "Optional": true,
              "Description": "What level of Gzip encoding to have when dumping logs (default `0`, no compression)",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "message_type": {
              "Type": "String",
              "Optional": true,
              "Description": "How the message should be formatted. One of: `classic` (default), `loggly`, `logplex` or `blank`",
              "Default": {
                "Type": "string",
                "Value": "classic"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the SFTP logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "The password for the server. If both `password` and `secret_key` are passed, `secret_key` will be preferred"
            },
            "path": {
              "Type": "String",
              "Required": true,
              "Description": "The path to upload log files to. If the path ends in `/` then it is treated as a directory"
            },
            "period": {
              "Type": "Int",
              "Optional": true,
              "Description": "How frequently log files are finalized so they can be available for reading (in seconds, default `3600`)",
              "Default": {
                "Type": "int",
                "Value": "3600"
              }
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed."
            },
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "The port the SFTP service listens on. (Default: `22`)",
              "Default": {
                "Type": "int",
                "Value": "22"
              }
            },
            "public_key": {
              "Type": "String",
              "Optional": true,
              "Description": "A PGP public key that Fastly will use to encrypt your log files before writing them to disk"
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of the condition to apply."
            },
            "secret_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The SSH private key for the server. If both `password` and `secret_key` are passed, `secret_key` will be preferred"
            },
            "ssh_known_hosts": {
              "Type": "String",
              "Required": true,
              "Description": "A list of host keys for all hosts we can connect to over SFTP"
            },
            "timestamp_format": {
              "Type": "String",
              "Optional": true,
              "Description": "The `strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)",
              "Default": {
                "Type": "string",
                "Value": "%Y-%m-%dT%H:%M:%S.000"
              }
            },
            "user": {
              "Type": "String",
              "Required": true,
              "Description": "The username for the server"
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The unique name for the Service to create"
      },
      "papertrail": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "String",
              "Required": true,
              "Description": "The address of the Papertrail endpoint"
            },
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats)",
              "Default": {
                "Type": "string",
                "Value": "%h %l %u %t %r %\u003es"
              }
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver` if `format_version` is set to `1`",
              "Default": {
                "Type": "int",
                "Value": "2"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A unique name to identify this Papertrail endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed in `vcl_deliver`"
            },
            "port": {
              "Type": "Int",
              "Required": true,
              "Description": "The port associated with the address where the Papertrail endpoint can be accessed"
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of an existing condition in the configured endpoint, or leave blank to always execute",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "request_setting": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "action": {
              "Type": "String",
              "Optional": true,
              "Description": "Allows you to terminate request handling and immediately perform an action. When set it can be `lookup` or `pass` (Ignore the cache completely)"
            },
            "bypass_busy_wait": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Disable collapsed forwarding, so you don't wait for other objects to origin"
            },
            "default_host": {
              "Type": "String",
              "Optional": true,
              "Description": "Sets the host header"
            },
            "force_miss": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Force a cache miss for the request. If specified, can be `true` or `false`"
            },
            "force_ssl": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Forces the request to use SSL (Redirects a non-SSL request to SSL)"
            },
            "geo_headers": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Injects Fastly-Geo-Country, Fastly-Geo-City, and Fastly-Geo-Region into the request headers",
              "Deprecated": "'geo_headers' attribute has been deprecated and will be removed in the next major version release"
            },
            "hash_keys": {
              "Type": "String",
              "Optional": true,
              "Description": "Comma separated list of varnish request object fields that should be in the hash key"
            },
            "max_stale_age": {
              "Type": "Int",
              "Optional": true,
              "Description": "How old an object is allowed to be to serve `stale-if-error` or `stale-while-revalidate`, in seconds"
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Unique name to refer to this Request Setting. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "request_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of already defined `condition` to determine if this request setting should be applied",
              "Default": {
                "Type": "string"
              }
            },
            "timer_support": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Injects the X-Timer info into the request for viewing origin fetch durations"
            },
            "xff": {
              "Type": "String",
              "Optional": true,
              "Description": "X-Forwarded-For, should be `clear`, `leave`, `append`, `append_all`, or `overwrite`. Default `append`",
              "Default": {
                "Type": "string",
                "Value": "append"
              }
            }
          }
        }
      },
      "response_object": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cache_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of already defined `condition` to check after we have retrieved an object. If the condition passes then deliver this Request Object instead. This `condition` must be of type `CACHE`. For detailed information about Conditionals, see [Fastly's Documentation on Conditionals](https://docs.fastly.com/en/guides/using-conditions)",
              "Default": {
                "Type": "string"
              }
            },
            "content": {
              "Type": "String",
              "Optional": true,
              "Description": "The content to deliver for the response object",
              "Default": {
                "Type": "string"
              }
            },
            "content_type": {
              "Type": "String",
              "Optional": true,
              "Description": "The MIME type of the content",
              "Default": {
                "Type": "string"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A unique name to identify this Response Object. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "request_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of already defined `condition` to be checked during the request phase. If the condition passes then this object will be delivered. This `condition` must be of type `REQUEST`",
              "Default": {
                "Type": "string"
              }
            },
            "response": {
              "Type": "String",
              "Optional": true,
              "Description": "The HTTP Response. Default `OK`",
              "Default": {
                "Type": "string",
                "Value": "OK"
              }
            },
            "status": {
              "Type": "Int",
              "Optional": true,
              "Description": "The HTTP Status Code. Default `200`",
              "Default": {
                "Type": "int",
                "Value": "200"
              }
            }
          }
        }
      },
      "s3logging": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "acl": {
              "Type": "String",
              "Optional": true,
              "Description": "The AWS [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl) to use for objects uploaded to the S3 bucket. Options are: `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, `bucket-owner-read`, `bucket-owner-full-control`"
            },
            "bucket_name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the bucket in which to store the logs"
            },
            "compression_codec": {
              "Type": "String",
              "Optional": true,
              "Description": "The codec used for compression of your logs. Valid values are zstd, snappy, and gzip. If the specified codec is \"gzip\", gzip_level will default to 3. To specify a different level, leave compression_codec blank and explicitly set the level using gzip_level. Specifying both compression_codec and gzip_level in the same API request will result in an error."
            },
            "domain": {
              "Type": "String",
              "Optional": true,
              "Description": "If you created the S3 bucket outside of `us-east-1`, then specify the corresponding bucket endpoint. Example: `s3-us-west-2.amazonaws.com`",
              "Default": {
                "Type": "string",
                "Value": "s3.amazonaws.com"
              }
            },
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache-style string or VCL variables to use for log formatting.",
              "Default": {
                "Type": "string",
                "Value": "%h %l %u %t %r %\u003es"
              }
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (Default: 1).",
              "Default": {
                "Type": "int",
                "Value": "1"
              }
            },
            "gzip_level": {
              "Type": "Int",
              "Optional": true,
              "Description": "Level of Gzip compression, from `0-9`. `0` is no compression. `1` is fastest and least compressed, `9` is slowest and most compressed. Default `0`",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "message_type": {
              "Type": "String",
              "Optional": true,
              "Description": "How the message should be formatted; one of: `classic`, `loggly`, `logplex` or `blank`. Default `classic`",
              "Default": {
                "Type": "string",
                "Value": "classic"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The unique name of the S3 logging endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "path": {
              "Type": "String",
              "Optional": true,
              "Description": "Path to store the files. Must end with a trailing slash. If this field is left empty, the files will be saved in the bucket's root path"
            },
            "period": {
              "Type": "Int",
              "Optional": true,
              "Description": "How frequently the logs should be transferred, in seconds. Default `3600`",
              "Default": {
                "Type": "int",
                "Value": "3600"
              }
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed."
            },
            "public_key": {
              "Type": "String",
              "Optional": true,
              "Description": "A PGP public key that Fastly will use to encrypt your log files before writing them to disk"
            },
            "redundancy": {
              "Type": "String",
              "Optional": true,
              "Description": "The S3 storage class (redundancy level). Should be one of: `standard`, `reduced_redundancy`, `standard_ia`, or `onezone_ia`"
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of blockAttributes condition to apply this logging.",
              "Default": {
                "Type": "string"
              }
            },
            "s3_access_key": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS Access Key of an account with the required permissions to post logs. It is **strongly** recommended you create a separate IAM user with permissions to only operate on this Bucket. This key will be not be encrypted. Not required if `iam_role` is provided. You can provide this key via an environment variable, `FASTLY_S3_ACCESS_KEY`",
              "DefaultFunc": "ENV(FASTLY_S3_ACCESS_KEY)"
            },
            "s3_iam_role": {
              "Type": "String",
              "Optional": true,
              "Description": "The Amazon Resource Name (ARN) for the IAM role granting Fastly access to S3. Not required if `access_key` and `secret_key` are provided. You can provide this value via an environment variable, `FASTLY_S3_IAM_ROLE`",
              "DefaultFunc": "ENV(FASTLY_S3_IAM_ROLE)"
            },
            "s3_secret_key": {
              "Type": "String",
              "Optional": true,
              "Description": "AWS Secret Key of an account with the required permissions to post logs. It is **strongly** recommended you create a separate IAM user with permissions to only operate on this Bucket. This secret will be not be encrypted. Not required if `iam_role` is provided. You can provide this secret via an environment variable, `FASTLY_S3_SECRET_KEY`",
              "DefaultFunc": "ENV(FASTLY_S3_SECRET_KEY)"
            },
            "server_side_encryption": {
              "Type": "String",
              "Optional": true,
              "Description": "Specify what type of server side encryption should be used. Can be either `AES256` or `aws:kms`"
            },
            "server_side_encryption_kms_key_id": {
              "Type": "String",
              "Optional": true,
              "Description": "Optional server-side KMS Key Id. Must be set if server_side_encryption is set to `aws:kms`"
            },
            "timestamp_format": {
              "Type": "String",
              "Optional": true,
              "Description": "`strftime` specified timestamp formatting (default `%Y-%m-%dT%H:%M:%S.000`)",
              "Default": {
                "Type": "string",
                "Value": "%Y-%m-%dT%H:%M:%S.000"
              }
            }
          }
        }
      },
      "snippet": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "content": {
              "Type": "String",
              "Required": true,
              "Description": "The VCL code that specifies exactly what the snippet does"
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A name that is unique across \"regular\" and \"dynamic\" VCL Snippet configuration blocks. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "priority": {
              "Type": "Int",
              "Optional": true,
              "Description": "Priority determines the ordering for multiple snippets. Lower numbers execute first. Defaults to `100`",
              "Default": {
                "Type": "int",
                "Value": "100"
              }
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "The location in generated VCL where the snippet should be placed (can be one of `init`, `recv`, `hit`, `miss`, `pass`, `fetch`, `error`, `deliver`, `log` or `none`)"
            }
          }
        }
      },
      "splunk": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache-style string or VCL variables to use for log formatting (default: `%h %l %u %t \"%r\" %\u003es %b`)",
              "Default": {
                "Type": "string",
                "Value": "%h %l %u %t \"%r\" %\u003es %b"
              }
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (default: 2)",
              "Default": {
                "Type": "int",
                "Value": "2"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A unique name to identify the Splunk endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed"
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "The name of the condition to apply"
            },
            "tls_ca_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "A secure certificate to authenticate the server with. Must be in PEM format. You can provide this certificate via an environment variable, `FASTLY_SPLUNK_CA_CERT`",
              "DefaultFunc": "ENV(FASTLY_SPLUNK_CA_CERT)"
            },
            "tls_client_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "The client certificate used to make authenticated requests. Must be in PEM format.",
              "DefaultFunc": "ENV(FASTLY_SPLUNK_CLIENT_CERT)"
            },
            "tls_client_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The client private key used to make authenticated requests. Must be in PEM format.",
              "DefaultFunc": "ENV(FASTLY_SPLUNK_CLIENT_KEY)"
            },
            "tls_hostname": {
              "Type": "String",
              "Optional": true,
              "Description": "The hostname used to verify the server's certificate. It can either be the Common Name or a Subject Alternative Name (SAN)"
            },
            "token": {
              "Type": "String",
              "Required": true,
              "Description": "The Splunk token to be used for authentication",
              "DefaultFunc": "ENV(FASTLY_SPLUNK_TOKEN)"
            },
            "url": {
              "Type": "String",
              "Required": true,
              "Description": "The Splunk URL to stream logs to"
            },
            "use_tls": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether to use TLS for secure logging. Default: `false`",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            }
          }
        }
      },
      "stale_if_error": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enables serving a stale object if there is an error",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "stale_if_error_ttl": {
        "Type": "Int",
        "Optional": true,
        "Description": "The default time-to-live (TTL) for serving the stale object for the version",
        "Default": {
          "Type": "int",
          "Value": "43200"
        }
      },
      "sumologic": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache-style string or VCL variables to use for log formatting",
              "Default": {
                "Type": "string",
                "Value": "%h %l %u %t %r %\u003es"
              }
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format used for the configured endpoint. Can be either 1 or 2. (Default: 1)",
              "Default": {
                "Type": "int",
                "Value": "1"
              }
            },
            "message_type": {
              "Type": "String",
              "Optional": true,
              "Description": "How the message should be formatted; one of: `classic`, `loggly`, `logplex` or `blank`. Default `classic`. See [Fastly's Documentation on Sumologic](https://developer.fastly.com/reference/api/logging/sumologic/)",
              "Default": {
                "Type": "string",
                "Value": "classic"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A unique name to identify this Sumologic endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed."
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of blockAttributes condition to apply this logging.",
              "Default": {
                "Type": "string"
              }
            },
            "url": {
              "Type": "String",
              "Required": true,
              "Description": "The URL to Sumologic collector endpoint"
            }
          }
        }
      },
      "syslog": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "String",
              "Required": true,
              "Description": "A hostname or IPv4 address of the Syslog endpoint"
            },
            "format": {
              "Type": "String",
              "Optional": true,
              "Description": "Apache-style string or VCL variables to use for log formatting",
              "Default": {
                "Type": "string",
                "Value": "%h %l %u %t \"%r\" %\u003es %b"
              }
            },
            "format_version": {
              "Type": "Int",
              "Optional": true,
              "Description": "The version of the custom logging format. Can be either 1 or 2. (Default: 1)",
              "Default": {
                "Type": "int",
                "Value": "1"
              }
            },
            "message_type": {
              "Type": "String",
              "Optional": true,
              "Description": "How the message should be formatted; one of: `classic`, `loggly`, `logplex` or `blank`. Default `classic`",
              "Default": {
                "Type": "string",
                "Value": "classic"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A unique name to identify this Syslog endpoint. It is important to note that changing this attribute will delete and recreate the resource"
            },
            "placement": {
              "Type": "String",
              "Optional": true,
              "Description": "Where in the generated VCL the logging call should be placed."
            },
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "The port associated with the address where the Syslog endpoint can be accessed. Default `514`",
              "Default": {
                "Type": "int",
                "Value": "514"
              }
            },
            "response_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of blockAttributes condition to apply this logging.",
              "Default": {
                "Type": "string"
              }
            },
            "tls_ca_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "A secure certificate to authenticate the server with. Must be in PEM format. You can provide this certificate via an environment variable, `FASTLY_SYSLOG_CA_CERT`",
              "DefaultFunc": "ENV(FASTLY_SYSLOG_CA_CERT)"
            },
            "tls_client_cert": {
              "Type": "String",
              "Optional": true,
              "Description": "The client certificate used to make authenticated requests. Must be in PEM format. You can provide this certificate via an environment variable, `FASTLY_SYSLOG_CLIENT_CERT`",
              "DefaultFunc": "ENV(FASTLY_SYSLOG_CLIENT_CERT)"
            },
            "tls_client_key": {
              "Type": "String",
              "Optional": true,
              "Description": "The client private key used to make authenticated requests. Must be in PEM format. You can provide this key via an environment variable, `FASTLY_SYSLOG_CLIENT_KEY`",
              "DefaultFunc": "ENV(FASTLY_SYSLOG_CLIENT_KEY)"
            },
            "tls_hostname": {
              "Type": "String",
              "Optional": true,
              "Description": "Used during the TLS handshake to validate the certificate",
              "Default": {
                "Type": "string"
              }
            },
            "token": {
              "Type": "String",
              "Optional": true,
              "Description": "Whether to prepend each message with a specific token",
              "Default": {
                "Type": "string"
              }
            },
            "use_tls": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether to use TLS for secure logging. Default `false`",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            }
          }
        }
      },
      "vcl": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "content": {
              "Type": "String",
              "Required": true,
              "Description": "The custom VCL code to upload"
            },
            "main": {
              "Type": "Bool",
              "Optional": true,
              "Description": "If `true`, use this block as the main configuration. If `false`, use this block as an includable library. Only a single VCL block can be marked as the main block. Default is `false`",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "A unique name for this configuration block. It is important to note that changing this attribute will delete and recreate the resource"
            }
          }
        }
      },
      "version_comment": {
        "Type": "String",
        "Optional": true,
        "Description": "Description field for the version"
      },
      "waf": {
        "Type": "List",
        "Optional": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "disabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "A flag used to completely disable a Web Application Firewall. This is intended to only be used in an emergency",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "prefetch_condition": {
              "Type": "String",
              "Optional": true,
              "Description": "The `condition` to determine which requests will be run past your Fastly WAF. This `condition` must be of type `PREFETCH`. For detailed information about Conditionals, see [Fastly's Documentation on Conditionals](https://docs.fastly.com/en/guides/using-conditions)"
            },
            "response_object": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the response object used by the Web Application Firewall"
            },
            "waf_id": {
              "Type": "String",
              "Description": "The ID of the WAF",
              "Computed": true
            }
          }
        }
      }
    },
    "fastly_service_waf_configuration": {
      "allowed_http_versions": {
        "Type": "String",
        "Optional": true,
        "Description": "Allowed HTTP versions",
        "Computed": true
      },
      "allowed_methods": {
        "Type": "String",
        "Optional": true,
        "Description": "A space-separated list of HTTP method names",
        "Computed": true
      },
      "allowed_request_content_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Allowed request content types",
        "Computed": true
      },
      "allowed_request_content_type_charset": {
        "Type": "String",
        "Optional": true,
        "Description": "Allowed request content type charset",
        "Computed": true
      },
      "arg_length": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximum number of arguments allowed",
        "Computed": true
      },
      "arg_name_length": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximum allowed argument name length",
        "Computed": true
      },
      "combined_file_sizes": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximum allowed size of all files",
        "Computed": true
      },
      "critical_anomaly_score": {
        "Type": "Int",
        "Optional": true,
        "Description": "Score value to add for critical anomalies",
        "Computed": true
      },
      "crs_validate_utf8_encoding": {
        "Type": "Bool",
        "Optional": true,
        "Description": "CRS validate UTF8 encoding",
        "Computed": true
      },
      "error_anomaly_score": {
        "Type": "Int",
        "Optional": true,
        "Description": "Score value to add for error anomalies",
        "Computed": true
      },
      "high_risk_country_codes": {
        "Type": "String",
        "Optional": true,
        "Description": "A space-separated list of country codes in ISO 3166-1 (two-letter) format",
        "Computed": true
      },
      "http_violation_score_threshold": {
        "Type": "Int",
        "Optional": true,
        "Description": "HTTP violation threshold",
        "Computed": true
      },
      "inbound_anomaly_score_threshold": {
        "Type": "Int",
        "Optional": true,
        "Description": "Inbound anomaly threshold",
        "Computed": true
      },
      "lfi_score_threshold": {
        "Type": "Int",
        "Optional": true,
        "Description": "Local file inclusion attack threshold",
        "Computed": true
      },
      "max_file_size": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximum allowed file size, in bytes",
        "Computed": true
      },
      "max_num_args": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximum number of arguments allowed",
        "Computed": true
      },
      "notice_anomaly_score": {
        "Type": "Int",
        "Optional": true,
        "Description": "Score value to add for notice anomalies",
        "Computed": true
      },
      "paranoia_level": {
        "Type": "Int",
        "Optional": true,
        "Description": "The configured paranoia level",
        "Computed": true
      },
      "php_injection_score_threshold": {
        "Type": "Int",
        "Optional": true,
        "Description": "PHP injection threshold",
        "Computed": true
      },
      "rce_score_threshold": {
        "Type": "Int",
        "Optional": true,
        "Description": "Remote code execution threshold",
        "Computed": true
      },
      "restricted_extensions": {
        "Type": "String",
        "Optional": true,
        "Description": "A space-separated list of allowed file extensions",
        "Computed": true
      },
      "restricted_headers": {
        "Type": "String",
        "Optional": true,
        "Description": "A space-separated list of allowed header names",
        "Computed": true
      },
      "rfi_score_threshold": {
        "Type": "Int",
        "Optional": true,
        "Description": "Remote file inclusion attack threshold",
        "Computed": true
      },
      "rule": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "modsec_rule_id": {
              "Type": "Int",
              "Required": true,
              "Description": "The Web Application Firewall rule's modsecurity ID"
            },
            "revision": {
              "Type": "Int",
              "Optional": true,
              "Description": "The Web Application Firewall rule's revision. The latest revision will be used if this is not provided",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Required": true,
              "Description": "The Web Application Firewall rule's status. Allowed values are (`log`, `block` and `score`)"
            }
          }
        }
      },
      "rule_exclusion": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "condition": {
              "Type": "String",
              "Required": true,
              "Description": "A conditional expression in VCL used to determine if the condition is met"
            },
            "exclusion_type": {
              "Type": "String",
              "Required": true,
              "Description": "The type of rule exclusion. Values are `rule` to exclude the specified rule(s), or `waf` to disable the Web Application Firewall"
            },
            "modsec_rule_ids": {
              "Type": "Set",
              "Optional": true,
              "Description": "Set of modsecurity IDs to be excluded. No rules should be provided when `exclusion_type` is `waf`. The rules need to be configured on the Web Application Firewall to be excluded",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "Int"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of rule exclusion"
            },
            "number": {
              "Type": "Int",
              "Description": "The numeric ID assigned to the WAF Rule Exclusion",
              "Computed": true
            }
          }
        }
      },
      "session_fixation_score_threshold": {
        "Type": "Int",
        "Optional": true,
        "Description": "Session fixation attack threshold",
        "Computed": true
      },
      "sql_injection_score_threshold": {
        "Type": "Int",
        "Optional": true,
        "Description": "SQL injection attack threshold",
        "Computed": true
      },
      "total_arg_length": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximum size of argument names and values",
        "Computed": true
      },
      "waf_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the Web Application Firewall that the configuration belongs to"
      },
      "warning_anomaly_score": {
        "Type": "Int",
        "Optional": true,
        "Description": "Score value to add for warning anomalies",
        "Computed": true
      },
      "xss_score_threshold": {
        "Type": "Int",
        "Optional": true,
        "Description": "XSS attack threshold",
        "Computed": true
      }
    },
    "fastly_tls_activation": {
      "certificate_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of certificate to use. Must have the `domain` specified in the certificate's Subject Alternative Names."
      },
      "configuration_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of TLS configuration to be used to terminate TLS traffic, or use the default one if missing.",
        "Computed": true
      },
      "created_at": {
        "Type": "String",
        "Description": "Time-stamp (GMT) when TLS was enabled.",
        "Computed": true
      },
      "domain": {
        "Type": "String",
        "Required": true,
        "Description": "Domain to enable TLS on. Must be assigned to an existing Fastly Service."
      }
    },
    "fastly_tls_certificate": {
      "certificate_body": {
        "Type": "String",
        "Required": true,
        "Description": "PEM-formatted certificate, optionally including any intermediary certificates."
      },
      "created_at": {
        "Type": "String",
        "Description": "Timestamp (GMT) when the certificate was created.",
        "Computed": true
      },
      "domains": {
        "Type": "Set",
        "Description": "All the domains (including wildcard domains) that are listed in the certificate's Subject Alternative Names (SAN) list.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "issued_to": {
        "Type": "String",
        "Description": "The hostname for which a certificate was issued.",
        "Computed": true
      },
      "issuer": {
        "Type": "String",
        "Description": "The certificate authority that issued the certificate.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Human-readable name used to identify the certificate. Defaults to the certificate's Common Name or first Subject Alternative Name entry.",
        "Computed": true
      },
      "replace": {
        "Type": "Bool",
        "Description": "A recommendation from Fastly indicating the key associated with this certificate is in need of rotation.",
        "Computed": true
      },
      "serial_number": {
        "Type": "String",
        "Description": "A value assigned by the issuer that is unique to a certificate.",
        "Computed": true
      },
      "signature_algorithm": {
        "Type": "String",
        "Description": "The algorithm used to sign the certificate.",
        "Computed": true
      },
      "updated_at": {
        "Type": "String",
        "Description": "Timestamp (GMT) when the certificate was last updated.",
        "Computed": true
      }
    },
    "fastly_tls_platform_certificate": {
      "allow_untrusted_root": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Disable checking whether the root of the certificate chain is trusted. Useful for development purposes to allow use of self-signed CAs. Defaults to false. Write-only on create.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "certificate_body": {
        "Type": "String",
        "Required": true,
        "Description": "PEM-formatted certificate."
      },
      "configuration_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of TLS configuration to be used to terminate TLS traffic."
      },
      "created_at": {
        "Type": "String",
        "Description": "Timestamp (GMT) when the certificate was created.",
        "Computed": true
      },
      "domains": {
        "Type": "Set",
        "Description": "All the domains (including wildcard domains) that are listed in any certificate's Subject Alternative Names (SAN) list.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "intermediates_blob": {
        "Type": "String",
        "Required": true,
        "Description": "PEM-formatted certificate chain from the `certificate_body` to its root."
      },
      "not_after": {
        "Type": "String",
        "Description": "Timestamp (GMT) when the certificate will expire.",
        "Computed": true
      },
      "not_before": {
        "Type": "String",
        "Description": "Timestamp (GMT) when the certificate will become valid.",
        "Computed": true
      },
      "replace": {
        "Type": "Bool",
        "Description": "A recommendation from Fastly indicating the key associated with this certificate is in need of rotation.",
        "Computed": true
      },
      "updated_at": {
        "Type": "String",
        "Description": "Timestamp (GMT) when the certificate was last updated.",
        "Computed": true
      }
    },
    "fastly_tls_private_key": {
      "created_at": {
        "Type": "String",
        "Description": "Time-stamp (GMT) when the private key was created.",
        "Computed": true
      },
      "key_length": {
        "Type": "Int",
        "Description": "The key length used to generate the private key.",
        "Computed": true
      },
      "key_pem": {
        "Type": "String",
        "Required": true,
        "Description": "Private key in PEM format."
      },
      "key_type": {
        "Type": "String",
        "Description": "The algorithm used to generate the private key. Must be RSA.",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Customisable name of the private key."
      },
      "public_key_sha1": {
        "Type": "String",
        "Description": "Useful for safely identifying the key.",
        "Computed": true
      },
      "replace": {
        "Type": "Bool",
        "Description": "Whether Fastly recommends replacing this private key.",
        "Computed": true
      }
    },
    "fastly_tls_subscription": {
      "certificate_authority": {
        "Type": "String",
        "Required": true,
        "Description": "The entity that issues and certifies the TLS certificates for your subscription. Valid values are `lets-encrypt` or `globalsign`."
      },
      "common_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The common name associated with the subscription generated by Fastly TLS. If you do not pass a common name on create, we will default to the first TLS domain included. If provided, the domain chosen as the common name must be included in TLS domains.",
        "Computed": true
      },
      "configuration_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The ID of the set of TLS configuration options that apply to the enabled domains on this subscription.",
        "Computed": true
      },
      "created_at": {
        "Type": "String",
        "Description": "Timestamp (GMT) when the subscription was created.",
        "Computed": true
      },
      "domains": {
        "Type": "Set",
        "Required": true,
        "Description": "List of domains on which to enable TLS.",
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "force_destroy": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Force delete the subscription even if it has active domains. Warning: this can disable production traffic if used incorrectly. Defaults to false.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "force_update": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Force update the subscription even if it has active domains. Warning: this can disable production traffic if used incorrectly.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "managed_dns_challenge": {
        "Type": "Map",
        "Description": "The details required to configure DNS to respond to ACME DNS challenge in order to verify domain ownership.",
        "Computed": true,
        "Deprecated": "Use 'managed_dns_challenges' attribute instead",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "managed_dns_challenges": {
        "Type": "Set",
        "Description": "A list of options for configuring DNS to respond to ACME DNS challenge in order to verify domain ownership.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "record_name": {
              "Type": "String",
              "Description": "The name of the DNS record to add. For example `_acme-challenge.example.com`.",
              "Computed": true
            },
            "record_type": {
              "Type": "String",
              "Description": "The type of DNS record to add, e.g. `A`, or `CNAME`.",
              "Computed": true
            },
            "record_value": {
              "Type": "String",
              "Description": "The value to which the DNS record should point, e.g. `xxxxx.fastly-validations.com`.",
              "Computed": true
            }
          }
        }
      },
      "managed_http_challenges": {
        "Type": "Set",
        "Description": "A list of options for configuring DNS to respond to ACME HTTP challenge in order to verify domain ownership. Best accessed through a `for` expression to filter the relevant record.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "record_name": {
              "Type": "String",
              "Description": "The name of the DNS record to add. For example `example.com`. Best accessed through a `for` expression to filter the relevant record.",
              "Computed": true
            },
            "record_type": {
              "Type": "String",
              "Description": "The type of DNS record to add, e.g. `A`, or `CNAME`.",
              "Computed": true
            },
            "record_values": {
              "Type": "Set",
              "Description": "A list with the value(s) to which the DNS record should point.",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "state": {
        "Type": "String",
        "Description": "The current state of the subscription. The list of possible states are: `pending`, `processing`, `issued`, and `renewing`.",
        "Computed": true
      },
      "updated_at": {
        "Type": "String",
        "Description": "Timestamp (GMT) when the subscription was updated.",
        "Computed": true
      }
    },
    "fastly_tls_subscription_validation": {
      "__timeouts__": [
        "create"
      ],
      "subscription_id": {
        "Type": "String",
        "Required": true,
        "Description": "The ID of the TLS Subscription that should be validated."
      }
    },
    "fastly_user_v1": {
      "login": {
        "Type": "String",
        "Required": true,
        "Description": "The email address, which is the login name, of the User"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "The real life name of the user"
      },
      "role": {
        "Type": "String",
        "Optional": true,
        "Description": "The role of this user. Can be `user` (the default), `billing`, `engineer`, or `superuser`. For detailed information on the abilities granted to each role, see [Fastly's Documentation on User roles](https://docs.fastly.com/en/guides/configuring-user-roles-and-permissions#user-roles-and-what-they-can-do)",
        "Default": {
          "Type": "string",
          "Value": "user"
        }
      }
    }
  },
  "data-sources": {
    "fastly_ip_ranges": {
      "cidr_blocks": {
        "Type": "List",
        "Description": "The lexically ordered list of ipv4 CIDR blocks.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ipv6_cidr_blocks": {
        "Type": "List",
        "Description": "The lexically ordered list of ipv6 CIDR blocks.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "fastly_tls_activation": {
      "certificate_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the TLS Certificate used.",
        "Computed": true,
        "ConflictsWith": [
          "id"
        ]
      },
      "configuration_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the TLS Configuration used.",
        "Computed": true,
        "ConflictsWith": [
          "id"
        ]
      },
      "created_at": {
        "Type": "String",
        "Description": "Timestamp (GMT) when TLS was enabled.",
        "Computed": true
      },
      "domain": {
        "Type": "String",
        "Optional": true,
        "Description": "Domain that TLS was enabled on.",
        "Computed": true,
        "ConflictsWith": [
          "id"
        ]
      },
      "id": {
        "Type": "String",
        "Optional": true,
        "Description": "Fastly Activation ID. Conflicts with all other filters.",
        "Computed": true,
        "ConflictsWith": [
          "certificate_id",
          "configuration_id",
          "domain"
        ]
      }
    },
    "fastly_tls_activation_ids": {
      "certificate_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of TLS certificate used to filter activations"
      },
      "ids": {
        "Type": "Set",
        "Description": "List of IDs of the TLS Activations.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "fastly_tls_certificate": {
      "created_at": {
        "Type": "String",
        "Description": "Timestamp (GMT) when the certificate was created",
        "Computed": true
      },
      "domains": {
        "Type": "Set",
        "Optional": true,
        "Description": "Domains that are listed in any certificates' Subject Alternative Names (SAN) list.",
        "Computed": true,
        "ConflictsWith": [
          "id"
        ],
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "id": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique ID assigned to certificate by Fastly",
        "Computed": true,
        "ConflictsWith": [
          "name",
          "issued_to",
          "domains",
          "issuer"
        ]
      },
      "issued_to": {
        "Type": "String",
        "Optional": true,
        "Description": "The hostname for which a certificate was issued.",
        "Computed": true,
        "ConflictsWith": [
          "id"
        ]
      },
      "issuer": {
        "Type": "String",
        "Optional": true,
        "Description": "The certificate authority that issued the certificate.",
        "Computed": true,
        "ConflictsWith": [
          "id"
        ]
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Human-readable name used to identify the certificate. Defaults to the certificate's Common Name or first Subject Alternative Name entry.",
        "Computed": true,
        "ConflictsWith": [
          "id"
        ]
      },
      "replace": {
        "Type": "Bool",
        "Description": "A recommendation from Fastly indicating the key associated with this certificate is in need of rotation",
        "Computed": true
      },
      "serial_number": {
        "Type": "String",
        "Description": "A value assigned by the issuer that is unique to a certificate",
        "Computed": true
      },
      "signature_algorithm": {
        "Type": "String",
        "Description": "The algorithm used to sign the certificate",
        "Computed": true
      },
      "updated_at": {
        "Type": "String",
        "Description": "Timestamp (GMT) when the certificate was last updated",
        "Computed": true
      }
    },
    "fastly_tls_certificate_ids": {
      "ids": {
        "Type": "Set",
        "Description": "List of IDs corresponding to Custom TLS certificates.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "fastly_tls_configuration": {
      "created_at": {
        "Type": "String",
        "Description": "Timestamp (GMT) when the configuration was created.",
        "Computed": true
      },
      "default": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Signifies whether Fastly will use this configuration as a default when creating a new TLS activation.",
        "Computed": true,
        "ConflictsWith": [
          "id"
        ]
      },
      "dns_records": {
        "Type": "Set",
        "Description": "The available DNS addresses that can be used to enable TLS for a domain. DNS must be configured for a domain for TLS handshakes to succeed. If enabling TLS on an apex domain (e.g. `example.com`) you must create four A records (or four AAAA records for IPv6 support) using the displayed global A record's IP addresses with your DNS provider. For subdomains and wildcard domains (e.g. `www.example.com` or `*.example.com`) you will need to create a relevant CNAME record.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "record_type": {
              "Type": "String",
              "Description": "Type of DNS record to set, e.g. A, AAAA, or CNAME.",
              "Computed": true
            },
            "record_value": {
              "Type": "String",
              "Description": "The IP address or hostname of the DNS record.",
              "Computed": true
            },
            "region": {
              "Type": "String",
              "Description": "The regions that will be used to route traffic. Select DNS Records with a `global` region to route traffic to the most performant point of presence (POP) worldwide (global pricing will apply). Select DNS records with a `us-eu` region to exclusively land traffic on North American and European POPs.",
              "Computed": true
            }
          }
        }
      },
      "http_protocols": {
        "Type": "Set",
        "Optional": true,
        "Description": "HTTP protocols available on the TLS configuration.",
        "Computed": true,
        "ConflictsWith": [
          "id"
        ],
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of the TLS configuration obtained from the Fastly API or another data source. Conflicts with all the other filters.",
        "Computed": true,
        "ConflictsWith": [
          "name",
          "tls_protocols",
          "http_protocols",
          "tls_service",
          "default"
        ]
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "Custom name of the TLS configuration.",
        "Computed": true,
        "ConflictsWith": [
          "id"
        ]
      },
      "tls_protocols": {
        "Type": "Set",
        "Optional": true,
        "Description": "TLS protocols available on the TLS configuration.",
        "Computed": true,
        "ConflictsWith": [
          "id"
        ],
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tls_service": {
        "Type": "String",
        "Optional": true,
        "Description": "Whether the configuration should support the `PLATFORM` or `CUSTOM` TLS service.",
        "Computed": true,
        "ConflictsWith": [
          "id"
        ]
      },
      "updated_at": {
        "Type": "String",
        "Description": "Timestamp (GMT) when the configuration was last updated.",
        "Computed": true
      }
    },
    "fastly_tls_configuration_ids": {
      "ids": {
        "Type": "Set",
        "Description": "List of IDs corresponding to available TLS configurations.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "fastly_tls_domain": {
      "domain": {
        "Type": "String",
        "Required": true,
        "Description": "Domain name to look up activations, certificates and subscriptions for."
      },
      "tls_activation_ids": {
        "Type": "Set",
        "Description": "IDs of the activations associated with the domain.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tls_certificate_ids": {
        "Type": "Set",
        "Description": "IDs of the certificates associated with the domain.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "tls_subscription_ids": {
        "Type": "Set",
        "Description": "IDs of the subscriptions associated with the domain.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "fastly_tls_platform_certificate": {
      "configuration_id": {
        "Type": "String",
        "Description": "ID of TLS configuration used to terminate TLS traffic.",
        "Computed": true
      },
      "created_at": {
        "Type": "String",
        "Description": "Timestamp (GMT) when the certificate was created.",
        "Computed": true
      },
      "domains": {
        "Type": "Set",
        "Optional": true,
        "Description": "Domains that are listed in any certificate's Subject Alternative Names (SAN) list.",
        "Computed": true,
        "ConflictsWith": [
          "id"
        ],
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "id": {
        "Type": "String",
        "Optional": true,
        "Description": "Unique ID assigned to certificate by Fastly. Conflicts with all the other filters.",
        "Computed": true,
        "ConflictsWith": [
          "domains"
        ]
      },
      "not_after": {
        "Type": "String",
        "Description": "Timestamp (GMT) when the certificate will expire.",
        "Computed": true
      },
      "not_before": {
        "Type": "String",
        "Description": "Timestamp (GMT) when the certificate will become valid.",
        "Computed": true
      },
      "replace": {
        "Type": "Bool",
        "Description": "A recommendation from Fastly indicating the key associated with this certificate is in need of rotation.",
        "Computed": true
      },
      "updated_at": {
        "Type": "String",
        "Description": "Timestamp (GMT) when the certificate was last updated.",
        "Computed": true
      }
    },
    "fastly_tls_platform_certificate_ids": {
      "ids": {
        "Type": "Set",
        "Description": "List of IDs corresponding to Platform TLS certificates.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "fastly_tls_private_key": {
      "created_at": {
        "Type": "String",
        "Optional": true,
        "Description": "Timestamp (GMT) when the private key was created.",
        "Computed": true,
        "ConflictsWith": [
          "id"
        ]
      },
      "id": {
        "Type": "String",
        "Optional": true,
        "Description": "Fastly private key ID. Conflicts with all the other filters",
        "Computed": true,
        "ConflictsWith": [
          "name",
          "created_at",
          "key_length",
          "key_type",
          "public_key_sha1"
        ]
      },
      "key_length": {
        "Type": "Int",
        "Optional": true,
        "Description": "The key length used to generate the private key.",
        "Computed": true,
        "ConflictsWith": [
          "id"
        ]
      },
      "key_type": {
        "Type": "String",
        "Optional": true,
        "Description": "The algorithm used to generate the private key. Must be RSA.",
        "Computed": true,
        "ConflictsWith": [
          "id"
        ]
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The human-readable name assigned to the private key when uploaded.",
        "Computed": true,
        "ConflictsWith": [
          "id"
        ]
      },
      "public_key_sha1": {
        "Type": "String",
        "Optional": true,
        "Description": "A hash of the associated public key, useful for safely identifying it.",
        "Computed": true,
        "ConflictsWith": [
          "id"
        ]
      },
      "replace": {
        "Type": "Bool",
        "Description": "Whether Fastly recommends replacing this private key.",
        "Computed": true
      }
    },
    "fastly_tls_private_key_ids": {
      "ids": {
        "Type": "Set",
        "Description": "List of IDs of the TLS private keys.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "fastly_tls_subscription": {
      "certificate_authority": {
        "Type": "String",
        "Optional": true,
        "Description": "The entity that issues and certifies the TLS certificates for the subscription.",
        "Computed": true,
        "ConflictsWith": [
          "id"
        ]
      },
      "common_name": {
        "Type": "String",
        "Description": "The common name associated with the subscription generated by Fastly TLS.",
        "Computed": true
      },
      "configuration_id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of TLS configuration used to terminate TLS traffic.",
        "Computed": true,
        "ConflictsWith": [
          "id"
        ]
      },
      "created_at": {
        "Type": "String",
        "Description": "Timestamp (GMT) when subscription was created.",
        "Computed": true
      },
      "domains": {
        "Type": "Set",
        "Optional": true,
        "Description": "List of domains on which to enable TLS.",
        "Computed": true,
        "ConflictsWith": [
          "id"
        ],
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "id": {
        "Type": "String",
        "Optional": true,
        "Description": "ID of TLS subscription. Conflicts with all the other filters.",
        "Computed": true,
        "ConflictsWith": [
          "configuration_id",
          "domains",
          "certificate_authority"
        ]
      },
      "state": {
        "Type": "String",
        "Description": "The current state of the subscription. The list of possible states are: `pending`, `processing`, `issued`, and `renewing`.",
        "Computed": true
      },
      "updated_at": {
        "Type": "String",
        "Description": "Timestamp (GMT) when subscription was last updated.",
        "Computed": true
      }
    },
    "fastly_tls_subscription_ids": {
      "ids": {
        "Type": "Set",
        "Description": "IDs of available TLS subscriptions.",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "fastly_waf_rules": {
      "exclude_modsec_rule_ids": {
        "Type": "List",
        "Optional": true,
        "Description": "A list of modsecurity rules IDs to be excluded from the data set.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "Int"
        }
      },
      "publishers": {
        "Type": "List",
        "Optional": true,
        "Description": "A list of publishers to be used as filters for the data set.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "rules": {
        "Type": "List",
        "Description": "The list of rules that results from any given combination of filters.",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "latest_revision_number": {
              "Type": "Int",
              "Required": true,
              "Description": "The modsecurity rule's latest revision."
            },
            "modsec_rule_id": {
              "Type": "Int",
              "Required": true,
              "Description": "The modsecurity rule ID."
            },
            "type": {
              "Type": "String",
              "Description": "The modsecurity rule's type.",
              "Computed": true
            }
          }
        }
      },
      "tags": {
        "Type": "List",
        "Optional": true,
        "Description": "A list of tags to be used as filters for the data set.",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    }
  }
}