{
  ".schema_version": "2",
  ".sdk_type": "terraform-plugin-sdk-v2",
  "name": "circonus",
  "type": "provider",
  "version": "v0.12.0",
  "provider": {
    "api_url": {
      "Type": "String",
      "Optional": true,
      "Description": "URL of the Circonus API",
      "DefaultFunc": "ENV(CIRCONUS_API_URL)"
    },
    "auto_tag": {
      "Type": "Bool",
      "Optional": true,
      "Description": "Signals that the provider should automatically add a tag to all API calls denoting that the resource was created by Terraform",
      "Default": {
        "Type": "bool",
        "Value": "false"
      }
    },
    "key": {
      "Type": "String",
      "Required": true,
      "Description": "API token used to authenticate with the Circonus API",
      "DefaultFunc": "ENV(CIRCONUS_API_TOKEN)"
    }
  },
  "resources": {
    "circonus_check": {
      "active": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If the check is activate or disabled",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "caql": {
        "Type": "Set",
        "Optional": true,
        "Description": "CAQL check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "query": {
              "Type": "String",
              "Required": true,
              "Description": "The query definition"
            }
          }
        }
      },
      "check_by_collector": {
        "Type": "Map",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "check_id": {
        "Type": "String",
        "Computed": true
      },
      "checks": {
        "Type": "List",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "cloudwatch": {
        "Type": "Set",
        "Optional": true,
        "Description": "CloudWatch check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "api_key": {
              "Type": "String",
              "Required": true,
              "Description": "The AWS API Key",
              "DefaultFunc": "ENV(AWS_ACCESS_KEY_ID)"
            },
            "api_secret": {
              "Type": "String",
              "Required": true,
              "Description": "The AWS API Secret",
              "DefaultFunc": "ENV(AWS_SECRET_ACCESS_KEY)"
            },
            "dimmensions": {
              "Type": "Map",
              "Required": true,
              "Description": "The dimensions to query for the metric",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Value": "String"
              }
            },
            "metric": {
              "Type": "Set",
              "Required": true,
              "Description": "One or more CloudWatch Metric attributes",
              "MinItems": 1,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "namespace": {
              "Type": "String",
              "Required": true,
              "Description": "The namespace to pull telemetry from"
            },
            "url": {
              "Type": "String",
              "Required": true,
              "Description": "The URL including schema and hostname for the Cloudwatch monitoring server. This value will be used to specify the region - for example, to pull from us-east-1, the URL would be https://monitoring.us-east-1.amazonaws.com."
            },
            "version": {
              "Type": "String",
              "Optional": true,
              "Description": "The version of the Cloudwatch API to use.",
              "Default": {
                "Type": "string",
                "Value": "2010-08-01"
              }
            }
          }
        }
      },
      "collector": {
        "Type": "Set",
        "Optional": true,
        "Description": "The collector(s) that are responsible for gathering the metrics",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Required": true,
              "Description": "The ID of the collector"
            }
          }
        }
      },
      "consul": {
        "Type": "List",
        "Optional": true,
        "Description": "Consul check configuration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "acl_token": {
              "Type": "String",
              "Optional": true,
              "Description": "A Consul ACL token"
            },
            "allow_stale": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Allow Consul to read from a non-leader system",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "ca_chain": {
              "Type": "String",
              "Optional": true,
              "Description": "A path to a file containing all the certificate authorities that should be loaded to validate the remote certificate (for TLS checks)"
            },
            "certificate_file": {
              "Type": "String",
              "Optional": true,
              "Description": "A path to a file containing the client certificate that will be presented to the remote server (for TLS-enabled checks)"
            },
            "check_blacklist": {
              "Type": "List",
              "Optional": true,
              "Description": "A blacklist of check names to exclude from metric results",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "ciphers": {
              "Type": "String",
              "Optional": true,
              "Description": "A list of ciphers to be used in the TLS protocol (for HTTPS checks)"
            },
            "dc": {
              "Type": "String",
              "Optional": true,
              "Description": "The Consul datacenter to extract health information from"
            },
            "headers": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of HTTP Headers to send along with HTTP Requests",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Value": "String"
              }
            },
            "http_addr": {
              "Type": "String",
              "Optional": true,
              "Description": "The HTTP Address of a Consul agent to query",
              "Default": {
                "Type": "string",
                "Value": "http://consul.service.consul"
              }
            },
            "key_file": {
              "Type": "String",
              "Optional": true,
              "Description": "A path to a file containing key to be used in conjunction with the cilent certificate (for TLS checks)"
            },
            "node": {
              "Type": "String",
              "Optional": true,
              "Description": "Node Name or NodeID of a Consul agent",
              "ConflictsWith": [
                "consul.service",
                "consul.state"
              ]
            },
            "node_blacklist": {
              "Type": "List",
              "Optional": true,
              "Description": "A blacklist of node names or IDs to exclude from metric results",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "service": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the Consul service to check",
              "ConflictsWith": [
                "consul.node",
                "consul.state"
              ]
            },
            "service_blacklist": {
              "Type": "List",
              "Optional": true,
              "Description": "A blacklist of service names to exclude from metric results",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "state": {
              "Type": "String",
              "Optional": true,
              "Description": "Check for Consul services in this particular state",
              "ConflictsWith": [
                "consul.node",
                "consul.service"
              ]
            }
          }
        }
      },
      "created": {
        "Type": "Int",
        "Computed": true
      },
      "dns": {
        "Type": "Set",
        "Optional": true,
        "Description": "DNS check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ctype": {
              "Type": "String",
              "Optional": true,
              "Description": "The DNS class of the query. IN: Internet, CH: Chaos, HS: Hesoid.",
              "Default": {
                "Type": "string",
                "Value": "IN"
              }
            },
            "nameserver": {
              "Type": "String",
              "Optional": true,
              "Description": "The domain name server to query. If the name of the check is in-addr.arpa, the system default nameserver is used. Otherwise, the nameserver is the %[target] of the the check.",
              "Default": {
                "Type": "string",
                "Value": "%[target]"
              }
            },
            "query": {
              "Type": "String",
              "Required": true,
              "Description": "The query to send. If the name of the check is in-addr.arpa, the reverse IP octet notation of in-addr.arpa syntax is synthesized by default. Otherwise the default query is the name of the check itself."
            },
            "rtype": {
              "Type": "String",
              "Optional": true,
              "Description": "The DNS resource record type of the query. If the name of the check is in-addr.arpa, the default is PTR, otherwise it is A.",
              "Default": {
                "Type": "string",
                "Value": "A"
              }
            }
          }
        }
      },
      "external": {
        "Type": "List",
        "Optional": true,
        "Description": "External check configuration",
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "arg1": {
              "Type": "String",
              "Optional": true,
              "Description": "The 1st argument to the command"
            },
            "arg10": {
              "Type": "String",
              "Optional": true,
              "Description": "The 10th argument to the command"
            },
            "arg2": {
              "Type": "String",
              "Optional": true,
              "Description": "The 2nd argument to the command"
            },
            "arg3": {
              "Type": "String",
              "Optional": true,
              "Description": "The 3rd argument to the command"
            },
            "arg4": {
              "Type": "String",
              "Optional": true,
              "Description": "The 4th argument to the command"
            },
            "arg5": {
              "Type": "String",
              "Optional": true,
              "Description": "The 5th argument to the command"
            },
            "arg6": {
              "Type": "String",
              "Optional": true,
              "Description": "The 6th argument to the command"
            },
            "arg7": {
              "Type": "String",
              "Optional": true,
              "Description": "The 7th argument to the command"
            },
            "arg8": {
              "Type": "String",
              "Optional": true,
              "Description": "The 8th argument to the command"
            },
            "arg9": {
              "Type": "String",
              "Optional": true,
              "Description": "The 9th argument to the command"
            },
            "command": {
              "Type": "String",
              "Required": true,
              "Description": "The full path to the command to run"
            },
            "env": {
              "Type": "Map",
              "Optional": true,
              "Description": "The map of environment vars",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Value": "String"
              }
            },
            "output_extract": {
              "Type": "String",
              "Required": true,
              "Description": "The output extraction method: JSON or NAGIOS, otherwise treated as regexp"
            }
          }
        }
      },
      "http": {
        "Type": "Set",
        "Optional": true,
        "Description": "HTTP check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "auth_method": {
              "Type": "String",
              "Optional": true,
              "Description": "The HTTP Authentication method"
            },
            "auth_password": {
              "Type": "String",
              "Optional": true,
              "Description": "The HTTP Authentication user password"
            },
            "auth_user": {
              "Type": "String",
              "Optional": true,
              "Description": "The HTTP Authentication user name"
            },
            "body_regexp": {
              "Type": "String",
              "Optional": true,
              "Description": "This regular expression is matched against the body of the response. If a match is not found, the check will be marked as \"bad."
            },
            "ca_chain": {
              "Type": "String",
              "Optional": true,
              "Description": "A path to a file containing all the certificate authorities that should be loaded to validate the remote certificate (for TLS checks)"
            },
            "certificate_file": {
              "Type": "String",
              "Optional": true,
              "Description": "A path to a file containing the client certificate that will be presented to the remote server (for TLS-enabled checks)"
            },
            "ciphers": {
              "Type": "String",
              "Optional": true,
              "Description": "A list of ciphers to be used in the TLS protocol (for HTTPS checks)"
            },
            "code": {
              "Type": "String",
              "Optional": true,
              "Description": "The HTTP code that is expected. If the code received does not match this regular expression, the check is marked as \"bad.\"",
              "Default": {
                "Type": "string",
                "Value": "^200$"
              }
            },
            "extract": {
              "Type": "String",
              "Optional": true,
              "Description": "This regular expression is matched against the body of the response globally. The first capturing match is the key and the second capturing match is the value. Each key/value extracted is registered as a metric for the check."
            },
            "headers": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of HTTP Headers to send along with HTTP Requests",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Value": "String"
              }
            },
            "key_file": {
              "Type": "String",
              "Optional": true,
              "Description": "A path to a file containing key to be used in conjunction with the cilent certificate (for TLS checks)"
            },
            "method": {
              "Type": "String",
              "Optional": true,
              "Description": "The HTTP method to use",
              "Default": {
                "Type": "string",
                "Value": "GET"
              }
            },
            "payload": {
              "Type": "String",
              "Optional": true,
              "Description": "The information transferred as the payload of an HTTP request"
            },
            "read_limit": {
              "Type": "Int",
              "Optional": true,
              "Description": "Sets an approximate limit on the data read (0 means no limit)"
            },
            "redirects": {
              "Type": "String",
              "Optional": true,
              "Description": "The maximum number of Location header redirects to follow.",
              "Default": {
                "Type": "string",
                "Value": "0"
              }
            },
            "url": {
              "Type": "String",
              "Required": true,
              "Description": "The URL to use as the target of the check"
            },
            "version": {
              "Type": "String",
              "Optional": true,
              "Description": "Sets the HTTP version for the check to use",
              "Default": {
                "Type": "string",
                "Value": "1.1"
              }
            }
          }
        }
      },
      "httptrap": {
        "Type": "Set",
        "Optional": true,
        "Description": "HTTP Trap check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "async_metrics": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Specify whether httptrap metrics are logged immediately or held until the status message is emitted",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "secret": {
              "Type": "String",
              "Optional": true
            }
          }
        }
      },
      "icmp_ping": {
        "Type": "Set",
        "Optional": true,
        "Description": "ICMP ping check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "availability": {
              "Type": "Float",
              "Optional": true,
              "Description": "The percentage of ICMP available required for the check to be considered \"good.\"",
              "Default": {
                "Type": "float64",
                "Value": "100"
              }
            },
            "count": {
              "Type": "Int",
              "Optional": true,
              "Description": "The number of ICMP requests to send during a single check.",
              "Default": {
                "Type": "int",
                "Value": "5"
              }
            },
            "interval": {
              "Type": "String",
              "Optional": true,
              "Description": "The number of milliseconds between ICMP requests.",
              "Default": {
                "Type": "string",
                "Value": "2s"
              }
            }
          }
        }
      },
      "jmx": {
        "Type": "Set",
        "Optional": true,
        "Description": "JMX check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "host": {
              "Type": "String",
              "Required": true,
              "Description": "JMX host"
            },
            "mbean_domains": {
              "Type": "List",
              "Optional": true,
              "Description": "The space separated list of domains to filter to",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "mbean_properties": {
              "Type": "List",
              "Optional": true,
              "Description": "The space separated list of properties to filter to",
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "index": {
                    "Type": "String",
                    "Required": true
                  },
                  "name": {
                    "Type": "String",
                    "Required": true
                  },
                  "type": {
                    "Type": "String",
                    "Required": true
                  }
                }
              }
            },
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "JMX password"
            },
            "port": {
              "Type": "Int",
              "Required": true,
              "Description": "JMX port"
            },
            "uri": {
              "Type": "String",
              "Optional": true,
              "Description": "JMX uri, defaults to '/jmxrmi'",
              "Default": {
                "Type": "string",
                "Value": "/jmxrmi"
              }
            },
            "username": {
              "Type": "String",
              "Optional": true,
              "Description": "JMX username"
            }
          }
        }
      },
      "json": {
        "Type": "Set",
        "Optional": true,
        "Description": "JSON check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "auth_method": {
              "Type": "String",
              "Optional": true,
              "Description": "The HTTP Authentication method"
            },
            "auth_password": {
              "Type": "String",
              "Optional": true,
              "Description": "The HTTP Authentication user password"
            },
            "auth_user": {
              "Type": "String",
              "Optional": true,
              "Description": "The HTTP Authentication user name"
            },
            "ca_chain": {
              "Type": "String",
              "Optional": true,
              "Description": "A path to a file containing all the certificate authorities that should be loaded to validate the remote certificate (for TLS checks)"
            },
            "certificate_file": {
              "Type": "String",
              "Optional": true,
              "Description": "A path to a file containing the client certificate that will be presented to the remote server (for TLS-enabled checks)"
            },
            "ciphers": {
              "Type": "String",
              "Optional": true,
              "Description": "A list of ciphers to be used in the TLS protocol (for HTTPS checks)"
            },
            "headers": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of HTTP Headers to send along with HTTP Requests",
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Value": "String"
              }
            },
            "key_file": {
              "Type": "String",
              "Optional": true,
              "Description": "A path to a file containing key to be used in conjunction with the cilent certificate (for TLS checks)"
            },
            "method": {
              "Type": "String",
              "Optional": true,
              "Description": "The HTTP method to use",
              "Default": {
                "Type": "string",
                "Value": "GET"
              }
            },
            "payload": {
              "Type": "String",
              "Optional": true,
              "Description": "The information transferred as the payload of an HTTP request"
            },
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "Specifies the port on which the management interface can be reached",
              "Default": {
                "Type": "string",
                "Value": "443"
              }
            },
            "read_limit": {
              "Type": "Int",
              "Optional": true,
              "Description": "Sets an approximate limit on the data read (0 means no limit)"
            },
            "url": {
              "Type": "String",
              "Required": true,
              "Description": "The URL to use as the target of the check"
            },
            "version": {
              "Type": "String",
              "Optional": true,
              "Description": "Sets the HTTP version for the check to use",
              "Default": {
                "Type": "string",
                "Value": "1.1"
              }
            }
          }
        }
      },
      "last_modified": {
        "Type": "Int",
        "Computed": true
      },
      "last_modified_by": {
        "Type": "String",
        "Computed": true
      },
      "memcached": {
        "Type": "Set",
        "Optional": true,
        "Description": "Memcached check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "The port the memcached instance is listenening on, default 11211",
              "Default": {
                "Type": "int",
                "Value": "11211"
              }
            }
          }
        }
      },
      "metric": {
        "Type": "List",
        "Optional": true,
        "Description": "Configuration for a stream of metrics",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "active": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Enables or disables the metric",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of the metric"
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "Type of metric (e.g. numeric, histogram, text)"
            }
          }
        }
      },
      "metric_filter": {
        "Type": "List",
        "Optional": true,
        "Description": "Allow/deny configuration for regex based metric ingestion",
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "comment": {
              "Type": "String",
              "Optional": true,
              "Description": "Comment on this filter"
            },
            "regex": {
              "Type": "String",
              "Required": true,
              "Description": "Regex of the filter"
            },
            "tag_query": {
              "Type": "String",
              "Optional": true,
              "Description": "The tag query to apply"
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "'allow' or 'deny'"
            }
          }
        }
      },
      "metric_limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "Setting a metric_limit will enable all (-1), disable (0), or allow up to the specified limit of metrics for this check (\"N+\", where N is a positive integer)",
        "Computed": true
      },
      "mysql": {
        "Type": "Set",
        "Optional": true,
        "Description": "MySQL check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dsn": {
              "Type": "String",
              "Required": true,
              "Description": "The connect DSN for the MySQL instance"
            },
            "query": {
              "Type": "String",
              "Required": true,
              "Description": "The SQL to use as the query"
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the check bundle that will be displayed in the web interface"
      },
      "notes": {
        "Type": "String",
        "Optional": true,
        "Description": "Notes about this check bundle",
        "Computed": true
      },
      "ntp": {
        "Type": "Set",
        "Optional": true,
        "Description": "NTP check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "The port to talk to NTP over (default: 123)",
              "Default": {
                "Type": "int",
                "Value": "123"
              }
            },
            "use_control": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Control protocol means that the agent will request the NTP telemetry of the target regarding its preferred peer, (default: false)",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            }
          }
        }
      },
      "period": {
        "Type": "String",
        "Optional": true,
        "Description": "The period between each time the check is made",
        "Computed": true
      },
      "postgresql": {
        "Type": "Set",
        "Optional": true,
        "Description": "PostgreSQL check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dsn": {
              "Type": "String",
              "Required": true,
              "Description": "The connect DSN for the PostgreSQL instance"
            },
            "query": {
              "Type": "String",
              "Required": true,
              "Description": "The SQL to use as the query"
            }
          }
        }
      },
      "promtext": {
        "Type": "Set",
        "Optional": true,
        "Description": "Prometheus URL scraper check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "Specifies the port on which the prometheus metrics can be scraped",
              "Default": {
                "Type": "int",
                "Value": "443"
              }
            },
            "url": {
              "Type": "String",
              "Required": true,
              "Description": "The URL to use as the target of the check"
            }
          }
        }
      },
      "redis": {
        "Type": "Set",
        "Optional": true,
        "Description": "Redis check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "command": {
              "Type": "String",
              "Optional": true,
              "Description": "The redis command to run to gather stats, default: INFO.",
              "Default": {
                "Type": "string",
                "Value": "INFO"
              }
            },
            "db_index": {
              "Type": "Int",
              "Optional": true,
              "Description": "The database index to query, defaults to zero",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "password": {
              "Type": "String",
              "Optional": true,
              "Description": "The pass required to run the command."
            },
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "Specifies the port on which the Redis instance can be reached.",
              "Default": {
                "Type": "int",
                "Value": "6379"
              }
            }
          }
        }
      },
      "reverse_connect_urls": {
        "Type": "List",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "smtp": {
        "Type": "Set",
        "Optional": true,
        "Description": "SMTP check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ehlo": {
              "Type": "String",
              "Optional": true,
              "Description": "Specifies the EHLO parameter. (default: noit.local)",
              "Default": {
                "Type": "string",
                "Value": "noit.local"
              }
            },
            "from": {
              "Type": "String",
              "Optional": true,
              "Description": "Specifies the envelope sender.",
              "Default": {
                "Type": "string"
              }
            },
            "payload": {
              "Type": "String",
              "Optional": true,
              "Description": "Specifies the payload sent (on the wire). CR LF DOT CR LF is appended automatically. (default: Subject: Testing)",
              "Default": {
                "Type": "string",
                "Value": "Subect: Testing"
              }
            },
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "Specifies the TCP port to connect to. (default: 25)",
              "Default": {
                "Type": "int",
                "Value": "25"
              }
            },
            "proxy_dest_address": {
              "Type": "String",
              "Optional": true,
              "Description": "The IP (or string) to use as the destination address portion of the PROXY protocol. More on the proxy protocol here: http://www.haproxy.org/download/1.8/doc/proxy-protocol.txt",
              "Default": {
                "Type": "string"
              }
            },
            "proxy_dest_port": {
              "Type": "Int",
              "Optional": true,
              "Description": "The port to use as the dest port portion of the PROXY protocol. Defaults to the port setting or 25",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "proxy_family": {
              "Type": "String",
              "Optional": true,
              "Description": "The protocol family to send in the PROXY header. (default: TCP4)",
              "Default": {
                "Type": "string",
                "Value": "TCP4"
              }
            },
            "proxy_protocol": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Test MTA responses to a PROXY protocol header by setting this to true. (default: false)",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "proxy_source_address": {
              "Type": "String",
              "Optional": true,
              "Description": "The IP (or string) to use as the source address portion of the PROXY protocol. More on the proxy protocol here: http://www.haproxy.org/download/1.8/doc/proxy-protocol.txt",
              "Default": {
                "Type": "string"
              }
            },
            "proxy_source_port": {
              "Type": "Int",
              "Optional": true,
              "Description": "The port to use as the source port portion of the PROXY protocol. Defaults to the actual source port of the connection to the target_ip.",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "sasl_auth_id": {
              "Type": "String",
              "Optional": true,
              "Description": "The SASL Authorization Identity.",
              "Default": {
                "Type": "string"
              }
            },
            "sasl_authentication": {
              "Type": "String",
              "Optional": true,
              "Description": "Specifies the type of SASL Authentication to use. (default: off)",
              "Default": {
                "Type": "string",
                "Value": "off"
              }
            },
            "sasl_password": {
              "Type": "String",
              "Optional": true,
              "Description": "The SASL Authentication password.",
              "Default": {
                "Type": "string"
              }
            },
            "sasl_user": {
              "Type": "String",
              "Optional": true,
              "Description": "The SASL Authentication username.",
              "Default": {
                "Type": "string"
              }
            },
            "starttls": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Specified if the client should attempt a STARTTLS upgrade. (default: false)",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "to": {
              "Type": "String",
              "Required": true,
              "Description": "Specifies the envelope recipient."
            }
          }
        }
      },
      "snmp": {
        "Type": "List",
        "Optional": true,
        "Description": "SNMP check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "auth_passphrase": {
              "Type": "String",
              "Optional": true,
              "Description": "The authentication passphrase to use. Only applicaable to SNMP Version 3."
            },
            "auth_protocol": {
              "Type": "String",
              "Optional": true,
              "Description": "The authentication protocol to use. Only applicaable to SNMP Version 3.",
              "Default": {
                "Type": "string",
                "Value": "MD5"
              }
            },
            "community": {
              "Type": "String",
              "Required": true,
              "Description": "The SNMP community string providing read access."
            },
            "context_engine": {
              "Type": "String",
              "Optional": true,
              "Description": "The context engine hex value to use. Only applicaable to SNMP Version 3."
            },
            "context_name": {
              "Type": "String",
              "Optional": true,
              "Description": "The context name to use. Only applicaable to SNMP Version 3."
            },
            "oid": {
              "Type": "List",
              "Required": true,
              "Description": "Defines a metric to query.",
              "MinItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Name of the metric produced by this MIB."
                  },
                  "path": {
                    "Type": "String",
                    "Required": true,
                    "Description": "The decimal notation or MIB name of this OID."
                  },
                  "type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The metric type of this OID. The value can be either one of the single letter codes in the metric_type_t enum or the following string variants: guess, int32, uint32, int64, uint64, double, string."
                  }
                }
              }
            },
            "port": {
              "Type": "Int",
              "Optional": true,
              "Description": "The UDP port to which SNMP queries will be sent.",
              "Default": {
                "Type": "int",
                "Value": "161"
              }
            },
            "privacy_passphrase": {
              "Type": "String",
              "Optional": true,
              "Description": "The privacy passphrase to use. Only applicaable to SNMP Version 3."
            },
            "privacy_protocol": {
              "Type": "String",
              "Optional": true,
              "Description": "The privacy protocol to use. Only applicaable to SNMP Version 3.",
              "Default": {
                "Type": "string",
                "Value": "DES"
              }
            },
            "security_engine": {
              "Type": "String",
              "Optional": true,
              "Description": "The security engine hex value to use. Only applicaable to SNMP Version 3."
            },
            "security_level": {
              "Type": "String",
              "Optional": true,
              "Description": "The security level to use for the SNMP session. Choices are \"authPriv\" (authenticated and encrypted), \"authNoPriv\" (authenticated and unencrypted) and \"noAuthNoPriv\" (unauthenticated and unencrypted). Only applicaable to SNMP Version 3.",
              "Default": {
                "Type": "string",
                "Value": "authPriv"
              }
            },
            "security_name": {
              "Type": "String",
              "Optional": true,
              "Description": "The security name (or user name) to use. Only applicaable to SNMP Version 3."
            },
            "separate_queries": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Whether or not to query each OID separately.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "version": {
              "Type": "String",
              "Required": true,
              "Description": "The SNMP version used for queries."
            }
          }
        }
      },
      "statsd": {
        "Type": "Set",
        "Optional": true,
        "Description": "statsd check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "source_ip": {
              "Type": "String",
              "Required": true,
              "Description": "The source IP of the statsd metrics stream"
            }
          }
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "A list of tags assigned to the check",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "target": {
        "Type": "String",
        "Optional": true,
        "Description": "The target of the check (e.g. hostname, URL, IP, etc)",
        "Computed": true
      },
      "tcp": {
        "Type": "Set",
        "Optional": true,
        "Description": "TCP check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "banner_regexp": {
              "Type": "String",
              "Optional": true,
              "Description": "This regular expression is matched against the response banner. If a match is not found, the check will be marked as bad."
            },
            "ca_chain": {
              "Type": "String",
              "Optional": true,
              "Description": "A path to a file containing all the certificate authorities that should be loaded to validate the remote certificate (for TLS checks)."
            },
            "certificate_file": {
              "Type": "String",
              "Optional": true,
              "Description": "A path to a file containing the client certificate that will be presented to the remote server (for TLS checks)."
            },
            "ciphers": {
              "Type": "String",
              "Optional": true,
              "Description": "A list of ciphers to be used when establishing a TLS connection"
            },
            "host": {
              "Type": "String",
              "Required": true,
              "Description": "Specifies the host name or IP address to connect to for this TCP check"
            },
            "key_file": {
              "Type": "String",
              "Optional": true,
              "Description": "A path to a file containing key to be used in conjunction with the cilent certificate (for TLS checks)"
            },
            "port": {
              "Type": "Int",
              "Required": true,
              "Description": "Specifies the port on which the management interface can be reached."
            },
            "tls": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Upgrade TCP connection to use TLS.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            }
          }
        }
      },
      "timeout": {
        "Type": "String",
        "Optional": true,
        "Description": "The length of time in seconds (and fractions of a second) before the check will timeout if no response is returned to the collector",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "The check type",
        "Computed": true
      },
      "uuids": {
        "Type": "List",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "circonus_contact_group": {
      "aggregation_window": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "300s"
        }
      },
      "alert_option": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "escalate_after": {
              "Type": "String",
              "Optional": true
            },
            "escalate_to": {
              "Type": "String",
              "Optional": true
            },
            "reminder": {
              "Type": "String",
              "Optional": true
            },
            "severity": {
              "Type": "Int",
              "Required": true
            }
          }
        }
      },
      "always_send_clear": {
        "Type": "Bool",
        "Optional": true
      },
      "email": {
        "Type": "List",
        "Optional": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "String",
              "Optional": true,
              "ConflictsWith": [
                "email.user"
              ]
            },
            "user": {
              "Type": "String",
              "Optional": true,
              "ConflictsWith": [
                "email.address"
              ]
            }
          }
        }
      },
      "group_type": {
        "Type": "String",
        "Optional": true
      },
      "http": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "String",
              "Required": true
            },
            "format": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "json"
              }
            },
            "method": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "POST"
              }
            }
          }
        }
      },
      "last_modified": {
        "Type": "Int",
        "Computed": true
      },
      "last_modified_by": {
        "Type": "String",
        "Computed": true
      },
      "long_message": {
        "Type": "String",
        "Optional": true
      },
      "long_subject": {
        "Type": "String",
        "Optional": true
      },
      "long_summary": {
        "Type": "String",
        "Optional": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "pager_duty": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "account": {
              "Type": "String",
              "Required": true
            },
            "contact_group_fallback": {
              "Type": "String",
              "Optional": true
            },
            "service_key": {
              "Type": "String",
              "Required": true
            },
            "webhook_url": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "short_message": {
        "Type": "String",
        "Optional": true
      },
      "short_summary": {
        "Type": "String",
        "Optional": true
      },
      "slack": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "buttons": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "channel": {
              "Type": "String",
              "Required": true
            },
            "contact_group_fallback": {
              "Type": "String",
              "Optional": true
            },
            "team": {
              "Type": "String",
              "Required": true
            },
            "username": {
              "Type": "String",
              "Optional": true,
              "Description": "Username Slackbot uses in Slack to deliver a notification",
              "Default": {
                "Type": "string",
                "Value": "Circonus"
              }
            }
          }
        }
      },
      "sms": {
        "Type": "List",
        "Optional": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "String",
              "Optional": true,
              "ConflictsWith": [
                "sms.user"
              ]
            },
            "user": {
              "Type": "String",
              "Optional": true,
              "ConflictsWith": [
                "sms.address"
              ]
            }
          }
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "victorops": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "api_key": {
              "Type": "String",
              "Required": true
            },
            "contact_group_fallback": {
              "Type": "String",
              "Optional": true
            },
            "critical": {
              "Type": "Int",
              "Required": true
            },
            "info": {
              "Type": "Int",
              "Required": true
            },
            "team": {
              "Type": "String",
              "Required": true
            },
            "warning": {
              "Type": "Int",
              "Required": true
            }
          }
        }
      },
      "xmpp": {
        "Type": "List",
        "Optional": true,
        "MaxItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "String",
              "Optional": true,
              "ConflictsWith": [
                "xmpp.user"
              ]
            },
            "user": {
              "Type": "String",
              "Optional": true,
              "ConflictsWith": [
                "xmpp.address"
              ]
            }
          }
        }
      }
    },
    "circonus_dashboard": {
      "account_default": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "grid_layout": {
        "Type": "Map",
        "Required": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Value": "Int"
        }
      },
      "options": {
        "Type": "Set",
        "Required": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_configs": {
              "Type": "Set",
              "Optional": true,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "black_dash": {
                    "Type": "Bool",
                    "Optional": true,
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "enabled": {
                    "Type": "Bool",
                    "Optional": true,
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "full_screen": {
                    "Type": "Bool",
                    "Optional": true,
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "full_screen_hide_title": {
                    "Type": "Bool",
                    "Optional": true,
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "nick_name": {
                    "Type": "String",
                    "Optional": true,
                    "Default": {
                      "Type": "string"
                    }
                  },
                  "scale_text": {
                    "Type": "Bool",
                    "Optional": true,
                    "Default": {
                      "Type": "bool",
                      "Value": "true"
                    }
                  },
                  "shared_id": {
                    "Type": "String",
                    "Optional": true
                  },
                  "text_size": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "16"
                    }
                  }
                }
              }
            },
            "full_screen_hide_title": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "hide_grid": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "scale_text": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "text_size": {
              "Type": "Int",
              "Optional": true,
              "Default": {
                "Type": "int",
                "Value": "12"
              }
            }
          }
        }
      },
      "shared": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "title": {
        "Type": "String",
        "Required": true,
        "Description": "The title of the dashboard."
      },
      "uuid": {
        "Type": "String",
        "Description": "The uuid of the dashboard.",
        "Computed": true
      },
      "widget": {
        "Type": "Set",
        "Required": true,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "active": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "height": {
              "Type": "Int",
              "Required": true
            },
            "name": {
              "Type": "String",
              "Required": true
            },
            "origin": {
              "Type": "String",
              "Required": true
            },
            "settings": {
              "Type": "Set",
              "Required": true,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "account_id": {
                    "Type": "String",
                    "Optional": true
                  },
                  "acknowledged": {
                    "Type": "String",
                    "Optional": true
                  },
                  "algorithm": {
                    "Type": "String",
                    "Optional": true
                  },
                  "autoformat": {
                    "Type": "Bool",
                    "Optional": true,
                    "Default": {
                      "Type": "bool",
                      "Value": "false"
                    }
                  },
                  "bad_rules": {
                    "Type": "List",
                    "Optional": true,
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "color": {
                          "Type": "String",
                          "Required": true
                        },
                        "criterion": {
                          "Type": "String",
                          "Required": true
                        },
                        "value": {
                          "Type": "String",
                          "Required": true
                        }
                      }
                    }
                  },
                  "body_format": {
                    "Type": "String",
                    "Optional": true
                  },
                  "caql": {
                    "Type": "String",
                    "Optional": true
                  },
                  "chart_type": {
                    "Type": "String",
                    "Optional": true
                  },
                  "check_uuid": {
                    "Type": "String",
                    "Optional": true
                  },
                  "cleared": {
                    "Type": "String",
                    "Optional": true
                  },
                  "cluster_id": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "0"
                    }
                  },
                  "cluster_name": {
                    "Type": "String",
                    "Optional": true
                  },
                  "content_type": {
                    "Type": "String",
                    "Optional": true
                  },
                  "datapoints": {
                    "Type": "Set",
                    "Optional": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "_check_id": {
                          "Type": "Int",
                          "Required": true
                        },
                        "_metric_type": {
                          "Type": "String",
                          "Required": true
                        },
                        "label": {
                          "Type": "String",
                          "Required": true
                        },
                        "metric": {
                          "Type": "String",
                          "Required": true
                        }
                      }
                    }
                  },
                  "date_window": {
                    "Type": "String",
                    "Optional": true
                  },
                  "dependents": {
                    "Type": "String",
                    "Optional": true
                  },
                  "disable_autoformat": {
                    "Type": "Bool",
                    "Optional": true,
                    "Default": {
                      "Type": "bool",
                      "Value": "false"
                    }
                  },
                  "display": {
                    "Type": "String",
                    "Optional": true
                  },
                  "display_markup": {
                    "Type": "String",
                    "Optional": true
                  },
                  "format": {
                    "Type": "String",
                    "Optional": true
                  },
                  "formula": {
                    "Type": "String",
                    "Optional": true
                  },
                  "good_color": {
                    "Type": "String",
                    "Optional": true
                  },
                  "graph_uuid": {
                    "Type": "String",
                    "Optional": true
                  },
                  "hide_xaxis": {
                    "Type": "Bool",
                    "Optional": true,
                    "Default": {
                      "Type": "bool",
                      "Value": "false"
                    }
                  },
                  "hide_yaxis": {
                    "Type": "Bool",
                    "Optional": true,
                    "Default": {
                      "Type": "bool",
                      "Value": "false"
                    }
                  },
                  "key_inline": {
                    "Type": "Bool",
                    "Optional": true,
                    "Default": {
                      "Type": "bool",
                      "Value": "false"
                    }
                  },
                  "key_loc": {
                    "Type": "String",
                    "Optional": true
                  },
                  "key_size": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "0"
                    }
                  },
                  "key_wrap": {
                    "Type": "Bool",
                    "Optional": true,
                    "Default": {
                      "Type": "bool",
                      "Value": "false"
                    }
                  },
                  "label": {
                    "Type": "String",
                    "Optional": true
                  },
                  "layout": {
                    "Type": "String",
                    "Optional": true
                  },
                  "layout_style": {
                    "Type": "String",
                    "Optional": true
                  },
                  "limit": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "0"
                    }
                  },
                  "link_url": {
                    "Type": "String",
                    "Optional": true
                  },
                  "maintenance": {
                    "Type": "String",
                    "Optional": true
                  },
                  "markup": {
                    "Type": "String",
                    "Optional": true
                  },
                  "metric_display_name": {
                    "Type": "String",
                    "Optional": true
                  },
                  "metric_name": {
                    "Type": "String",
                    "Optional": true
                  },
                  "metric_type": {
                    "Type": "String",
                    "Optional": true
                  },
                  "min_age": {
                    "Type": "String",
                    "Optional": true
                  },
                  "overlay_set_id": {
                    "Type": "String",
                    "Optional": true
                  },
                  "period": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "0"
                    }
                  },
                  "range_high": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "0"
                    }
                  },
                  "range_low": {
                    "Type": "Int",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "0"
                    }
                  },
                  "real_time": {
                    "Type": "Bool",
                    "Optional": true,
                    "Default": {
                      "Type": "bool",
                      "Value": "false"
                    }
                  },
                  "resource_limit": {
                    "Type": "String",
                    "Optional": true
                  },
                  "resource_usage": {
                    "Type": "String",
                    "Optional": true
                  },
                  "search": {
                    "Type": "String",
                    "Optional": true
                  },
                  "severity": {
                    "Type": "String",
                    "Optional": true
                  },
                  "show_flags": {
                    "Type": "Bool",
                    "Optional": true,
                    "Default": {
                      "Type": "bool",
                      "Value": "false"
                    }
                  },
                  "show_value": {
                    "Type": "Bool",
                    "Optional": true
                  },
                  "size": {
                    "Type": "String",
                    "Optional": true
                  },
                  "text_align": {
                    "Type": "String",
                    "Optional": true
                  },
                  "threshold": {
                    "Type": "Float",
                    "Optional": true,
                    "Default": {
                      "Type": "int",
                      "Value": "0"
                    }
                  },
                  "thresholds": {
                    "Type": "Set",
                    "Optional": true,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "colors": {
                          "Type": "List",
                          "Required": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "flip": {
                          "Type": "Bool",
                          "Required": true
                        },
                        "values": {
                          "Type": "List",
                          "Required": true,
                          "ConfigImplicitMode": "Attr",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        }
                      }
                    }
                  },
                  "time_window": {
                    "Type": "String",
                    "Optional": true
                  },
                  "title": {
                    "Type": "String",
                    "Optional": true
                  },
                  "title_format": {
                    "Type": "String",
                    "Optional": true
                  },
                  "trend": {
                    "Type": "String",
                    "Optional": true
                  },
                  "type": {
                    "Type": "String",
                    "Optional": true
                  },
                  "use_default": {
                    "Type": "Bool",
                    "Optional": true,
                    "Default": {
                      "Type": "bool",
                      "Value": "false"
                    }
                  },
                  "value_type": {
                    "Type": "String",
                    "Optional": true
                  }
                }
              }
            },
            "type": {
              "Type": "String",
              "Required": true
            },
            "widget_id": {
              "Type": "String",
              "Required": true
            },
            "width": {
              "Type": "Int",
              "Required": true
            }
          }
        }
      }
    },
    "circonus_graph": {
      "description": {
        "Type": "String",
        "Optional": true
      },
      "graph_style": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "line"
        }
      },
      "guide": {
        "Type": "List",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "color": {
              "Type": "String",
              "Optional": true
            },
            "formula": {
              "Type": "String",
              "Optional": true
            },
            "hidden": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "legend_formula": {
              "Type": "String",
              "Optional": true
            },
            "name": {
              "Type": "String",
              "Optional": true
            }
          }
        }
      },
      "left": {
        "Type": "Map",
        "Optional": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Value": "String"
        }
      },
      "line_style": {
        "Type": "String",
        "Optional": true,
        "Description": "How the line should change between point. A string containing either 'stepped', 'interpolated' or null.",
        "Default": {
          "Type": "string",
          "Value": "stepped"
        }
      },
      "metric": {
        "Type": "List",
        "Optional": true,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "active": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "alpha": {
              "Type": "String",
              "Optional": true
            },
            "axis": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "left"
              }
            },
            "caql": {
              "Type": "String",
              "Optional": true
            },
            "check": {
              "Type": "String",
              "Optional": true
            },
            "color": {
              "Type": "String",
              "Optional": true
            },
            "formula": {
              "Type": "String",
              "Optional": true
            },
            "function": {
              "Type": "String",
              "Optional": true,
              "Computed": true
            },
            "legend_formula": {
              "Type": "String",
              "Optional": true
            },
            "metric_name": {
              "Type": "String",
              "Optional": true
            },
            "metric_type": {
              "Type": "String",
              "Required": true
            },
            "name": {
              "Type": "String",
              "Optional": true
            },
            "search": {
              "Type": "String",
              "Optional": true
            },
            "stack": {
              "Type": "String",
              "Optional": true
            }
          }
        }
      },
      "metric_cluster": {
        "Type": "List",
        "Optional": true,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "active": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "aggregate": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "none"
              }
            },
            "axis": {
              "Type": "String",
              "Optional": true,
              "Default": {
                "Type": "string",
                "Value": "left"
              }
            },
            "color": {
              "Type": "String",
              "Optional": true
            },
            "name": {
              "Type": "String",
              "Required": true
            },
            "query": {
              "Type": "String",
              "Optional": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "notes": {
        "Type": "String",
        "Optional": true
      },
      "right": {
        "Type": "Map",
        "Optional": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Value": "String"
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "circonus_maintenance": {
      "account": {
        "Type": "String",
        "Optional": true,
        "ConflictsWith": [
          "check",
          "rule_set",
          "target"
        ]
      },
      "check": {
        "Type": "String",
        "Optional": true,
        "ConflictsWith": [
          "account",
          "rule_set",
          "target"
        ]
      },
      "notes": {
        "Type": "String",
        "Optional": true
      },
      "rule_set": {
        "Type": "String",
        "Optional": true,
        "ConflictsWith": [
          "check",
          "account",
          "target"
        ]
      },
      "severities": {
        "Type": "List",
        "Required": true,
        "MinItems": 1,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "start": {
        "Type": "String",
        "Required": true
      },
      "stop": {
        "Type": "String",
        "Required": true
      },
      "tags": {
        "Type": "List",
        "Optional": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "target": {
        "Type": "String",
        "Optional": true,
        "ConflictsWith": [
          "check",
          "rule_set",
          "account"
        ]
      }
    },
    "circonus_metric": {
      "active": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enables or disables the metric",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of the metric"
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "Type of metric (e.g. numeric, histogram, text)"
      }
    },
    "circonus_overlay_set": {
      "graph_cid": {
        "Type": "String",
        "Required": true
      },
      "overlays": {
        "Type": "Set",
        "Required": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "data_opts": {
              "Type": "Set",
              "Required": true,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "graph_title": {
                    "Type": "String",
                    "Required": true
                  },
                  "graph_uuid": {
                    "Type": "String",
                    "Required": true
                  },
                  "x_shift": {
                    "Type": "String",
                    "Required": true
                  }
                }
              }
            },
            "id": {
              "Type": "String",
              "Required": true
            },
            "ui_specs": {
              "Type": "Set",
              "Required": true,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "decouple": {
                    "Type": "Bool",
                    "Optional": true,
                    "Default": {
                      "Type": "bool",
                      "Value": "false"
                    }
                  },
                  "id": {
                    "Type": "String",
                    "Required": true
                  },
                  "label": {
                    "Type": "String",
                    "Required": true
                  },
                  "type": {
                    "Type": "String",
                    "Required": true
                  },
                  "z": {
                    "Type": "String",
                    "Optional": true
                  }
                }
              }
            }
          }
        }
      },
      "title": {
        "Type": "String",
        "Required": true
      }
    },
    "circonus_rule_set": {
      "check": {
        "Type": "String",
        "Required": true,
        "Description": "The CID of the check that contains the metric for this rule set"
      },
      "if": {
        "Type": "List",
        "Required": true,
        "Description": "A rule to execute for this rule set",
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "then": {
              "Type": "List",
              "Optional": true,
              "Description": "Description of the action(s) to take when this rule set is active",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "after": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The length of time we should wait before contacting the contact groups after this ruleset has faulted.",
                    "Default": {
                      "Type": "string",
                      "Value": "0"
                    }
                  },
                  "notify": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "List of contact groups to notify at the following appropriate severity if this rule set is active.",
                    "ConfigImplicitMode": "Attr",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "severity": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Send a notification at this severity level.",
                    "Default": {
                      "Type": "int",
                      "Value": "1"
                    }
                  }
                }
              }
            },
            "value": {
              "Type": "List",
              "Optional": true,
              "Description": "Predicate that the rule set uses to evaluate a stream of metrics",
              "MaxItems": 1,
              "IsBlock": true,
              "ConfigImplicitMode": "Block",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "absent": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Fire the rule set if there has been no data for the given metric stream over the last duration"
                  },
                  "changed": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Boolean indicating the value has changed"
                  },
                  "contains": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Fire the rule set if the text metric contain the following string"
                  },
                  "eq_value": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Fire the rule set if the numeric value equals the specified value"
                  },
                  "match": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Fire the rule set if the text metric exactly match the following string"
                  },
                  "max_value": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Fire the rule set if the numeric value is more than the specified value"
                  },
                  "min_value": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Fire the rule set if the numeric value less than the specified value"
                  },
                  "neq_value": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Fire the rule set if the numeric value does not equal the specified value"
                  },
                  "not_contain": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Fire the rule set if the text metric does not contain the following string"
                  },
                  "not_match": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Fire the rule set if the text metric not match the following string"
                  },
                  "over": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Use a derived value using a window",
                    "MaxItems": 1,
                    "IsBlock": true,
                    "ConfigImplicitMode": "Block",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "atleast": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Wait at least this long (seconds) before evaluating the rule"
                        },
                        "last": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Duration over which data from the last interval is examined"
                        },
                        "using": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Define the window function to use over the last duration"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "link": {
        "Type": "String",
        "Optional": true,
        "Description": "URL to show users when this rule set is active (e.g. wiki)",
        "Computed": true
      },
      "metric_filter": {
        "Type": "String",
        "Optional": true,
        "Description": "The tag filter a pattern match ruleset will user"
      },
      "metric_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of the metric stream within a check to register the rule set with"
      },
      "metric_pattern": {
        "Type": "String",
        "Optional": true,
        "Description": "The pattern match (regex) of the metric stream within a check to register the rule set with"
      },
      "metric_type": {
        "Type": "String",
        "Optional": true,
        "Description": "The type of data flowing through the specified metric stream",
        "Default": {
          "Type": "string",
          "Value": "numeric"
        }
      },
      "name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of this ruleset, if ommitted will default to the metric_name (or pattern) and filter"
      },
      "notes": {
        "Type": "String",
        "Optional": true,
        "Description": "Notes describing this rule set",
        "Computed": true
      },
      "parent": {
        "Type": "String",
        "Optional": true,
        "Description": "Parent CID that must be healthy for this rule set to be active",
        "Computed": true
      },
      "rule_set_id": {
        "Type": "String",
        "Description": "out",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "Description": "Tags associated with this rule set",
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "user_json": {
        "Type": "String",
        "Optional": true,
        "Description": "Opaque data that can be supplied with the result and appears in webhooks when alerts go off",
        "Default": {
          "Type": "string",
          "Value": "{}"
        }
      }
    },
    "circonus_rule_set_group": {
      "condition": {
        "Type": "Set",
        "Required": true,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "index": {
              "Type": "Int",
              "Required": true
            },
            "matching_severities": {
              "Type": "List",
              "Required": true,
              "MinItems": 1,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "rule_set": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "formula": {
        "Type": "Set",
        "Required": true,
        "MinItems": 1,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "expression": {
              "Type": "String",
              "Required": true
            },
            "raise_severity": {
              "Type": "Int",
              "Required": true
            },
            "wait": {
              "Type": "Int",
              "Required": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "notify": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "sev1": {
              "Type": "List",
              "Optional": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "sev2": {
              "Type": "List",
              "Optional": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "sev3": {
              "Type": "List",
              "Optional": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "sev4": {
              "Type": "List",
              "Optional": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "sev5": {
              "Type": "List",
              "Optional": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      },
      "tags": {
        "Type": "List",
        "Optional": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      }
    },
    "circonus_worksheet": {
      "description": {
        "Type": "String",
        "Optional": true
      },
      "favourite": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "graphs": {
        "Type": "Set",
        "Optional": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "notes": {
        "Type": "String",
        "Optional": true
      },
      "smart_queries": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "ConfigImplicitMode": "Block",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true
            },
            "order": {
              "Type": "Set",
              "Optional": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "query": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "title": {
        "Type": "String",
        "Required": true
      }
    }
  },
  "data-sources": {
    "circonus_account": {
      "address1": {
        "Type": "String",
        "Computed": true
      },
      "address2": {
        "Type": "String",
        "Computed": true
      },
      "cc_email": {
        "Type": "String",
        "Computed": true
      },
      "city": {
        "Type": "String",
        "Computed": true
      },
      "contact_groups": {
        "Type": "List",
        "Description": "Contact Groups in this account",
        "Computed": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "country": {
        "Type": "String",
        "Computed": true
      },
      "current": {
        "Type": "Bool",
        "Optional": true,
        "Computed": true,
        "ConflictsWith": [
          "id"
        ]
      },
      "description": {
        "Type": "String",
        "Computed": true
      },
      "id": {
        "Type": "String",
        "Optional": true,
        "Computed": true,
        "ConflictsWith": [
          "current"
        ]
      },
      "invites": {
        "Type": "List",
        "Description": "Outstanding invites attached to the account",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "email": {
              "Type": "String",
              "Computed": true
            },
            "role": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Computed": true
      },
      "owner": {
        "Type": "String",
        "Computed": true
      },
      "state": {
        "Type": "String",
        "Computed": true
      },
      "timezone": {
        "Type": "String",
        "Computed": true
      },
      "ui_base_url": {
        "Type": "String",
        "Computed": true
      },
      "usage": {
        "Type": "List",
        "Description": "Account's usage limits",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "limit": {
              "Type": "Int",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Computed": true
            },
            "used": {
              "Type": "Int",
              "Computed": true
            }
          }
        }
      },
      "users": {
        "Type": "List",
        "Description": "Users attached to this account",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "String",
              "Computed": true
            },
            "role": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      }
    },
    "circonus_collector": {
      "details": {
        "Type": "List",
        "Description": "Details associated with individual collectors (a.k.a. broker)",
        "Computed": true,
        "IsBlock": true,
        "ConfigImplicitMode": "ComputedBlock",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cn": {
              "Type": "String",
              "Computed": true
            },
            "external_host": {
              "Type": "String",
              "Computed": true
            },
            "external_port": {
              "Type": "Int",
              "Computed": true
            },
            "ip": {
              "Type": "String",
              "Computed": true
            },
            "min_version": {
              "Type": "Int",
              "Computed": true
            },
            "modules": {
              "Type": "List",
              "Computed": true,
              "ConfigImplicitMode": "Attr",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "port": {
              "Type": "Int",
              "Computed": true
            },
            "skew": {
              "Type": "String",
              "Computed": true
            },
            "status": {
              "Type": "String",
              "Computed": true
            },
            "version": {
              "Type": "Int",
              "Computed": true
            }
          }
        }
      },
      "id": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "latitude": {
        "Type": "String",
        "Computed": true
      },
      "longitude": {
        "Type": "String",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Computed": true
      },
      "tags": {
        "Type": "Set",
        "Optional": true,
        "ConfigImplicitMode": "Attr",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "type": {
        "Type": "String",
        "Computed": true
      }
    }
  }
}