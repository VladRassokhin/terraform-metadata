{
  ".schema_version": "1",
  "name": "quorum",
  "type": "provider",
  "version": "",
  "provider": {},
  "resources": {
    "quorum_bootstrap_account": {
      "account_url": {
        "Type": "String",
        "Description": "URL of the newly generated account",
        "Computed": true
      },
      "address": {
        "Type": "String",
        "Description": "Address of the newly generated account",
        "Computed": true
      },
      "balance": {
        "Type": "String",
        "Optional": true,
        "Description": "A place holder to keep account initial balance for referencing"
      },
      "passphrase": {
        "Type": "String",
        "Optional": true,
        "Description": "Passphrase to lock/unlock the account. Default is empty",
        "Default": {
          "Type": "string"
        }
      },
      "wallet_id": {
        "Type": "String",
        "Required": true,
        "Description": "ID of a wallet storing the newly created account. For keystore, it's the keystore resource id"
      }
    },
    "quorum_bootstrap_data_dir": {
      "data_dir": {
        "Type": "String",
        "Required": true,
        "Description": "Directory to intialize a genesis block"
      },
      "data_dir_abs": {
        "Type": "String",
        "Description": "Absolute path to the data dir",
        "Computed": true
      },
      "genesis": {
        "Type": "String",
        "Required": true,
        "Description": "Genesis file content in JSON format"
      },
      "instance_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The instance name of the node. This must be the same as the value in geth node config. Default is `geth`",
        "Default": {
          "Type": "string",
          "Value": "geth"
        }
      }
    },
    "quorum_bootstrap_istanbul_extradata": {
      "extradata": {
        "Type": "String",
        "Description": "Computed value which can be used in genesis file",
        "Computed": true
      },
      "istanbul_addresses": {
        "Type": "List",
        "Required": true,
        "Description": "list of Istanbul address to construct extradata",
        "MinItems": 1,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "vanity": {
        "Type": "String",
        "Optional": true,
        "Description": "Vanity Hex Value to be included in the extradata",
        "Default": {
          "Type": "string",
          "Value": "0x00"
        }
      }
    },
    "quorum_bootstrap_keystore": {
      "account": {
        "Type": "List",
        "Optional": true,
        "Description": "Account being created under this keystore",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "account_url": {
              "Type": "String",
              "Description": "Local path to the JSON representation of newly generated account private key",
              "Computed": true
            },
            "address": {
              "Type": "String",
              "Description": "Address of the newly generated account",
              "Computed": true
            },
            "balance": {
              "Type": "String",
              "Optional": true,
              "Description": "A place holder to keep account initial balance for referencing"
            },
            "passphrase": {
              "Type": "String",
              "Optional": true,
              "Description": "Passphrase to lock/unlock the account. Default is empty",
              "Default": {
                "Type": "string"
              }
            }
          }
        }
      },
      "keystore_dir": {
        "Type": "String",
        "Required": true,
        "Description": "Directory contains private keys"
      },
      "keystore_dir_abs": {
        "Type": "String",
        "Description": "Absolute path of the keystore directory",
        "Computed": true
      },
      "use_light_weight_kdf": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True to lower the memory and CPU requirements of the key store scrypt KDF at the expense of security",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      }
    },
    "quorum_bootstrap_network": {
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Name of a new network. Directory name restriction applied"
      },
      "network_dir_abs": {
        "Type": "String",
        "Description": "Absolute path to a directory representing this new network",
        "Computed": true
      },
      "target_dir": {
        "Type": "String",
        "Optional": true,
        "Description": "File system path to the directory on which new directory will be created. Default is current working directory",
        "Default": {
          "Type": "string",
          "Value": "."
        }
      }
    },
    "quorum_bootstrap_node_key": {
      "hex_node_id": {
        "Type": "String",
        "Description": "64-byte hex value represents node ID which is seen being encoded in the username portion of enode URL. E.g.: `enode://[hex node id]@localhost:22000`",
        "Computed": true
      },
      "istanbul_address": {
        "Type": "String",
        "Description": "Address representing public key for the newly created node key. This is mainly used to construct the initial validators set encoded in `extradata` field of the genesis file",
        "Computed": true
      },
      "node_id": {
        "Type": "String",
        "Description": "32-byte hex value represents the unique identifier for a node",
        "Computed": true
      },
      "node_key_hex": {
        "Type": "String",
        "Description": "Node key as hex. This can be used to populate `--nodekeyhex` CLI parameter",
        "Computed": true
      }
    },
    "quorum_transaction_manager_keypair": {
      "config": {
        "Type": "List",
        "Optional": true,
        "Description": "Key generation config",
        "MaxItems": 1,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "iterations": {
              "Type": "Int",
              "Optional": true,
              "Description": "Number of iterations to cycle through",
              "Default": {
                "Type": "int",
                "Value": "10"
              }
            },
            "memory": {
              "Type": "Int",
              "Optional": true,
              "Description": "Memory limit",
              "Default": {
                "Type": "int",
                "Value": "1048576"
              }
            },
            "parallelism": {
              "Type": "Int",
              "Optional": true,
              "Description": "Number of threads to use",
              "Default": {
                "Type": "int",
                "Value": "4"
              }
            },
            "variant": {
              "Type": "String",
              "Optional": true,
              "Description": "Algorithm to use when hashing. Allowed values are `id` or `i`",
              "Default": {
                "Type": "string",
                "Value": "i"
              }
            }
          }
        }
      },
      "key_data": {
        "Type": "String",
        "Description": "Key Data in JSON format to be used by Private Transaction Manager",
        "Computed": true
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "A password to protect the keypair",
        "Default": {
          "Type": "string"
        }
      },
      "private_key_json": {
        "Type": "String",
        "Description": "Private key in JSON representation",
        "Computed": true
      },
      "public_key_b64": {
        "Type": "String",
        "Description": "Public key in standard base64 encoding",
        "Computed": true
      }
    }
  },
  "data-sources": {
    "quorum_bootstrap_genesis_mixhash": {
      "istanbul": {
        "Type": "String",
        "Description": "Mix hash that is used to identify whether the block is from Istanbul consensus engine",
        "Computed": true
      }
    },
    "quorum_bootstrap_node_key": {
      "hex_node_id": {
        "Type": "String",
        "Description": "64-byte hex value represents node ID which is seen being encoded in the username portion of enode URL. E.g.: `enode:/[\u003chex node id]@localhost:22000`",
        "Computed": true
      },
      "istanbul_address": {
        "Type": "String",
        "Description": "Address representing public key for the newly created node key. This is mainly used to construct the initial validators set encoded in `extradata` field of the genesis file",
        "Computed": true
      },
      "node_id": {
        "Type": "String",
        "Description": "32-byte hex value represents the unique identifier for a node",
        "Computed": true
      },
      "node_key_hex": {
        "Type": "String",
        "Required": true,
        "Description": "This hex value encodes the private key of a node"
      }
    }
  }
}